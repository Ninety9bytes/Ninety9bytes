{"version":3,"sources":["./client-src/$_lazy_route_resource lazy namespace object","./client-src/app/_api/_authorization/services/account-api.service.ts","./client-src/app/_api/_authorization/services/authorization-api.service.ts","./client-src/app/_api/_configuration/enums/filterSource.enum.ts","./client-src/app/_api/_configuration/services/countries-api.service.ts","./client-src/app/_api/_configuration/services/data-processing-api.service.ts","./client-src/app/_api/_configuration/services/import-templates-api.service.ts","./client-src/app/_api/_configuration/services/modules-api.service.ts","./client-src/app/_api/_configuration/services/reference-data-api.service.ts","./client-src/app/_api/_configuration/services/templates-api.service.ts","./client-src/app/_api/_runtime/enums/activity-code.ts","./client-src/app/_api/_runtime/enums/advanced-math-operator.ts","./client-src/app/_api/_runtime/enums/advanced-math-type.ts","./client-src/app/_api/_runtime/enums/building-condition.ts","./client-src/app/_api/_runtime/enums/disposal-code.ts","./client-src/app/_api/_runtime/enums/entry-alarm.ts","./client-src/app/_api/_runtime/enums/field-type.ts","./client-src/app/_api/_runtime/enums/image-entity-type.ts","./client-src/app/_api/_runtime/enums/perimeter-adjustment-method.ts","./client-src/app/_api/_runtime/enums/recipient-deliverable.ts","./client-src/app/_api/_runtime/enums/record-type.ts","./client-src/app/_api/_runtime/enums/report-type.ts","./client-src/app/_api/_runtime/enums/transaction-applicability.ts","./client-src/app/_api/_runtime/enums/transaction-type.ts","./client-src/app/_api/_runtime/enums/transaction-validation-status.ts","./client-src/app/_api/_runtime/enums/unit-of-measure.ts","./client-src/app/_api/_runtime/enums/upload-type-enum.ts","./client-src/app/_api/_runtime/services/calculation-api.service.ts","./client-src/app/_api/_runtime/services/client-api.service.ts","./client-src/app/_api/_runtime/services/client-files-api.service.ts","./client-src/app/_api/_runtime/services/contract-api.service.ts","./client-src/app/_api/_runtime/services/group-api.service.ts","./client-src/app/_api/_runtime/services/image-api.service.ts","./client-src/app/_api/_runtime/services/insurance-api.service.ts","./client-src/app/_api/_runtime/services/inventory-api.service.ts","./client-src/app/_api/_runtime/services/processing-api.service.ts","./client-src/app/_api/_runtime/services/quality-control-api.service.ts","./client-src/app/_api/_runtime/services/recipients-api.service.ts","./client-src/app/_api/_runtime/services/reports-api.service.ts","./client-src/app/_api/_runtime/services/settings-api.service.ts","./client-src/app/_api/_runtime/services/view-models-api.service.ts","./client-src/app/_api/dtos/asset-field.dto.ts","./client-src/app/_api/dtos/assignWorkflowTask.dto.ts","./client-src/app/_api/dtos/create-asset-file-custom-column.dto.ts","./client-src/app/_api/dtos/excel-summary.dto.ts","./client-src/app/_api/dtos/import-result.dto.ts","./client-src/app/_api/dtos/import-spreadsheet.dto.ts","./client-src/app/_api/dtos/reconcilation-mass-match.dto.ts","./client-src/app/_api/dtos/set-allocation-match.dto.ts","./client-src/app/_api/dtos/set-parent-child-match.dto.ts","./client-src/app/_api/dtos/set-single-match-code.dto.ts","./client-src/app/_api/dtos/spreadsheet-column.dto.ts","./client-src/app/_api/dtos/upload-spreadsheet.dto.ts","./client-src/app/_api/services/admin/template-repository.service.ts","./client-src/app/_api/services/api.service.ts","./client-src/app/_api/services/country-repository.service.ts","./client-src/app/_api/services/custom-data-types-repository.service.ts","./client-src/app/_api/services/dashboard/contract.service.ts","./client-src/app/_api/services/data-import/data-import-repository.service.ts","./client-src/app/_api/services/group-search.service.ts","./client-src/app/_api/services/inventory/inventory-search-repository.service.ts","./client-src/app/_api/services/module-repository.service.ts","./client-src/app/_api/services/office-repository.service.ts","./client-src/app/_api/services/project-profile/project-profile-api.service.ts","./client-src/app/_api/services/project-profile/project-profile-control.service.ts","./client-src/app/_api/services/reconciliation/cost-fields.service.ts","./client-src/app/_api/services/reconciliation/inventory.service.ts","./client-src/app/_api/services/reconciliation/match-codes.service.ts","./client-src/app/_api/services/reconciliation/reconcilation-match.service.ts","./client-src/app/_core/animations/fade-in-out.animation.ts","./client-src/app/_core/animations/in-out-from-left-side.animation.ts","./client-src/app/_core/authentication/auth-guard.ts","./client-src/app/_core/authentication/authentication.manager.ts","./client-src/app/_core/authentication/can-access.guard.ts","./client-src/app/_core/core.module.ts","./client-src/app/_core/directives/show-if-can-access.ts","./client-src/app/_core/guards/can-deactivate-guard.service.ts","./client-src/app/_core/guards/can-deactivate.service.ts","./client-src/app/_core/guards/component-can-deactivate.ts","./client-src/app/_core/guards/rules-guard.service.ts","./client-src/app/_core/i18n/translation-base-keys.ts","./client-src/app/_core/i18n/translation-manager.ts","./client-src/app/_core/services/alert.service.ts","./client-src/app/_core/services/asset-file-info-service.ts","./client-src/app/_core/services/building-info-service.ts","./client-src/app/_core/services/dynamic-form-control.service.ts","./client-src/app/_core/services/error-handler.service.ts","./client-src/app/_core/services/famis-grid.service.ts","./client-src/app/_core/services/filter-operations.service.ts","./client-src/app/_core/services/google-maps-config.service.ts","./client-src/app/_core/services/helper.service.ts","./client-src/app/_core/services/idle-timeout.service.ts","./client-src/app/_core/services/image.service.ts","./client-src/app/_core/services/left-nav-service.ts","./client-src/app/_core/services/logging.service.ts","./client-src/app/_core/services/recipients-info-service.ts","./client-src/app/_core/services/title.service.ts","./client-src/app/_core/services/transactions-info-service.ts","./client-src/app/_core/services/user-grid.service.ts","./client-src/app/_core/services/window-manager.service.ts","./client-src/app/_core/subscriber-entity.ts","./client-src/app/_core/user/permissions.ts","./client-src/app/_core/user/user.store.ts","./client-src/app/_core/user/user.ts","./client-src/app/_enums/alert-type.ts","./client-src/app/_enums/data-target-name.ts","./client-src/app/_enums/field-category.ts","./client-src/app/_enums/field-type.ts","./client-src/app/_enums/form-action.ts","./client-src/app/_enums/import-mode.ts","./client-src/app/_enums/modal-form-event.ts","./client-src/app/_enums/portal-setup-mode.ts","./client-src/app/_enums/reconciliation-match-type.ts","./client-src/app/_enums/reconciliationStatus.ts","./client-src/app/_enums/replace-field-modes.ts","./client-src/app/_enums/result-type.ts","./client-src/app/_enums/setting-type.ts","./client-src/app/_models/data-import.model.ts","./client-src/app/_models/data-type.ts","./client-src/app/_models/field-types/base-field.model.ts","./client-src/app/_models/field-types/boolean-field.model.ts","./client-src/app/_models/field-types/date-field.model.ts","./client-src/app/_models/field-types/decimal-field.model.ts","./client-src/app/_models/field-types/drop-down-field.model.ts","./client-src/app/_models/field-types/multi-line-text-field.model.ts","./client-src/app/_models/field-types/people-picker-field.model.ts","./client-src/app/_models/field-types/text-field.model.ts","./client-src/app/_models/field-types/whole-number-field.model.ts","./client-src/app/_models/group-match-code.model.ts","./client-src/app/_models/header-row.model.ts","./client-src/app/_models/locale.model.ts","./client-src/app/_models/match-code-category.model.ts","./client-src/app/_models/match-code.model.ts","./client-src/app/_models/shared/famis-grid-state.model.ts","./client-src/app/_models/task.model.ts","./client-src/app/_models/team.model.ts","./client-src/app/_models/user.model.ts","./client-src/app/_shared/components/add-asset-column-component.ts","./client-src/app/_shared/components/alert.component.ts","./client-src/app/_shared/components/bing-map.component.ts","./client-src/app/_shared/components/carousel-modal.component.ts","./client-src/app/_shared/components/confirm-modal.component.ts","./client-src/app/_shared/components/confirm.component.ts","./client-src/app/_shared/components/copy-asset-modal/copy-asset-record.component.ts","./client-src/app/_shared/components/dashboard-groups.component.ts","./client-src/app/_shared/components/dynamic-form/asset-form.component.ts","./client-src/app/_shared/components/dynamic-form/controls/cascading-combo-box.component.ts","./client-src/app/_shared/components/dynamic-form/controls/dynamic-field.component.ts","./client-src/app/_shared/components/dynamic-form/controls/image-upload-field.component.ts","./client-src/app/_shared/components/dynamic-form/default-asset-fields.ts","./client-src/app/_shared/components/famis-grid.component.ts","./client-src/app/_shared/components/famis-sub-grid.component.ts","./client-src/app/_shared/components/file-upload-control/file-upload-control.component.ts","./client-src/app/_shared/components/filter-criteria-builder.component.ts","./client-src/app/_shared/components/google-map.component.ts","./client-src/app/_shared/components/grid-actions/revert.component.ts","./client-src/app/_shared/components/grid-actions/view-image.component.ts","./client-src/app/_shared/components/grid-actions/view-map.component.ts","./client-src/app/_shared/components/grid-column-selector/grid-column-selector-modal.component.ts","./client-src/app/_shared/components/grid-column-selector/grid-column-selector.component.ts","./client-src/app/_shared/components/grid-column-selector/grid-context-menu.component.ts","./client-src/app/_shared/components/grid-filter/grid-filter.component.ts","./client-src/app/_shared/components/group-search.component.ts","./client-src/app/_shared/components/kendo-grid-translation.component.ts","./client-src/app/_shared/components/modal-form.component.ts","./client-src/app/_shared/components/power-bi/power-bi.component.ts","./client-src/app/_shared/components/replace-field.component.ts","./client-src/app/_shared/components/typeahead.component.ts","./client-src/app/_shared/components/window/default-title-bar.component.ts","./client-src/app/_shared/components/window/modal-backdrop.component.ts","./client-src/app/_shared/pipes/dynamic-data-translation.pipe.ts","./client-src/app/_shared/pipes/evenodd.pipe.ts","./client-src/app/_shared/pipes/is-matched.pipe.ts","./client-src/app/_shared/pipes/local-time.pipe.ts","./client-src/app/_shared/pipes/localized-date.pipe.ts","./client-src/app/_shared/pipes/localized-number.pipe.ts","./client-src/app/_shared/pipes/localized-percent.pipe.ts","./client-src/app/_shared/shared.module.ts","./client-src/app/_ui/services/wizard.service.ts","./client-src/app/admin/admin.module.ts","./client-src/app/admin/components/admin-home.component.ts","./client-src/app/admin/components/default-values/default-header.ts","./client-src/app/admin/components/group-saves/group-save.component.ts","./client-src/app/admin/components/group-saves/restore-modal.component.ts","./client-src/app/admin/components/remove-deactivated/remove-deactivated.component.ts","./client-src/app/admin/components/team/team-edit.component.ts","./client-src/app/admin/components/team/team-home.component.ts","./client-src/app/admin/components/team/team-list.component.ts","./client-src/app/admin/components/team/teams.ts","./client-src/app/admin/components/template/template-management.component.ts","./client-src/app/admin/components/template/wizard/custom-field/custom-field.component.ts","./client-src/app/admin/components/template/wizard/template-builder-step1/template-builder-step1.component.ts","./client-src/app/admin/components/template/wizard/template-builder-step2/template-builder-step2.component.ts","./client-src/app/admin/components/template/wizard/template-builder-step3/template-builder-step3.component.ts","./client-src/app/admin/components/template/wizard/template-builder-step4/template-builder-step4.component.ts","./client-src/app/admin/components/template/wizard/template-builder-wizard.component.ts","./client-src/app/admin/components/user/user-edit.component.ts","./client-src/app/admin/components/user/user-home.component.ts","./client-src/app/admin/components/user/user-list.component.ts","./client-src/app/admin/components/user/users.ts","./client-src/app/admin/services/group-save-service.ts","./client-src/app/admin/services/remove-deactivated.service.ts","./client-src/app/admin/services/template.service.ts","./client-src/app/app.component.css","./client-src/app/app.component.ts","./client-src/app/app.configuration.ts","./client-src/app/app.module.ts","./client-src/app/dashboard/components/dashboard-home.component.ts","./client-src/app/dashboard/components/dashboard.component.ts","./client-src/app/dashboard/dashboard.module.ts","./client-src/app/dashboard/services/contract-summary.service.ts","./client-src/app/data-import/components/create-custom-column.component.ts","./client-src/app/data-import/components/data-copy-finish.component.ts","./client-src/app/data-import/components/data-copy-groups.component.ts","./client-src/app/data-import/components/data-copy-wizard.component.ts","./client-src/app/data-import/components/data-import-finish.component.ts","./client-src/app/data-import/components/data-import-mapping.component.ts","./client-src/app/data-import/components/data-import-parent.component.ts","./client-src/app/data-import/components/data-import-review.component.ts","./client-src/app/data-import/components/data-import-upload.component.ts","./client-src/app/data-import/components/data-import-wizard.component.ts","./client-src/app/data-import/components/data-pros-renewal.component.ts","./client-src/app/data-import/components/pros-renewal-wizard.component.ts","./client-src/app/data-import/data-import.module.ts","./client-src/app/data-import/pipes/show-auto-mapped.pipe.ts","./client-src/app/data-import/services/data-copy.service.ts","./client-src/app/data-import/services/data-import.service.ts","./client-src/app/error/access-denied.component.ts","./client-src/app/error/conflict-transaction-error.component.ts","./client-src/app/error/internal-server-error.component.ts","./client-src/app/error/not-found.component.ts","./client-src/app/error/unauthorized.component.ts","./client-src/app/file-upload/components/file-upload/default-files-header.ts","./client-src/app/file-upload/components/file-upload/file-upload.component.ts","./client-src/app/file-upload/file-upload.module.ts","./client-src/app/groups/components/edit-group-template.component.ts","./client-src/app/groups/components/group-management-form.component.ts","./client-src/app/groups/components/group-management-modal.component.ts","./client-src/app/groups/components/group-management.component.ts","./client-src/app/groups/groups.module.ts","./client-src/app/groups/services/groups.service.ts","./client-src/app/header-management/components/actions/account-upsert.component.ts","./client-src/app/header-management/components/actions/department-upsert.component.ts","./client-src/app/header-management/components/actions/member-upsert.component.ts","./client-src/app/header-management/components/actions/site-upsert.component.ts","./client-src/app/header-management/components/header-management-account.component.ts","./client-src/app/header-management/components/header-management-department.component.ts","./client-src/app/header-management/components/header-management-member.component.ts","./client-src/app/header-management/components/header-management-site.component.ts","./client-src/app/header-management/components/header-management.component.ts","./client-src/app/header-management/header-management.module.ts","./client-src/app/header-management/services/header-management.service.ts","./client-src/app/home.component.ts","./client-src/app/portal-management/components/Actions/add-portal-access-modal.component.ts","./client-src/app/portal-management/components/contract-search.component.ts","./client-src/app/portal-management/components/copy-group.component.ts","./client-src/app/portal-management/components/portal-management.component.ts","./client-src/app/portal-management/components/setup-access.compontent.ts","./client-src/app/portal-management/components/setup-data.component.ts","./client-src/app/portal-management/components/setup-image.component.ts","./client-src/app/portal-management/components/setup-metadata.component.ts","./client-src/app/portal-management/components/setup-portal.component.ts","./client-src/app/portal-management/portal-management.module.ts","./client-src/app/portal-management/services/portal-management.service.ts","./client-src/app/processing/components/processing-summary.component.ts","./client-src/app/processing/default-values/custom-addition-headers.ts","./client-src/app/processing/default-values/default-headers.ts","./client-src/app/processing/default-values/default-recipient-headers.ts","./client-src/app/processing/default-values/default-transaction-headers.ts","./client-src/app/processing/default-values/future-years-headers.ts","./client-src/app/processing/default-values/user-factor-headers.ts","./client-src/app/processing/depreciation/components/depreciation-form.component.ts","./client-src/app/processing/depreciation/components/depreciation-setup.component.ts","./client-src/app/processing/depreciation/components/depreciation-summary.component.ts","./client-src/app/processing/depreciation/services/depreciation-form.service.ts","./client-src/app/processing/depreciation/services/depreciation.service.ts","./client-src/app/processing/processing.module.ts","./client-src/app/processing/services/processing.service.ts","./client-src/app/processing/trending/components/trending-form.component.ts","./client-src/app/processing/trending/components/trending-setup.component.ts","./client-src/app/processing/trending/components/trending-summary.component.ts","./client-src/app/processing/trending/services/trending.service.ts","./client-src/app/project-profile/components/administration/administration-form.component.ts","./client-src/app/project-profile/components/administration/administration.component.ts","./client-src/app/project-profile/components/dynamic-field.component.ts","./client-src/app/project-profile/components/project-profile.component.ts","./client-src/app/project-profile/components/tasks/edit-task.component.ts","./client-src/app/project-profile/components/tasks/task-management.component.ts","./client-src/app/project-profile/components/template-form.component.ts","./client-src/app/project-profile/project-profile.module.ts","./client-src/app/project-profile/services/administration.service.ts","./client-src/app/project-profile/services/project-profile.service.ts","./client-src/app/project-profile/services/tasks.service.ts","./client-src/app/quality-control/components/actions/asset-retirement.component.ts","./client-src/app/quality-control/components/actions/asset-transfer.component.ts","./client-src/app/quality-control/components/actions/cost-adjustment.component.ts","./client-src/app/quality-control/components/building/actions/building-valuation.component.ts","./client-src/app/quality-control/components/building/actions/floodplain-valuation.component.ts","./client-src/app/quality-control/components/building/actions/mass-update-building.component.ts","./client-src/app/quality-control/components/building/form/building-form-group.component.ts","./client-src/app/quality-control/components/building/form/building-form.component.ts","./client-src/app/quality-control/components/building/form/dynamic-data-grids/additional-data/additional-building-equipment-grid.component.ts","./client-src/app/quality-control/components/building/form/dynamic-data-grids/additional-data/upsert-building-addition.component.ts","./client-src/app/quality-control/components/building/form/dynamic-data-grids/building-attributes/building-attributes-grid.component.ts","./client-src/app/quality-control/components/building/form/dynamic-data-grids/building-attributes/upsert-building-attribute.component.ts","./client-src/app/quality-control/components/building/form/dynamic-data-grids/custom-additions/actions/remove-customaddition.component.ts","./client-src/app/quality-control/components/building/form/dynamic-data-grids/custom-additions/actions/upsert-customaddition.component.ts","./client-src/app/quality-control/components/building/form/dynamic-data-grids/custom-additions/custom-additions-grid.component.ts","./client-src/app/quality-control/components/building/form/dynamic-data-grids/occupancy-codes/occupancy-codes-grid.component.ts","./client-src/app/quality-control/components/building/form/dynamic-data-grids/occupancy-codes/upsert-occupancy-code.component.ts","./client-src/app/quality-control/components/building/form/dynamic-data-grids/user-factor-grid/actions/remove-userfactor.component.ts","./client-src/app/quality-control/components/building/form/dynamic-data-grids/user-factor-grid/actions/upsert-userfactor.component.ts","./client-src/app/quality-control/components/building/form/dynamic-data-grids/user-factor-grid/user-factor-grid.component.ts","./client-src/app/quality-control/components/building/form/form-models/building-attributes-model.ts","./client-src/app/quality-control/components/building/form/form-models/building-flood-plain-model.ts","./client-src/app/quality-control/components/building/form/form-models/copedata-model.ts","./client-src/app/quality-control/components/building/form/form-models/custom-addition-model.ts","./client-src/app/quality-control/components/building/form/form-models/primary-info/building-attributes-model.ts","./client-src/app/quality-control/components/building/form/form-models/primary-info/primaryinfo-dropdown-model.ts","./client-src/app/quality-control/components/building/form/form-models/primary-info/primaryinfo-model.ts","./client-src/app/quality-control/components/building/form/form-models/user-factor-model.ts","./client-src/app/quality-control/components/building/quality-control-building-grid.component.ts","./client-src/app/quality-control/components/content/actions/add-content.component.ts","./client-src/app/quality-control/components/content/actions/edit-content.component.ts","./client-src/app/quality-control/components/content/actions/mass-update-content.component.ts","./client-src/app/quality-control/components/content/actions/view-content.component.ts","./client-src/app/quality-control/components/content/quality-control-content-grid.component.ts","./client-src/app/quality-control/components/duplicate-check/duplicate-check.component.ts","./client-src/app/quality-control/components/mass-update/mass-update-criteria.component.ts","./client-src/app/quality-control/components/mass-update/mass-update-form.component.ts","./client-src/app/quality-control/components/mass-update/mass-update-results.component.ts","./client-src/app/quality-control/components/quality-control-form.component.ts","./client-src/app/quality-control/components/quality-control.component.ts","./client-src/app/quality-control/enums/quality-control-actions.ts","./client-src/app/quality-control/enums/quality-control-modes.ts","./client-src/app/quality-control/quality-control.module.ts","./client-src/app/quality-control/services/actions/quality-control-actions.service.ts","./client-src/app/quality-control/services/additional-data/additional-data-grid.service.ts","./client-src/app/quality-control/services/additional-data/additional-data.service.ts","./client-src/app/quality-control/services/building-attribute.service.ts","./client-src/app/quality-control/services/buildings.service.ts","./client-src/app/quality-control/services/duplicate-check/duplicate-check.service.ts","./client-src/app/quality-control/services/mass-update.service.ts","./client-src/app/quality-control/services/quality-control.service.ts","./client-src/app/quality-control/services/valuation-service.ts","./client-src/app/recipients/components/actions/remove-recipient.component.ts","./client-src/app/recipients/components/actions/upsert-recipient.component.ts","./client-src/app/recipients/components/recipients-grid.component.ts","./client-src/app/recipients/components/recipients.component.ts","./client-src/app/recipients/form-models/recipients-form-model.ts","./client-src/app/recipients/recipients.module.ts","./client-src/app/recipients/services/recipients.service.ts","./client-src/app/reconciliation/components/consolidated/asset-column-select.component.ts","./client-src/app/reconciliation/components/consolidated/asset-selected-columns.component.ts","./client-src/app/reconciliation/components/consolidated/consolidation-match-code-assignment.component.ts","./client-src/app/reconciliation/components/consolidated/destination-column-selector.component.ts","./client-src/app/reconciliation/components/consolidated/dynamic-assignment-select.component.ts","./client-src/app/reconciliation/components/copy-inventory.component.ts","./client-src/app/reconciliation/components/create-match-code.component.ts","./client-src/app/reconciliation/components/define-layout.component.ts","./client-src/app/reconciliation/components/finalize-data.component.ts","./client-src/app/reconciliation/components/map-matchcodes.component.ts","./client-src/app/reconciliation/components/mass-match/field-matches.component.ts","./client-src/app/reconciliation/components/mass-match/filter-criteria-builder.component.ts","./client-src/app/reconciliation/components/mass-match/many-to-one-match.component.ts","./client-src/app/reconciliation/components/mass-match/mass-match.component.ts","./client-src/app/reconciliation/components/mass-match/one-to-many-match.component.ts","./client-src/app/reconciliation/components/mass-match/view-matches.component.ts","./client-src/app/reconciliation/components/match-codes.component.ts","./client-src/app/reconciliation/components/order-asset-columns-component.ts","./client-src/app/reconciliation/components/parent-child-match-detail.component.ts","./client-src/app/reconciliation/components/parent-child-match.component.ts","./client-src/app/reconciliation/components/reconcile-data-allocations.component.ts","./client-src/app/reconciliation/components/reconcile-data-grid.component.ts","./client-src/app/reconciliation/components/reconcile-data.component.ts","./client-src/app/reconciliation/components/reconciliation-form.component.ts","./client-src/app/reconciliation/components/reconciliation-validation.component.ts","./client-src/app/reconciliation/components/setup.component.ts","./client-src/app/reconciliation/components/upsert-asset-record.component.ts","./client-src/app/reconciliation/reconciliation.constants.ts","./client-src/app/reconciliation/reconciliation.module.ts","./client-src/app/reconciliation/services/allocation.service.ts","./client-src/app/reconciliation/services/consolidation.service.ts","./client-src/app/reconciliation/services/inventory.service.ts","./client-src/app/reconciliation/services/mass-match/mass-match.service.ts","./client-src/app/reconciliation/services/parent-child.service.ts","./client-src/app/reconciliation/services/reconcile-data-grid.service.ts","./client-src/app/reconciliation/services/reconcile-data.service.ts","./client-src/app/reconciliation/services/reconcile-match.service.ts","./client-src/app/reports/components/default-reports-headers.ts","./client-src/app/reports/components/report-name-modal.component.ts","./client-src/app/reports/components/reports-deliverables.component.ts","./client-src/app/reports/components/reports-power-bi.component.ts","./client-src/app/reports/components/reports.component.ts","./client-src/app/reports/report-modes.ts","./client-src/app/reports/reports.module.ts","./client-src/app/reports/services/reports.service.ts","./client-src/app/support/components/support.component.ts","./client-src/app/support/support.module.ts","./client-src/app/transactions/components/transactions-grid.component.ts","./client-src/app/transactions/services/transactions.service.ts","./client-src/app/transactions/transaction.module.ts","./client-src/environments/environment.ts","./client-src/main.ts","./node_modules/moment/locale sync ^\\.\\/.*$","./client-src/app/_shared/components/add-asset-column-component.html","./client-src/app/_shared/components/alert.component.html","./client-src/app/_shared/components/bing-map.component.html","./client-src/app/_shared/components/carousel-modal.component.html","./client-src/app/_shared/components/confirm-modal.component.html","./client-src/app/_shared/components/confirm.component.html","./client-src/app/_shared/components/copy-asset-modal/copy-asset-record.component.html","./client-src/app/_shared/components/dashboard-groups.component.html","./client-src/app/_shared/components/dynamic-form/asset-form.component.html","./client-src/app/_shared/components/dynamic-form/controls/cascading-combo-box.component.html","./client-src/app/_shared/components/dynamic-form/controls/dynamic-field.component.html","./client-src/app/_shared/components/dynamic-form/controls/image-upload-field.component.html","./client-src/app/_shared/components/famis-grid.component.html","./client-src/app/_shared/components/famis-sub-grid.component.html","./client-src/app/_shared/components/file-upload-control/file-upload-control.component.html","./client-src/app/_shared/components/filter-criteria-builder.component.html","./client-src/app/_shared/components/google-map.component.html","./client-src/app/_shared/components/grid-actions/revert.component.html","./client-src/app/_shared/components/grid-actions/view-image.component.html","./client-src/app/_shared/components/grid-actions/view-map.component.html","./client-src/app/_shared/components/grid-column-selector/grid-column-selector-modal.component.html","./client-src/app/_shared/components/grid-column-selector/grid-column-selector.component.html","./client-src/app/_shared/components/grid-filter/grid-filter.component.html","./client-src/app/_shared/components/group-search.component.html","./client-src/app/_shared/components/kendo-grid-translation.component.html","./client-src/app/_shared/components/modal-form.component.html","./client-src/app/_shared/components/power-bi/power-bi.component.html","./client-src/app/_shared/components/replace-field.component.html","./client-src/app/_shared/components/typeahead.component.html","./client-src/app/_shared/components/window/default-title-bar.component.html","./client-src/app/_shared/components/window/modal-backdrop.component.html","./client-src/app/admin/components/admin-home.component.html","./client-src/app/admin/components/group-saves/group-save.component.html","./client-src/app/admin/components/group-saves/restore-modal.component.html","./client-src/app/admin/components/remove-deactivated/remove-deactivated.component.html","./client-src/app/admin/components/team/team-edit.component.html","./client-src/app/admin/components/team/team-home.component.html","./client-src/app/admin/components/team/team-list.component.html","./client-src/app/admin/components/template/template-management.component.html","./client-src/app/admin/components/template/wizard/custom-field/custom-field.component.html","./client-src/app/admin/components/template/wizard/template-builder-step1/template-builder-step1.component.html","./client-src/app/admin/components/template/wizard/template-builder-step2/template-builder-step2.component.html","./client-src/app/admin/components/template/wizard/template-builder-step3/template-builder-step3.component.html","./client-src/app/admin/components/template/wizard/template-builder-step4/template-builder-step4.component.html","./client-src/app/admin/components/template/wizard/template-builder-wizard.component.html","./client-src/app/admin/components/user/user-edit.component.html","./client-src/app/admin/components/user/user-home.component.html","./client-src/app/admin/components/user/user-list.component.html","./client-src/app/app.component.html","./client-src/app/dashboard/components/dashboard-home.component.html","./client-src/app/dashboard/components/dashboard.component.html","./client-src/app/data-import/components/create-custom-column.component.html","./client-src/app/data-import/components/data-copy-finish.component.html","./client-src/app/data-import/components/data-copy-groups.component.html","./client-src/app/data-import/components/data-copy-wizard.component.html","./client-src/app/data-import/components/data-import-finish.component.html","./client-src/app/data-import/components/data-import-mapping.component.html","./client-src/app/data-import/components/data-import-parent.component.html","./client-src/app/data-import/components/data-import-review.component.html","./client-src/app/data-import/components/data-import-upload.component.html","./client-src/app/data-import/components/data-import-wizard.component.html","./client-src/app/data-import/components/data-pros-renewal.component.html","./client-src/app/data-import/components/pros-renewal-wizard.component.html","./client-src/app/error/access-denied.component.html","./client-src/app/error/conflict-transaction-error.component.html","./client-src/app/error/internal-server-error.component.html","./client-src/app/error/not-found.component.html","./client-src/app/error/unauthorized.component.html","./client-src/app/file-upload/components/file-upload/file-upload.component.html","./client-src/app/groups/components/edit-group-template.component.html","./client-src/app/groups/components/group-management-form.component.html","./client-src/app/groups/components/group-management-modal.component.html","./client-src/app/groups/components/group-management.component.html","./client-src/app/header-management/components/actions/account-upsert.component.html","./client-src/app/header-management/components/actions/department-upsert.component.html","./client-src/app/header-management/components/actions/member-upsert.component.html","./client-src/app/header-management/components/actions/site-upsert.component.html","./client-src/app/header-management/components/header-management-account.component.html","./client-src/app/header-management/components/header-management-department.component.html","./client-src/app/header-management/components/header-management-member.component.html","./client-src/app/header-management/components/header-management-site.component.html","./client-src/app/header-management/components/header-management.component.html","./client-src/app/home.component.html","./client-src/app/portal-management/components/Actions/add-portal-access-modal.component.html","./client-src/app/portal-management/components/contract-search.component.html","./client-src/app/portal-management/components/copy-group.component.html","./client-src/app/portal-management/components/portal-management.component.html","./client-src/app/portal-management/components/setup-access.component.html","./client-src/app/portal-management/components/setup-data.component.html","./client-src/app/portal-management/components/setup-image.component.html","./client-src/app/portal-management/components/setup-metadata.component.html","./client-src/app/portal-management/components/setup-portal.component.html","./client-src/app/processing/components/processing-summary.component.html","./client-src/app/processing/depreciation/components/depreciation-form.component.html","./client-src/app/processing/depreciation/components/depreciation-setup.component.html","./client-src/app/processing/depreciation/components/depreciation-summary.component.html","./client-src/app/processing/trending/components/trending-form.component.html","./client-src/app/processing/trending/components/trending-setup.component.html","./client-src/app/processing/trending/components/trending-summary.component.html","./client-src/app/project-profile/components/administration/administration-form.component.html","./client-src/app/project-profile/components/administration/administration.component.html","./client-src/app/project-profile/components/dynamic-field.component.html","./client-src/app/project-profile/components/project-profile.component.html","./client-src/app/project-profile/components/tasks/edit-task.component.html","./client-src/app/project-profile/components/tasks/task-management.component.html","./client-src/app/project-profile/components/template-form.component.html","./client-src/app/quality-control/components/actions/asset-retirement.component.html","./client-src/app/quality-control/components/actions/asset-transfer.component.html","./client-src/app/quality-control/components/actions/cost-adjustment.component.html","./client-src/app/quality-control/components/building/actions/building-valuation.component.html","./client-src/app/quality-control/components/building/actions/floodplain-valuation.component.html","./client-src/app/quality-control/components/building/actions/mass-update-building.component.html","./client-src/app/quality-control/components/building/form/building-form-group.component.html","./client-src/app/quality-control/components/building/form/building-form.component.html","./client-src/app/quality-control/components/building/form/dynamic-data-grids/additional-data/additional-building-equipment-grid.component.html","./client-src/app/quality-control/components/building/form/dynamic-data-grids/additional-data/upsert-building-addition.component.html","./client-src/app/quality-control/components/building/form/dynamic-data-grids/building-attributes/building-attributes-grid.component.html","./client-src/app/quality-control/components/building/form/dynamic-data-grids/building-attributes/upsert-building-attribute.component.html","./client-src/app/quality-control/components/building/form/dynamic-data-grids/custom-additions/actions/remove-customaddition.component.html","./client-src/app/quality-control/components/building/form/dynamic-data-grids/custom-additions/actions/upsert-customaddition.component.html","./client-src/app/quality-control/components/building/form/dynamic-data-grids/custom-additions/custom-additions-grid.component.html","./client-src/app/quality-control/components/building/form/dynamic-data-grids/occupancy-codes/occupancy-codes-grid.component.html","./client-src/app/quality-control/components/building/form/dynamic-data-grids/occupancy-codes/upsert-occupancy-code.component.html","./client-src/app/quality-control/components/building/form/dynamic-data-grids/user-factor-grid/actions/remove-userfactor.component.html","./client-src/app/quality-control/components/building/form/dynamic-data-grids/user-factor-grid/actions/upsert-userfactor.component.html","./client-src/app/quality-control/components/building/form/dynamic-data-grids/user-factor-grid/user-factor-grid.component.html","./client-src/app/quality-control/components/building/quality-control-building-grid.component.html","./client-src/app/quality-control/components/content/actions/add-content.component.html","./client-src/app/quality-control/components/content/actions/edit-content.component.html","./client-src/app/quality-control/components/content/actions/mass-update-content.component.html","./client-src/app/quality-control/components/content/actions/view-content.component.html","./client-src/app/quality-control/components/content/quality-control-content-grid.component.html","./client-src/app/quality-control/components/duplicate-check/duplicate-check.component.html","./client-src/app/quality-control/components/mass-update/mass-update-criteria.component.html","./client-src/app/quality-control/components/mass-update/mass-update-form.component.html","./client-src/app/quality-control/components/mass-update/mass-update-results.component.html","./client-src/app/quality-control/components/quality-control-form.component.html","./client-src/app/quality-control/components/quality-control.component.html","./client-src/app/recipients/components/actions/remove-recipient.component.html","./client-src/app/recipients/components/actions/upsert-recipient.component.html","./client-src/app/recipients/components/recipients-grid.component.html","./client-src/app/recipients/components/recipients.component.html","./client-src/app/reconciliation/components/consolidated/asset-column-select.component.html","./client-src/app/reconciliation/components/consolidated/asset-selected-columns.component.html","./client-src/app/reconciliation/components/consolidated/consolidation-match-code-assignment.component.html","./client-src/app/reconciliation/components/consolidated/destination-column-selector.component.html","./client-src/app/reconciliation/components/consolidated/dynamic-assignment-select.component.html","./client-src/app/reconciliation/components/copy-inventory.component.html","./client-src/app/reconciliation/components/create-match-code.component.html","./client-src/app/reconciliation/components/define-layout.component.html","./client-src/app/reconciliation/components/finalize-data.component.html","./client-src/app/reconciliation/components/map-matchcodes.component.html","./client-src/app/reconciliation/components/mass-match/field-matches.component.html","./client-src/app/reconciliation/components/mass-match/filter-criteria-builder.component.html","./client-src/app/reconciliation/components/mass-match/many-to-one-match.component.html","./client-src/app/reconciliation/components/mass-match/mass-match.component.html","./client-src/app/reconciliation/components/mass-match/one-to-many-match.component.html","./client-src/app/reconciliation/components/mass-match/view-matches.component.html","./client-src/app/reconciliation/components/match-codes.component.html","./client-src/app/reconciliation/components/order-asset-columns-component.html","./client-src/app/reconciliation/components/parent-child-match-detail.component.html","./client-src/app/reconciliation/components/parent-child-match.component.html","./client-src/app/reconciliation/components/reconcile-data-allocations.component.html","./client-src/app/reconciliation/components/reconcile-data-grid.component.html","./client-src/app/reconciliation/components/reconcile-data.component.html","./client-src/app/reconciliation/components/reconciliation-form.component.html","./client-src/app/reconciliation/components/reconciliation-validation.component.html","./client-src/app/reconciliation/components/setup.component.html","./client-src/app/reconciliation/components/upsert-asset-record.component.html","./client-src/app/reports/components/report-name-modal.component.html","./client-src/app/reports/components/reports-deliverables.component.html","./client-src/app/reports/components/reports-power-bi.component.html","./client-src/app/reports/components/reports.component.html","./client-src/app/support/components/support.component.html","./client-src/app/transactions/components/transactions-grid.component.html","./node_modules/tslib/tslib.es6.js"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./client-src/$$_lazy_route_resource lazy recursive\";","import { ApiService } from '../../services/api.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthAccount } from '../dtos/account.dto';\r\n\r\n@Injectable()\r\nexport class AccountApiService {\r\n  constructor(private configService: ConfigService, private http: HttpClient, private apiService: ApiService) {}\r\n\r\n  private authorizationApiEndpoint = this.configService.getSettings('authorizationApiEndpoint');\r\n\r\n  public read(): Observable<AuthAccount> {\r\n    return this.apiService.get(`${this.authorizationApiEndpoint}/api/Account`);\r\n  }\r\n}\r\n","\r\nimport {map} from 'rxjs/operators';\r\nimport { Authorization } from '../dtos/authorization.dto';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class AuthorizationApiService {\r\n  constructor(private configService: ConfigService, private apiService: ApiService) {}\r\n\r\n  private authorizationApiEndpoint = this.configService.getSettings('authorizationApiEndpoint');\r\n\r\n  public read(): Observable<Authorization> {\r\n    const result: Observable<string[]> = this.apiService.get(`${this.authorizationApiEndpoint}/Authorization`);\r\n\r\n    return result.pipe(map((data: string[]) => {\r\n      const authorization: Authorization = {\r\n        Roles: [],\r\n        HasSubscription: false,\r\n        SubscriptionId: null\r\n      };\r\n\r\n      for (const row of data) {\r\n        if (row.indexOf('http://schemas.microsoft.com/ws/2008/06/identity/claims/role') > -1) {\r\n          authorization.Roles.push(row.split(' : ')[1]);\r\n        } else if (row.indexOf('DuffAndPhelps.HasSubscription') > -1) {\r\n          authorization.HasSubscription = row.split(' : ')[1] === 'True';\r\n        } else if (row.indexOf('DuffAndPhelps.Subscriptions') > -1) {\r\n          authorization.SubscriptionId = row.split(' : ')[1];\r\n        }\r\n      }\r\n\r\n      return authorization;\r\n    }));\r\n  }\r\n}\r\n","export enum FilterSourceEnum {\r\n  QualityControlGrid = \"QualityControlGrid\"\r\n}","import { ApiService } from '../../services/api.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CountryLanguageDto } from '../dtos/country-language.dto';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class CountriesApiService {\r\n  private configApiEndpoint = this.configService.getSettings('configurationApiEndpoint');\r\n  constructor(private configService: ConfigService, private http: HttpClient, private apiService: ApiService) { }\r\n\r\n  public getCountryLanguage(countryCode: string): Observable<CountryLanguageDto> {\r\n    return this.apiService.get(`${this.configApiEndpoint}/Countries/CountryLanguage?countryCode=${countryCode}`);\r\n  }\r\n\r\n}\r\n","\r\nimport {map} from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { TrendingDto } from '../dtos/trending.dto';\r\n\r\n@Injectable()\r\nexport class DataProcessingApiService {\r\n  private runtimeEndpoint = this.configService.getSettings('configurationApiEndpoint');\r\n\r\n  constructor(private configService: ConfigService, private http: HttpClient, private apiService: ApiService) {}\r\n  \r\n  public getTrending():Observable<TrendingDto[]> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/DataProcessing/trending`);\r\n  }\r\n\r\n  public getTrendingById(id: string):Observable<TrendingDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/DataProcessing/trending/${id}`);\r\n  }\r\n\r\n  public searchTrending(query: string):Observable<TrendingDto[]> {\r\n    if (query === '') {\r\n      return of([]);\r\n    }\r\n\r\n    return this.apiService.get(`${this.runtimeEndpoint}/DataProcessing/trending/search?query=${query}`).pipe(\r\n      map(response => <TrendingDto[]>response));\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { ImportTemplateDto } from '../dtos/import-template.dto';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ImportTemplatesApiService {\r\n  private configEndpoint = this.configService.getSettings('configurationApiEndpoint');\r\n\r\n  constructor(private configService: ConfigService, private http: HttpClient, private apiService: ApiService) {}\r\n\r\n  // TODO: Implement ot copy-over remaining service methods\r\n\r\n  // GET /api/ImportTemplates/{id} // TODO Fix Any Type\r\n  public getImportTemplatesById(id: string): Observable<ImportTemplateDto> {\r\n    return this.apiService.get(`${this.configEndpoint}/ImportTemplates/${id}`, null, true);\r\n  }\r\n\r\n  // GET /api/ImportTemplates/CustomColumns/DataTypes\r\n  // GET /api/ImportTemplates\r\n}","import { ModuleDto } from '../dtos/module.dto';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ModulesApiService {\r\n  private apiEndpoint = this.configService.getSettings('configurationApiEndpoint');\r\n\r\n  constructor(private configService: ConfigService, private http: HttpClient, private apiService: ApiService) {}\r\n\r\n  // TODO: Implement ot copy-over remaining service methods\r\n\r\n  // GET /api/Modules/{moduleId}\r\n  // GET /api/Modules\r\n  getAll(): Observable<Array<ModuleDto>> {\r\n    return this.apiService.get(`${this.apiEndpoint}/Modules`);\r\n  }\r\n}\r\n","import { DepreciationTypeDto } from '../dtos/depreciation-method.dto';\r\nimport { DepreciationTypeEnum } from '../enums/depreciationType.enum';\r\nimport { EnumDto } from '../dtos/enum.dto';\r\nimport { AttributeCodeResult } from '../dtos/attribute-code-result.dto';\r\nimport { ReferenceBuildingAdditionGroupDto } from '../dtos/reference-building-addition-group.dto';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiServiceResult } from '../../dtos/api-service-result.dto';\r\nimport { AttributeTypesAndCodesResult } from '../dtos/attribute-types-and-codes-result.dto';\r\nimport { ContentCode } from '../dtos/content-code.dto';\r\n\r\n@Injectable()\r\nexport class ReferenceDataApiService {\r\n  private configEndpoint = this.configService.getSettings('configurationApiEndpoint');\r\n\r\n  constructor(private configService: ConfigService, private http: HttpClient, private apiService: ApiService) {}\r\n\r\n  public getDepreciationMethods(onlyEnabled: boolean = true): Observable<ApiServiceResult<EnumDto>> {\r\n    return this.apiService.get(`${this.configEndpoint}/ReferenceData/DepreciationMethod?onlyEnabled=${onlyEnabled}`);\r\n  }\r\n\r\n  public getDepreciationConventions(onlyEnabled: boolean = true):Observable<ApiServiceResult<EnumDto>> {\r\n    return this.apiService.get(`${this.configEndpoint}/ReferenceData/DepreciationConvention?onlyEnabled=${onlyEnabled}`);\r\n  }\r\n\r\n  public GetRoundingTypes(onlyEnabled: boolean = true):Observable<ApiServiceResult<EnumDto>> {\r\n    return this.apiService.get(`${this.configEndpoint}/ReferenceData/RoundingType?onlyEnabled=${onlyEnabled}`);\r\n  }\r\n\r\n  public getActivityCodes(onlyEnabled: boolean = true):Observable<ApiServiceResult<EnumDto>> {\r\n    return this.apiService.get(`${this.configEndpoint}/ReferenceData/ActivityCode?onlyEnabled=${onlyEnabled}`, null, true);\r\n  }\r\n\r\n  public getAttributeType(onlyEnabled: boolean = true):Observable<ApiServiceResult<EnumDto>> {\r\n    return this.apiService.get(`${this.configEndpoint}/ReferenceData/AttributeType?onlyEnabled=${onlyEnabled}`);\r\n  }\r\n\r\n  public getAttributeCodes(attributeTypeId: number):Observable<AttributeCodeResult> {\r\n    return this.apiService.get(`${this.configEndpoint}/ReferenceData/AtrributeCode/${attributeTypeId}`);\r\n  }\r\n\r\n  public getAttributeTypesAndCodes(onlyEnabled: boolean = true):Observable<ApiServiceResult<Array<AttributeTypesAndCodesResult>>> {\r\n    return this.apiService.get(`${this.configEndpoint}/ReferenceData/AttributeTypesAndCodes?onlyEnabled=${onlyEnabled}`);\r\n  }\r\n\r\n  public getContentCodes():Observable<ApiServiceResult<Array<ContentCode>>> {\r\n    return this.apiService.get(`${this.configEndpoint}/ReferenceData/ContentCode`);\r\n  }\r\n\r\n  public getBuildingValuationErrorTypes(onlyEnabled: boolean = true):Observable<ApiServiceResult<EnumDto>> {\r\n    return this.apiService.get(`${this.configEndpoint}/ReferenceData/BuildingValuationError?onlyEnabled=${onlyEnabled}`);\r\n  }\r\n\r\n  public getFloodPlainValuationErrorTypes(onlyEnabled: boolean = true):Observable<ApiServiceResult<EnumDto>> {\r\n    return this.apiService.get(`${this.configEndpoint}/ReferenceData/FloodPlainValuationError?onlyEnabled=${onlyEnabled}`);\r\n  }\r\n\r\n  public getBuildingConditions(onlyEnabled: boolean = true):Observable<ApiServiceResult<EnumDto>> {\r\n    return this.apiService.get(`${this.configEndpoint}/ReferenceData/BuildingCondition?onlyEnabled=${onlyEnabled}`);\r\n  }\r\n  public getBuildingAdditionGroups(onlyEnabled: boolean = true):Observable<ApiServiceResult<Array<ReferenceBuildingAdditionGroupDto>>> {\r\n    return this.apiService.get(`${this.configEndpoint}/ReferenceData/ReferenceBuildingAdditionGroup`);\r\n  }\r\n  public getBuildingPerimeterAdjustmentMethod(onlyEnabled: boolean = true):Observable<ApiServiceResult<EnumDto>> {\r\n    return this.apiService.get(`${this.configEndpoint}/ReferenceData/BuildingPerimeterAdjustmentMethod`);\r\n  }\r\n  public getEntryAlarmOptions():Observable<ApiServiceResult<EnumDto>> {\r\n    return this.apiService.get(`${this.configEndpoint}/ReferenceData/EntryAlarmOptions`);\r\n  }\r\n\r\n  public getUnitsOfMeasure():Observable<ApiServiceResult<EnumDto>> {\r\n    return this.apiService.get(`${this.configEndpoint}/ReferenceData/UnitsOfMeasure`);\r\n  }\r\n\r\n}\r\n","\r\nimport {map} from 'rxjs/operators';\r\nimport { of, Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { TemplateDto } from '../dtos/template.dto';\r\nimport { TemplateBaseDto } from '../dtos/template-base.dto';\r\n\r\n@Injectable()\r\nexport class TemplatesApiService {\r\n  private configEndpoint = this.configService.getSettings('configurationApiEndpoint');\r\n\r\n  constructor(private configService: ConfigService, private http: HttpClient, private apiService: ApiService) {}\r\n\r\n  // GET /api/Templates/Group/{groupId}\r\n  public getTemplateById(templateId: string):Observable<TemplateDto> {\r\n    return this.apiService.get(`${this.configEndpoint}/Templates/${templateId}`);\r\n  }\r\n\r\n  // DELETE /api/Templates/{templateId}\r\n\r\n  // GET /api/Templates/{templateId}\r\n  public GetTemplateForGroup(groupId: string):Observable<TemplateBaseDto> {\r\n    return this.apiService.get(`${this.configEndpoint}/Templates/Group/${groupId}`);\r\n  }\r\n\r\n  //TODO: Implement ot copy-over remaining service methods\r\n  \r\n  // GET /api/Templates/MasterTemplates\r\n  // POST /api/Templates/Group\r\n  // PATCH /api/Templates/{templateId}/retire\r\n\r\n  // GET /api/Templates/search\r\n  public searchTemplate(query: string):Observable<TemplateDto[]> {\r\n    if (query === '') {\r\n      return of([]);\r\n    }\r\n\r\n    return this.apiService.get(`${this.configEndpoint}/Templates/search?query=${query}`).pipe(\r\n      map(response => <TemplateDto[]>response));\r\n  }\r\n\r\n  // GET /api/Templates\r\n  // POST /api/Templates\r\n  // PUT /api/Templates\r\n}\r\n","\r\nexport enum ActivityCode {\r\n    New,\r\n    Active,\r\n    Deactivated,\r\n    Retired\r\n}\r\n\r\n\r\n","export enum AdvancedMathOperator {\r\n  Multiply,\r\n  Divide,\r\n  Subtract,\r\n  Add,\r\n  Noop\r\n}\r\n","export enum AdvancedMathType {\r\n  Constant,\r\n  Field,\r\n  Compound\r\n}\r\n","export enum BuildingCondition {\r\n  Excellent=1,\r\n  Good,\r\n  Average,\r\n  Fair,\r\n  Poor,\r\n  Dilapidated,\r\n  NA\r\n}","export enum DisposalCode {\r\n    Scrapped,\r\n    Sold,\r\n    TradedIn,\r\n    PostAudit\r\n  }","export enum EntryAlarm {\r\n  Yes = 1,\r\n  No = 2,\r\n  Partial = 3\r\n}","export enum FieldType {\r\n  String,\r\n  Integer,\r\n  Double,\r\n  Boolean,\r\n  DateTime,\r\n  Image,\r\n  MultiValue\r\n}\r\n","export enum ImageEntityType {\r\n    Asset,\r\n    Building\r\n}\r\n","export enum PerimeterAdjustmentMethod {\r\n  None = 0,\r\n  Calculated = 1,\r\n  IrregularShape = 2,\r\n  VeryIrregularShape = 3\r\n}","export enum Deliverable {\r\n  'Portal',\r\n  'HardCopy',\r\n}\r\n","export enum RecordType {\r\n    Building,\r\n    MinorBuilding,\r\n    LandImprovement\r\n}","export enum ReportType {\r\n  PowerBi,\r\n  SSRS,\r\n  PowerBiDashboard\r\n}\r\n","export enum TransactionApplicability {\r\n    Full,\r\n    Partial\r\n  }","export enum TransactionType {\r\n    Transfer,\r\n    Retirement,\r\n    Adjustment   \r\n  }","export enum TransactionValidationStatus {\r\n  NoErrors,\r\n  NegativeCostOrAccumulation,\r\n  DepGtCost, // Depreciation is greater than cost\r\n  InvalidFiscalYearEnd,\r\n  HistCostOrAccumDeprCannotBeZero, // HistoricalCost Or AccumulatedDepreciation cannot be zero when prorate is checked\r\n}\r\n","export enum UnitOfMeasure {\r\n  Meters = 1,\r\n  Feet = 2\r\n}","export enum UploadFileType {\r\n  ClientUpload,\r\n  FinalizedDocument,\r\n  ValuationReport,\r\n  FloodPlainReport\r\n}\r\n","\r\nimport {map} from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { AdvancedMathOperator } from '../enums/advanced-math-operator';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class CalculationApiService {\r\n\r\n  private runtimeEndpoint = this.configService.getSettings('runtimeApiEndpoint');\r\n\r\n  constructor(private apiService: ApiService,\r\n  private configService: ConfigService){}\r\n\r\n  public Calculate(leftTerm: number, rightTerm: number, operator: AdvancedMathOperator): Observable<string>{\r\n    return this.apiService.\r\n    get(`${this.runtimeEndpoint}/QualityControl/Calculate?leftTerm=${leftTerm}&rightTerm=${rightTerm}&op=${operator}`).pipe(\r\n    map(response => response.result));\r\n  }\r\n\r\n  public Prorate(leftNumerator: number, leftDenominator: number, rightNumerator: number): Observable<string>{\r\n    return this.apiService.\r\n    get(`${this.runtimeEndpoint}/QualityControl/Prorate?leftNumerator=${leftNumerator}&leftDenominator=${leftDenominator}` +\r\n    `&rightNumerator=${rightNumerator}`).pipe(map(response => response.result));\r\n  }\r\n\r\n  public Allocate(value: number, numberOfItems: number): Observable<Array<string>>{\r\n    return this.apiService.get(`${this.runtimeEndpoint}/QualityControl/Allocate?value=${value}&numberOfItems=${numberOfItems}`).pipe(\r\n    map(response => response.result));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { ClientDto } from '../dtos/client.dto';\r\nimport { Observable } from 'rxjs';\r\nimport { ClientHierarchyDto } from '../dtos/client-hierarchy.dto';\r\n\r\n@Injectable()\r\nexport class ClientApiService {\r\n  private runtimeEndpoint = this.configService.getSettings('runtimeApiEndpoint');\r\n\r\n  constructor(private configService: ConfigService, private apiService: ApiService) {}\r\n\r\n  // GET /api/client\r\n  getClients(): Observable<ClientDto[]> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/client`);\r\n  }\r\n\r\n  // GET /api/client/{clientId}/hierarchy\r\n  getHierarchyByClient(clientId: string): Observable<ClientHierarchyDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/client/${clientId}/hierarchy`);\r\n  }\r\n\r\n}\r\n","import { ClientFileDto } from '../dtos/fileUpload/clientFileDto';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AssetSortTermDto, AssetFilterTermDto } from '../../dtos/inventory/asset-search.dto';\r\nimport { BuildingSearchDto } from '../dtos/building-search.dto';\r\n\r\n@Injectable()\r\nexport class ClientFileApiService {\r\n  public defaultSortTerms = [\r\n    <AssetSortTermDto>{\r\n      termOrder: 0,\r\n      sortDirection: 1,\r\n      field: ''\r\n    }\r\n  ];\r\n\r\n  private runtimeEndpoint = this.configService.getSettings('runtimeApiEndpoint');\r\n  constructor(private configService: ConfigService, private http: HttpClient, private apiService: ApiService) {}\r\n\r\n  public getGroupUplodFiles(id: string): Observable<ClientFileDto[]> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/ClientFiles/Group/${id}`);\r\n  }\r\n\r\n  public searchGroupUplodFiles(id: string, searchRequest: BuildingSearchDto): Observable<ClientFileDto[]> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/ClientFiles/Group/${id}/Search`, searchRequest);\r\n  }\r\n\r\n  public getGroupFinalizedDocuments(id: string): Observable<ClientFileDto[]> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/ClientFiles/FinalizedDocuments/Group/${id}`);\r\n  }\r\n\r\n  public getGroupMemberUploadFiles(id: string, memberId: string): Observable<ClientFileDto[]> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/ClientFiles/Group/${id}/Member/${memberId}`);\r\n  }\r\n\r\n  public getClientFile(id: string): Observable<string> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/ClientFiles/${id}`);\r\n  }\r\n\r\n  public uploadGroupFile(groupId: string, file: File, isInternal: boolean, memberId?: string, userId?: string):\r\n  Observable<ClientFileDto> {\r\n    let url = `${this.runtimeEndpoint}/ClientFiles/Group/${groupId}`;\r\n    if (memberId) {\r\n      url += `/Member/${memberId}`;\r\n    }\r\n    url += `?fileName=${file.name}&isFinalized=true&isInternal=${isInternal}`;\r\n    if (userId) {\r\n      url += `&userId=${userId}`;\r\n    }\r\n    return this.apiService.post(url, null, file);\r\n  }\r\n\r\n  public deleteFile(id: string): Observable<boolean> {\r\n    // This is because the API is not returning a boolean, it has an empty body which is breaking the API service.\r\n    // TODO update API to return a boolean in the message body.\r\n    return this.apiService.delete(`${this.runtimeEndpoint}/ClientFiles/${id}`);\r\n  }\r\n\r\n  public updateGridData(\r\n    groupId: string,\r\n    skip: number,\r\n    take: number,\r\n    sortTerms: Array<AssetSortTermDto> = new Array<\r\n      AssetSortTermDto\r\n    >(),\r\n    filterTerms: Array<AssetFilterTermDto> = new Array<\r\n      AssetFilterTermDto\r\n    >()\r\n  ): Observable<ClientFileDto[]> {\r\n    const defaultFilter = [];\r\n\r\n    const searchRequest = <BuildingSearchDto>{\r\n      filterTerms:\r\n        !!filterTerms && filterTerms.length > 0 ? filterTerms : defaultFilter,\r\n      filterConjunction: 'and',\r\n      excludeMatchedRecords: false,\r\n      sortTerms:\r\n        !!sortTerms && sortTerms.length > 0 ? sortTerms : this.defaultSortTerms,\r\n      skip: skip,\r\n      take: take\r\n    };\r\n\r\n    return this.searchGroupUplodFiles(groupId, searchRequest);\r\n  }\r\n}\r\n","import { ContractGroupSummaryDto } from '../dtos/contract-group-summary.dto';\r\nimport { ContractGroupDto } from '../../dtos/contract-group.dto';\r\nimport { ContractSummaryDto } from '../../dtos/contract-summary.dto';\r\nimport { ContractSearchResultDto } from '../dtos/contract-search-result.dto';\r\nimport { ContractSearchDto, ContractGridSearchResultsDto } from '../dtos/contract/contract-search-filter-dto';\r\nimport { IndexModelMetadata } from '../dtos/field-meta-data.dto';\r\nimport { of, Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { ApiService } from '../../services/api.service';\r\n\r\n@Injectable()\r\nexport class ContractApiService {\r\n  private runtimeEndpoint = this.configService.getSettings('runtimeApiEndpoint');\r\n\r\n  constructor(private configService: ConfigService, private http: HttpClient, private apiService: ApiService) {}\r\n\r\n  public logGroupandCheckOtherUser(id: string): Observable<boolean> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/group/${id}/ActivityLog`);\r\n  }\r\n\r\n  // TODO: Implement ot copy-over remaining service methods\r\n\r\n  // GET /api/contract\r\n  // GET /api/contract/{id}\r\n  // GET /api/contract/{contractId}/Groups\r\n  public getContractsGroups(id: string, includePortals = false): Observable<ContractGroupSummaryDto[]> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/contract/${id}/groups?includePortals=${includePortals}`);\r\n  }\r\n  // GET /api/contract/{contractId}/Groups/{groupId}\r\n\r\n  public getContracts(includePortal: boolean): Observable<ContractSummaryDto[]>{\r\n    return this.apiService.get(`${this.runtimeEndpoint}/contract?isPortal=${includePortal}`);\r\n  }\r\n\r\n  public searchContracts(query: string, excludePortals = false): Observable<ContractSearchResultDto[]> {\r\n    if (query === '') {\r\n      return of([]);\r\n    }\r\n    return this.apiService.get(`${this.runtimeEndpoint}/contract/search?query=${query}&excludePortals=${excludePortals}`);\r\n  }\r\n\r\n  public getContractMetadata(): Observable<IndexModelMetadata> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/contract/Search/metadata`);\r\n  }\r\n\r\n  public searchContractGrid(searchDto: ContractSearchDto): Observable<ContractGridSearchResultsDto> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/contract/Search`, searchDto);\r\n  }\r\n\r\n  public getContractGroup(id: string): Observable<ContractGroupDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/group/${id}/ContractGroup`);\r\n  }\r\n}\r\n","import {map} from 'rxjs/operators';\r\nimport { GroupDto } from '../dtos/group.dto';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { GroupSearchResultDto } from '../dtos/group-search-result.dto';\r\nimport { ContractGroupDto } from '../dtos/contract-group.dto';\r\nimport { of, Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { ContractGroupsTemplateDto } from '../dtos/contract-groups-template.dto';\r\nimport { GroupTemplateDto } from '../dtos/group-template.dto';\r\nimport { GroupTemplateRequestDto } from '../dtos/group-template-request.dto';\r\nimport { CopyGroupsDto } from '../dtos/copy-groups.dto';\r\nimport { GroupSave } from '../../../_models/group-save.model';\r\nimport { ApiServiceResult } from '../../dtos/api-service-result.dto';\r\n\r\n@Injectable()\r\nexport class GroupApiService {\r\n  private runtimeEndpoint = this.configService.getSettings('runtimeApiEndpoint');\r\n\r\n  constructor(private configService: ConfigService, private apiService: ApiService) {}\r\n\r\n  // GET /api/group/{id}/ContractGroup\r\n public getContractGroup(id: string, includePortal: boolean): Observable<ContractGroupDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/group/${id}/ContractGroup?isPortal=${includePortal}`);\r\n  }\r\n\r\n  // GET /api/group\r\n  getGroups(): Observable<GroupDto[]> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/group`);\r\n  }\r\n\r\n  // GET /api/group/{id}\r\n  getGroup(id: string): Observable<GroupDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/group/${id}`).pipe(map(res => res.result));\r\n  }\r\n\r\n  searchGroups(query: string, includeContractSearch: boolean): Observable<GroupSearchResultDto[]> {\r\n    if (query === '') {\r\n      return of([]);\r\n    }\r\n\r\n    let path = `${this.runtimeEndpoint}/group/search`;\r\n    if (includeContractSearch) {\r\n      path += `/contract`;\r\n    }\r\n    const url = path + `?query=${query}`;\r\n\r\n    return this.apiService.get(url);\r\n  }\r\n\r\n  // TODO: Implement ot copy-over remaining service methods\r\n  // GET /api/group/RelatedToTemplates\r\n  // GET /api/group/{id}/CostField\r\n  // POST /api/group/{id}/CostField\r\n  // GET /api/group/{id}/ContractGroups/InventoryFiles\r\n\r\n  // GET /api/group/{id}/ContractGroupTemplate\r\n  public getContractGroupTemplate(groupId: string): Observable<ContractGroupsTemplateDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/group/${groupId}/ContractGroupTemplates`);\r\n  }\r\n\r\n  // POST /api/group\r\n  public createGroup(request: GroupTemplateRequestDto): Observable<GroupTemplateDto> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/group/`, request, null, true);\r\n  }\r\n\r\n  // PATCH /api/group\r\n  public updateGroup(request: GroupTemplateRequestDto): Observable<GroupTemplateDto> {\r\n    return this.apiService.patch(`${this.runtimeEndpoint}/group/`, request);\r\n  }\r\n\r\n  // DELETE /api/group\r\n  public deleteGroup(groupId: string): Observable<GroupTemplateDto> {\r\n    return this.apiService.delete(`${this.runtimeEndpoint}/group/${groupId}`);\r\n  }\r\n\r\n  public copyGroups(request: CopyGroupsDto, localErrorHandling: boolean = false): Observable<string> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/group/CopyGroups`, request, null, localErrorHandling);\r\n  }\r\n\r\n  public getGroupSavePoints(groupId: string): Observable<Array<GroupSave>> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/group/${groupId}/RollbackMilestones`);\r\n  }\r\n\r\n  public setGroupSavePoint(groupId: string, description: string): Observable<ApiServiceResult<GroupSave>> {\r\n    const url = `${this.runtimeEndpoint}/group/${groupId}/RollbackMilestones?description=${description}`;\r\n    return this.apiService.post(url, null, null).pipe(map(results => results));\r\n  }\r\n\r\n  public restoreToSavePoint(request: GroupSave, localErrorHandling: boolean): Observable<string> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/group/RollbackToSavePoint`, request, null, localErrorHandling);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { CreateImageResponseDto } from '../dtos/create-image-response.dto';\r\nimport { Observable } from 'rxjs';\r\nimport { CreateImageDto } from '../dtos/create-image.dto';\r\nimport { ImageDto } from '../dtos/image.dto';\r\n\r\n@Injectable()\r\nexport class ImageApiService {\r\n  private runtimeEndpoint = this.configService.getSettings('runtimeApiEndpoint');\r\n\r\n  constructor(private configService: ConfigService, private http: HttpClient, private apiService: ApiService) { }\r\n\r\n  // POST /api/image/asset/{assetId}\r\n  public createAssetImage(dto: CreateImageDto): Observable<CreateImageResponseDto> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/image/asset/${dto.id}?imageName=${dto.imageName}`, null, dto.file);\r\n  }\r\n\r\n  // POST /api/image/building/{buildingId}\r\n  public createBuildingImage(dto: CreateImageDto): Observable<CreateImageResponseDto> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/image/building/${dto.id}?imageName=${dto.imageName}`, null, dto.file);\r\n  }\r\n\r\n  // DELETE /api/image/{imageId}\r\n  public deleteImage(id: string): Observable<boolean> {\r\n    return this.apiService.delete(`${this.runtimeEndpoint}/image/${id}`);\r\n  }\r\n\r\n  // GET /api/image/{imageId}\r\n  public getImage(id: string): Observable<ImageDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/image/${id}`);\r\n  }\r\n\r\n  // PUT /api/image/asset/{assetId}\r\n  public updateAssetImages(assetId: string, imageArr: Array<ImageDto>): Observable<Array<ImageDto>> {\r\n    return this.apiService.put(`${this.runtimeEndpoint}/image/asset/${assetId}`, imageArr);\r\n  }\r\n\r\n  // PUT /api/image/building/{buildingId}\r\n  public updateBuildingImages(buildingId: string, imageArr: Array<ImageDto>): Observable<Array<ImageDto>> {\r\n    return this.apiService.put(`${this.runtimeEndpoint}/image/building/${buildingId}`, imageArr);\r\n  }\r\n\r\n  // POST /api/image/group/{groupId}\r\n  public upsertPortalImage(portalId: string, imageName: string, file: File): Observable<ImageDto> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/image/group/${portalId}?imageName=${imageName}`, null, file);\r\n  }\r\n\r\n  // GET /api/image/portal/{groupId}\r\n  public getPortalImage(portalId: string): Observable<ImageDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/image/portal/${portalId}`, null, true);\r\n  }\r\n}\r\n","import { ApiService } from '../../services/api.service';\r\nimport { BuildingDto, BuildingResponseDto, ValuationResponseDto } from '../dtos/building.dto';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BuildingSearchDto } from '../dtos/building-search.dto';\r\nimport { Observable } from 'rxjs';\r\nimport { AssetFileSummaryDto } from '../dtos/asset-file-summary.dto';\r\nimport { SiteDto, SiteResponseDto } from '../dtos/site.dto';\r\nimport { BuildingHierarchyDto } from '../dtos/building-hierarchy.dto';\r\nimport { MemberResponseDto, MemberDto } from '../dtos/member.dto';\r\nimport { TransactionResponseDto } from '../dtos/transaction-response.dto';\r\nimport { TransactionRequestDto } from '../dtos/transaction-request.dto';\r\nimport { RevertSummaryDto } from '../dtos/transaction-revert-summary.dto';\r\nimport { TransactionsDto } from '../dtos/transactions.dto';\r\nimport { TransactionsSearchFilter } from '../dtos/transactions-search-filter.dto';\r\nimport { GroupHierarchyDto } from '../dtos/client-hierarchy.dto';\r\n\r\n@Injectable()\r\nexport class InsuranceApiService {\r\n  private runtimeEndpoint = this.configService.getSettings(\r\n    'runtimeApiEndpoint'\r\n  );\r\n\r\n  constructor(\r\n    private configService: ConfigService,\r\n    private http: HttpClient,\r\n    private apiService: ApiService\r\n  ) {}\r\n\r\n  // POST /api/insurance/groups/{groupId}/buildings\r\n  public searchBuildingsByGroup(groupId: string,\r\n    searchFilter: BuildingSearchDto): Observable<BuildingResponseDto> {\r\n\r\n    return this.apiService.post(`${this.runtimeEndpoint}/insurance/groups/${groupId}/buildings`, searchFilter);\r\n  }\r\n\r\n  // POST /api/insurance/site/{siteId}/buildings\r\n  public searchBuildingsBySite(siteId: string, searchFilter: BuildingSearchDto): Observable<BuildingResponseDto> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/insurance/site/${siteId}/buildings`, searchFilter);\r\n  }\r\n\r\n  // POST /api/insurance/building/{groupId}/CreateBuilding\r\n  public createBuilding(groupId: string,\r\n    buildingDto: BuildingDto, handleLocalError: boolean): Observable<BuildingDto> {\r\n\r\n    return this.apiService.post(`${this.runtimeEndpoint}/insurance/building/${groupId}/CreateBuilding`,\r\n           buildingDto, null, handleLocalError);\r\n  }\r\n\r\n  // PATCH /api/insurance/building/{buildingId}\r\n  public updateBuilding(id: string, buildingDto: BuildingDto,\r\n     handleLocalError: boolean): Observable<BuildingDto> {\r\n\r\n    return this.apiService.patch(`${this.runtimeEndpoint}/insurance/building/${id}`, buildingDto, handleLocalError);\r\n  }\r\n\r\n  // GET /api/insurance/{buildingId}\r\n  public getBuilding(buildingId: string): Observable<BuildingDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/insurance/${buildingId}`);\r\n  }\r\n\r\n  // GET /api/insurance/{groupId}/SearchMetaData\r\n  public getBuildingSearchMetadataByGroupId(groupId: string): Observable<AssetFileSummaryDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/insurance/${groupId}/SearchMetadata`);\r\n  }\r\n\r\n  // GET /api/insurance/SearchMetadata\r\n  public getBuildingSearchMetadata(): Observable<AssetFileSummaryDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/insurance/SearchMetadata`);\r\n  }\r\n\r\n  // GET /api/insurance/group/{groupId}/sites\r\n  public getSitesByGroup(groupId: string): Observable<Array<SiteDto>> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/insurance/group/${groupId}/sites`);\r\n  }\r\n\r\n   // GET /api/insurance/group/{groupId}/sites\r\n   public getBuildingHierarchyByGroupId(groupId: string): Observable<BuildingHierarchyDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/insurance/group/${groupId}/hierarchy`, null, true);\r\n  }\r\n\r\n  // GET /api/insurance/member/{memberId}/sites\r\n  public getSitesByMember(memberId: string): Observable<Array<SiteDto>> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/insurance/member/${memberId}/sites`);\r\n  }\r\n\r\n  // POST /api/insurance/group/{groupId}/site\r\n  public createSiteByGroupId(groupId: string, request: SiteDto, handleLocalError: boolean): Observable<SiteDto> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/insurance/group/${groupId}/site`, request, null, handleLocalError);\r\n  }\r\n\r\n  // DELETE /api/insurance/site/{siteId}\r\n  public deleteSiteBySiteId(siteId: string, handleLocalError?: boolean): Observable<boolean> {\r\n    return this.apiService.delete(`${this.runtimeEndpoint}/insurance/site/${siteId}`, handleLocalError);\r\n  }\r\n\r\n  // PATCH /api/insurance/site/{siteId}\r\n  public updateSiteBySiteId(request: SiteDto, handleLocalError: boolean): Observable<SiteDto> {\r\n    return this.apiService.patch(`${this.runtimeEndpoint}/insurance/site/${request.id}`, request, handleLocalError);\r\n  }\r\n\r\n  // GET /api/insurance/Members/SearchMetadata\r\n  public getMembersSearchMetadata(): Observable<AssetFileSummaryDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/insurance/Members/SearchMetadata`);\r\n  }\r\n\r\n    // GET /api/insurance/Sites/SearchMetadata\r\n  public getSiteSearchMetadata(): Observable<AssetFileSummaryDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/insurance/Sites/SearchMetadata`);\r\n  }\r\n\r\n\r\n  // POST /api/insurance/groups/{groupId}/members\r\n  public searchMemberssByGroup(groupId: string, searchFilter: BuildingSearchDto): Observable<MemberResponseDto> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/insurance/groups/${groupId}/members`, searchFilter);\r\n  }\r\n\r\n  // GET /api/insurance/group/{groupId}/members\r\n  public getMembersByGroupId(groupId: string): Observable<Array<MemberDto>> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/insurance/group/${groupId}/members`);\r\n  }\r\n\r\n   // POST /api/insurance/groups/{groupId}/sites\r\n   public searchSitesByGroup(groupId: string, searchFilter: BuildingSearchDto): Observable<SiteResponseDto> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/insurance/groups/${groupId}/sites`, searchFilter);\r\n  }\r\n\r\n\r\n  // DELETE /api/insurance/member/{memberId}\r\n  public deleteMemberByMemberId(memberId: string, handleLocalError?: boolean): Observable<boolean> {\r\n    return this.apiService.delete(`${this.runtimeEndpoint}/insurance/member/${memberId}`, handleLocalError);\r\n  }\r\n\r\n  // PATCH /api/insurance/member/{memberId}\r\n  public updateMemberByMemberId(request: MemberDto, handleLocalError: boolean): Observable<MemberDto> {\r\n    return this.apiService.patch(`${this.runtimeEndpoint}/insurance/member/${request.id}`, request, handleLocalError);\r\n  }\r\n\r\n  // POST /api/insurance/group/{groupId}/member\r\n  public createMemberByGroupId(groupId: string,\r\n    request: MemberDto, handleLocalError: boolean): Observable<MemberDto> {\r\n\r\n    return this.apiService.post(`${this.runtimeEndpoint}/insurance/group/${groupId}/member`, request, null, handleLocalError);\r\n  }\r\n\r\n  // POST /api/insurance/transaction\r\n  public createTransaction(dto: TransactionRequestDto): Observable<TransactionResponseDto> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/insurance/transaction`, dto, null, true);\r\n  }\r\n\r\n  // GET /api/insurance/transaction/{transactionId}/revertsummary\r\n  public getRevertSummary(transactionId: string): Observable<RevertSummaryDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/insurance/transaction/${transactionId}/revertsummary`);\r\n  }\r\n\r\n  // POST /api/insurance/group/{groupId}/transactions\r\n  public searchTransactionsByGroupId(groupId: string,\r\n    searchFilter: TransactionsSearchFilter): Observable<TransactionsDto> {\r\n\r\n    return this.apiService.post(`${this.runtimeEndpoint}/insurance/group/${groupId}/transactions`, searchFilter);\r\n  }\r\n\r\n  // POST /api/insurance/transaction/{transactionId}/revert\r\n  public revertTransaction(transactionId: string): Observable<string> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/insurance/transaction/${transactionId}/revert`, transactionId, null, true);\r\n  }\r\n\r\n  // GET /api/insurance/group/{groupId}/hierarchy\r\n  public getGroupHierarchy(groupId: string): Observable<GroupHierarchyDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/insurance/group/${groupId}/hierarchy`);\r\n  }\r\n\r\n  // POST /api/Insurance/Building/ValuationSubmission\r\n  public submitBuildingValuation(buildingIds: string[]): Observable<Array<ValuationResponseDto>> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/insurance/building/valuationsubmission`, buildingIds);\r\n  }\r\n\r\n  // POST /api/Insurance/Building/FloodPlainSubmission\r\n  public submitFloodPlainValuation(buildingIds: string[]): Observable<Array<ValuationResponseDto>> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/insurance/building/floodplainsubmission`, buildingIds);\r\n  }\r\n}\r\n","import {map} from 'rxjs/operators';\r\nimport { AssetSearchDto } from '../dtos/asset-search.dto';\r\nimport { AssetSearchResponseDto } from '../dtos/asset-search-response.dto';\r\nimport { ConsolidatedFilePreviewDto } from '../dtos/consolidated-file-preview.dto';\r\nimport { ApiServiceResult } from '../../dtos/api-service-result.dto';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AssetFileSummaryDto } from '../dtos/asset-file-summary.dto';\r\nimport { AssetDto } from '../dtos/asset.dto';\r\nimport { AccountDto, AccountResponseDto } from '../dtos/account.dto';\r\nimport { DepartmentDto, DepartmentResponseDto } from '../dtos/department.dto';\r\nimport { BuildingSearchDto } from '../dtos/building-search.dto';\r\n\r\n@Injectable()\r\nexport class InventoryApiService {\r\n  private runtimeEndpoint = this.configService.getSettings('runtimeApiEndpoint');\r\n\r\n  constructor(private configService: ConfigService, private http: HttpClient, private apiService: ApiService) {}\r\n\r\n  // GET /api/Inventory/{groupId}/SearchMetadata/{dataTarget}\r\n  public getSearchMetadataByGroupId(groupId: string, filetype: number): Observable<AssetFileSummaryDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/Inventory/${groupId}/SearchMetadata/${filetype}`, null, true);\r\n  }\r\n\r\n  public search(groupId: string, searchFilter: AssetSearchDto, file: File = null, localErrorHandling: boolean = true): Observable<AssetSearchResponseDto> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/Inventory/${groupId}/Assets`, searchFilter, file, localErrorHandling);\r\n  }\r\n\r\n  // GET /api/Inventory/ConsolidatedFile/Preview/Group/{groupId}\r\n  public getConsolidatedFilePreview(groupId: string): Observable<ApiServiceResult<Array<ConsolidatedFilePreviewDto>>> {\r\n    return this.apiService\r\n      .get(`${this.runtimeEndpoint}/Inventory/ConsolidatedFile/Preview/Group/${groupId}`).pipe(\r\n      map(result => <ApiServiceResult<Array<ConsolidatedFilePreviewDto>>>result));\r\n  }\r\n\r\n  public getAssetRecord(id: string): Observable<AssetDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/Inventory/${id}`);\r\n  }\r\n\r\n  public updateAssetRecord(recordId: string, recordDto: Object): Observable<AssetDto> {\r\n    return this.apiService.patch(`${this.runtimeEndpoint}/Inventory/${recordId}`, recordDto);\r\n  }\r\n\r\n\r\n  // TODO: Implement ot copy-over remaining service methods\r\n\r\n  // POST /api/Inventory/AssetFiles/Upload\r\n  // POST /api/Inventory/AssetFiles/Preview\r\n  // PATCH /api/Inventory/AssetFiles/Complete\r\n  // POST /api/Inventory/AssetFiles/{assetFile//Id}/CreateAssetRecord\r\n  // DELETE /api/Inventory/AssetFiles/{assetFi//leId}\r\n  // DELETE /api/Inventory/{groupId}/Assets/{dataTarget}\r\n  // GET /api/Inventory/{groupId}/Assets/{dataTarget}\r\n  // PATCH /api/Inventory/{assetRecordId}\r\n  // POST /api/Inventory/{groupId}/Assets/MassMatch\r\n  // POST /api/Inventory/{groupId}/Assets*///////\r\n  // GET /api/Inventory/SearchMetadata/{dataTarget////}\r\n  // PATCH /api/Inventory/{sourceGroupId}/CopyGroupInventory/{targetGroupId}\r\n  // POST /api/Inventory/AssetFiles/{assetFileId}/CustomColumns\r\n  // GET /api///Inventory/ConsolidatedFile/Group/{groupId}/Mapping\r\n  // PATCH ///api/Inventory/ConsolidatedFile/Group/{groupId}/Mapping\r\n  // GET /api/Inventory/ConsolidatedFile/Group/{groupId}/MatchCodeColumnMap\r\n  // POST /api/Inventory/ConsolidatedFile/Group/{groupId}/MatchCodeColumnMap\r\n  // GET /api/Inventory/ConsolidatedFile/Preview/Group/{groupId}\r\n  // PATCH /api/Inventory/ConsolidatedFile/Create/{groupId}\r\n\r\n  // GET /api/Inventory/group/{groupId}/Accounts\r\n  public getAccountsByGroupId(groupId: string): Observable<Array<AccountDto>> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/Inventory/group/${groupId}/Accounts`, null, true);\r\n  }\r\n\r\n  // POST /api/Inventory/group/{groupId}/Account\r\n  public createAccountByGroupId(groupId: string, request: AccountDto): Observable<AccountDto> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/Inventory/group/${groupId}/Account`, request);\r\n  }\r\n\r\n  // DELETE /api/Inventory/Account/{accountId}\r\n  public deleteAccountByAccountId(accountId: string, handleLocalError?: boolean): Observable<boolean> {\r\n    return this.apiService.delete(`${this.runtimeEndpoint}/Inventory/Account/${accountId}`, handleLocalError);\r\n  }\r\n\r\n  // PATCH /api/Inventory/Account/{accountId}\r\n  public updateAccountByAccountId(request: AccountDto): Observable<AccountDto> {\r\n    return this.apiService.patch(`${this.runtimeEndpoint}/Inventory/Account/${request.id}`, request);\r\n  }\r\n\r\n  // GET /api/Inventory/group/{groupId}/Departments\r\n  public getDepartmentsByGroupId(groupId: string): Observable<Array<DepartmentDto>> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/Inventory/group/${groupId}/Departments`, null, true);\r\n  }\r\n\r\n  // POST /api/Inventory/group/{groupId}/Department\r\n  public createDepartmentByGroupId(groupId: string, request: DepartmentDto): Observable<DepartmentDto> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/Inventory/group/${groupId}/Department`, request);\r\n  }\r\n\r\n  // DELETE /api/Inventory/Department/{departmentId}\r\n  public deleteDepartmentByDepartmentId(departmentId: string, handleLocalError?: boolean): Observable<boolean> {\r\n    return this.apiService.delete(`${this.runtimeEndpoint}/Inventory/Department/${departmentId}`, handleLocalError);\r\n  }\r\n\r\n  // PATCH /api/Inventory/Department/{departmentId}\r\n  public updateDepartmentByDepartmentId(request: DepartmentDto): Observable<DepartmentDto> {\r\n    return this.apiService.patch(`${this.runtimeEndpoint}/Inventory/Department/${request.id}`, request);\r\n  }\r\n\r\n  // GET /api/Inventory/{groupId}/Assets/{dataTarget}/count\r\n  public getAssetCountByGroup(groupId: string, dataTarget: number, handleLocalError: boolean = false): Observable<number> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/Inventory/${groupId}/Assets/${dataTarget}/count`, null, handleLocalError);\r\n  }\r\n  \r\n   // GET /api/Inventory/Accounts/SearchMetadata\r\n   public getAccountSearchMetadata(): Observable<AssetFileSummaryDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/Inventory/Accounts/SearchMetadata`);\r\n  }\r\n\r\n  // POST /api/Inventory/groups/{groupId}/accounts\r\n  public searchAccountByGroup(groupId: string, searchFilter: BuildingSearchDto): Observable<AccountResponseDto> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/Inventory/groups/${groupId}/accounts`, searchFilter);\r\n  }\r\n   // GET /api/Inventory/Accounts/SearchMetadata\r\n   public getDepartmentSearchMetadata(): Observable<AssetFileSummaryDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/Inventory/Departments/SearchMetadata`);\r\n  }\r\n\r\n  // POST /api/Inventory/groups/{groupId}/accounts\r\n  public searchDepartmentByGroup(groupId: string, searchFilter: BuildingSearchDto): Observable<DepartmentResponseDto> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/Inventory/groups/${groupId}/Departments`, searchFilter);\r\n  }\r\n\r\n  // GET /api/Inventory/{groupId}/Assets/{importTemplateId}/count\r\n  public getDataCountByGroup(groupId: string, importTemplateId: string, handleLocalError: boolean = false): Observable<number> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/Inventory/${groupId}/Data/${importTemplateId}/count`, null, handleLocalError);\r\n  }\r\n// DELETE /api/Inventory/Account/{accountId}\r\n\r\npublic removeDeactivatedItems(groupId: string, type: number, datatarget: string): Observable<any> {\r\n  const url = `${this.runtimeEndpoint}/Inventory/${groupId}/RemoveDeactivatedItems?type=${type}&datatarget=${datatarget}`;\r\n  return this.apiService.delete(url, true);\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { DepreciationSubmissionRequestDto } from '../dtos/depreciation-request.dto';\r\nimport { ProcessingExecutionResult } from '../dtos/processing-execution-result.dto';\r\nimport { ProcessingDetailRequestDto } from '../dtos/processing-detail-request.dto';\r\nimport { ProcessingDetailResponseDto } from '../dtos/processing-detail-response.dto';\r\nimport { ProcessingStatusDto } from '../dtos/processing-status.dto';\r\nimport { ProcessingSubmissionResponseDto } from '../dtos/processing-submission-response.dto';\r\nimport { TrendingRequestDto } from '../dtos/trending-request.dto';\r\n\r\n@Injectable()\r\nexport class ProcessingApiService {\r\n  private runtimeEndpoint = this.configService.getSettings('runtimeApiEndpoint');\r\n\r\n  constructor(private configService: ConfigService, private http: HttpClient, private apiService: ApiService) {}\r\n\r\n  public executeDepreciation(groupId: string, request: DepreciationSubmissionRequestDto):\r\n  Observable<ProcessingExecutionResult> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/Processing/${groupId}/Depreciation/Execute`, request);\r\n  }\r\n\r\n  public getDepreciationResults(groupId: string, request: ProcessingDetailRequestDto):\r\n  Observable<ProcessingDetailResponseDto>{\r\n    return this.apiService.post(`${this.runtimeEndpoint}/Processing/${groupId}/Depreciation/Results`, request);\r\n  }\r\n\r\n  public getProcessingStatus(groupId: string): Observable<ProcessingStatusDto>{\r\n    return this.apiService.get(`${this.runtimeEndpoint}/Processing/${groupId}/Status`);\r\n  }\r\n\r\n  public commitDepreciation(groupId: string): Observable<ProcessingSubmissionResponseDto> {\r\n    return this.apiService.patch(`${this.runtimeEndpoint}/Processing/${groupId}/Depreciation/Commit`);\r\n  }\r\n\r\n    // TODO: Implement ot copy-over remaining service methods\r\n  // GET DepreciationDetail (GroupId, BookId), returns all fields from AssetFileRecordDepreciations and a list of those in error. Should support Take and Skip and return total record count for each.\r\n  // POST CommitDepreciation takes a GroupId and an BookId\r\n  // GET /api/contract/{contractId}/Groups/{groupId}\r\n\r\n  // POST ExecuteTrending: pass TrendingSubmissionRequestDto, called from setup page at run\r\n  public executeTrending(groupId: string, request: TrendingRequestDto): Observable<ProcessingSubmissionResponseDto> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/Processing/${groupId}/Trending/Execute`, request);\r\n  }  \r\n\r\n  public getTrendingResults(groupId: string, request: ProcessingDetailRequestDto): Observable<ProcessingDetailResponseDto>{\r\n    return this.apiService.post(`${this.runtimeEndpoint}/Processing/${groupId}/Trending/Results`, request);\r\n  }\r\n\r\n  public commitTrending(groupId: string): Observable<ProcessingSubmissionResponseDto> {\r\n    return this.apiService.patch(`${this.runtimeEndpoint}/Processing/${groupId}/Trending/Commit`);\r\n  }\r\n}\r\n","import {map} from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { DuplicateCheckRequestDto } from '../dtos/duplicate-check.dto';\r\nimport { DuplicateCheckResponseDto } from '../dtos/duplicate-check-response.dto';\r\nimport { Observable } from 'rxjs';\r\nimport { MassUpdateRequestDto } from '../dtos/mass-update-request.dto';\r\nimport { ApiServiceResult } from '../../dtos/api-service-result.dto';\r\nimport { QualityControlMassUpdateResponseDto } from '../dtos/quality-control-mass-update-response.dto';\r\nimport { QualityControlStatusDto } from '../dtos/quality-control-status.dto';\r\n\r\n@Injectable()\r\nexport class QualityControlApiService {\r\n  private runtimeEndpoint = this.configService.getSettings('runtimeApiEndpoint');\r\n\r\n  constructor(private configService: ConfigService, private http: HttpClient, private apiService: ApiService) {}\r\n\r\n  public duplicateCheck(\r\n    groupId: string,\r\n    request: DuplicateCheckRequestDto,\r\n    field: string = 'description'\r\n  ): Observable<DuplicateCheckResponseDto> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/QualityControl/${groupId}/Duplicates`, request).pipe(map(e => e.entity));\r\n  }\r\n\r\n  public executeMassContentUpdate(\r\n    groupId: string,\r\n    request: MassUpdateRequestDto\r\n  ): Observable<ApiServiceResult<QualityControlMassUpdateResponseDto>> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/QualityControl/${groupId}/MassUpdate`, request);\r\n  }\r\n  public executeMassBuildingsUpdate(\r\n    groupId: string,\r\n    request: MassUpdateRequestDto\r\n  ): Observable<ApiServiceResult<QualityControlMassUpdateResponseDto>> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/QualityControl/${groupId}/BuildingMassUpdate`, request);\r\n  }\r\n\r\n  public getStatus(groupId: string): Observable<QualityControlStatusDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/QualityControl/${groupId}/Status`);\r\n  }\r\n\r\n  public calculateContentCostReproductionNew(\r\n    contentCode: string,\r\n    contentQuality: number,\r\n    floorArea: number,\r\n    localErrorHandling: boolean = true\r\n  ): Observable<ApiServiceResult<string>> {\r\n    return this.apiService.get(\r\n      `${\r\n        this.runtimeEndpoint\r\n      }/QualityControl/ContentCRN?contentCode=${contentCode}&contentQuality=${contentQuality}&floorArea=${floorArea}`,\r\n      null,\r\n      localErrorHandling\r\n    );\r\n  }\r\n\r\n  public calculateBasementFloorArea(\r\n    basementFinishedArea: number,\r\n    basementUnfinishedArea: number,\r\n  ): Observable<ApiServiceResult<string>> {\r\n    return this.apiService.get(\r\n      `${\r\n        this.runtimeEndpoint\r\n      }/QualityControl/BasementFloorArea?basementFinishedArea=${basementFinishedArea}&basementUnfinishedArea=${basementUnfinishedArea}`);\r\n  }\r\n}\r\n","import { ApiService } from '../../services/api.service';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { Injectable } from '@angular/core';\r\nimport { RecipientDto } from '../dtos/recipient.dto';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class RecipientsApiService {\r\n\r\n  private runtimeEndpoint = this.configService.getSettings(\r\n    'runtimeApiEndpoint'\r\n  );\r\n\r\n  constructor(\r\n    private configService: ConfigService,\r\n    private apiService: ApiService\r\n  ) {}\r\n\r\n  // GET /api/recipient/group/{groupId}\r\n  public getRecipientsByGroupId(groupId: string): Observable<Array<RecipientDto>> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/recipient/group/${groupId}`);\r\n  }\r\n\r\n  // POST /api/recipient/group/{groupId}\r\n  public createRecipient(groupId: string, dto: RecipientDto): Observable<Array<RecipientDto>> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/recipient/group/${groupId}`, dto);\r\n  }\r\n\r\n  // PUT /api/recipient/{recipientId}/group/{groupId}\r\n  public updateRecipient(recipientId: string, groupId: string,\r\n    dto: RecipientDto): Observable<Array<RecipientDto>> {\r\n\r\n    return this.apiService.put(`${this.runtimeEndpoint}/recipient/${recipientId}/group/${groupId}`, dto);\r\n  }\r\n\r\n  // DELETE /api/recipient/{recipientId}\r\n  public deleteRecipient(recipientId: string): Observable<Array<RecipientDto>> {\r\n    return this.apiService.delete(`${this.runtimeEndpoint}/recipient/${recipientId}`);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiServiceResult } from '../../dtos/api-service-result.dto';\r\nimport { ReportDto } from '../dtos/reporting/report.dto';\r\nimport { ReportDeliverable } from '../dtos/reporting/report-deliverable.dto';\r\nimport { DeliverableRequestDetailDto } from '../dtos/reporting/report-filter-options.dto';\r\nimport { ReportInfoDto } from '../dtos/reporting/report-info.dto';\r\nimport { ReportType } from '../enums/report-type';\r\nimport { MetadataDto } from '../dtos/reporting/report-metadata.dto';\r\nimport {map, tap} from 'rxjs/operators';\r\nimport { GroupMetadataDto } from '../dtos/reporting/report-group.metadata.dto';\r\n\r\n\r\n@Injectable()\r\nexport class ReportsApiService {\r\n\r\n  private runtimeEndpoint = this.configService.getSettings(\r\n    'runtimeApiEndpoint'\r\n  );\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private configService: ConfigService\r\n  ) {}\r\n\r\n  // GET /api/Reports/AvailableDeliverables\r\n  public getAvailableReportsByGroupId(groupId: string, isPowerBi: boolean): Observable<ApiServiceResult<Array<ReportDto>>> {\r\n    return this.apiService\r\n    .get(`${this.runtimeEndpoint}/reports/AvailableDeliverables?groupId=${groupId}&isPowerBi=${isPowerBi}&isPortal=false`);\r\n  }\r\n\r\n  // POST /api/Reports/AvailableDeliverables\r\n  public getAvailableReportsByGroupIdAndMetadata(groupId: string, isPowerBi: boolean, selectedMetadata: Array<MetadataDto>): Observable<Array<ReportDto>> {\r\n      return this.apiService\r\n      .post(`${this.runtimeEndpoint}/reports/AvailableDeliverables?groupId=${groupId}&isPowerBi=${isPowerBi}&isPortal=false`,selectedMetadata)\r\n      .pipe(map(c => c.result));\r\n  }\r\n\r\n  // GET /api/Reports/Metadata\r\n  public getReportMetadata(groupId: string): Observable<MetadataDto[]> {\r\n        return this.apiService\r\n        .get(`${this.runtimeEndpoint}/reports/Metadata?groupId=${groupId}&isPortal=false` )\r\n        .pipe(map(c => c.result));\r\n  }\r\n\r\n    // GET /api/Reports/Metadata\r\n    public getReportMetadataByGroupId(groupId: string): Observable<MetadataDto[]> {\r\n      return this.apiService\r\n      .get(`${this.runtimeEndpoint}/reports/MetadataByGroupId?groupId=${groupId}&isPortal=false` )\r\n      .pipe(map(c => c.result));\r\n}\r\n   // GET /api/Reports/GroupMetadata\r\n   public getGropuMetadataByGroupId(groupId: string): Observable<GroupMetadataDto[]> {\r\n    return this.apiService\r\n    .get(`${this.runtimeEndpoint}/reports/GroupMetadata?groupId=${groupId}&isPortal=false` )\r\n    .pipe(map(c => c.result));\r\n} \r\n\r\n  // POST /api/Reports/GroupMetadata\r\n  public createGroupMetadata(groupId: string,metadata: Array<MetadataDto>): Observable<GroupMetadataDto[]> {\r\n    return this.apiService\r\n    .post(`${this.runtimeEndpoint}/reports/GroupMetadata?groupId=${groupId}&isPortal=false`,metadata )\r\n    \r\n}\r\n\r\n// POST /api/Reports/GroupMetadata\r\npublic deleteGroupMetadata(groupId: string,metadata: Array<MetadataDto>): Observable<GroupMetadataDto[]> {\r\n  return this.apiService\r\n  .post(`${this.runtimeEndpoint}/reports/DeleteGroupMetadata?groupId=${groupId}&isPortal=false`,metadata )\r\n  \r\n}\r\n  // Get /api/Reports/Deliverables\r\n  public getRequestedDeliverablesByGroupId(groupId: string): Observable<Array<ReportDeliverable>> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/reports/Deliverables?groupId=${groupId}`);\r\n  }\r\n\r\n  // Post /api/Reports/Deliverable\r\n  public requestDeliverable(groupId: string, reportId: string,\r\n    details: DeliverableRequestDetailDto): Observable<ReportDeliverable> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/reports/Deliverable?groupId=${groupId}&reportId=${reportId}`,\r\n    details);\r\n  }\r\n\r\n  public getReportFilterMetadata(groupId: string, reportId: string){\r\n    return this.apiService.get(`${this.runtimeEndpoint}/reports/filterOptions?groupId=${groupId}&isPortal=false&reportId=${reportId}`);\r\n  }\r\n\r\n  public GetDefaultDashboard(groupId: string): Observable<ReportInfoDto> {\r\n    return this.getDashboardInfo(groupId, null);\r\n  }\r\n\r\n  public GetReportOrDashboardInfo(groupId: string, reportId: string, type: ReportType) {\r\n    if (type === ReportType.PowerBi) {\r\n      return this.getReportInfo(groupId, reportId);\r\n    }\r\n    if (type === ReportType.PowerBiDashboard) {\r\n      return this.getDashboardInfo(groupId, reportId);\r\n    }\r\n  }\r\n\r\n  // GET /api/Reports/Dashboard\r\n  private getDashboardInfo(groupId: string, reportId: string): Observable<ReportInfoDto> {\r\n    let params = `?portalId=${groupId}`;\r\n    if (reportId) {\r\n      params += `&reportId=${reportId}`;\r\n    }\r\n    return this.apiService.get(`${this.runtimeEndpoint}/reports/Dashboard${params}`);\r\n  }\r\n\r\n  // Get /api/Report/Report\r\n  private getReportInfo(groupId: string, reportId: string): Observable<ReportInfoDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/reports/Report?portalId=${groupId}&reportId=${reportId}`);\r\n  }\r\n\r\n  public deleteReport(groupId: string, reportId: string): Observable<ReportInfoDto> {\r\n    return this.apiService.delete(`${this.runtimeEndpoint}/reports/DeleteReport?groupOrPortalId=${groupId}&id=${reportId}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { GroupSettingDto } from '../dtos/group-setting.dto';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class SettingsApiService {\r\n  private runtimeEndpoint = this.configService.getSettings('runtimeApiEndpoint');\r\n\r\n  constructor(private configService: ConfigService, private http: HttpClient, private apiService: ApiService) {}\r\n\r\n  public create(dto: GroupSettingDto): Observable<GroupSettingDto> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/GroupSettings`, dto, null, true);\r\n  }\r\n\r\n  public update(id: string, dto: GroupSettingDto): Observable<GroupSettingDto> {\r\n    return this.apiService.patch(`${this.runtimeEndpoint}/Settings/${id}`, dto, true);\r\n  }\r\n\r\n  public delete(id: string): Observable<boolean> {\r\n    return this.apiService.delete(`${this.runtimeEndpoint}/Settings/${id}`, true);\r\n  }\r\n\r\n  public getSetting(id: string): Observable<GroupSettingDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/settings/group/${id}`, null, true);\r\n  }\r\n\r\n  public getSettingsByGroupId(groupId: string) {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/settings/group/${groupId}`, null, true);\r\n  }\r\n\r\n  public getSettingsByGroupIdSettingType(groupId: string, settingType: number) {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/settings/group/${groupId}/${settingType}`, null, true);\r\n  }\r\n\r\n  public getSettingsByGroupIdUserId(groupId: string, userId: string) {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/settings/group/${groupId}/User/${userId}`, null, true);\r\n  }\r\n\r\n  public getSettingsByGroupIdUserIdSettingType(groupId: string, userId: string, settingType: number) {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/settings/group/${groupId}/User/${userId}/${settingType}`, null, true);\r\n  }\r\n\r\n  public getSettingsByUserId(userId: string) {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/settings/user/${userId}`, null, true);\r\n  }\r\n\r\n  public getSettingsByUserIdSettingType(userId: string, settingType: number) {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/settings/user/${userId}/${settingType}`, null, true);\r\n  }\r\n}\r\n","import { FamisViewModelDto } from '../dtos/famis-view-model.dto';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ViewModelsApiService {\r\n  private runtimeEndpoint = this.configService.getSettings('runtimeApiEndpoint');\r\n\r\n  constructor(private configService: ConfigService, private http: HttpClient, private apiService: ApiService) {}\r\n\r\n  getSubProfileForGroup(groupId: string): Observable<FamisViewModelDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/ViewModels/SubProfile/${groupId}`);\r\n  }\r\n\r\n  getMainProfileForGroup(groupId: string): Observable<FamisViewModelDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/ViewModels/MainProfile/${groupId}`);\r\n  }\r\n\r\n  getDepreciationForGroup(groupId: string): Observable<FamisViewModelDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/ViewModels/Depreciation/${groupId}`);\r\n  }\r\n \r\n  getProcessingInstructionsForGroup(groupId: string): Observable<FamisViewModelDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/ViewModels/ProcessingInstructions/${groupId}`);\r\n  }\r\n\r\n  getProcessingShippingInstructionsForGroup(groupId: string): Observable<FamisViewModelDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/ViewModels/ShippingInstructions/${groupId}`);\r\n  }\r\n\r\n  // TODO: Implement ot copy-over remaining service methods\r\n\r\n  // POST /api/ViewModels/MainProfile/{groupId}\r\n  // POST /api/ViewModels/SubProfile/{groupId}\r\n  // POST /api/ViewModels/ProcessingInstructions/{groupId}\r\n  // POST /api/ViewModels/ShippingInstructions/{groupId}\r\n\r\n}\r\n","export class AssetFieldDto {\r\n  constructor(public name: string, public value: string) {}\r\n}\r\n","export class AssignWorkflowTaskDto {\r\n  constructor(\r\n    public workflowTaskId?: string,\r\n    public assignedUserId?: string,\r\n    public assignedTeamId?: string,\r\n    public escalationDays?: number,\r\n    public escalationUserId?: string,\r\n    public escalationTeamId?: string\r\n  ) {}\r\n}\r\n","export class CreateAssetFileCustomColumnDto {\r\n  public columnName: string;\r\n  public dataType: number;\r\n\r\n  constructor(\r\n  columnName: string,\r\n  customFieldType: number) {\r\n    this.columnName = columnName;\r\n    this.dataType = customFieldType;\r\n  }\r\n}\r\n","import { SpreadsheetColumnDto } from './spreadsheet-column.dto';\r\nimport { HeaderRow } from '../../_models/header-row.model';\r\nimport { DataTargetDescription } from '../../_models/data-target-description.model';\r\n\r\nexport class ExcelSummaryDto {\r\n\r\n    constructor(\r\n        public id: string,\r\n        public spreadsheetColumns: Array<SpreadsheetColumnDto>,\r\n        public spreadsheetFileName: string,\r\n        public headerRow: HeaderRow,\r\n        public dataTargetDescription: DataTargetDescription,\r\n        public importErrors: Array<string>\r\n    ) { }\r\n}\r\n","export class ImportResultDto {\r\n\r\n    constructor(\r\n        public success?: boolean,\r\n        public rowsAdded?: number,\r\n        public rowsUpdated?: number,\r\n        public errors?: string[],\r\n        public name?: string\r\n    ) { }\r\n}\r\n","import { SpreadSheetMappingDto } from '../../_models/spread-sheet-mapping.dto';\r\n\r\nexport class ImportSpreadsheetDto {\r\n\r\n    constructor(\r\n        public id: string,\r\n        public groupId: string,\r\n        public importTemplateId: string,\r\n        public rows: number,\r\n        public mapping: SpreadSheetMappingDto\r\n    ) { }\r\n}\r\n","export class ReconcilationMassMatchDto {\r\n  constructor (\r\n    public primaryAssetRecordId: string,\r\n    public secondaryAssetRecordId: string,\r\n    public isOneToOne: Boolean,\r\n    public matchCodeId: string\r\n  ) {}\r\n}\r\n","import { ReconciliationAllocationDto } from './reconcilation-allocation.dto';\r\n\r\nexport class SetAllocationMatchCodeDto {\r\n  constructor(public assetRecordId: string, public matchCodeId: string, public allocations: Array<ReconciliationAllocationDto>) { }\r\n}\r\n","export class SetParentChildMatchDto {\r\n  constructor(public parentAssetFileRecordId: string, public assetFileRecordIds: string[]) { }\r\n}\r\n","export class SetSingleMatchCodeDto {\r\n  constructor(public assetRecordId: string, public matchCodeId: string) {}\r\n}\r\n","export class SpreadsheetColumnDto {\r\n\r\n    constructor(\r\n        public name: string,\r\n        public title: string,\r\n        public sampleData: string\r\n    ) { }\r\n}","export class UploadSpreadsheetDto {\r\n\r\n    constructor(\r\n        public groupId?: string,\r\n        public dataTargetId?: string,\r\n        public dataTargetName?: string,\r\n        public projectid?: string,\r\n        public localeId?: string,\r\n        public file?: File,\r\n        public fileName?: string\r\n    ) { }\r\n}\r\n","\r\nimport {map} from 'rxjs/operators';\r\nimport { ApiService } from '../api.service';\r\nimport { CountryDto } from '../../dtos/country.dto';\r\n\r\nimport { TemplateBaseDto } from '../../dtos/template-management/template-base.dto';\r\nimport { SetTemplateIsRetiredDto } from '../../dtos/template-management/set-template-isretired.dto';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class TemplateRepositoryService {\r\n  runtimeEndpoint = this.configService.getSettings('runtimeApiEndpoint');\r\n  configurationEndpoint = this.configService.getSettings('configurationApiEndpoint');\r\n\r\n  constructor(private apiService: ApiService, private configService: ConfigService) {}\r\n\r\n  getAll(): Observable<Array<TemplateBaseDto>> {\r\n    return this.apiService.get(`${this.configurationEndpoint}/templates`);\r\n  }\r\n\r\n  get(id: string): Observable<any> {\r\n    return this.apiService.get(`${this.configurationEndpoint}/templates/${id}`);\r\n  }\r\n\r\n  delete(id: string): Observable<any> {\r\n    return this.apiService.delete(`${this.configurationEndpoint}/templates/${id}`);\r\n  }\r\n\r\n  create(template): Observable<TemplateBaseDto> {\r\n    return this.apiService.post(`${this.configurationEndpoint}/Templates`, template).pipe(map(data => data));\r\n  }\r\n\r\n  update(template): Observable<TemplateBaseDto> {\r\n    return this.apiService.put(`${this.configurationEndpoint}/Templates`, template).pipe(map(data => data));\r\n  }\r\n\r\n  retire(templateId: string, isRetired: string): Observable<SetTemplateIsRetiredDto> {\r\n    // TODO: This isn't the correct path, nor payload. Validate when the method exists.\r\n    return this.apiService.patch(`${this.configurationEndpoint}/Templates/${templateId}/retire?isRetired=${isRetired}`);\r\n  }\r\n}\r\n","import { AlertService } from '../../_core/services/alert.service';\r\nimport { AuthenticationManager } from '../../_core/authentication/authentication.manager';\r\nimport { HttpErrorResponse, HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { IdleTimeoutService } from '../../_core/services/idle-timeout.service';\r\nimport { Observable, EMPTY, throwError, BehaviorSubject, Subject } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nexport interface HttpError {\r\n  status: number;\r\n  json: Function;\r\n}\r\n\r\n// TODO: Update this to have Observables of type T rather than type any\r\n@Injectable()\r\nexport class ApiService {\r\n  static timeoutValue: number;\r\n  private _isBusy = new BehaviorSubject<Array<number>>([]);\r\n\r\n  private readonly adalConfig = this.authManager.getAdalConfig();\r\n  public isBusy$ = this._isBusy.asObservable();\r\n  private defaultTimeoutValue = 15;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authManager: AuthenticationManager,\r\n    private alertService: AlertService,\r\n    private router: Router) {\r\n      sessionStorage.setItem('isTimerTriggered', 'false');\r\n      sessionStorage.setItem('busyCounter', '0');\r\n    }\r\n\r\n  private addIsBusy(): number {\r\n    const current = this._isBusy.getValue();\r\n    const counter = parseInt(sessionStorage.getItem('busyCounter')) + 1;\r\n    sessionStorage.setItem('busyCounter', counter.toString());\r\n    const id = counter;\r\n    current.push(id);\r\n    this._isBusy.next(current);\r\n    return id;\r\n  }\r\n\r\n  private removeIsBusy(id: number): void {\r\n    const current = this._isBusy.getValue();\r\n    const index = current.findIndex(c => c === id);\r\n    if (index !== -1) {\r\n      current.splice(index, 1);\r\n      this._isBusy.next(current);\r\n    }\r\n  }\r\n\r\n  public get(path: string, params: HttpParams = new HttpParams(), localErrorHandling = false): Observable<any> {\r\n    const result = new Subject<any>();\r\n\r\n    const id = this.addIsBusy();\r\n\r\n    this.setHeaders(false).subscribe((headers: HttpHeaders) => {\r\n      this.http\r\n        .get(path, { headers: headers, params: params })\r\n        .pipe(catchError(error => this.handleErrors(error, localErrorHandling, id)))\r\n        .subscribe(\r\n          (data: any) => {\r\n            this.removeIsBusy(id);\r\n            // moving it here before the API result is broadcasted to the subscribers but, has been receieved from over the network.\r\n            result.next(data);\r\n          },\r\n          error => {\r\n            result.error(error);\r\n          },\r\n          () => {\r\n            this.removeIsBusy(id);\r\n            result.complete();\r\n          }\r\n        );\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  public put(path: string, body: Object = {}, localErrorHandling: boolean = false): Observable<any> {\r\n    const result = new Subject<any>();\r\n\r\n    const id = this.addIsBusy();\r\n\r\n    this.setHeaders().subscribe((headers: HttpHeaders) => {\r\n      this.http\r\n        .put(path, JSON.stringify(body), { headers: headers })\r\n        .pipe(catchError(error => this.handleErrors(error, localErrorHandling, id)))\r\n        .subscribe(\r\n          (data: any) => {\r\n            this.removeIsBusy(id);\r\n            result.next(data);\r\n          },\r\n          error => {\r\n            result.error(error);\r\n          },\r\n          () => {\r\n            this.removeIsBusy(id);\r\n            result.complete();\r\n          }\r\n        );\r\n    });\r\n    return result;\r\n  }\r\n\r\n  public patch(path: string, body: Object = {}, localErrorHandling: boolean = false): Observable<any> {\r\n    const result = new Subject<any>();\r\n\r\n    const id = this.addIsBusy();\r\n\r\n    this.setHeaders().subscribe((headers: HttpHeaders) => {\r\n      this.http\r\n        .patch(path, JSON.stringify(body), { headers: headers })\r\n        .pipe(catchError(error => this.handleErrors(error, localErrorHandling, id)))\r\n        .subscribe(\r\n          (data: any) => {\r\n            this.removeIsBusy(id);\r\n            result.next(data);\r\n          },\r\n          error => {\r\n            result.error(error);\r\n          },\r\n          () => {\r\n            this.removeIsBusy(id);\r\n            result.complete();\r\n          }\r\n        );\r\n    });\r\n    return result;\r\n  }\r\n\r\n  public post(path: string, body: any, file?: File, localErrorHandling: boolean = false): Observable<any> {\r\n    let dataToPost: FormData | string;\r\n    let isFileUpload = false;\r\n\r\n    const id = this.addIsBusy();\r\n\r\n    if (file) {\r\n      dataToPost = new FormData();\r\n      dataToPost.append('file[]', file, file.name);\r\n      isFileUpload = true;\r\n    } else {\r\n      dataToPost = JSON.stringify(body);\r\n    }\r\n\r\n    const result = new Subject<any>();\r\n\r\n    this.setHeaders(isFileUpload).subscribe((headers: HttpHeaders) => {\r\n      this.http\r\n        .post(path, dataToPost, { headers: headers })\r\n        .pipe(catchError(error => this.handleErrors(error, localErrorHandling, id)))\r\n        .subscribe(\r\n          (data: any) => {\r\n            this.removeIsBusy(id);\r\n            result.next(data);\r\n          },\r\n          error => {\r\n            result.error(error);\r\n          },\r\n          () => {\r\n            this.removeIsBusy(id);\r\n            result.complete();\r\n          }\r\n        );\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  public delete(path: string, localErrorHandling: boolean = false): Observable<any> {\r\n    const result = new Subject<any>();\r\n\r\n    const id = this.addIsBusy();\r\n\r\n    this.setHeaders().subscribe((headers: HttpHeaders) => {\r\n      this.http\r\n        .delete(path, { headers: headers })\r\n        .pipe(catchError(error => this.handleErrors(error, localErrorHandling, id)))\r\n        .subscribe(\r\n          (data: any) => {\r\n            this.removeIsBusy(id);\r\n            result.next(data);\r\n          },\r\n          error => {\r\n            result.error(error);\r\n          },\r\n          () => {\r\n            this.removeIsBusy(id);\r\n            result.complete();\r\n          }\r\n        );\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  private setHeaders(isFileUpload: boolean = false): Observable<HttpHeaders> {\r\n    const result = new Subject<HttpHeaders>();\r\n    const headersConfig = {};\r\n\r\n    if (!isFileUpload) {\r\n      headersConfig['Content-Type'] = `application/json`;\r\n      headersConfig['Accept'] = `application/json`;\r\n    } else {\r\n      headersConfig['Accept'] = `application/json`;\r\n    }\r\n\r\n    // TODO: Handle error case (once this.authService.acccessToken handles error case)\r\n    this.authManager.getToken(false, null).subscribe((token: string) => {\r\n      headersConfig['Authorization'] = `Bearer ${token}`;\r\n      result.next(new HttpHeaders(headersConfig));\r\n      result.complete();\r\n    });\r\n    return result.asObservable();\r\n  }\r\n\r\n  private handleErrors(error: HttpErrorResponse, localErrorHandling: boolean, id: number) {\r\n\r\n    this.removeIsBusy(id);\r\n\r\n    if (!localErrorHandling || error.status === 403) {\r\n      switch (error.status) {\r\n        case 400:\r\n          window.location.href = '/error/400';\r\n          break;\r\n        case 401:\r\n          this.authManager.forgetAdal();\r\n          window.location.href = '/error/401';\r\n          break;\r\n        case 403:\r\n        this.authManager.handleAuthenticationError(error);\r\n         //window.location.href = '/error/403';\r\n         this.router.navigate(['/error/403'])\r\n          break;\r\n        case 404:\r\n          window.location.href = '/error/404';\r\n          break;\r\n        case 409:\r\n          window.location.href = '/error/409';\r\n          break;\r\n        case 458:\r\n          this.databaseError(error);\r\n          break;\r\n        default:\r\n          window.location.href = '/error/500';\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (error.status === 458) {\r\n      this.databaseError(error);\r\n    }\r\n\r\n    return throwError(error);\r\n  }\r\n\r\n  private databaseError(error: HttpErrorResponse) {\r\n    if (!!error.error) {\r\n      const errorMsgs = error.error.split('.');\r\n      errorMsgs.forEach(msg => {\r\n        if (msg.length > 1) {\r\n          const result = msg.split(' ');\r\n          const fieldName = result[2];\r\n          const fieldLength = result[15];\r\n          this.alertService.error('{{name}} has exceeded it\\'s maximum length of {{length}}', null, {\r\n            name: fieldName,\r\n            length: fieldLength\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","\r\nimport {map} from 'rxjs/operators';\r\n\r\nimport { ApiService } from './api.service';\r\nimport { CountryDto } from '../dtos/country.dto';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class CountryRepositoryService {\r\n  runtimeEndpoint = this.configService.getSettings('runtimeApiEndpoint');\r\n  configurationEndpoint = this.configService.getSettings('configurationApiEndpoint');\r\n\r\n  constructor(private apiService: ApiService, private configService: ConfigService) {}\r\n\r\n  getAll(): Observable<Array<CountryDto>> {\r\n    return this.apiService\r\n      .get(`${this.configurationEndpoint}/Countries`).pipe(\r\n      map(data => <Array<CountryDto>>data),\r\n      map(data => {\r\n        data.sort((a, b): number => {\r\n          if (a.name < b.name) {\r\n            return -1;\r\n          }\r\n          if (a.name > b.name) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n        return data;\r\n      }),);\r\n  }\r\n}\r\n","\r\nimport {map} from 'rxjs/operators';\r\n\r\nimport {ApiService } from './api.service';\r\nimport { SupportedCustomColumnDataTypeDto } from '../dtos/shared/supported-custom-column-datatype.dto';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class CustomDataTypesRepository {\r\n\r\n  constructor(private apiService: ApiService, private configService: ConfigService){}\r\n  runtimeEndpoint = this.configService.getSettings('runtimeApiEndpoint');\r\n  configurationEndpoint = this.configService.getSettings('configurationApiEndpoint');\r\n\r\n  getCustomColumnDataTypes(): Observable<Array<SupportedCustomColumnDataTypeDto>> {\r\n    return this.apiService\r\n      .get(`${this.configurationEndpoint}/ImportTemplates/CustomColumns/DataTypes`).pipe(\r\n      map(data => <Array<SupportedCustomColumnDataTypeDto>> data));\r\n  }\r\n\r\n\r\n}","\r\nimport {map, catchError} from 'rxjs/operators';\r\n\r\nimport { ApiService } from '../api.service';\r\nimport { ContractsGroupSummaryDto } from '../../dtos/shared/contracts-groups-summary.dto';\r\nimport { ContractSummaryDto } from '../../dtos/contract-summary.dto';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { Observable } from 'rxjs';\r\nimport * as moment from 'moment';\r\n\r\n@Injectable()\r\nexport class ContractService {\r\n  runtimeEndpoint = this.configService.getSettings('runtimeApiEndpoint');\r\n  minDate = moment.utc('1900-01-02');\r\n  constructor(private apiService: ApiService, private configService: ConfigService) {}\r\n\r\n  public getContractGroupsByGroupId(contractId: string, groupId: string): Observable<ContractsGroupSummaryDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/contract/${contractId}/groups/${groupId}`);\r\n  }\r\n\r\n  public getContractsGroups(id: string): Observable<ContractsGroupSummaryDto[]> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/contract/${id}/groups`);\r\n  }\r\n\r\n  public getContracts(): Observable<ContractSummaryDto[]> {\r\n    return this.apiService\r\n      .get(`${this.runtimeEndpoint}/contract/`).pipe(\r\n      map(result =>\r\n        result.map(dto => {\r\n          const contract = <ContractSummaryDto>{\r\n            id: dto.id,\r\n            client: dto.client,\r\n            opportunityName: dto.opportunityName,\r\n            office: dto.office,\r\n            country: dto.country,\r\n            industry: dto.industry,\r\n            projectCode: dto.projectCode,\r\n            service: dto.service,\r\n            billingDirector: dto.billingDirector,\r\n            performingMd: dto.performingMd,\r\n            groupIds: dto.groupIds,\r\n            createdFromSalesforce: this.formatDateTime(dto.createdFromSalesforce)\r\n          };\r\n          return contract;\r\n        })\r\n      ))\r\n      .pipe(catchError(err => {\r\n        return [];\r\n      }));\r\n  }\r\n  public formatDateTime(inputDate: string): string {\r\n    if (!moment(inputDate).isValid() || moment.utc(inputDate).isBefore(this.minDate)) {\r\n      return '';\r\n    }\r\n    return moment.utc(inputDate).format('MM/DD/YYYY hh:mm');\r\n  }\r\n}\r\n","import { ImportTemplateDto } from '../../dtos/data-import/import-template.dto';\r\n\r\nimport { ApiService } from '../api.service';\r\nimport { ImportSpreadsheetDto } from '../../dtos/import-spreadsheet.dto';\r\nimport { SupportedCustomColumnDataTypeDto } from '../../dtos/shared/supported-custom-column-datatype.dto';\r\nimport { UploadSpreadsheetDto } from '../../dtos/upload-spreadsheet.dto';\r\nimport { ExcelSummaryDto } from '../../dtos/excel-summary.dto';\r\nimport { ImportResultDto } from '../../dtos/import-result.dto';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ImportMode } from '../../../_enums/import-mode';\r\nimport { ColumnMap } from '../../../_models/column-map.model';\r\n\r\n@Injectable()\r\nexport class DataImportRepository {\r\n  runtimeEndpoint = this.configService.getSettings('runtimeApiEndpoint');\r\n  configurationEndpoint = this.configService.getSettings('configurationApiEndpoint');\r\n\r\n  constructor(private apiService: ApiService, private configService: ConfigService) {}\r\n\r\n  getReviewData(dto: ImportSpreadsheetDto): Observable<any> {\r\n    const spreadsheetMappings = new Array<any>();\r\n\r\n    dto.mapping.SpreadsheetMappings.forEach(item => {\r\n      if (item.importTemplateColumnId) {\r\n        spreadsheetMappings.push({\r\n          SpreadsheetColumn: item.spreadsheetColumn.name,\r\n          DataTargetField: item.dataTargetField,\r\n          ImportTemplateColumnId: item.importTemplateColumnId,\r\n          IsCustom: item.isCustom,\r\n          DataType: item.columnDataType\r\n        });\r\n      }\r\n    });\r\n\r\n    const spreadsheetMappingDto = {\r\n      Mode: dto.mapping.Mode,\r\n      SpreadsheetMappings: spreadsheetMappings,\r\n      UniqueIdentifierColumn: null\r\n    };\r\n\r\n    if (dto.mapping.Mode === ImportMode.AddOrUpdate) {\r\n      spreadsheetMappingDto.UniqueIdentifierColumn = {\r\n        SpreadsheetColumn: dto.mapping.UniqueIdentifierColumn.spreadsheetColumn.name,\r\n        DataTargetField: dto.mapping.UniqueIdentifierColumn.dataTargetField,\r\n        ImportTemplateColumnId: dto.mapping.UniqueIdentifierColumn.importTemplateColumnId,\r\n        IsCustom: dto.mapping.UniqueIdentifierColumn.isCustom,\r\n        DataType: dto.mapping.UniqueIdentifierColumn.columnDataType\r\n      };\r\n    }\r\n\r\n    return this.apiService.post(\r\n      `${this.runtimeEndpoint}/Inventory/AssetFiles/Preview?id=${dto.id}&clientId=1&groupId=${dto.groupId}&importTemplateId=${\r\n        dto.importTemplateId\r\n      }&rows=${dto.rows}`,\r\n      spreadsheetMappingDto, null, true\r\n    );\r\n  }\r\n\r\n  getDataTargets(): Observable<ImportTemplateDto[]> {\r\n    return this.apiService.get(`${this.configurationEndpoint}/ImportTemplates/FAMIS`);\r\n  }\r\n\r\n  getDataTargetsForGroup(grougId: string): Observable<ImportTemplateDto[]> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/ImportTemplates/${grougId}/GroupImportTemplates?isPortal=${false}`);\r\n  }\r\n\r\n  getCustomColumnDataTypes(): Observable<SupportedCustomColumnDataTypeDto[]> {\r\n    return this.apiService.get(`${this.configurationEndpoint}/ImportTemplates/CustomColumns/DataTypes`);\r\n  }\r\n\r\n  getCustomColumns(groupId: string, dataTargetName: string): Observable<Array<ColumnMap>> {\r\n    return this.apiService\r\n    .get(`${this.runtimeEndpoint}/Inventory/AssetFiles/ExistingCustomColumnMaps?groupId=${groupId}&dataTarget=${dataTargetName}`);\r\n  }\r\n\r\n  uploadSpreadsheet(dto: UploadSpreadsheetDto, importTemplateId: string): Observable<ExcelSummaryDto> {\r\n    return this.apiService.post(\r\n      `${this.runtimeEndpoint}/Inventory/AssetFiles/Upload?groupId=${dto.groupId}&importTemplateId=${importTemplateId}`,\r\n      dto,\r\n      dto.file\r\n    , true);\r\n  }\r\n\r\n  importSpreadsheet(dto: ImportSpreadsheetDto): Observable<ImportResultDto> {\r\n    const spreadsheetMappings = new Array<any>();\r\n\r\n    dto.mapping.SpreadsheetMappings.forEach(item => {\r\n      if (item.importTemplateColumnId) {\r\n        spreadsheetMappings.push({\r\n          SpreadsheetColumn: item.spreadsheetColumn.name,\r\n          DataTargetField: item.dataTargetField,\r\n          ImportTemplateColumnId: item.importTemplateColumnId,\r\n          IsCustom: item.isCustom,\r\n          DataType: item.columnDataType\r\n        });\r\n      }\r\n    });\r\n\r\n    const spreadsheetMappingDto = {\r\n      Mode: dto.mapping.Mode,\r\n      SpreadsheetMappings: spreadsheetMappings,\r\n      UniqueIdentifierColumn: null\r\n    };\r\n\r\n    if (dto.mapping.Mode === ImportMode.AddOrUpdate) {\r\n      spreadsheetMappingDto.UniqueIdentifierColumn = {\r\n        SpreadsheetColumn: dto.mapping.UniqueIdentifierColumn.spreadsheetColumn.name,\r\n        DataTargetField: dto.mapping.UniqueIdentifierColumn.dataTargetField,\r\n        ImportTemplateColumnId: dto.mapping.UniqueIdentifierColumn.importTemplateColumnId,\r\n        IsCustom: dto.mapping.UniqueIdentifierColumn.isCustom,\r\n        DataType: dto.mapping.UniqueIdentifierColumn.columnDataType\r\n      };\r\n    }\r\n\r\n    return this.apiService.patch(\r\n      `${this.runtimeEndpoint}/inventory/assetfiles/complete?id=${dto.id}&groupId=${dto.groupId}&importTemplateId=${\r\n        dto.importTemplateId\r\n      }&rows=${dto.rows}`,\r\n      spreadsheetMappingDto\r\n    );\r\n  }\r\n}\r\n","\r\nimport {map, tap} from 'rxjs/operators';\r\n\r\nimport { of, Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApiService } from './api.service';\r\nimport { Group } from '../../_models/group';\r\nimport { ContractGroupDto } from '../_runtime/dtos/contract-group.dto';\r\nimport { GroupSearchResultDto } from '../_runtime/dtos/group-search-result.dto';\r\n\r\n@Injectable()\r\nexport class GroupSearchService {\r\n\r\n  runtimeEndpoint = this.configService.getSettings('runtimeApiEndpoint');\r\n\r\n  constructor(\r\n      private configService: ConfigService,\r\n      private http: HttpClient,\r\n      private apiService: ApiService\r\n    ) {\r\n  }\r\n\r\n  getGroup(id: string): Observable<Group> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/group/${id}`);\r\n  }\r\n\r\n  getGroups(): Observable<Group[]> {\r\n    const groupGetAllUrl = this.runtimeEndpoint + '/group';\r\n    return this.http.get(groupGetAllUrl).pipe(tap(console.log)).pipe(map(response => <Group[]>response.json));\r\n  }\r\n\r\n  public getContractGroup(id: string): Observable<ContractGroupDto> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/group/${id}/ContractGroup`).pipe(map(response => <ContractGroupDto>response));\r\n  }\r\n\r\n  searchGroups(query: string, includeContractSearch: boolean): Observable<GroupSearchResultDto[]> {\r\n\r\n    if (query === '') {\r\n      return of([]);\r\n    }\r\n\r\n    let path = `${this.runtimeEndpoint}/group/search`;\r\n    if (includeContractSearch) {\r\n      path += `/contract`;\r\n    }\r\n    const url = path + `?query=${query}`;\r\n\r\n    return this.apiService.get(url).pipe(\r\n    map(response => <GroupSearchResultDto[]>response));\r\n  }\r\n}\r\n","\r\nimport {map} from 'rxjs/operators';\r\nimport { ApiService } from '../api.service';\r\n\r\nimport { FieldMetaDataDto } from '../../dtos/inventory/field-meta-data.dto';\r\nimport { SearchRequestDto } from '../../dtos/inventory/search-request.dto';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { Observable } from 'rxjs';\r\nimport { SearchResponseDto } from '../../dtos/inventory/search-response.dto';\r\n\r\n@Injectable()\r\nexport class InventorySearchRepository {\r\n  runtimeEndpoint = this.configService.getSettings('runtimeApiEndpoint');\r\n\r\n  constructor(private apiService: ApiService, private configService: ConfigService) {}\r\n\r\n  search(dataTarget: number, groupId: string, excludeNullProps: boolean): Observable<FieldMetaDataDto[]> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/Inventory/${groupId}/SearchMetadata/${dataTarget}/${excludeNullProps}`).pipe(map(c => c.fields));\r\n  }\r\n\r\n  searchAssetsMassMatch(groupId: string, searchFilter: SearchRequestDto): Observable<SearchResponseDto> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/Inventory/${groupId}/Assets/MassMatch`, searchFilter, null, true);\r\n  }\r\n}\r\n","import { ApiService } from './api.service';\r\nimport { ModuleDto } from '../dtos/module.dto';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ConfigService } from '@ngx-config/core';\r\n\r\n@Injectable()\r\nexport class ModuleRepositoryService {\r\n  runtimeEndpoint = this.configService.getSettings('runtimeApiEndpoint');\r\n  configurationEndpoint = this.configService.getSettings('configurationApiEndpoint');\r\n\r\n  constructor(private apiService: ApiService, private configService: ConfigService) {}\r\n\r\n  getAll(): Observable<Array<ModuleDto>> {\r\n    return this.apiService.get(`${this.configurationEndpoint}/Modules`);\r\n  }\r\n}\r\n","\r\nimport {map} from 'rxjs/operators';\r\n\r\nimport {ApiService} from './api.service';\r\nimport {OfficeDto} from '../dtos/office.dto';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class OfficeRepositoryService {\r\n  runtimeEndpoint = this.configService.getSettings('runtimeApiEndpoint');\r\n  configurationEndpoint = this.configService.getSettings('configurationApiEndpoint');\r\n\r\n  constructor(private apiService: ApiService, private configService: ConfigService) { }\r\n\r\n  getAll(): Observable<Array<OfficeDto>> {\r\n    return this.apiService\r\n    .get(`${this.configurationEndpoint}/Offices`).pipe(\r\n    map(data => <Array<OfficeDto>>data),\r\n    map(data => {\r\n      data.sort((a, b): number => {\r\n        if (a.name < b.name){\r\n          return -1;\r\n        }\r\n        if (a.name > b.name){\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n      return data;\r\n    }),\r\n    );\r\n  }\r\n}\r\n","\r\nimport {map} from 'rxjs/operators';\r\nimport { ApiService } from '../api.service';\r\nimport { ProjectModuleDto } from '../../dtos/project-module.dto';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { Observable } from 'rxjs';\r\nimport { FamisViewModelDto } from '../../_runtime/dtos/famis-view-model.dto';\r\n\r\n@Injectable()\r\nexport class ProjectProfileAPIService {\r\n\r\n  private runtimeEndpoint: string;\r\n\r\n      // Todo: Add form type to Module DTO returned from API i.e. TemplateBuilder form, Reconciliation, Task Builder etc...\r\n      public modules = [\r\n        <ProjectModuleDto>{ id: 'MainProfile', name: 'Main Profile', form: 'Dynamic' },\r\n        <ProjectModuleDto>{ id: 'SubProfile', name: 'Sub Profile', form: 'Dynamic' },\r\n        <ProjectModuleDto>{ id: 'DataImport', name: 'Data Import', form: 'DataImport' },\r\n        <ProjectModuleDto>{ id: 'Reconciliation', name: 'Reconciliation', form: 'Reconciliation' },\r\n        <ProjectModuleDto>{ id: 'Trending', name: 'Trending', form: 'Trending' },\r\n        <ProjectModuleDto>{ id: 'Depreciation', name: 'Depreciation', form: 'Depreciation' },\r\n        <ProjectModuleDto>{ id: 'TaskManagement', name: 'Task Management', form: 'TaskManagement' },\r\n        <ProjectModuleDto>{ id: 'QualityControl', name: 'Quality Control', form: 'QualityControl' },\r\n        <ProjectModuleDto>{ id: 'Administration', name: 'Administration', form: 'Administration' },\r\n        <ProjectModuleDto>{ id: 'HeaderManagement', name: 'Header Management', form: 'HeaderManagement' }\r\n      ];\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private configService: ConfigService\r\n  ) {\r\n    this.runtimeEndpoint = configService.getSettings('runtimeApiEndpoint');\r\n  }\r\n\r\n  get(moduleName: string, groupid: string): Observable<FamisViewModelDto> {\r\n    return this.apiService\r\n      .get(`${this.runtimeEndpoint}/ViewModels/${moduleName}/${groupid}`).pipe(\r\n      map(data => <FamisViewModelDto> data));\r\n  }\r\n\r\n  update(moduleName: string, groupid: string, viewModel: FamisViewModelDto): Observable<FamisViewModelDto> {\r\n    return this.apiService\r\n      .post(`${this.runtimeEndpoint}/ViewModels/${moduleName}/${groupid}`, viewModel).pipe(\r\n      map(data => <FamisViewModelDto> data));\r\n  }\r\n}\r\n\r\n\r\n","\r\nimport {map} from 'rxjs/operators';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { PeoplePickerSearchResultDto } from '../../dtos/project-profile/people-picker-search-result.dto';\r\nimport { of, Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { FormView } from '../../../_models/form-view';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { BaseField } from '../../../_models/field-types/base-field.model';\r\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\r\n\r\n@Injectable()\r\nexport class ProjectProfileControlService {\r\n  projectProfile: FormView;\r\n  private runtimeEndpoint = this.configService.getSettings('runtimeApiEndpoint');\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private configService: ConfigService) {}\r\n\r\n  toFormGroup(fields: BaseField<any>[]) {\r\n    const group: any = {};\r\n\r\n    fields.forEach(field => {\r\n      group[field.key] = field.required\r\n        ? new FormControl(field.value || '', Validators.required)\r\n        : new FormControl(field.value || '');\r\n    });\r\n    return new FormGroup(group);\r\n  }\r\n\r\n  searchEmployee(searchTerm: string): Observable<PeoplePickerSearchResultDto[]> {\r\n    if (searchTerm === '') {\r\n      return of([]);\r\n    }\r\n    return this.apiService.get(`${this.runtimeEndpoint}/employees/search?query=${searchTerm}`).pipe(\r\n    map(response => <PeoplePickerSearchResultDto[]>response));\r\n  }\r\n\r\n}\r\n","\r\nimport {map} from 'rxjs/operators';\r\nimport { ApiService } from '../api.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class CostFieldsService {\r\n  configurationEndpoint: string;\r\n  runtimeEndpoint: string;\r\n\r\n  constructor(\r\n    private configService: ConfigService,\r\n    private apiService: ApiService,\r\n    private http: HttpClient\r\n  ) {\r\n    this.configurationEndpoint = this.configService.getSettings('configurationApiEndpoint');\r\n    this.runtimeEndpoint = this.configService.getSettings('runtimeApiEndpoint');\r\n  }\r\n\r\n  getGroupCostField(groupId: string): Observable<any> {\r\n    const url = `${this.runtimeEndpoint}/group/${groupId}/CostField`;\r\n    return this.apiService.get(url);\r\n  }\r\n\r\n  getTemplates(): Observable<any> {\r\n    const url = `${this.configurationEndpoint}/ImportTemplates/FAMIS`;\r\n\r\n    return this.apiService.get(url).pipe(map(results => results));\r\n  }\r\n\r\n  getCostFields(templateId: string): Observable<any> {\r\n    const url = `${this\r\n      .configurationEndpoint}/ImportTemplates/${templateId}`;\r\n\r\n    return this.apiService.get(url).pipe(map(results => results));\r\n  }\r\n\r\n  saveCostField(groupId: string, assetFileField: string): Observable<any> {\r\n    const url = `${this\r\n      .runtimeEndpoint}/group/${groupId}/CostField?assetFileField=${assetFileField}`;\r\n\r\n    return this.apiService.post(url, null, null).pipe(map(results => results));\r\n  }\r\n}\r\n","import {map} from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApiService } from '../api.service';\r\nimport { Observable } from 'rxjs';\r\nimport { CreateAssetFileCustomColumnDto } from '../../dtos/create-asset-file-custom-column.dto';\r\nimport { ApiServiceResult } from '../../dtos/api-service-result.dto';\r\nimport { AssetFileRecordDto } from '../../dtos/asset-file-record-dto';\r\nimport { Asset } from '../../../_models/asset.model';\r\nimport { ConsolidatedFileColumnMapDto } from '../../dtos/consolidated-file-column-map.dto';\r\nimport { MatchCodeColumnMapDto } from '../../dtos/reconciliation/match-code-column-map.dto';\r\nimport { DataTargetName } from '../../../_enums/data-target-name';\r\nimport { AssetSearchDto, AssetSearchResponseDto } from '../../dtos/inventory/asset-search.dto';\r\nimport { AssetFileSummaryDto } from '../../dtos/asset-file-summary.dto';\r\nimport { ConsolidatedFilePreviewDto } from '../../dtos/consolidated-file-preview.dto';\r\n\r\n@Injectable()\r\nexport class InventoryService {\r\n  private runtimeEndpoint = this.configService.getSettings('runtimeApiEndpoint');\r\n\r\n  constructor(private configService: ConfigService, private http: HttpClient, private apiService: ApiService) {}\r\n\r\n  public copy(sourceGroupId, targetGroupId): Observable<any> {\r\n    return this.apiService.patch(`${this.runtimeEndpoint}/Inventory/${sourceGroupId}/CopyGroupInventory/${targetGroupId}`);\r\n  }\r\n\r\n  /*public read(groupId: string, type: number, skip: number = 0, take: number = 42): Observable<Asset[]> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/Inventory/${groupId}/Assets/${type}?skip=${skip}&count=${take}`);\r\n  }*/\r\n\r\n  /*public getInventory(groupId: string, dataTarget: number, filterDto: InventoryFilterDto): Observable<Asset[]> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/Inventory/${groupId}/Assets/${dataTarget}`, filterDto);\r\n  }*/\r\n\r\n  public search(groupId: string, searchFilter: AssetSearchDto): Observable<AssetSearchResponseDto> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/Inventory/${groupId}/Assets`, searchFilter, null, true);\r\n  }\r\n\r\n  public getContractGroupsWithInventory(groupId): Observable<any> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/group/${groupId}/ContractGroups/InventoryFiles`);\r\n  }\r\n\r\n  public getAssetFileSummary(groupId: string, filetype: number): Observable<AssetFileSummaryDto> {\r\n    return this.apiService\r\n      .get(`${this.runtimeEndpoint}/Inventory/${groupId}/SearchMetadata/${filetype}`, null, true).pipe(\r\n      map(result => <AssetFileSummaryDto>result));\r\n  }\r\n\r\n  public getAssetFileSearchMetadata(filetype: number): Observable<AssetFileSummaryDto> {\r\n    return this.apiService.get(\r\n      `${this.runtimeEndpoint}/Inventory/SearchMetadata/${filetype}`\r\n    ).pipe(map(result => <AssetFileSummaryDto>result));\r\n  }\r\n\r\n  public addAssetCustomColumns(\r\n    fileId: string,\r\n    columns: CreateAssetFileCustomColumnDto[]\r\n  ): Observable<ApiServiceResult<CreateAssetFileCustomColumnDto[]>> {\r\n    return this.apiService\r\n      .post(`${this.runtimeEndpoint}/Inventory/AssetFiles/${fileId}/CustomColumns`, columns).pipe(\r\n      map(result => <ApiServiceResult<Array<CreateAssetFileCustomColumnDto>>>result));\r\n  }\r\n\r\n  public createAssetRecord(fileId: string, recordDto: Object): Observable<AssetFileRecordDto> {\r\n    return this.apiService\r\n      .post(`${this.runtimeEndpoint}/Inventory/AssetFiles/${fileId}/CreateAssetRecord`, recordDto).pipe(\r\n      map(result => <AssetFileRecordDto>result));\r\n  }\r\n\r\n  public copyAssetRecord(recordId: string): Observable<AssetFileRecordDto> {\r\n    return this.apiService\r\n      .post(`${this.runtimeEndpoint}/Inventory/CopyAssetRecord/${recordId}`, null).pipe(\r\n      map(result => <AssetFileRecordDto>result));\r\n  }\r\n\r\n  public getAssetRecord(recordId: string): Observable<Asset> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/Inventory/${recordId}`).pipe(map(result => <Asset>result));\r\n  }\r\n\r\n  public updateAssetRecord(recordId: string, recordDto: Object): Observable<Asset> {\r\n    return this.apiService.patch(`${this.runtimeEndpoint}/Inventory/${recordId}`, recordDto, true).pipe(map(result => <Asset>result));\r\n  }\r\n\r\n  public getConsolidatedColumnMappings(groupId: string): Observable<ApiServiceResult<Array<ConsolidatedFileColumnMapDto>>> {\r\n    return this.apiService\r\n      .get(`${this.runtimeEndpoint}/Inventory/ConsolidatedFile/Group/${groupId}/Mapping`).pipe(\r\n      map(result => <ApiServiceResult<Array<ConsolidatedFileColumnMapDto>>>result));\r\n  }\r\n\r\n  public updateConsolidatedColumnMappings(\r\n    groupId: string,\r\n    mappings: Array<ConsolidatedFileColumnMapDto>\r\n  ): Observable<ApiServiceResult<Array<ConsolidatedFileColumnMapDto>>> {\r\n    return this.apiService\r\n      .patch(`${this.runtimeEndpoint}/Inventory/ConsolidatedFile/Group/${groupId}/Mapping`, mappings).pipe(\r\n      map(result => <ApiServiceResult<Array<ConsolidatedFileColumnMapDto>>>result));\r\n  }\r\n\r\n  public getConsolidatedColumnAssignments(groupId: string): Observable<ApiServiceResult<Array<MatchCodeColumnMapDto>>> {\r\n    return this.apiService\r\n      .get(`${this.runtimeEndpoint}/Inventory/ConsolidatedFile/Group/${groupId}/MatchCodeColumnMap`).pipe(\r\n      map(result => <ApiServiceResult<Array<MatchCodeColumnMapDto>>>result));\r\n  }\r\n\r\n  public updateConsolidatedColumnAssignments(\r\n    groupId: string,\r\n    assignments: Array<MatchCodeColumnMapDto>\r\n  ): Observable<ApiServiceResult<Array<MatchCodeColumnMapDto>>> {\r\n    return this.apiService\r\n      .post(`${this.runtimeEndpoint}/Inventory/ConsolidatedFile/Group/${groupId}/MatchCodeColumnMap`, assignments).pipe(\r\n      map(result => <ApiServiceResult<Array<MatchCodeColumnMapDto>>>result));\r\n  }\r\n\r\n  public deleteAssetFileById(assetFileId: string): Observable<any> {\r\n    return this.apiService.delete(`${this.runtimeEndpoint}/Inventory/AssetFiles/${assetFileId}`);\r\n  }\r\n\r\n  public deleteAssetFileForGroup(groupId: string, dataTarget: DataTargetName): Observable<any> {\r\n    return this.apiService.delete(`${this.runtimeEndpoint}/Inventory/${groupId}/Assets/${dataTarget}`);\r\n  }\r\n\r\n  public getConsolidatedFilePreview(groupId: string, handleLocalError?: boolean): \r\n  Observable<ApiServiceResult<Array<ConsolidatedFilePreviewDto>>> {\r\n    return this.apiService\r\n      .get(`${this.runtimeEndpoint}/Inventory/ConsolidatedFile/Preview/Group/${groupId}`, null, handleLocalError).pipe(\r\n      map(result => <ApiServiceResult<Array<ConsolidatedFilePreviewDto>>>result));\r\n  }\r\n\r\n  public createConsolidatedFile(groupId: string): Observable<string> {\r\n    return this.apiService.patch(`${this.runtimeEndpoint}/Inventory/ConsolidatedFile/Create/${groupId}`);\r\n  }\r\n}\r\n","\r\nimport {map, tap} from 'rxjs/operators';\r\n\r\nimport { ApiService } from '../api.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatchCode } from '../../../_models/match-code.model';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { MatchCodeCategory } from '../../../_models/match-code-category.model';\r\nimport { GroupMatchCode } from '../../../_models/group-match-code.model';\r\n\r\n@Injectable()\r\nexport class MatchCodesService {\r\n\r\n\r\n  runtimeApiEndpoint: string;\r\n  configurationApiEndpoint: string;\r\n\r\n  cachedMatchCodes: MatchCode[];\r\n\r\n  constructor(\r\n    private configService: ConfigService,\r\n    private apiService: ApiService,\r\n    private http: HttpClient\r\n  ) {\r\n    this.runtimeApiEndpoint = this.configService.getSettings(\r\n      'runtimeApiEndpoint'\r\n    );\r\n    this.configurationApiEndpoint = this.configService.getSettings(\r\n      'configurationApiEndpoint'\r\n    );\r\n  }\r\n\r\n  getMatchCodes(): Observable<MatchCode[]> {\r\n    const url = `${this.configurationApiEndpoint}/matchcodes`;\r\n    // console.log(\"getmatchcodes\", url);\r\n    return this.apiService\r\n      .get(url).pipe(\r\n      map(results => MatchCode.jsonArrayToObjects(results)));\r\n  }\r\n\r\n  getMatchCodeCategories(): Observable<MatchCodeCategory[]> {\r\n    return this.apiService\r\n      .get(`${this.configurationApiEndpoint}/matchcodecategories`).pipe(\r\n      map(results => MatchCodeCategory.jsonArrayToObjects(results)));\r\n  }\r\n\r\n  saveGroupMatchCodesSelection(\r\n    groupId,\r\n    selectedMatchCodes\r\n  ): Observable<any> {\r\n    if (selectedMatchCodes === []) { return; }\r\n    const groupMatchCodes: GroupMatchCode[] = new Array<GroupMatchCode>();\r\n    selectedMatchCodes.forEach((code: MatchCode) => {\r\n      groupMatchCodes.push(\r\n        new GroupMatchCode(\r\n          groupId,\r\n          code.id,\r\n          code.name,\r\n          code.description,\r\n          code.categoryId,\r\n          code.isEnabled,\r\n          true,\r\n          false,\r\n        )\r\n      );\r\n    });\r\n\r\n    const url = `${this.runtimeApiEndpoint}/matchcodes/group/${groupId}`;\r\n    const body = {\r\n      groupId: groupId,\r\n      matchCodes: groupMatchCodes\r\n    };\r\n\r\n    return this.apiService.post(url, body);\r\n  }\r\n\r\n  getGroupMatchCodesSelection(groupId: string): Observable<string[]> {\r\n    const url = `${this.runtimeApiEndpoint}/matchcodes/group/${groupId}`;\r\n    return this.apiService\r\n      .get(url).pipe(\r\n      map(function(results) {\r\n        const ids = new Array<string>();\r\n        results.forEach(code => {\r\n          if (code.groupMatchCodeIsEnabled && code.matchCodeIsEnabled) {\r\n            ids.push(code.matchCodeId);\r\n          }\r\n        });\r\n        return ids;\r\n      }))\r\n      .pipe(tap(console.log));\r\n  }\r\n\r\n  getGroupMatchCodes(groupId: string): Observable<GroupMatchCode[]> {\r\n    const url = `${this.runtimeApiEndpoint}/matchcodes/group/${groupId}`;\r\n    return this.apiService\r\n      .get(url).pipe(\r\n      map(function(results) {\r\n        const codes = new Array<GroupMatchCode>();\r\n        results.forEach(code => {\r\n          codes.push(code);\r\n        });\r\n        return codes;\r\n      }));\r\n  }\r\n\r\n  createMatchCode(matchCode: MatchCode): Observable<MatchCode> {\r\n    const newMatchCode = {\r\n      name: matchCode.name,\r\n      description: matchCode.description,\r\n      categoryId: matchCode.categoryId,\r\n      isEnabled: matchCode.isEnabled\r\n    };\r\n\r\n    return this.apiService\r\n      .post(\r\n        `${this.configurationApiEndpoint}/matchcodes`,\r\n        newMatchCode\r\n      ).pipe(\r\n      map(code => MatchCode.toObjectFromJson(code)));\r\n  }\r\n\r\n  updateMatchCode(matchCode: MatchCode): Observable<MatchCode> {\r\n    return this.apiService\r\n      .put(\r\n        `${this.configurationApiEndpoint}/matchcodes/${matchCode.id}`,\r\n        matchCode\r\n      ).pipe(\r\n      map(code => MatchCode.toObjectFromJson(code)));\r\n  }\r\n\r\n  getMatchCodeById(id: string): Observable<MatchCode> {\r\n    return this.apiService\r\n      .get(`${this.configurationApiEndpoint}/matchcodes/${id}`).pipe(\r\n      map(res => MatchCode.toObjectFromJson(res)));\r\n  }\r\n}\r\n","\r\nimport {map, catchError} from 'rxjs/operators';\r\n\r\nimport { SetSingleMatchCodeDto } from '../../dtos/set-single-match-code.dto';\r\nimport { SetAllocationMatchCodeDto } from '../../dtos/set-allocation-match.dto';\r\nimport { SetParentChildMatchDto } from '../../dtos/set-parent-child-match.dto';\r\nimport { ReconciliationSummaryResult } from '../../dtos/reconciliation/reconciliation-summary-result.dto';\r\nimport { ResultType } from '../../../_enums/result-type';\r\nimport { ReconciliationMatchDto } from '../../dtos/reconcilation-match.dto';\r\nimport { ReconcilationMassMatchDto } from '../../dtos/reconcilation-mass-match.dto';\r\nimport { ReconciliationMatchSummaryDto } from '../../dtos/reconcilation-match-summary.dto';\r\nimport { ApiServiceResult } from '../../dtos/api-service-result.dto';\r\nimport { ReconciliationValidationDto } from '../../dtos/reconciliation/reconciliation-validation-result.dto';\r\nimport { Injectable } from '@angular/core';\r\nimport { ApiService } from '../api.service';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { Observable } from 'rxjs';\r\nimport { MatchOrAllocationResult } from '../../dtos/reconciliation/match-or-allocation-result.dto';\r\nimport { ReconciliationServiceResultDto } from '../../dtos/reconciliation/reconciliation-service-result.dto';\r\n\r\n\r\n@Injectable()\r\nexport class ReconciliationMatchService {\r\n  runtimeEndpoint = this.configService.getSettings('runtimeApiEndpoint');\r\n\r\n  constructor(private apiService: ApiService, private configService: ConfigService) {}\r\n\r\n  public setSingleMatch(recordId: string, matchId: string): Observable<any> {\r\n    const dto = new SetSingleMatchCodeDto(recordId, matchId);\r\n    return this.apiService.post(`${this.runtimeEndpoint}/reconciliations/match/single/`, dto);\r\n  }\r\n\r\n  public createOneToOneMatch(dto: SetAllocationMatchCodeDto): Observable<any> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/reconciliations/match/allocation/`, dto);\r\n  }\r\n\r\n  public editMatch(dto: ReconciliationMatchDto): Observable<any> {\r\n    return this.apiService.patch(`${this.runtimeEndpoint}/reconciliations/match/allocation/`, dto);\r\n  }\r\n\r\n  public setMassMatch(dto: ReconcilationMassMatchDto[]): Observable<ApiServiceResult<ReconciliationSummaryResult[]>> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/reconciliations/match/massmatch/`, dto);\r\n  }\r\n\r\n  public setAllocationMatch(dto: SetAllocationMatchCodeDto): Observable<any> {\r\n    return this.apiService.post(`${this.runtimeEndpoint}/reconciliations/match/allocation/`, dto);\r\n  }\r\n\r\n  public updateAllocationMatch(dto: ReconciliationMatchDto): Observable<any> {\r\n    return this.apiService.patch(`${this.runtimeEndpoint}/reconciliations/match/allocation/`, dto);\r\n  }\r\n\r\n  public unmatchAssetRecords(inventoryRecordIds: string[]): Observable<ApiServiceResult<MatchOrAllocationResult>> {\r\n\r\n    return this.apiService.patch(`${this.runtimeEndpoint}/reconciliations/Assets/MatchAndOrAllocations`, inventoryRecordIds)\r\n    .pipe(map(dto => {\r\n      const serviceResult = <ApiServiceResult<MatchOrAllocationResult>>{\r\n        code: dto.code,\r\n        result: dto.result,\r\n        resultType: ResultType.matchOrAllocationResult\r\n      };\r\n\r\n      return serviceResult;\r\n    }));\r\n  }\r\n\r\n  public getClientMatchRecords(assetFileId: string): Observable<any> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/reconciliationmatch/${assetFileId}`);\r\n  }\r\n\r\n  public getInventoryMatchRecords(assetFileId: string): Observable<any> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/reconciliationmatch/${assetFileId}`);\r\n  }\r\n\r\n  public getReconciliationMatches(groupId: string): Observable<any> {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/reconciliations/group/${groupId}`).pipe(catchError(err => {\r\n      return [];\r\n    }));\r\n  }\r\n\r\n  public getReconciliationMatchSummary(groupId: string): Observable<ReconciliationMatchSummaryDto[]> {\r\n    return this.apiService\r\n      .get(`${this.runtimeEndpoint}/reconciliations/group/${groupId}/summary`).pipe(\r\n      map(res => <ReconciliationMatchSummaryDto[]>res.result))\r\n      .pipe(catchError(err => {\r\n        return [];\r\n      }));\r\n  }\r\n\r\n  public deleteGroupReconciliationData(groupId: string): Observable<number> {\r\n    return this.apiService\r\n      .delete(`${this.runtimeEndpoint}/reconciliations/ClearReconciliationDataForGroup/${groupId}`);\r\n  }\r\n\r\n  setParentChildMatch(\r\n    parentAssetId: string,\r\n    childAssetIds: string[]\r\n  ): Observable<ApiServiceResult<ReconciliationSummaryResult[]>> {\r\n    const dto = new SetParentChildMatchDto(parentAssetId, childAssetIds);\r\n\r\n    return this.apiService.post(`${this.runtimeEndpoint}/reconciliations/match/parentchild/`, dto)\r\n    .pipe(map(res => {\r\n      const serviceResult = <ApiServiceResult<ReconciliationSummaryResult[]>>{\r\n        code: res.code,\r\n        result: res.result,\r\n        resultType: ResultType.reconciliationSummaryResult\r\n      };\r\n\r\n      return serviceResult;\r\n    }));\r\n  }\r\n\r\n  updateParentChildMatch(\r\n    parentAssetId: string,\r\n    childAssetIds: string[]\r\n  ): Observable<ApiServiceResult<ReconciliationSummaryResult[]>> {\r\n    const dto = new SetParentChildMatchDto(parentAssetId, childAssetIds);\r\n\r\n    return this.apiService.patch(`${this.runtimeEndpoint}/reconciliations/match/parentchild/`, dto)\r\n    .pipe(map(res => {\r\n      const serviceResult = <ApiServiceResult<ReconciliationSummaryResult[]>>{\r\n        code: res.code,\r\n        result: res.result,\r\n        resultType: ResultType.reconciliationSummaryResult\r\n      };\r\n\r\n      return serviceResult;\r\n    }));\r\n  }\r\n\r\n  updateMatchCode(matchId: string, matchCodeId: string): Observable<ReconciliationMatchDto> {\r\n    return this.apiService.patch(`${this.runtimeEndpoint}/reconciliations/match/${matchId}/matchcode/${matchCodeId}`)\r\n    .pipe(map(r => {\r\n      const serviceResult = <ReconciliationMatchDto>{\r\n        matchId: r.result.matchId,\r\n        matchCodeId: r.result.matchCodeId,\r\n        assetFileRecordId: r.result.assetFileRecordId,\r\n        parentAssetFileRecordId: r.result.parentAssetFileRecordId,\r\n        allocations: r.result.allocations\r\n      };\r\n      return serviceResult;\r\n    }));\r\n  }\r\n\r\n  public getMatchRecordsForAsset(assetFileRecordId: string) {\r\n    return this.apiService.get(`${this.runtimeEndpoint}/reconciliationmatch/asset/${assetFileRecordId}`)\r\n    .pipe(catchError(err => {\r\n      return [];\r\n    }));\r\n  }\r\n\r\n  public getMatchSummaryForAssetIds(\r\n    groupId: string,\r\n    assetFileRecordIds: string[]\r\n  ): Observable<ApiServiceResult<ReconciliationSummaryResult>> {\r\n    return this.apiService\r\n      .post(`${this.runtimeEndpoint}/reconciliations/group/${groupId}/summary`, assetFileRecordIds)\r\n      .pipe(catchError(err => {\r\n        return [];\r\n      }))\r\n      .pipe(map(result => <ApiServiceResult<ReconciliationSummaryResult>>result));\r\n  }\r\n\r\n  public validateGroupReconciliation(\r\n    groupId: string,\r\n    includeDetail: boolean\r\n  ): Observable<ReconciliationServiceResultDto<ReconciliationValidationDto>> {\r\n    if (includeDetail) {\r\n      return this.apiService.get(`${this.runtimeEndpoint}/reconciliations/group/${groupId}/validate?includeDetail=true`);\r\n    }\r\n    return this.apiService.get(`${this.runtimeEndpoint}/reconciliations/group/${groupId}/validate`);\r\n  }\r\n}\r\n","import { trigger, state, animate, transition, style } from '@angular/animations';\r\n\r\nexport const fadeInOutAnimation =\r\ntrigger(\r\n  'fadeInOutAnimation',\r\n  [\r\n    transition(\r\n      ':enter',\r\n      [\r\n        style({opacity: 0}),\r\n        animate('.8s ease-in',\r\n        style({opacity: 1}))\r\n      ]\r\n    ),\r\n    transition(\r\n      ':leave',\r\n      [\r\n        style({opacity: 1}),\r\n        animate('.2s ease-in',\r\n        style({opacity: 0}))\r\n      ]\r\n    )\r\n  ]\r\n);\r\n","import { trigger, state, animate, transition, style } from '@angular/animations';\r\n\r\nexport const inOutFromLeftSideAnimation =\r\ntrigger(\r\n  'inOutFromLeftSideAnimation',\r\n  [\r\n    transition(\r\n      ':enter',\r\n      [\r\n        style({ opacity: .75 }),\r\n        animate('.5s ease-in',\r\n        style({ opacity: 1, left: '0px'}))\r\n      ]\r\n    ),\r\n    transition(\r\n      ':leave',\r\n      [\r\n        style({ opacity: 1 }),\r\n        animate('1s ease-in',\r\n        style({ opacity: 0, left: '-400%' }))\r\n      ]\r\n    )\r\n  ]\r\n);\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\r\nimport { UserStore } from '../user/user.store';\r\nimport { SubscriberEntity } from '../subscriber-entity';\r\nimport { AuthenticationManager } from './authentication.manager';\r\n\r\n@Injectable()\r\nexport class AuthGuard extends SubscriberEntity implements CanActivate {\r\n  constructor(private router: Router, private userStore: UserStore, private authenticationManager: AuthenticationManager) {\r\n    super();\r\n  }\r\n\r\n  public canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.subscribeDefined(this.userStore.hasAnyAuth(), (hasAnyAuth: boolean) => {\r\n        if (hasAnyAuth) {\r\n          resolve(true);\r\n        } else {\r\n          this.userStore.loginUser();\r\n          resolve(false);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { MsalConfig } from './msal-config.model';\r\nimport { HttpError } from '../network/http-error.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { UserAgentApplication } from 'adal-angular';\r\nexport enum LoginType {\r\n  adal,\r\n  msal\r\n}\r\nexport enum StorageKey {\r\n  lastLoginType\r\n}\r\n\r\nconst AdalAuthenticationContext = AuthenticationContext;\r\n\r\n@Injectable()\r\nexport class AuthenticationManager {\r\n  private _hasAdalAuth = new BehaviorSubject<boolean | undefined>(undefined);\r\n  private _hasMsalAuth = new BehaviorSubject<boolean | undefined>(undefined);\r\n  private _hasAnyAuth = new BehaviorSubject<boolean | undefined>(undefined);\r\n  private _error = new BehaviorSubject<HttpError | undefined>(undefined);\r\n  private _lastLoginType = new BehaviorSubject<LoginType | undefined>(undefined);\r\n  private _hasToken = new BehaviorSubject<boolean | undefined>(undefined);\r\n\r\n  private defaultAdditionalExpireOffsetSeconds = 600;\r\n  private adalConfig: adal.Config = {\r\n    tenant: environment.adalTennant,\r\n    clientId: environment.adalClientId,\r\n    expireOffsetSeconds: environment.adalExpireOffsetSeconds,\r\n    redirectUri: window.location.origin + '/',\r\n    postLogoutRedirectUri: window.location.origin + '/',\r\n    endpoints: environment.adalEndpoints,\r\n    navigateToLoginRequestUrl: false\r\n  };\r\n  private msalConfig: MsalConfig = {\r\n    authority:\r\n    `https://login.microsoftonline.com/tfp/${environment.msalTenant}.onmicrosoft.com/` + `${environment.msalSigninSignupPolicy}`,\r\n    clientId: environment.msalClient,\r\n    scopes: [environment.msalScope]\r\n  };\r\n\r\n  private adalContext: adal.AuthenticationContext = new AdalAuthenticationContext(this.adalConfig);\r\n  private msalContext?: UserAgentApplication;\r\n\r\n  public hasAdalAuth = this._hasAdalAuth.asObservable();\r\n  public hasMsalAuth = this._hasMsalAuth.asObservable();\r\n  public hasAnyAuth = this._hasAnyAuth.asObservable();\r\n  public hasToken = this._hasToken.asObservable();\r\n  public error = this._error.asObservable();\r\n  public lastLoginType = this._lastLoginType.asObservable();\r\n  public hasAuthError = false;\r\n\r\n  public getAdditionalOffsetFromConfig(): number{\r\n    const retrievedTIme = environment.additionalExpireOffsetSeconds;\r\n    return retrievedTIme ? retrievedTIme : this.defaultAdditionalExpireOffsetSeconds;\r\n  }\r\n\r\n  public getAdalConfig(): adal.Config {\r\n    return this.adalConfig;\r\n  }\r\n\r\n  public getAdalContext(): adal.AuthenticationContext {\r\n    return this.adalContext;\r\n  }\r\n\r\n\r\n\r\n  public processAdalToken(): void {\r\n    this.adalContext.handleWindowCallback();\r\n    this.findAdalAuth();\r\n\r\n    const storedLoginType: any = sessionStorage.getItem(StorageKey[StorageKey.lastLoginType]);\r\n    if (storedLoginType) {\r\n      const lastLoginType: any = LoginType[storedLoginType];\r\n      this._lastLoginType.next(lastLoginType);\r\n    }\r\n  }\r\n\r\n  public initMsal(): void {\r\n    this.msalContext = new UserAgentApplication(\r\n      this.msalConfig.clientId,\r\n      this.msalConfig.authority,\r\n      (errorDesc, token, error, tokenType) => {\r\n        if (error) {\r\n          return;\r\n        }\r\n        if (sessionStorage.getItem('msal.idtoken')) {\r\n          this._hasMsalAuth.next(true);\r\n        }\r\n      },\r\n      {\r\n        redirectUri: window.location.origin,\r\n        postLogoutRedirectUri: window.location.origin\r\n      }\r\n    );\r\n    this.findMsalAuth();\r\n  }\r\n\r\n  public loginAdal(): void {\r\n    this.adalContext.login();\r\n   }\r\n\r\n  public loginMsal(): void {\r\n    if (this.msalContext === undefined) {\r\n      throw new Error('msal.js was never initiatlized');\r\n    }\r\n\r\n    this.msalContext.loginRedirect(this.msalConfig.scopes);\r\n  }\r\n\r\n  public logoutAdal(): void {\r\n    if (this._hasAdalAuth.getValue()) {\r\n      this.adalContext.logOut();\r\n    }\r\n  }\r\n\r\n  public logoutMsal(): void {\r\n    if (this.msalContext && this._hasMsalAuth.getValue()) {\r\n      this.msalContext.logout();\r\n    }\r\n  }\r\n\r\n  // TODO: Improve this\r\n  public forgetAdal(): void {\r\n    sessionStorage.removeItem('adal.idtoken');\r\n    sessionStorage.removeItem('adal.error');\r\n    sessionStorage.removeItem('adal.error.description');\r\n    sessionStorage.removeItem('adal.login.error');\r\n    sessionStorage.removeItem('adal.login.request');\r\n    sessionStorage.removeItem('adal.nonce.idtoken');\r\n    sessionStorage.removeItem('adal.session.state');\r\n    sessionStorage.removeItem('adal.state.login');\r\n    sessionStorage.removeItem('adal.token.keys');\r\n    this._hasAdalAuth.next(false);\r\n  }\r\n\r\n  // TODO: Improve this\r\n  public forgetMsal(): void {\r\n    sessionStorage.removeItem('msal.idtoken');\r\n    sessionStorage.removeItem('msal.client.info');\r\n    sessionStorage.removeItem('msal.error');\r\n    sessionStorage.removeItem('msal.error.description');\r\n    sessionStorage.removeItem('msal.login.error');\r\n    sessionStorage.removeItem('msal.login.request');\r\n    sessionStorage.removeItem('msal.nonce.idtoken');\r\n    sessionStorage.removeItem('msal.state.login');\r\n    sessionStorage.removeItem('msal.idtoken');\r\n    this._hasMsalAuth.next(false);\r\n  }\r\n\r\n  public forgetLoginType(): void {\r\n    sessionStorage.removeItem('lastLoginType');\r\n  }\r\n\r\n  public getToken(forceRenewal = false, expirationEpoch?: number): Observable<string> {\r\n    if (forceRenewal === true) {\r\n       // configurable additional buffer\r\n      this.adalContext.config.expireOffsetSeconds +=\r\n        expirationEpoch - (((new Date()).getTime() / 1000) + this.adalContext.config.expireOffsetSeconds) + 1;\r\n    }\r\n\r\n    if (this._hasMsalAuth.getValue() && sessionStorage.getItem('msal.idtoken')) {\r\n      const msalResultToekn = this.getMsalToken();\r\n      if (forceRenewal === true) {\r\n        this.adalContext.config.expireOffsetSeconds = environment.adalExpireOffsetSeconds;\r\n      }\r\n      this._hasToken.next(true);\r\n      return msalResultToekn;\r\n    }\r\n\r\n    const result = this.getAdalToken();\r\n    if (forceRenewal === true) {\r\n      this.adalContext.config.expireOffsetSeconds = environment.adalExpireOffsetSeconds;\r\n    }\r\n    this._hasToken.next(true);\r\n    return result;\r\n  }\r\n\r\n  public handleAuthenticationError(error: HttpError): void {\r\n    this._error.next(error);\r\n    setTimeout(() => {\r\n      this.forgetAdal();\r\n      this.forgetMsal();\r\n      if(error && error.status == 403)\r\n        this.hasAuthError = true;\r\n    });\r\n  }\r\n\r\n  private getAdalToken(): Observable<string> {\r\n    const result = new Subject<string>();\r\n    const tokenWeWillUse = sessionStorage.getItem('adal.idtoken');\r\n\r\n    const tokenCallback = (message: string, token: string) => {\r\n      setTimeout(() => {\r\n        if (token) {\r\n          result.next(token);\r\n          result.complete();\r\n        } else {\r\n          // console.log(`Token was supposedly null. Was it? Token: ${tokenWeWillUse}.`);\r\n          result.next(tokenWeWillUse || '');\r\n          result.complete();\r\n        }\r\n      });\r\n    };\r\n\r\n    this.adalContext.acquireToken(this.adalConfig.clientId, tokenCallback);\r\n\r\n    return result.asObservable();\r\n  }\r\n\r\n  private getMsalToken(): Observable<string> {\r\n    const result = new Subject<string>();\r\n    // The token returned by the various acquireToken methods is not quite the same\r\n    //  as the token in session storage (one or two fields in the JWT token are different).\r\n    if (this.msalContext === undefined) {\r\n      throw new Error('msal.js was never initiatlized');\r\n    }\r\n\r\n    this.msalContext.acquireTokenSilent(this.msalConfig.scopes, undefined).then((token: string) => {\r\n      //\r\n      result.next(sessionStorage.getItem('msal.idtoken') || undefined);\r\n      result.complete();\r\n    });\r\n\r\n    return result.asObservable();\r\n  }\r\n\r\n  private findAdalAuth(): void {\r\n    if (this._hasMsalAuth.getValue() === true) {\r\n      return;\r\n    }\r\n\r\n    const token = this.adalContext.getCachedToken(this.adalConfig.clientId);\r\n\r\n    if (token) {\r\n      this.setHasAnyAuth();\r\n      this._hasAdalAuth.next(true);\r\n      sessionStorage.setItem(StorageKey[StorageKey.lastLoginType], LoginType[LoginType.adal]);\r\n    } else {\r\n      this._hasAdalAuth.next(false);\r\n    }\r\n\r\n    this.setHasAnyAuth();\r\n  }\r\n\r\n  private findMsalAuth(): void {\r\n    const token = sessionStorage.getItem('msal.idtoken');\r\n\r\n    if (token) {\r\n      this._hasMsalAuth.next(true);\r\n      sessionStorage.setItem(StorageKey[StorageKey.lastLoginType], LoginType[LoginType.msal]);\r\n    } else {\r\n      this._hasMsalAuth.next(false);\r\n    }\r\n\r\n    this.setHasAnyAuth();\r\n  }\r\n\r\n  private setHasAnyAuth(): void {\r\n    if (this._hasAdalAuth.getValue() === true || this._hasMsalAuth.getValue() === true) {\r\n      this._hasAnyAuth.next(true);\r\n    }\r\n\r\n    if (!this._hasAdalAuth.getValue() && !this._hasMsalAuth.getValue()) {\r\n      this._hasAnyAuth.next(false);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\r\nimport { UserStore } from '../user/user.store';\r\nimport { SubscriberEntity } from '../subscriber-entity';\r\nimport { SystemPermissionsEnum } from '../user/permissions';\r\n\r\n@Injectable()\r\nexport class CanAccessGuard extends SubscriberEntity implements CanActivate {\r\n  constructor(private router: Router, private userStore: UserStore) {\r\n    super();\r\n  }\r\n\r\n  public canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\r\n    let canAccess = false;\r\n\r\n    const permissions = route.data['permissions'] as Array<SystemPermissionsEnum>;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.userStore.user.subscribe(currentUser => {\r\n        if (currentUser) {\r\n          // Checking if user has access to system permission\r\n          permissions.forEach(permission => {\r\n            const grantedPermissionIndex = currentUser.permissions.permissionsGranted.findIndex(c => c === permission);\r\n            canAccess = grantedPermissionIndex > -1;\r\n          });\r\n        }\r\n      });\r\n\r\n      if (canAccess) {\r\n        resolve(true);\r\n      } else {\r\n        this.router.navigate(['error/403']);\r\n        resolve(false);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { LoggingService } from './services/logging.service';\r\nimport { ErrorHandlerService } from './services/error-handler.service';\r\nimport { AlertService } from './services/alert.service';\r\nimport { HelperService } from './services/helper.service';\r\nimport { RulesGuard } from './guards/rules-guard.service';\r\nimport { AssetFileInfoService } from './services/asset-file-info-service';\r\nimport { BuildingInfoService } from './services/building-info-service';\r\nimport { FamisGridService } from './services/famis-grid.service';\r\nimport { GoogleMapsService } from './services/google-maps-config.service';\r\nimport { LeftNavService } from './services/left-nav-service';\r\nimport { TransactionsInfoService } from './services/transactions-info-service';\r\nimport { RecipientsInfoService } from './services/recipients-info-service';\r\nimport { CanDeactivateGuard } from './guards/can-deactivate-guard.service';\r\nimport { CanDeactivateService } from './guards/can-deactivate.service';\r\nimport { AuthGuard } from './authentication/auth-guard';\r\nimport { UserStore } from './user/user.store';\r\nimport { AuthenticationManager } from './authentication/authentication.manager';\r\nimport { AuthorizationApiService } from '../_api/_authorization/services/authorization-api.service';\r\nimport { ShowIfCanAccessDirective } from './directives/show-if-can-access';\r\nimport { CanAccessGuard } from './authentication/can-access.guard';\r\nimport { TranslateHttpLoader } from '../../../node_modules/@ngx-translate/http-loader';\r\nimport { TranslateModule } from '../../../node_modules/@ngx-translate/core';\r\nimport { ImageService } from './services/image.service';\r\nimport { UserGridService } from './services/user-grid.service';\r\nimport { WindowManager } from './services/window-manager.service';\r\nimport { WindowService } from '@progress/kendo-angular-dialog';\r\nimport { TranslationManager } from './i18n/translation-manager';\r\nimport { NgModule, ErrorHandler, Optional, SkipSelf, ModuleWithProviders } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CountriesApiService } from '../_api/_configuration/services/countries-api.service';\r\nimport { AccountApiService } from '../_api/_authorization/services/account-api.service';\r\nimport { LAZY_MAPS_API_CONFIG } from '@agm/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http);\r\n}\r\n\r\n@NgModule({\r\n  imports: [CommonModule, BrowserAnimationsModule\r\n  ],\r\n  declarations: [ShowIfCanAccessDirective],\r\n  exports: [CommonModule, BrowserAnimationsModule, ShowIfCanAccessDirective, TranslateModule],\r\n  providers: [\r\n    AuthGuard,\r\n    CanAccessGuard,\r\n    UserStore,\r\n    AuthenticationManager,\r\n    AlertService,\r\n    LoggingService,\r\n    FamisGridService,\r\n    HelperService,\r\n    ImageService,\r\n    RulesGuard,\r\n    CanDeactivateGuard,\r\n    { provide: ErrorHandler, useClass: ErrorHandlerService },\r\n    AssetFileInfoService,\r\n    BuildingInfoService,\r\n    { provide: LAZY_MAPS_API_CONFIG, useClass: GoogleMapsService },\r\n    TransactionsInfoService,\r\n    RecipientsInfoService,\r\n    CanDeactivateService,\r\n    AccountApiService,\r\n    AuthorizationApiService,\r\n    CountriesApiService,\r\n    UserGridService,\r\n    WindowManager,\r\n    WindowService,\r\n    TranslationManager,\r\n    LeftNavService\r\n  ]\r\n})\r\nexport class CoreModule {\r\n  constructor(\r\n    @Optional()\r\n    @SkipSelf()\r\n    parentModule: CoreModule\r\n  ) {\r\n    if (parentModule) {\r\n      throw new Error('CoreModule is already loaded. Import it in the AppModule only.');\r\n    }\r\n  }\r\n\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: CoreModule\r\n    };\r\n  }\r\n}\r\n","import { Renderer2, Directive, Input, OnInit, ElementRef } from '@angular/core';\r\nimport { UserStore } from '../user/user.store';\r\nimport { SystemPermissionsEnum } from '../user/permissions';\r\n\r\n@Directive({\r\n  selector: '[showIfCanAccess]'\r\n})\r\nexport class ShowIfCanAccessDirective implements OnInit {\r\n  // The current system permission\r\n  @Input() showIfCanAccess: SystemPermissionsEnum;\r\n\r\n  constructor(private el: ElementRef, private renderer: Renderer2, private userStore: UserStore) {}\r\n\r\n  ngOnInit(): void {\r\n    let canAccess = false;\r\n\r\n    this.userStore.user.subscribe(currentUser => {\r\n      if (currentUser) {\r\n        // Checking if user has access to system permission\r\n        const grantedPermissionIndex = currentUser.permissions.permissionsGranted.findIndex(c => c === this.showIfCanAccess);\r\n        canAccess = grantedPermissionIndex > -1;\r\n      }\r\n    });\r\n\r\n    if (!canAccess) {\r\n      this.renderer.setStyle(this.el.nativeElement, 'display', 'none');\r\n    }\r\n  }\r\n}\r\n","import { ComponentCanDeactivate } from './component-can-deactivate';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nexport interface CanComponentDeactivate {\r\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\r\n}\r\n\r\n// TODO implement interface for canDeactivate for each component that utilizes this service\r\n\r\n@Injectable()\r\nexport class CanDeactivateGuard implements CanDeactivate<ComponentCanDeactivate> {\r\n  canDeactivate(component: ComponentCanDeactivate, route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    return component.canDeactivate ? component.canDeactivate() : true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Injectable()\r\nexport class CanDeactivateService {\r\n  private confirmDialogText = 'Are you sure? You\\'ll lose your changes.';\r\n\r\n  canDeactivateForm(currentForm?: NgForm, dirty?: boolean): boolean {\r\n    // TODO: The confirm window should show if form is submitted and has validation errors\r\n    if (dirty || currentForm && currentForm.dirty && currentForm.submitted === false) {\r\n      return confirm(this.confirmDialogText);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  canDeactivateComponent(dirty: boolean): boolean {\r\n    if (dirty) {\r\n      return confirm(this.confirmDialogText);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  canDeactivateFormAndComponent(currentForm: NgForm, dirty: boolean): boolean {\r\n    if (dirty || (currentForm && currentForm.dirty && currentForm.submitted === false)) {\r\n      return confirm(this.confirmDialogText);\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { HostListener } from '@angular/core';\r\n\r\nexport abstract class ComponentCanDeactivate {\r\n  abstract canDeactivate(): boolean;\r\n\r\n  @HostListener('window:beforeunload', ['$event'])\r\n  unloadNotification($event: any) {\r\n    if (!this.canDeactivate()) {\r\n      $event.returnValue = true;\r\n    }\r\n  }\r\n}\r\n","import { SetupComponent } from '../../reconciliation/components/setup.component';\r\nimport { AlertService } from '../services/alert.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { CanDeactivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, UrlSegment } from '@angular/router';\r\n\r\n\r\n@Injectable()\r\nexport class RulesGuard implements CanDeactivate<SetupComponent> {\r\n  constructor(private router: Router, private alertService: AlertService) {}\r\n\r\n  canDeactivate(\r\n    target: SetupComponent,\r\n    currentRoute: ActivatedRouteSnapshot,\r\n    currentState: RouterStateSnapshot,\r\n    nextState: RouterStateSnapshot\r\n  ): boolean {\r\n    const segments: UrlSegment[] = this.router.parseUrl(nextState.url).root.children.primary.segments;\r\n\r\n    if ((!target.selectedCostField || target.selectedCostField === 'undefined') && segments[2] && segments[2].path === 'Reconciliation') {\r\n      this.alertService.error('Please select an Allocation Field to continue.');\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","export class TranslationBaseKeys {\r\n  static home = TranslationBaseKeys.generatei18n('home');\r\n  static common = TranslationBaseKeys.generatei18n('common');\r\n  static reconciliation = TranslationBaseKeys.generatei18n('reconciliation');\r\n  static dataImport = TranslationBaseKeys.generatei18n('data-import');\r\n  static building = TranslationBaseKeys.generatei18n('building');\r\n  static asset = TranslationBaseKeys.generatei18n('asset');\r\n  static dashboard = TranslationBaseKeys.generatei18n('dashboard');\r\n  static kendo = TranslationBaseKeys.generatei18n('kendo');\r\n  static projectProfile = TranslationBaseKeys.generatei18n('project-profile');\r\n  static matchCodes = TranslationBaseKeys.generatei18n('match-codes');\r\n  static templateManagement = TranslationBaseKeys.generatei18n('template-management');\r\n  static trending = TranslationBaseKeys.generatei18n('trending');\r\n  static depreciation = TranslationBaseKeys.generatei18n('depreciation');\r\n  static qualityControl = TranslationBaseKeys.generatei18n('quality-control');\r\n  static cascading = TranslationBaseKeys.generatei18n('cascading');\r\n  static reports = TranslationBaseKeys.generatei18n('reports');\r\n  static alert = TranslationBaseKeys.generatei18n('alert');\r\n  static groupManagement = TranslationBaseKeys.generatei18n('group-management');\r\n  static groupSave = TranslationBaseKeys.generatei18n('group-save');\r\n  static admin = TranslationBaseKeys.generatei18n('admin');\r\n  static headerManagement = TranslationBaseKeys.generatei18n('header-management');\r\n  static recipients = TranslationBaseKeys.generatei18n('recipients');\r\n  static fileUpload = TranslationBaseKeys.generatei18n('file-upload');\r\n  static processing = TranslationBaseKeys.generatei18n('processing');\r\n  static transactions = TranslationBaseKeys.generatei18n('transactions');\r\n  static userFactors = TranslationBaseKeys.generatei18n('user-factors');\r\n  static customAdditions = TranslationBaseKeys.generatei18n('custom-additions');\r\n  static customField = 'customField';\r\n  static noTranslate = TranslationBaseKeys.generatei18n('no-translate');\r\n  static auth = TranslationBaseKeys.generatei18n('auth');\r\n  static support = TranslationBaseKeys.generatei18n('support');\r\n  private static generatei18n(baseKey: string): string {\r\n    return baseKey + '_';\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable()\r\nexport class TranslationManager {\r\n  private missingTranslations = {};\r\n\r\n  constructor(private translateService: TranslateService) {}\r\n\r\n  instant(key: string, params?: object): any {\r\n\r\n    if (key.indexOf('no-translate_') !== -1) {\r\n      return this.translateService.instant(key.split('_')[1], params);\r\n    }\r\n\r\n    const formattedBaseKey = key.toLowerCase().replace(/\\s/g, '');\r\n\r\n    let label = '';\r\n\r\n    const keys = key.split('_');\r\n\r\n    if (keys.length > 0) {\r\n      label = keys[keys.length - 1];\r\n    }\r\n\r\n    const value = this.translateService.instant(formattedBaseKey, params);\r\n\r\n    if (value.split('_').length > 1) {\r\n      // String w/ '_' so its a missing translation\r\n      this.missingTranslations[formattedBaseKey] = `${label}`;\r\n\r\n      console.log(JSON.stringify(this.missingTranslations), 'Missing translations');\r\n    }\r\n\r\n    return value;\r\n  }\r\n}\r\n","import { TranslationBaseKeys } from '../i18n/translation-base-keys';\r\nimport { TranslationManager } from '../i18n/translation-manager';\r\nimport { Injectable } from '@angular/core';\r\nimport { Alert } from '../../_models/alert.model';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { Router, NavigationStart } from '@angular/router';\r\nimport { AlertType } from '../../_enums/alert-type';\r\n\r\n@Injectable()\r\nexport class AlertService {\r\n  private subject = new Subject<Alert>();\r\n  private keepAfterRouteChange = false;\r\n  private i18n = TranslationBaseKeys;\r\n\r\n  constructor(private router: Router, private translationManager: TranslationManager) {\r\n    // clear alert messages on route change unless 'keepAfterRouteChange' flag is true\r\n    router.events.subscribe(event => {\r\n      if (event instanceof NavigationStart) {\r\n        if (this.keepAfterRouteChange) {\r\n          // only keep for a single route change\r\n          this.keepAfterRouteChange = false;\r\n        } else {\r\n          // clear alert messages\r\n          this.clear();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getAlert(): Observable<any> {\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  success(message: string, keepAfterRouteChange = false, params?: object) {\r\n    this.alert(AlertType.Success, message, keepAfterRouteChange, params);\r\n  }\r\n\r\n  error(message: string, keepAfterRouteChange = false, params?: object) {\r\n    this.alert(AlertType.Error, message, keepAfterRouteChange, params);\r\n  }\r\n\r\n  info(message: string, keepAfterRouteChange = false, params?: object) {\r\n    this.alert(AlertType.Info, message, keepAfterRouteChange, params);\r\n  }\r\n\r\n  warn(message: string, keepAfterRouteChange = false, params?: object) {\r\n    this.alert(AlertType.Warning, message, keepAfterRouteChange, params);\r\n  }\r\n\r\n  alert(type: AlertType, message: string, keepAfterRouteChange = false, params?: object) {\r\n    this.keepAfterRouteChange = keepAfterRouteChange;\r\n    this.subject.next(<Alert>{ type: type, message: this.translateMessage(this.i18n.alert + message, params) });\r\n  }\r\n\r\n  clear() {\r\n    // clear alerts\r\n    this.subject.next();\r\n  }\r\n\r\n  private translateMessage(message: string, params?: object) {\r\n\r\n    return this.translationManager.instant(message, params);\r\n\r\n  }\r\n}\r\n","import { TranslatedComponent } from '../i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../i18n/translation-base-keys';\r\nimport { TranslationManager } from '../i18n/translation-manager';\r\nimport { SearchRecordDto } from '../../_api/dtos/inventory/search-response.dto';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { EnumOptionDto } from '../../_api/_configuration/dtos/enum-option.dto';\r\nimport { AssetDto } from '../../_api/_runtime/dtos/asset.dto';\r\nimport { Asset } from '../../_models/asset.model';\r\nimport { FieldOption } from '../../_models/field-option.model';\r\nimport { SettingsApiService } from '../../_api/_runtime/services/settings-api.service';\r\nimport { GroupSettingDto } from '../../_api/_runtime/dtos/group-setting.dto';\r\nimport { SettingType } from '../../_enums/setting-type';\r\n\r\n@Injectable()\r\nexport class AssetFileInfoService implements TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  public referenceData = new BehaviorSubject<Array<Array<EnumOptionDto>>>(new Array<Array<EnumOptionDto>>());\r\n  private userSettingdto = new Array<GroupSettingDto>();\r\n  settingName: string;\r\n\r\n  constructor(private translateService: TranslationManager, private settingsApiService: SettingsApiService) {}\r\n\r\n  private hiddenColumns = [\r\n    'assetId',\r\n    'isMatched',\r\n    'isParent',\r\n    'isChild',\r\n    'parentChildMatches',\r\n    'matchTypes',\r\n    'matches',\r\n    'matchCodeId',\r\n    'parentId',\r\n    'matchId',\r\n    'allocatedValue',\r\n    'allocationId',\r\n    'id',\r\n    'updatedTimeStamp',\r\n    'assetFileId',\r\n    'sourceRecordId',\r\n    'groupId',\r\n    'inventoryImageUrl2',\r\n    'inventoryImageUrl3',\r\n    'inventoryImageUrl4',\r\n    'inventoryImageUrl5',\r\n    'inventoryImageUrl6',\r\n    'inventoryImageUrl7',\r\n    'buildingId',\r\n  ];\r\n\r\n  // Read only fields\r\n\r\n  public readOnlyFields = [\r\n    'depreciationAsOfDate'\r\n  ]\r\n\r\n  private defaultColumns = [\r\n    'displayId',\r\n    'assetTagNumber',\r\n    'activityCode',\r\n    'siteNumber',\r\n    'buildingNumber',\r\n    'accountNumber',\r\n    'classCode',\r\n    'description',\r\n    'manufacturer',\r\n    'modelNumber',\r\n    'serialNumber',\r\n    'acquisitionDate',\r\n    'historicalCost',\r\n    'costReplacementNew'\r\n  ];\r\n\r\n  private defaultColumnsMassUpdate = [\r\n    'displayId',\r\n    'serialNumber',\r\n    'assetTagNumber',\r\n    'description',\r\n    'manufacturer',\r\n    'building'\r\n  ];\r\n\r\n  private defaultColumnsDuplicateCheck = [\r\n    'displayId',\r\n    'manufacturer',\r\n    'modelNumber',\r\n    'serialNumber'\r\n  ];\r\n\r\n  private hiddenFields = [\r\n    'siteName',\r\n    'buildingName',\r\n  ];\r\n\r\n  private nonTranslatedFields = [\r\n    'accountId',\r\n    'departmentId'\r\n  ];\r\n\r\n  private accountFieldNames = [\r\n    'accountNumber',\r\n    'accountDescription'\r\n  ];\r\n\r\n  private departmentFieldNames = [\r\n    'departmentName',\r\n    'departmentNumber'\r\n  ];\r\n\r\n  public GetAccountColumns(): Array<string> {\r\n    return this.accountFieldNames;\r\n  }\r\n\r\n  public GetDepartmentColumns(): Array<string> {\r\n    return this.departmentFieldNames;\r\n  }\r\n\r\n  public GetInternalColumns(): Array<string> {\r\n    return this.hiddenColumns;\r\n  }\r\n\r\n  public GetDefaultColumns(): Array<string> {\r\n    return this.defaultColumns;\r\n  }\r\n\r\n  public GetDefaultMassUpdateColumns(): Array<string> {\r\n    return this.defaultColumnsMassUpdate;\r\n  }\r\n\r\n  public GetDefaultDuplicateCheckColumns(): Array<string> {\r\n    return this.defaultColumnsDuplicateCheck;\r\n  }\r\n\r\n  public GetHiddenFields(): Array<string> {\r\n    return this.hiddenFields;\r\n  }\r\n\r\n  public GetInternalAndHiddenFields(): Array<string> {\r\n    return this.hiddenColumns.concat(this.hiddenFields);\r\n  }\r\n\r\n  public GetNonTranslatedFields(): Array<string> {\r\n    return this.nonTranslatedFields.concat(this.nonTranslatedFields);\r\n  }\r\n  public mapEnums(assetDtos?: Array<AssetDto>, uiAssets?: Array<Asset>, searchRecordDtos?: Array<SearchRecordDto>):\r\n  any {\r\n\r\n    let assets = new Array<any>();\r\n    const s = this;\r\n\r\n    if (assetDtos) {\r\n      assets = assetDtos;\r\n    } else if (uiAssets) {\r\n      assets = uiAssets;\r\n    } else {\r\n      assets = searchRecordDtos;\r\n    }\r\n\r\n    const referenceData = this.referenceData.getValue();\r\n\r\n    assets.forEach(asset => {\r\n      const activityCode = referenceData['ActivityCodes'].find(c => c.value === asset['activityCode']);\r\n      asset['activityCode'] = activityCode ? this.translateService.instant(this.i18n.asset + activityCode.displayName) : 'n/a';\r\n\r\n      if (referenceData['DepreciationConventions']) {\r\n        const depreciationConvention = referenceData['DepreciationConventions'].find(c => c.value === asset['depreciationConvention']);\r\n        asset['depreciationConvention'] = depreciationConvention ?\r\n          this.translateService.instant(this.i18n.asset + depreciationConvention.displayName) : '';\r\n      }\r\n\r\n      if (referenceData['DepreciationMethods']) {\r\n        const depreciationMethod = referenceData['DepreciationMethods'].find(c => c.value === asset['depreciationMethod']);\r\n        asset['depreciationMethod'] = depreciationMethod ?\r\n          this.translateService.instant(this.i18n.asset + depreciationMethod.displayName) : '';\r\n      }\r\n    });\r\n\r\n    return assets;\r\n  }\r\n\r\n  public mapEnumResult(enumResultArr: EnumOptionDto[]): FieldOption[] {\r\n    return enumResultArr.map((obj): FieldOption => {\r\n      return { key: obj.value, displayName: obj.displayName };\r\n    });\r\n  }\r\n\r\n  public updateReferenceData(data: Array<EnumOptionDto>, key: string) {\r\n    const current = this.referenceData.getValue();\r\n    current[key] = data;\r\n\r\n    this.referenceData.next(current);\r\n  }\r\n\r\n  getSettingName(groupId: string, name = ''): string {\r\n    return `${groupId}/${name}`;\r\n  }\r\n\r\npublic getImportMappedColumns(groupId: string): Observable<any> {\r\n  const s = this;\r\n  s.settingName = s.getSettingName(groupId, 'importMappedColumns');\r\n  return s.settingsApiService.getSettingsByGroupIdSettingType(groupId , SettingType.importMappedColumns);\r\n}\r\n\r\n}\r\n","import {map} from 'rxjs/operators';\r\nimport { TranslatedComponent } from '../i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../i18n/translation-base-keys';\r\nimport { TranslationManager } from '../i18n/translation-manager';\r\nimport { HelperService } from './helper.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { InsuranceApiService } from '../../_api/_runtime/services/insurance-api.service';\r\nimport { ReferenceDataApiService } from '../../_api/_configuration/services/reference-data-api.service';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { AttributeTypesAndCodesResult, AttributeTypeOption } from '../../_api/_configuration/dtos/attribute-types-and-codes-result.dto';\r\nimport { CascadedSelectOption } from '../../_models/cascaded-select-option.model';\r\nimport { BuildingDto } from '../../_api/_runtime/dtos/building.dto';\r\nimport { BuildingHierarchyDto, HierarchyMemberDto, HierarchyBuildingDto } from '../../_api/_runtime/dtos/building-hierarchy.dto';\r\nimport { SiteDto } from '../../_api/_runtime/dtos/site.dto';\r\nimport { AttributeCode, AttributeCodeResult } from '../../_api/_configuration/dtos/attribute-code-result.dto';\r\nimport { FieldOption } from '../../_models/field-option.model';\r\nimport { ContentCode } from '../../_api/_configuration/dtos/content-code.dto';\r\nimport { EnumDto } from '../../_api/_configuration/dtos/enum.dto';\r\nimport { RecordType } from '../../_api/_runtime/enums/record-type';\r\nimport { ActivityCode } from '../../_api/_runtime/enums/activity-code';\r\nimport { EntryAlarm } from '../../_api/_runtime/enums/entry-alarm';\r\nimport { UnitOfMeasure } from '../../_api/_runtime/enums/unit-of-measure';\r\nimport { BuildingCondition } from '../../_api/_runtime/enums/building-condition';\r\n\r\n@Injectable()\r\nexport class BuildingInfoService implements TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  constructor(\r\n    private insuranceApiService: InsuranceApiService,\r\n    private referenceDataApiService: ReferenceDataApiService,\r\n    private translateService: TranslationManager,\r\n    private helperService: HelperService\r\n  ) {}\r\n\r\n  public buildingAttributeCodesSource = new BehaviorSubject<AttributeTypesAndCodesResult>(undefined);\r\n  public buildingAttributeCodes$ = this.buildingAttributeCodesSource.asObservable();\r\n\r\n  public cascadedSelectedOption = new BehaviorSubject<Array<CascadedSelectOption>>(new Array<CascadedSelectOption>());\r\n  public cascadedTree$ = this.cascadedSelectedOption.asObservable();\r\n\r\n  private hiddenColumns = [\r\n    'id',\r\n    'siteId',\r\n    'iRISRowID',\r\n    'buildingId',\r\n    'childAdditionCriterionId',\r\n    'referenceBuildingAdditionCriterionId',\r\n    'updatedUserId'\r\n  ];\r\n\r\n  private occupancyCodeAttributeTypeCode = '101';\r\n\r\n  /* Columns To display as default (from Jason S):\r\n1.\tActivity Code\r\n2.\tBuilding Type\r\n3.\tDate Of Inspection\r\n4.\tMember\r\n5.\tBuilding description\r\n6.\tUnit of Measure\r\n7.\tSite\r\n8.\tBuilding Name\r\n*/\r\n  private defaultColumns = [\r\n    'activityCode',\r\n    'memberNumber',\r\n    'siteNumber',\r\n    'buildingNumber',\r\n    'buildingName',\r\n    'costReproductionNew',\r\n    'valuationCreatedDate',\r\n    'floorArea',\r\n    'basementFloorArea',\r\n    'inspectionDate',\r\n    'valuationNumber',\r\n    'displayId'\r\n  ];\r\n\r\n  private readonlyColumns = [\r\n    'displayId',\r\n    'id',\r\n    'valuationId',\r\n    'valuationNumber',\r\n    'valuationLastUpdateMultiplier',\r\n    'valuationEffectiveDate',\r\n    'valuationExpirationDate',\r\n    'valuationCreatedDate',\r\n    'valuationActualCashValue',\r\n    'valuationErrorCode',\r\n    'valuationErrorDescription',\r\n    'iRISRowID',\r\n    'siteId',\r\n    'memberName',\r\n    'memberNumber',\r\n    'siteNumber',\r\n    'siteName',\r\n    'updatedUserId',\r\n    'basementFloorArea',\r\n    'floodPlainStatus',\r\n    'floodPlainStatusName',\r\n    'floodPlainStatusCode',\r\n    'floodPlainDescription',\r\n    'floodPlainNFIPCommunityFirmDate',\r\n    'floodPlainNFIPCommunityIdentifier',\r\n    'floodPlainNFIPCommunityName',\r\n    'floodPlainNFIPCommunityParticipationStartDate',\r\n    'floodPlainNFIPCounty',\r\n    'floodPlainNFIPState',\r\n    'floodPlainFloodDepth',\r\n    'floodPlainFloodZoneboundary1Identifier',\r\n    'floodPlainFloodZoneboundary1Distance',\r\n    'floodPlainFloodZoneboundary2Identifier',\r\n    'floodPlainFloodZoneboundary2Distance',\r\n    'floodPlainFloodZoneIdentifier',\r\n    'floodPlainMapIdentifier',\r\n    'floodPlainMapIndicator',\r\n    'floodPlainMapPanelDate',\r\n    'floodPlainMapPanelIdentifier',\r\n    'floodPlainMapPanelSuffixIdentifier',\r\n    'floodPlainSpecialFloodHazardAreaDistanceFeetCount',\r\n    'floodPlainPartialIndicator',\r\n    'floodPlainSpecialFloodHazardAreaIndicator'\r\n  ];\r\n\r\n  private siteAttributeColumns = [\r\n    'soilCondition',\r\n    'degreeSlope',\r\n    'siteAccessibility',\r\n    'sitePosition'\r\n  ];\r\n\r\n  public GetReadonlyAndHiddenFields(): Array<string> {\r\n    return this.readonlyColumns.concat(this.hiddenColumns);\r\n  }\r\n\r\n  public GetInternalColumns(): Array<string> {\r\n    return this.hiddenColumns;\r\n  }\r\n\r\n  public GetDefaultColumns(): Array<string> {\r\n    return this.defaultColumns;\r\n  }\r\n\r\n  public GetSiteAttributeFields(): Array<string>  {\r\n    return this.siteAttributeColumns;\r\n  }\r\n\r\n  public mapGridColumns(buildings: BuildingDto[]): BuildingDto[] {\r\n    buildings.forEach(building => {\r\n      building.imageCollection = building.buildingImages;\r\n      building.activityCode = this.mapActivityCode(parseInt(building.activityCode, 10));\r\n      building.type = this.mapRecordType(parseInt(building.type, 10));\r\n      building.entryAlarm = this.mapEntryAlarmType(parseInt(building.entryAlarm, 10));\r\n      building.unitOfMeasure = this.mapUnitOfMeasure(parseInt(building.unitOfMeasure, 10));\r\n      building.buildingCondition = this.mapBuildingCondition(parseInt(building.buildingCondition, 10));\r\n      building.sitePosition=this.mapSitePositionValue(building.sitePosition);\r\n      building.siteAccessibility=this.mapSiteAccessibilityValue(building.siteAccessibility);\r\n      building.soilCondition=this.mapSoilConditionValue(building.soilCondition);\r\n      building.degreeSlope=this.mapDegreeSlopeValue(building.degreeSlope);\r\n    });\r\n\r\n    return buildings;\r\n  }\r\n\r\n  public convertStringsToEnum(building: BuildingDto): BuildingDto {\r\n    building.activityCode = this.parseActivityCode(building.activityCode).toString();\r\n    building.type = this.parseRecordType(building.type);\r\n    building.entryAlarm = this.parseEntryAlarmType(building.entryAlarm);\r\n    building.unitOfMeasure = this.parseUnitOfMeasure(building.unitOfMeasure);\r\n    building.buildingCondition = this.parseBuildingCondition(building.buildingCondition);\r\n    return building;\r\n  }\r\n\r\n  public updateBuildingAttributeCodes(attributeTypesAndCodesResult: AttributeTypesAndCodesResult) {\r\n    this.buildingAttributeCodesSource.next(attributeTypesAndCodesResult);\r\n  }\r\n\r\n  public getBuildingHierarchyByGroupId(groupId: string): Observable<BuildingHierarchyDto> {\r\n    return this.insuranceApiService.getBuildingHierarchyByGroupId(groupId);\r\n  }\r\n\r\n  public getSitesByGroupId(groupId: string): Observable<Array<SiteDto>> {\r\n    return this.insuranceApiService.getSitesByGroup(groupId);\r\n  }\r\n\r\n  public mapAttributeCodeToSelectOptions(dto: Array<AttributeCode>): Array<CascadedSelectOption> {\r\n    const options = new Array<CascadedSelectOption>();\r\n\r\n    if (dto) {\r\n      dto.forEach(option => {\r\n        options.push(<CascadedSelectOption>{\r\n          key: option.buildingAttributeCodeId,\r\n          displayName: option.description,\r\n          options: new Array<CascadedSelectOption>()\r\n        });\r\n      });\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  public mapAttributeCodeToFieldOptions(dto: Array<AttributeTypeOption>): Array<FieldOption> {\r\n    const options = new Array<FieldOption>();\r\n\r\n    if (dto) {\r\n      dto.forEach(option => {\r\n        options.push(<FieldOption>{\r\n          key: option.buildingAttributeCodeId,\r\n          displayName: option.description\r\n        });\r\n      });\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  public mapContentCodeToFieldOptions(dto: Array<ContentCode>): Array<FieldOption> {\r\n    const options = new Array<FieldOption>();\r\n\r\n    if (dto) {\r\n      dto.forEach(option => {\r\n        options.push(<FieldOption>{\r\n          key: option.description,\r\n          displayName: option.description\r\n        });\r\n      });\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  public mapEnumDtoToSelectOptions(dto: EnumDto): Array<CascadedSelectOption> {\r\n    const options = new Array<CascadedSelectOption>();\r\n\r\n    if (dto && dto.enumOptions) {\r\n      dto.enumOptions.forEach(option => {\r\n        options.push(<CascadedSelectOption>{\r\n          key: option.value.toString(),\r\n          displayName: this.translateService.instant(this.i18n.building + option.displayName),\r\n          options: new Array<CascadedSelectOption>()\r\n        });\r\n      });\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  public mapSitesToSelectOptions(dto: BuildingHierarchyDto): Array<CascadedSelectOption> {\r\n    const options = new Array<CascadedSelectOption>();\r\n\r\n    if (dto.buildings.length > 0) {\r\n      options.push(<CascadedSelectOption>{\r\n        key: 'blankMember',\r\n        displayName: '-',\r\n        options: [<CascadedSelectOption>{ key: 'blankSite', displayName: '-', options: this.mapBuildings(dto.buildings) }]\r\n      });\r\n    }\r\n\r\n    dto.members.forEach(member => {\r\n      if (options.findIndex(c => c.key === member.id) === -1) {\r\n        options.push(<CascadedSelectOption>{\r\n          key: member.id,\r\n          displayName: member.name,\r\n          options: this.mapSites(member)\r\n        });\r\n      }\r\n    });\r\n    return this.helperService.sortCollection(options, 'displayName');\r\n  }\r\n\r\n  public mapBuildingSelection(selectedKey: string, options: Array<CascadedSelectOption>): string {\r\n    let selectedValue = '';\r\n\r\n    if (options) {\r\n      options.forEach(member => {\r\n        member.options.forEach(site => {\r\n          if (site.options.findIndex(building => building.key === selectedKey) >= 0) {\r\n            selectedValue = `${member.key},${site.key},${selectedKey}`;\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    return selectedValue ? selectedValue : `blankMember,blankSite`;\r\n  }\r\n\r\n  public mapMemberSiteSelection(selectedKey: string, options: Array<CascadedSelectOption>): string {\r\n    let selectedValue = '';\r\n\r\n    options.forEach(member => {\r\n      member.options.forEach(site => {\r\n        if (site.key === selectedKey) {\r\n          selectedValue = `${member.key},${selectedKey}`;\r\n        }\r\n      });\r\n    });\r\n\r\n    return selectedValue;\r\n  }\r\n\r\n  public getAttributes(): Observable<EnumDto> {\r\n    return this.referenceDataApiService.getAttributeType().pipe(map(c => c.result));\r\n  }\r\n\r\n  public getAttributeCodes(attributeTypeId: number): Observable<AttributeCodeResult> {\r\n    return this.referenceDataApiService.getAttributeCodes(attributeTypeId);\r\n  }\r\n\r\n  public getAttributeTypesAndCodes(): Observable<Array<AttributeTypesAndCodesResult>> {\r\n    return this.referenceDataApiService.getAttributeTypesAndCodes().pipe(map(c => c.result));\r\n  }\r\n\r\n  public getContentCodes(): Observable<Array<ContentCode>> {\r\n    return this.referenceDataApiService.getContentCodes().pipe(map(c => c.result));\r\n  }\r\n\r\n  public getBuildingConditions(): Observable<EnumDto> {\r\n    return this.referenceDataApiService.getBuildingConditions().pipe(map(c => c.result));\r\n  }\r\n  public getBuildingPerimeterAdjustmentMethod(): Observable<EnumDto> {\r\n    return this.referenceDataApiService.getBuildingPerimeterAdjustmentMethod().pipe(map(c => c.result));\r\n  }\r\n  public getEntryAlarmOptions(): Observable<EnumDto> {\r\n    return this.referenceDataApiService.getEntryAlarmOptions().pipe(map(c => c.result));\r\n  }\r\n\r\n  public getUnitsOfMEasure(): Observable<EnumDto> {\r\n    return this.referenceDataApiService.getUnitsOfMeasure().pipe(map(c => c.result));\r\n  }\r\n\r\n  private mapSites(member: HierarchyMemberDto): Array<CascadedSelectOption> {\r\n    const sites = new Array<CascadedSelectOption>();\r\n\r\n    member.sites.forEach(site => {\r\n      if (sites.findIndex(c => c.key === site.id) === -1) {\r\n        sites.push(<CascadedSelectOption>{\r\n          key: site.id,\r\n          displayName: site.name,\r\n          options: this.mapBuildings(site.buildings)\r\n        });\r\n      }\r\n    });\r\n\r\n    return this.helperService.sortCollection(sites, 'displayName');\r\n  }\r\n\r\n  private mapBuildings(buildings: Array<HierarchyBuildingDto>): Array<CascadedSelectOption> {\r\n    const options = new Array<CascadedSelectOption>();\r\n\r\n    buildings.forEach(building => {\r\n      options.push(<CascadedSelectOption>{\r\n        key: building.id,\r\n        displayName: building.name\r\n      });\r\n    });\r\n\r\n    return this.helperService.sortCollection(options, 'displayName');\r\n  }\r\n\r\n  private mapRecordType(recordType: RecordType): string {\r\n    switch (recordType) {\r\n      case RecordType.Building:\r\n        return 'Building';\r\n      case RecordType.LandImprovement:\r\n        return 'Land Improvement';\r\n      case RecordType.MinorBuilding:\r\n        return 'Minor Building';\r\n      default:\r\n        return 'Unknown Record Type';\r\n    }\r\n  }\r\n\r\n  private parseRecordType(recordType: string): string | undefined {\r\n    if (recordType) {\r\n      if (recordType === 'Building') { return RecordType.Building.toString(); }\r\n      if (recordType === 'Land Improvement') { return RecordType.LandImprovement.toString(); }\r\n      if (recordType === 'Minor Building') { return RecordType.MinorBuilding.toString(); }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  private mapActivityCode(activityCode: ActivityCode): string {\r\n    switch (activityCode) {\r\n      case ActivityCode.Active:\r\n        return 'Active';\r\n      case ActivityCode.Deactivated:\r\n        return 'Deactivated';\r\n      case ActivityCode.New:\r\n        return 'New';\r\n      case ActivityCode.Retired:\r\n        return 'Retired';\r\n      default:\r\n        return 'Unknown Activity Code';\r\n    }\r\n  }\r\n\r\n  private mapBuildingCondition(buildingCondition: BuildingCondition): string {\r\n    switch (buildingCondition) {\r\n      case BuildingCondition.Excellent:\r\n        return 'Excellent';\r\n      case BuildingCondition.Good:\r\n        return 'Good';\r\n      case BuildingCondition.Average:\r\n        return 'Average';\r\n      case BuildingCondition.Fair:\r\n        return 'Fair';\r\n      case BuildingCondition.Poor:\r\n        return 'Poor';\r\n      case BuildingCondition.Dilapidated:\r\n        return 'Dilapidated';\r\n      case BuildingCondition.NA:\r\n        return 'NA';        \r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  private parseActivityCode(activityCode: string): string | undefined {\r\n    if (!activityCode) { return undefined; }\r\n    if (activityCode === 'Active') { return ActivityCode.Active.toString(); }\r\n    if (activityCode === 'Deactivated') { return ActivityCode.Deactivated.toString(); }\r\n    if (activityCode === 'New') { return ActivityCode.New.toString(); }\r\n    if (activityCode === 'Retired') { return ActivityCode.Retired.toString(); }\r\n    return undefined;\r\n  }\r\n\r\n  private parseBuildingCondition(buildingCondition: string): string | undefined {\r\n    if (!buildingCondition) { return undefined; }\r\n    if (buildingCondition === 'Excellent') { return BuildingCondition.Excellent.toString(); }\r\n    if (buildingCondition === 'Good') { return BuildingCondition.Good.toString(); }\r\n    if (buildingCondition === 'Average') { return BuildingCondition.Average.toString(); }\r\n    if (buildingCondition === 'Fair') { return BuildingCondition.Fair.toString(); }\r\n    if (buildingCondition === 'Poor') { return BuildingCondition.Poor.toString(); }\r\n    if (buildingCondition === 'Dilapidated') { return BuildingCondition.Dilapidated.toString(); }\r\n    if (buildingCondition === 'NA') { return BuildingCondition.NA.toString(); }\r\n    return undefined;\r\n  }\r\n\r\n  private mapEntryAlarmType(entryAlarm: EntryAlarm): string {\r\n    switch (entryAlarm) {\r\n      case EntryAlarm.No:\r\n        return 'No';\r\n      case EntryAlarm.Yes:\r\n        return 'Yes';\r\n      case EntryAlarm.Partial:\r\n        return 'Partial';\r\n    }\r\n  }\r\n\r\n  private parseEntryAlarmType(entryAlarm: string): string | undefined {\r\n    if (!entryAlarm) { return undefined; }\r\n    if (entryAlarm === 'No') { return EntryAlarm.No.toString(); }\r\n    if (entryAlarm === 'Yes') {return EntryAlarm.Yes.toString(); }\r\n    if (entryAlarm === 'Partial') {return EntryAlarm.Partial.toString(); }\r\n    return undefined;\r\n  }\r\n\r\n  private mapUnitOfMeasure(unitOfMeasure: UnitOfMeasure): string {\r\n    switch (unitOfMeasure) {\r\n      case UnitOfMeasure.Feet:\r\n        return 'Feet';\r\n      case UnitOfMeasure.Meters:\r\n        return 'Meters';\r\n    }\r\n  }\r\n\r\n  private parseUnitOfMeasure(unitOfMeasure: string): string | undefined {\r\n    if (!unitOfMeasure) { return undefined; }\r\n    if (unitOfMeasure === 'Feet') { return UnitOfMeasure.Feet.toString(); }\r\n    if (unitOfMeasure === 'Meters') { return UnitOfMeasure.Meters.toString(); }\r\n    return undefined;\r\n  }\r\n  \r\n  mapSitePosition = new Map<string, string>();\r\n  private mapSitePositionValue(sitePosition: string): string | undefined {\r\n    this.mapSitePosition.set(\"db24628b-f40d-400c-bb8d-aff6f9c60bfa\", \"Unknown\");\r\n    this.mapSitePosition.set(\"266ab478-01c8-4c46-8c93-02ddfb57198b\", \"Downhill\");\r\n    this.mapSitePosition.set(\"53fe322f-485c-46f7-ad9d-8db0b0ab32f4\", \"Uphill\");\r\n    return this.mapSitePosition.get(sitePosition);\r\n  }\r\n  mapSiteAccessibility = new Map<string, string>();\r\n  private mapSiteAccessibilityValue(siteAccessibility: string): string | undefined {\r\n    this.mapSiteAccessibility.set(\"630c3d59-7ddc-42b2-8af6-0582688eaf0b\", \"Excellent\");\r\n    this.mapSiteAccessibility.set(\"0b71e4ef-639c-4d75-91f4-5dd677e11468\", \"Good\");\r\n    this.mapSiteAccessibility.set(\"8817bcc8-2099-4173-a5be-f85ff77ca774\", \"Fair\");\r\n    this.mapSiteAccessibility.set(\"a1d639de-85d1-400d-9b83-3bc3449fa5db\", \"Poor\");\r\n    return this.mapSiteAccessibility.get(siteAccessibility);;\r\n  }\r\n  mapSoilCondition = new Map<string, string>();\r\n  private mapSoilConditionValue(soilCondition: string): string | undefined {\r\n    this.mapSoilCondition.set(\"42bd3ad8-52ba-48d2-b730-f904dedee28a\", \"Excellent\");\r\n    this.mapSoilCondition.set(\"8f8454ab-0392-4707-b662-2c5aab4ddb74\", \"Good\");\r\n    this.mapSoilCondition.set(\"b0c1e52c-7b26-44ea-a0f2-f08631f76b39\", \"Fair\");\r\n    this.mapSoilCondition.set(\"65ac8f8c-498d-47d1-8511-a649e0f2fd7a\", \"Poor\");\r\n    return this.mapSoilCondition.get(soilCondition);;\r\n  }\r\n  mapDegreeSlope = new Map<string, string>();\r\n  private mapDegreeSlopeValue(degreeSlope: string): string | undefined {\r\n    this.mapDegreeSlope.set(\"c1d4b048-3d48-40d4-9b8f-35b2c7f01534\", \"Level\");\r\n    this.mapDegreeSlope.set(\"4d1d699e-7c3d-4274-bb1f-9b2dcca2db59\", \"15%\");\r\n    this.mapDegreeSlope.set(\"fadc42f9-293b-401c-a3df-2081cf86b859\", \"30%\");\r\n    this.mapDegreeSlope.set(\"76eea7c1-3122-430d-b742-6e69064f50e1\", \"45%\");\r\n    return this.mapSitePosition.get(degreeSlope);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { CascadedSelectOption } from '../../_models/cascaded-select-option.model';\r\n\r\n@Injectable()\r\nexport class DynamicFormControlService {\r\n  private optionSource = new BehaviorSubject<Array<Array<CascadedSelectOption>>>(new Array<Array<CascadedSelectOption>>());\r\n\r\n  public options$ = this.optionSource.asObservable();\r\n\r\n  public updateOptions(id: number, options: Array<CascadedSelectOption>) {\r\n    const current = this.optionSource.getValue();\r\n\r\n    current[id] = options;\r\n\r\n    this.optionSource.next(current);\r\n  }\r\n\r\n  constructor() {}\r\n}\r\n","import { LoggingService } from './logging.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable, ErrorHandler, Injector } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class ErrorHandlerService implements ErrorHandler {\r\n  constructor(private injector: Injector) {}\r\n\r\n  handleError(error: any): void {\r\n    const loggingService = this.injector.get(LoggingService);\r\n\r\n    const router = this.injector.get(Router);\r\n\r\n    if (!(error instanceof HttpErrorResponse)) {\r\n      loggingService.logError(error);\r\n\r\n      router.navigate(['error/500'], { skipLocationChange: true, replaceUrl: true });\r\n    }\r\n  }\r\n}\r\n","\r\nimport {map} from 'rxjs/operators';\r\nimport { FilterOperationsService } from './filter-operations.service';\r\nimport { UserStore } from '../user/user.store';\r\nimport { UserGridService, GridSetting } from './user-grid.service';\r\nimport { of, BehaviorSubject, Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { DataItemValue } from '../../_models/data-item-value.model';\r\nimport { AssetSortTermDto } from '../../_api/_runtime/dtos/asset-sort-term.dto';\r\nimport { BuildingSortTermDto } from '../../_api/_runtime/dtos/building-sort-term.dto';\r\nimport { ContractSortTermDto,\r\n  ContractFilterTermDto, ContractSearchTermDto } from '../../_api/_runtime/dtos/contract/contract-search-filter-dto';\r\nimport { BuildingFilterTermDto } from '../../_api/_runtime/dtos/building-filter-term.dto';\r\nimport { AssetFilterTermDto } from '../../_api/_runtime/dtos/asset-filter-term.dto';\r\nimport { IntlService } from '@progress/kendo-angular-intl';\r\nimport { ApiService } from '../../_api/services/api.service';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { DataTargetName } from '../../_enums/data-target-name';\r\nimport { FamisGridCacheResult, FamisGridCacheWindow } from '../../_models/shared/famis-grid-cache-result.model';\r\nimport { CompositeFilterDescriptor, FilterDescriptor } from '@progress/kendo-data-query';\r\nimport { AssetSearchTermDto } from '../../_api/_runtime/dtos/asset-search-term.dto';\r\nimport { BuildingSearchTermDto } from '../../_api/_runtime/dtos/building-search-term.dto';\r\nimport { GridColumnHeader } from '../../_models/grid-column-header.model';\r\nimport { FieldType } from '../../_enums/field-type';\r\nimport { CreateAssetFileCustomColumnDto } from '../../_api/dtos/create-asset-file-custom-column.dto';\r\nimport { ApiServiceResult } from '../../_api/dtos/api-service-result.dto';\r\n\r\n@Injectable()\r\nexport class FamisGridService {\r\n  // Usage of Any type is by design as Grid can present a collection of any datatype\r\n  private cachedRecordsSource = new BehaviorSubject<Array<Array<any>>>(new Array<Array<any>>());\r\n  public cachedRecords$ = this.cachedRecordsSource.asObservable();\r\n\r\n  private editedRecordsSource = new BehaviorSubject<Array<DataItemValue>>(new Array<DataItemValue>());\r\n  public editedRecords$ = this.editedRecordsSource.asObservable();\r\n\r\n  private editedRecordsWithErrorsSource = new BehaviorSubject<Array<DataItemValue>>(new Array<DataItemValue>());\r\n  public editedRecordsWithErrors$ = this.editedRecordsWithErrorsSource.asObservable();\r\n\r\n  public windowSize = 250;\r\n  public cacheSize = 250;\r\n\r\n  public defaultSkip = 0;\r\n  public defaultTake = 250;\r\n\r\n  public totalRecordCounts = new Array<number>();\r\n\r\n  public currentSort = new Array<Array<AssetSortTermDto | BuildingSortTermDto | ContractSortTermDto>>();\r\n  public filterTerms = new Array<\r\n    Array<AssetFilterTermDto | BuildingFilterTermDto | ContractFilterTermDto>\r\n  >();\r\n\r\n  private lastCachedIndexSource = new Array<number>();\r\n  public userId: string;\r\n  public userGridSettingsName: string;\r\n\r\n  constructor(\r\n    private filterOperationsService: FilterOperationsService,\r\n    private intl: IntlService,\r\n    private apiService: ApiService,\r\n    private configService: ConfigService,\r\n    private userStore: UserStore,\r\n    private userGridService: UserGridService\r\n  ) {}\r\n\r\n  public setUserId(): void {\r\n    this.userStore.user.subscribe(user => {\r\n      this.userId = user.profile.IdentityId.toString();\r\n    });\r\n  }\r\n\r\n  public setUserGridFilterSettings(\r\n    dataSource: DataTargetName,\r\n    routeUrl: string,\r\n    gridName: string,\r\n    gridSelectedHeaders: string[]): Observable<GridSetting> {\r\n      this.setUserGridSettingName(dataSource ? dataSource.toString() : null, routeUrl, gridName);\r\n      this.userGridSettingsName = this.userId + this.userGridSettingsName;\r\n      return this.userGridService.getSettings(this.userId, this.userGridSettingsName, gridSelectedHeaders);\r\n  }\r\n\r\n  public setUserGridSettingName(dataSource: string, routeUrl: string, gridName: string): void {\r\n    this.userGridSettingsName = this.userGridService.createUserGridId(\r\n      dataSource,\r\n      routeUrl,\r\n      gridName\r\n    );\r\n  }\r\n\r\n  update(\r\n    gridId: number,\r\n    skip: number,\r\n    take: number,\r\n    totalRecordCount: number,\r\n    sortTerms: AssetSortTermDto[] | BuildingSortTermDto[],\r\n    clearCache: boolean = false\r\n  ): Observable<FamisGridCacheResult> {\r\n    const s = this;\r\n\r\n    return Observable.create(function(observer) {\r\n      const result = <FamisGridCacheResult>{\r\n        gridId: gridId,\r\n        updateCache: true,\r\n        cachedData: null,\r\n        filters: s.filterTerms.length > 0 ? s.filterTerms[gridId] : null,\r\n        sortTerms: s.currentSort.length > 0 ? s.currentSort[gridId] : null,\r\n        cacheWindow: s.calculateCacheRecords(gridId, skip, totalRecordCount)\r\n      };\r\n\r\n      observer.next(result);\r\n      observer.complete();\r\n    });\r\n  }\r\n\r\n  public clearEditedRecords() {\r\n    this.editedRecordsSource.next(new Array<DataItemValue>());\r\n    this.editedRecordsWithErrorsSource.next(new Array<DataItemValue>());\r\n  }\r\n\r\n  public addEditedRecord(itemId: string, dataItem: any) {\r\n    let current = this.editedRecordsSource.getValue();\r\n\r\n    if (!Array.isArray(current)) {\r\n      current = new Array<DataItemValue>();\r\n    }\r\n\r\n    current.push({ itemId: itemId, dataItem: dataItem });\r\n\r\n    console.log(current, 'Add edited record');\r\n\r\n    this.editedRecordsSource.next(current);\r\n  }\r\n\r\n  public addRecordsWithErrors(itemId: string, dataItem: any) {\r\n    let current = this.editedRecordsWithErrorsSource.getValue();\r\n\r\n    if (!Array.isArray(current)) {\r\n      current = new Array<DataItemValue>();\r\n    }\r\n\r\n    const index = current.findIndex(c => c.itemId === itemId);\r\n\r\n    if (index === -1) {\r\n      current.push({ itemId: itemId, dataItem: dataItem });\r\n    }\r\n\r\n    this.editedRecordsWithErrorsSource.next(current);\r\n  }\r\n\r\n  public removeEditedRecord(itemId: string) {\r\n    let current = this.editedRecordsSource.getValue();\r\n\r\n    if (!Array.isArray(current)) {\r\n      current = new Array<DataItemValue>();\r\n    }\r\n\r\n    const index = current.findIndex(c => c.itemId === itemId);\r\n\r\n    current.splice(index, 1);\r\n\r\n    this.editedRecordsSource.next(current);\r\n  }\r\n\r\n  public removeRecordWithErrors(itemId: string) {\r\n    let current = this.editedRecordsWithErrorsSource.getValue();\r\n\r\n    if (!Array.isArray(current)) {\r\n      current = new Array<DataItemValue>();\r\n    }\r\n\r\n    const index = current.findIndex(c => c.itemId === itemId);\r\n\r\n    if (index !== -1) {\r\n      current.splice(index, 1);\r\n    }\r\n\r\n    this.editedRecordsWithErrorsSource.next(current);\r\n  }\r\n\r\n  public createGrid(): number {\r\n    const current = this.cachedRecordsSource.getValue();\r\n\r\n    // Usage of Any type is by design as Grid can present a collection of any datatype\r\n    current.push(new Array<any>());\r\n\r\n    this.cachedRecordsSource.next(current);\r\n\r\n    return current.length - 1;\r\n  }\r\n  // Usage of Any type is by design as Grid can present a collection of any datatype\r\n  public setCacheRecords(gridData: Array<any>, gridId: number, skip: number, totalRecordCount: number, take: number) {\r\n    const current = this.cachedRecordsSource.getValue();\r\n\r\n    current[gridId] = gridData;\r\n    this.cachedRecordsSource.next(current);\r\n\r\n    this.lastCachedIndexSource[gridId] = skip + take;\r\n\r\n    this.totalRecordCounts[gridId] = totalRecordCount;\r\n  }\r\n\r\n  public mapFilterTerms(kendoFilters: CompositeFilterDescriptor, gridId: number, dataTarget: DataTargetName): Observable<boolean> {\r\n    const s = this;\r\n\r\n    s.resetFilters();\r\n\r\n    let success = false;\r\n\r\n    if (kendoFilters) {\r\n      const filters = <CompositeFilterDescriptor[]>kendoFilters.filters;\r\n\r\n      [].concat.apply([], filters.map(c => c.filters || c)).forEach(filter => {\r\n        if (Array.isArray(filter.value)) {\r\n          this.filterTerms[gridId] = [...this.filterTerms[gridId], ...this.consturctAssetFilterTermArray(filter.value, dataTarget)];\r\n        } else if (typeof filter.value === 'string') {\r\n          this.filterTerms[gridId] = [...this.filterTerms[gridId], this.constructContractFilterTerm(filter)];\r\n        }\r\n        success = true;\r\n      });\r\n    }\r\n\r\n    return of(success);\r\n  }\r\n\r\n  private consturctAssetFilterTermArray(filterTerms: FilterDescriptor[], dataTarget: DataTargetName) {\r\n    let assetFilterTermArray = Array<AssetFilterTermDto>();\r\n\r\n    filterTerms.forEach(term => {\r\n      assetFilterTermArray = [\r\n        ...assetFilterTermArray,\r\n        {\r\n          term: <AssetSearchTermDto>{\r\n            dataTarget: dataTarget,\r\n            field: term.field.toString(),\r\n            value: term.value\r\n          },\r\n          operation: term.operator.toString()\r\n        }\r\n      ];\r\n    });\r\n\r\n    return assetFilterTermArray;\r\n  }\r\n\r\n  private constructContractFilterTerm(filterTerm: FilterDescriptor) {\r\n    return <ContractFilterTermDto>{\r\n      operation: filterTerm.operator,\r\n      term: <ContractSearchTermDto>{\r\n        field: filterTerm.field,\r\n        value: filterTerm.value\r\n      }\r\n    };\r\n  }\r\n\r\n  public mapBuildingFilterTerms(kendoFilters: CompositeFilterDescriptor, gridId: number): Observable<boolean> {\r\n    const s = this;\r\n\r\n    s.resetFilters();\r\n\r\n    const tempFilter = this.filterTerms[gridId];\r\n    let success = false;\r\n\r\n    if (kendoFilters) {\r\n      kendoFilters.filters.forEach(d => {\r\n        const filterDescriptor = <CompositeFilterDescriptor>d;\r\n\r\n        filterDescriptor.filters.forEach(f => {\r\n          const kendoFilter = <FilterDescriptor>f;\r\n\r\n          const filterOperation = this.filterOperationsService.mapKendoFilterOperation(kendoFilter.operator.toString());\r\n\r\n          if (filterOperation !== 'notsupported') {\r\n            const buildingFilterTerm = <BuildingFilterTermDto>{\r\n              term: <BuildingSearchTermDto>{\r\n                field: kendoFilter.field.toString(),\r\n                value: kendoFilter.value\r\n              },\r\n              operation: filterOperation\r\n            };\r\n\r\n            this.filterTerms[gridId].push(buildingFilterTerm);\r\n            success = true;\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    return of(success);\r\n  }\r\n\r\n  mapToTypedValues(dataItem: any, headers: GridColumnHeader[]): any {\r\n    const props = Object.keys(dataItem);\r\n    const dateHeaders = headers.filter(c => c.fieldType === 'date' || c.fieldType === FieldType.Date\r\n      || c.fieldType === FieldType.DateTime);\r\n\r\n    const numericHeaders = headers.filter(c => c.fieldType === 'numeric' ||\r\n       c.fieldType === FieldType.Double || c.fieldType === FieldType.Integer || c.fieldType === FieldType.Percent);\r\n\r\n    props.forEach(property => {\r\n      if (dateHeaders.findIndex(c => c.name === property) !== -1) {\r\n        const date = this.intl.parseDate(dataItem[property]);\r\n\r\n        dataItem[property] = this.intl.toString(date, 'MM/dd/yyyy');\r\n      }\r\n\r\n      if (numericHeaders.findIndex(c => c.name === property) !== -1) {\r\n        dataItem[property] = this.intl.parseNumber(dataItem[property], 'n', 'en');\r\n      }\r\n    });\r\n\r\n    return dataItem;\r\n  }\r\n\r\n  public resetFilters(): void {\r\n    const current = this.cachedRecordsSource.getValue();\r\n\r\n    this.filterTerms = new Array<Array<AssetFilterTermDto | BuildingFilterTermDto>>();\r\n\r\n    current.forEach(cachedRecord => {\r\n      this.filterTerms.push(new Array<AssetFilterTermDto | BuildingFilterTermDto>());\r\n    });\r\n  }\r\n\r\n  public resetCache(): void {\r\n    let current = this.cachedRecordsSource.getValue();\r\n\r\n    // Usage of Any type is by design as Grid can present a collection of any datatype\r\n    current = new Array<Array<any>>();\r\n\r\n    this.cachedRecordsSource.next(current);\r\n  }\r\n\r\n  private calculateCacheRecords(gridId: number, skip: number, recordCount: number): FamisGridCacheWindow {\r\n    let take = this.cacheSize;\r\n\r\n    if (recordCount <= this.cacheSize) {\r\n      take = recordCount;\r\n    }\r\n\r\n    if (recordCount > this.cacheSize && skip === 0) {\r\n      take = this.cacheSize;\r\n    }\r\n\r\n    if (recordCount > this.cacheSize && skip > this.cacheSize) {\r\n      take = this.cacheSize;\r\n    }\r\n\r\n    return <FamisGridCacheWindow>{ skip: skip, take: !take ? this.defaultTake : take };\r\n  }\r\n\r\n  public AddAssetCustomColumns(\r\n    fileId: string,\r\n    columns: CreateAssetFileCustomColumnDto[]\r\n  ): Observable<ApiServiceResult<CreateAssetFileCustomColumnDto[]>> {\r\n    return this.apiService\r\n      .post(`${this.configService.getSettings('runtimeApiEndpoint')}/Inventory/AssetFiles/${fileId}/CustomColumns`, columns).pipe(\r\n      map(result => <ApiServiceResult<Array<CreateAssetFileCustomColumnDto>>>result));\r\n  }\r\n\r\n  public AddBuildingCustomColumns(\r\n    groupId: string,\r\n    columns: CreateAssetFileCustomColumnDto[]\r\n  ): Observable<CreateAssetFileCustomColumnDto[]> {\r\n    return this.apiService\r\n      .post(`${this.configService.getSettings('runtimeApiEndpoint')}/Insurance/group/${groupId}/CustomColumns`, columns).pipe(\r\n      map(result => <Array<CreateAssetFileCustomColumnDto>>result));\r\n  }\r\n\r\n  public DeleteAssetCustomColumn(\r\n    fileId: string,\r\n    customColumnName: string\r\n  ): Observable<ApiServiceResult<CreateAssetFileCustomColumnDto[]>> {\r\n    return this.apiService\r\n      .delete(`${this.configService.getSettings('runtimeApiEndpoint')}/Inventory/AssetFiles/${fileId}/CustomColumn/${customColumnName}`);\r\n  }\r\n\r\n  public DeleteBuildingCustomColumn(\r\n    groupId: string,\r\n    customColumnName: string\r\n  ): Observable<any> {\r\n    return this.apiService\r\n      .delete(`${this.configService.getSettings('runtimeApiEndpoint')}/Insurance/group/${groupId}/CustomColumn/${customColumnName}`);\r\n  }\r\n\r\n  public IsBuildingCustomColumnEmpty(\r\n    groupId: string,\r\n    customColumnName: string\r\n  ): Observable<any> {\r\n    return this.apiService\r\n      .get(`${this.configService.getSettings('runtimeApiEndpoint')}/Insurance/group/${groupId}/CustomColumn/${customColumnName}`);\r\n  }\r\n\r\n  public IsAssetCustomColumnEmpty(\r\n    fileId: string,\r\n    customColumnName: string\r\n  ): Observable<any> {\r\n    return this.apiService\r\n      .get(`${this.configService.getSettings('runtimeApiEndpoint')}/Inventory/AssetFiles/${fileId}/CustomColumn/${customColumnName}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FilterOperation } from '../../_models/filter-operation.model';\r\nimport { FieldType } from '../../_enums/field-type';\r\nimport { FilterDto } from '../../_api/dtos/inventory/filter.dto';\r\n\r\n@Injectable()\r\nexport class FilterOperationsService {\r\n  // Setting filter operations for each data type\r\n  private integerOperations = ['eq', 'gt', 'lt', 'ge', 'le', 'ne', 'in', 'nin'];\r\n  private doubleOperations = ['eq', 'gt', 'lt', 'ge', 'le', 'ne', 'in', 'nin'];\r\n  private stringOperations = ['eq', 'ne', 'sw', 'ctns', 'nctns', 'in', 'nin'];\r\n  private booleanOperations = ['eq', 'in', 'nin'];\r\n  private dateTimeOperations = ['eq', 'gt', 'lt', 'ge', 'le', 'ne', 'in', 'nin'];\r\n  private dropdownOperations = ['eq', 'ne'];\r\n  private dropdownNullOperations = ['eq', 'ne', 'in', 'nin'];\r\n  private reportStringOpertations = ['eq'];\r\n\r\n  private operations = [\r\n    <FilterOperation>{ name: 'eq', displayName: 'Equals' },\r\n    <FilterOperation>{ name: 'gt', displayName: 'Is Greater Than' },\r\n    <FilterOperation>{ name: 'lt', displayName: 'Is Less Than' },\r\n    <FilterOperation>{ name: 'ge', displayName: 'Is Greater Than or Equal To' },\r\n    <FilterOperation>{ name: 'le', displayName: 'Is Less Than or Equal To' },\r\n    <FilterOperation>{ name: 'ne', displayName: 'Is Not Equal To' },\r\n    <FilterOperation>{ name: 'ctns', displayName: 'Contains' },\r\n    <FilterOperation>{ name: 'nctns', displayName: 'Not Contains' },\r\n    <FilterOperation>{ name: 'in', displayName: 'Is Null' },\r\n    <FilterOperation>{ name: 'nin', displayName: 'Is Not Null' },\r\n    <FilterOperation>{ name: 'sw', displayName: 'Starts With' },\r\n  ];\r\n\r\n  constructor() { }\r\n\r\n  // Gets filter operations for the given data type (int, double, string etc...)\r\n  getOperationsForFieldType(fieldType: number, isNullable: boolean = false): Array<FilterOperation> {\r\n    let operationsForType = new Array<FilterOperation>();\r\n\r\n    const s = this;\r\n\r\n    switch (fieldType) {\r\n      case FieldType.Integer: {\r\n        operationsForType = this.operations.filter(function (x) {\r\n          return s.integerOperations.find(c => c === x.name);\r\n        });\r\n        break;\r\n      }\r\n\r\n      case FieldType.Double: {\r\n        operationsForType = this.operations.filter(function (x) {\r\n          return s.doubleOperations.find(c => c === x.name);\r\n        });\r\n        break;\r\n      }\r\n\r\n      case FieldType.String: {\r\n        operationsForType = this.operations.filter(function (x) {\r\n          return s.stringOperations.find(c => c === x.name);\r\n        });\r\n        break;\r\n      }\r\n\r\n      case FieldType.Boolean: {\r\n        operationsForType = this.operations.filter(function (x) {\r\n          return s.booleanOperations.find(c => c === x.name);\r\n        });\r\n        break;\r\n      }\r\n\r\n      case FieldType.DateTime: {\r\n        operationsForType = this.operations.filter(function (x) {\r\n          return s.dateTimeOperations.find(c => c === x.name);\r\n        });\r\n        break;\r\n      }\r\n\r\n      case FieldType.Date: {\r\n        operationsForType = this.operations.filter(function (x) {\r\n          return s.dateTimeOperations.find(c => c === x.name);\r\n        });\r\n        break;\r\n      }\r\n\r\n      case FieldType.DropDown: {\r\n        if(isNullable) {\r\n          operationsForType = this.operations.filter(function (x) {\r\n            return s.dropdownNullOperations.find(c => c === x.name);\r\n          });\r\n        }\r\n        else {\r\n          operationsForType = this.operations.filter(function (x) {\r\n            return s.dropdownOperations.find(c => c === x.name);\r\n          });\r\n        }        \r\n        break;\r\n      }\r\n\r\n      case FieldType.Image:{\r\n        operationsForType = this.operations.filter(function(x) {\r\n          return s.reportStringOpertations.find(c => c === x.name);\r\n        });\r\n        break;\r\n      }\r\n\r\n      default: {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return operationsForType;\r\n  }\r\n\r\n  public mapKendoFilterOperation(kendoFilterOperation: string) {\r\n    switch (kendoFilterOperation) {\r\n      case 'lt':\r\n        return 'lt';\r\n      case 'lte':\r\n        return 'le';\r\n      case 'eq':\r\n        return 'eq';\r\n      case 'neq':\r\n        return 'ne';\r\n      case 'isnull':\r\n        return 'in';\r\n      case 'isnotnull':\r\n        return 'nin';\r\n      case 'contains':\r\n        return 'ctns';\r\n      case 'doesnotcontain':\r\n        return 'nctns';\r\n      case 'startswith':\r\n        return 'sw';\r\n      case 'gt':\r\n        return 'gt';\r\n      case 'gte':\r\n        return 'ge';\r\n      default:\r\n        return 'notsupported';\r\n    }\r\n  }\r\n\r\n  public updateFilter(filterModified: FilterDto, currentFilters: Array<FilterDto>): Array<FilterDto> {\r\n    const index = currentFilters.findIndex(d => d.id === filterModified.id);\r\n    if (index === -1) {\r\n      currentFilters.push(filterModified);\r\n    } else if (index >= 0) {\r\n      currentFilters[index] = filterModified;\r\n    }\r\n\r\n    return currentFilters;\r\n  }\r\n\r\n  public removeFilter(id: string, currentFilters: Array<FilterDto>): Array<FilterDto> {\r\n    const index = currentFilters.findIndex(d => d.id === id);\r\n    if (index >= 0) {\r\n      currentFilters.splice(index, 1);\r\n    }\r\n    return currentFilters;\r\n  }\r\n}\r\n","import { LazyMapsAPILoaderConfigLiteral } from '@agm/core';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\n\r\n@Injectable()\r\nexport class GoogleMapsService implements LazyMapsAPILoaderConfigLiteral {\r\n  public apiKey: string;\r\n\r\n  constructor(private configService: ConfigService) {\r\n    this.apiKey = this.configService.getSettings('googleMapAPIKey');\r\n  }\r\n\r\n}","import { AbstractControl, FormControl, Validators, FormGroup } from '@angular/forms';\r\nimport * as mjs from 'mathjs';\r\nimport { TranslationManager } from '../i18n/translation-manager';\r\nimport { Injectable } from '@angular/core';\r\nimport { IntlService } from '@progress/kendo-angular-intl';\r\nimport { FieldType } from '../../_enums/field-type';\r\nimport { Asset } from '../../_models/asset.model';\r\nimport { GridColumnHeader } from '../../_models/grid-column-header.model';\r\nimport { FieldMetaDataDto } from '../../_api/_configuration/dtos/field-metadata.dto';\r\nimport { MassUpdateRequestAdvancedTermDto } from '../../_api/_runtime/dtos/mass-update-request-advanced-term.dto';\r\nimport { AdvancedMathType } from '../../_api/_runtime/enums/advanced-math-type';\r\nimport { AdvancedMathOperator } from '../../_api/_runtime/enums/advanced-math-operator';\r\nimport { EnumDto } from '../../_api/_configuration/dtos/enum.dto';\r\n\r\n@Injectable()\r\nexport class HelperService {\r\n  constructor(private intl: IntlService, private translateService: TranslationManager) {}\r\n\r\n  public generateGuid() {\r\n    let d = new Date().getTime();\r\n    const guid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n      const r = (d + Math.random() * 16) % 16 | 0;\r\n      d = Math.floor(d / 16);\r\n      return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\r\n    });\r\n    return guid;\r\n  }\r\n\r\n  public getHeaders(obj, hiddenColumns: Array<string> = new Array<string>()): Array<GridColumnHeader> {\r\n    const headers = new Array<GridColumnHeader>();\r\n    if (obj) {\r\n      const keys = Object.keys(obj).map(key => {\r\n        return { key: key };\r\n      });\r\n\r\n      keys.forEach(k => {\r\n        if (hiddenColumns && !hiddenColumns.includes(k.key)) {\r\n          headers.push(<GridColumnHeader>{ name: k.key });\r\n        }\r\n      });\r\n\r\n      return headers;\r\n    }\r\n  }\r\n\r\n  public lowerCasePropertyName(name: string): string {\r\n    if (name == null) {\r\n      return null;\r\n    }\r\n\r\n    if (name.length >= 1) {\r\n      return name.charAt(0).toLowerCase() + name.slice(1, name.length);\r\n    } else {\r\n      return name.charAt(0).toLowerCase();\r\n    }\r\n  }\r\n\r\n  public upperCasePropertyName(name: string): string {\r\n    if (name == null) {\r\n      return null;\r\n    }\r\n\r\n    if (name.length >= 1) {\r\n      return name.charAt(0).toUpperCase() + name.slice(1, name.length);\r\n    } else {\r\n      return name.charAt(0).toUpperCase();\r\n    }\r\n  }\r\n\r\n  public initDate(date: Date): Date {\r\n    return date > new Date('1/1/1') ? date : null;\r\n  }\r\n\r\n  public mapHeaders(\r\n    fields: FieldMetaDataDto[],\r\n    hiddenColumns: string[],\r\n    defaultColumns: Array<GridColumnHeader> = new Array<GridColumnHeader>(),\r\n    enumDtos?: Array<EnumDto>\r\n  ): GridColumnHeader[] {\r\n    const s = this;\r\n    const columnHeadings = new Array<GridColumnHeader>();\r\n\r\n    defaultColumns.forEach(column => {\r\n      fields.find(c => c.name === column.name).order = column.order;\r\n    });\r\n\r\n    let orderCount = 1;\r\n    fields.forEach(field => {\r\n      let enumDto = enumDtos ? enumDtos.find(e => e.enumName.toLowerCase() == field.name.toLowerCase()) : undefined;\r\n      const columnHeading = <GridColumnHeader>{\r\n        name: field.name,\r\n        displayName: field.displayName,\r\n        isSearchable: field.isSearchable,\r\n        isFilterable: field.isFacetable,\r\n        isSortable: field.isSortable,\r\n        isFacetable: field.isFacetable,\r\n        isKey: field.isKey,\r\n        isCustom: field.isCustom,\r\n        isEditable: field.inGridEditable,\r\n        // fieldType: this.mapKendoFilterType(field.fieldType),\r\n        fieldType: field.fieldType,\r\n        format: s.mapHeaderFormat(field),\r\n        order: field.order ? field.order : defaultColumns.length + orderCount,\r\n        enumOptions: enumDto ? enumDto.enumOptions : undefined,\r\n        isNullable: field.isNullable\r\n      };\r\n\r\n      columnHeadings.push(columnHeading);\r\n\r\n      orderCount++;\r\n    });\r\n\r\n    return columnHeadings.filter(function(x) {\r\n      return hiddenColumns.findIndex(c => c === x.name) === -1;\r\n    });\r\n  }\r\n\r\n  public toFormGroup(fields: any[]) {\r\n    const controls: { [key: string]: AbstractControl } = {};\r\n\r\n    fields.forEach(field => {\r\n      controls[field.id] = field.required ? new FormControl(field.value, Validators.required) : new FormControl(field.value);\r\n    });\r\n    return new FormGroup(controls);\r\n  }\r\n\r\n  public move(arr, old_index, new_index) {\r\n    while (old_index < 0) {\r\n      old_index += arr.length;\r\n    }\r\n    while (new_index < 0) {\r\n      new_index += arr.length;\r\n    }\r\n    if (new_index >= arr.length) {\r\n      let k = new_index - arr.length;\r\n      while (k-- + 1) {\r\n        arr.push(undefined);\r\n      }\r\n    }\r\n    arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\r\n    return arr;\r\n  }\r\n\r\n  private mapKendoFilterType(fieldType: FieldType): string {\r\n    switch (fieldType) {\r\n      case FieldType.String:\r\n        return 'text';\r\n      case FieldType.DateTime:\r\n        return 'date';\r\n      case FieldType.Double:\r\n        return 'numeric';\r\n      case FieldType.Integer:\r\n        return 'numeric';\r\n      case FieldType.Image:\r\n        return 'image';\r\n      default:\r\n        return 'numeric';\r\n    }\r\n  }\r\n\r\n  private mapHeaderFormat(header: FieldMetaDataDto): string {\r\n    switch (header.fieldType) {\r\n      case FieldType.Integer: {\r\n        return '0';\r\n      }\r\n\r\n      case FieldType.Double: {\r\n        return 'n';\r\n      }\r\n\r\n      case FieldType.DateTime: {\r\n        return 'd';\r\n      }\r\n\r\n      default: {\r\n        return '0';\r\n      }\r\n    }\r\n  }\r\n\r\n  mapDates(dataItem: Asset, fields: Array<FieldMetaDataDto>): Asset {\r\n    const props = Object.keys(dataItem);\r\n\r\n    const dateFields = fields.filter(c => c.fieldType === FieldType.DateTime);\r\n\r\n    props.forEach(property => {\r\n      if (dateFields.findIndex(c => c.name === property) !== -1) {\r\n        const date = this.intl.parseDate(dataItem[property]);\r\n\r\n        dataItem[property] = date;\r\n      }\r\n    });\r\n\r\n    return dataItem;\r\n  }\r\n\r\n  public sortCollection(collection: any, sortField: string, direction?: string): Array<any> {\r\n    if (collection.length === 0) {\r\n      return collection;\r\n    }\r\n\r\n    if (isNaN(collection[0][sortField])) {\r\n      // Sort by string value\r\n      collection.sort((a: any, b: any) => {\r\n        if (a[sortField] < b[sortField]) {\r\n          return !direction || direction.toLowerCase() === 'asc' ? -1 : 1;\r\n        } else if (a[sortField] > b[sortField]) {\r\n          return !direction || direction.toLowerCase() === 'asc' ? 1 : -1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      });\r\n    }\r\n\r\n    if (!isNaN(collection[0][sortField])) {\r\n      // Sort by numeric value\r\n      collection.sort((a: any, b: any) => {\r\n        if (Number.parseFloat(a[sortField]) < Number.parseFloat(b[sortField])) {\r\n          return !direction || direction.toLowerCase() === 'asc' ? -1 : 1;\r\n        } else if (Number.parseFloat(a[sortField]) > Number.parseFloat(b[sortField])) {\r\n          return !direction || direction.toLowerCase() === 'asc' ? 1 : -1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      });\r\n    }\r\n\r\n    if (Array.isArray(collection[0][sortField])) {\r\n      collection.sort((a: any, b: any) => {\r\n        // Sort by multi value\r\n        if (a[sortField].length < b[sortField].length) {\r\n          return !direction || direction.toLowerCase() === 'asc' ? -1 : 1;\r\n        } else if (a[sortField].length > b[sortField].length) {\r\n          return !direction || direction.toLowerCase() === 'asc' ? 1 : -1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      });\r\n    }\r\n\r\n    return collection;\r\n  }\r\n\r\n  public getColumnTitle(translationKeyBase: string, column: GridColumnHeader): string {\r\n    if (!column.isCustom) {\r\n      return this.translateService.instant(translationKeyBase + column.displayName);\r\n    }\r\n\r\n    return column.displayName;\r\n  }\r\n\r\n  public convertMathTree(tree: mjs.MathNode): MassUpdateRequestAdvancedTermDto {\r\n    const mathTree = <MassUpdateRequestAdvancedTermDto>{};\r\n\r\n    if (tree.isConstantNode) {\r\n      mathTree.type = AdvancedMathType.Constant;\r\n      mathTree.operator = AdvancedMathOperator.Noop;\r\n      mathTree.value = tree.value;\r\n      mathTree.leftTerm = null;\r\n      mathTree.rightTerm = null;\r\n    }\r\n\r\n    if (tree.isSymbolNode) {\r\n      mathTree.type = AdvancedMathType.Field;\r\n      mathTree.operator = AdvancedMathOperator.Noop;\r\n      mathTree.value = tree.name;\r\n      mathTree.leftTerm = null;\r\n      mathTree.rightTerm = null;\r\n    }\r\n\r\n    if (tree.isOperatorNode) {\r\n      mathTree.type = AdvancedMathType.Compound;\r\n      mathTree.value = null;\r\n      mathTree.operator = this.getOperator(tree.fn);\r\n      mathTree.leftTerm = this.convertMathTree(tree.args[0]);\r\n      mathTree.rightTerm = this.convertMathTree(tree.args[1]);\r\n    }\r\n\r\n    if (!tree.isConstantNode && !tree.isOperatorNode && !tree.isSymbolNode) {\r\n      mathTree.type = AdvancedMathType.Compound;\r\n      mathTree.value = null;\r\n      mathTree.operator = this.getOperator(tree['content'].fn);\r\n      mathTree.leftTerm = this.convertMathTree(tree['content'].args[0]);\r\n      mathTree.rightTerm = this.convertMathTree(tree['content'].args[1]);\r\n    }\r\n\r\n    return mathTree;\r\n  }\r\n\r\n  public groupBy(values, key) {\r\n    const s = this;\r\n\r\n    const groupedResult = values.reduce(function(reducedValue, x) {\r\n      (reducedValue[x[key]] = reducedValue[x[key]] || []).push(x);\r\n      return reducedValue;\r\n      // s.categoryCriteria.push(reducedValue);\r\n    }, {});\r\n\r\n    return Object.keys(groupedResult)\r\n      .sort()\r\n      .map(function(k) {\r\n        return groupedResult[k];\r\n      });\r\n  }\r\n\r\n  private getOperator(operator: string): AdvancedMathOperator {\r\n    switch (operator) {\r\n      case 'add':\r\n        return AdvancedMathOperator.Add;\r\n      case 'multiply':\r\n        return AdvancedMathOperator.Multiply;\r\n      case 'divide':\r\n        return AdvancedMathOperator.Divide;\r\n      case 'subtract':\r\n        return AdvancedMathOperator.Subtract;\r\n    }\r\n  }\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { Observable, Subject, Subscription } from 'rxjs';\r\nimport { AuthenticationManager } from '../../_core/authentication/authentication.manager';\r\nimport { ModalProperties } from '../../_models/modal-properties.model';\r\nimport { TranslationBaseKeys } from '../i18n/translation-base-keys';\r\n\r\n@Injectable()\r\nexport class IdleTimeoutService {\r\n    i18n = TranslationBaseKeys;\r\n    public timeoutExpired: Subject<number> = new Subject<number>();\r\n    private readonly adalContext = this.authManager.getAdalContext();\r\n    private defaultTimeoutValue: number = 15;\r\n    private promptTime = 300; // 5 mins prior to session expiration.\r\n\r\n    private elapsed = 0;\r\n    private timerId: any;\r\n    private expireTimeout: number;\r\n    private isDialogOpen: boolean;\r\n    public PromptUserSessionEvent: EventEmitter<number>;\r\n\r\n    constructor(private authManager: AuthenticationManager) {\r\n        this.PromptUserSessionEvent = new EventEmitter<number>();\r\n    }\r\n\r\n    public initialise() {\r\n        this.startTimer();\r\n        this.authManager.hasAnyAuth.subscribe(hasAuth => {\r\n            if (hasAuth) {\r\n                this.resetTimer();\r\n            }\r\n        });\r\n        this.authManager.hasToken.subscribe(hasToken => {\r\n            if (hasToken) {\r\n                this.resetTimer();\r\n            }\r\n        });\r\n        this.expireTimeout = this.adalContext.config ? this.adalContext.config.expireOffsetSeconds : this.defaultTimeoutValue;\r\n    }\r\n\r\n    public HandleExtendResult(isExtended: boolean) {\r\n        if (isExtended) {\r\n            this.authManager.getToken(true);\r\n        } else {\r\n            this.stopTimer();\r\n            this.isDialogOpen = false;\r\n            this.authManager.logoutAdal();\r\n            this.authManager.logoutMsal();\r\n        }\r\n        this.isDialogOpen = false;\r\n    }\r\n\r\n    private stopTimer() {\r\n        if (this.timerId) {\r\n            clearInterval(this.timerId);\r\n        }\r\n    }\r\n    private startTimer() {\r\n        this.timerId = setInterval(() => { this.timerTick(); } , 1000);\r\n    }\r\n\r\n    private resetTimer() {\r\n        this.stopTimer();\r\n        this.startTimer();\r\n        this.elapsed = 0;\r\n    }\r\n\r\n    private timerTick() {\r\n        ++this.elapsed;\r\n        this.evaluateSessionTimeout();\r\n    }\r\n\r\n    private evaluateSessionTimeout() {\r\n        if (this.isDialogOpen) { return; }\r\n\r\n        if (this.elapsed < (this.expireTimeout - this.promptTime)) { return; }\r\n\r\n        this.isDialogOpen = true;\r\n        const mins = this.promptTime / 60;\r\n        this.PromptUserSessionEvent.emit(Math.round(mins));\r\n    }\r\n\r\n    public GetSessionTimeouModalOptions(mins: number): ModalProperties {\r\n        const options = <ModalProperties> {\r\n            heading: {\r\n                key: 'Your Session is About to Expire'\r\n            },\r\n            body: {\r\n                key: 'Your current session will expire in {{expireMinutes}} minutes, would you like to extend your current session?',\r\n                params: {expireMinutes: mins.toString()}\r\n            },\r\n            dismissText: {\r\n                key: 'Log Out'\r\n            },\r\n            translateBaseKey: this.i18n.auth,\r\n            successText: {\r\n                key: 'Stay Logged in'\r\n            }\r\n        };\r\n        return options;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ImageDto } from '../../_api/_runtime/dtos/image.dto';\r\n\r\n@Injectable()\r\nexport class ImageService {\r\n  public imageCollection = new Array<ImageDto>();\r\n\r\n  constructor() { }\r\n\r\n  public compareImageIndexes(firstValue: ImageDto, nextValue: ImageDto): number {\r\n    if (firstValue.index < nextValue.index) { return -1; }\r\n    if (firstValue.index > nextValue.index) { return 1; }\r\n    return 0;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class LeftNavService {\r\n\r\n  constructor() {}\r\n\r\n  private navCollapsedSource = new BehaviorSubject<boolean>(false);\r\n  public navCollapsed$ = this.navCollapsedSource.asObservable();\r\n\r\n  public toggleCollapsed(isCollapsed: boolean) {\r\n    this.navCollapsedSource.next(isCollapsed);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ApplicationInsights } from '@microsoft/applicationinsights-web';\r\nimport { ConfigService } from '@ngx-config/core';\r\n\r\n@Injectable()\r\nexport class LoggingService {\r\n\r\n  private appInsights: ApplicationInsights;\r\n  constructor(\r\n    private configService: ConfigService\r\n  ) {\r\n    this.appInsights = new ApplicationInsights({\r\n      config: {\r\n        instrumentationKey: this.configService.getSettings('aiInstrumentationKey')\r\n      },\r\n    });\r\n   }\r\n\r\n  logError(error: any ): void {\r\n    this.logToConsole(error);\r\n    this.appInsights.trackException(error);\r\n  }\r\n\r\n  private logToConsole(error) {\r\n    console.group(error.message);\r\n    console.error(error.stack);\r\n    console.groupEnd();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class RecipientsInfoService {\r\n  private hiddenColumns = [\r\n    'id'\r\n  ];\r\n\r\n  private defaultColumns = [\r\n    'recipientName',\r\n    'address',\r\n    'address2',\r\n    'city',\r\n    'state',\r\n    'zip',\r\n    'email',\r\n    'phoneNumber',\r\n    'deliverables',\r\n  ];\r\n\r\n  public GetInternalColumns(): Array<string> {\r\n    return this.hiddenColumns;\r\n  }\r\n\r\n  public GetDefaultColumns(): Array<string> {\r\n    return this.defaultColumns;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\r\nimport { filter, map, switchMap, mergeMap } from 'rxjs/operators';\r\n\r\nconst APP_TITLE = 'FAMIS -';\r\n\r\n@Injectable()\r\nexport class TitleService {\r\n  constructor(\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private titleService: Title,\r\n  ) {}\r\n\r\n  init() {\r\n    this.router.events\r\n      .pipe(filter((event) => event instanceof NavigationEnd))\r\n      .pipe(map(() => {\r\n        let route = this.activatedRoute;\r\n        while (route.firstChild) { route = route.firstChild; }\r\n        return route;\r\n      }))\r\n      .pipe(filter((route) => route.outlet === 'primary'))\r\n      .pipe(mergeMap((route) => route.data))\r\n      .pipe(map((data) => {\r\n        if ( data.title ) {\r\n          // If a route has a title set (e.g. data: {title: \"Foo\"}) then we use it\r\n          return data.title;\r\n        } else {\r\n          return this.router.url.split('/').reduce((acc, frag) => {\r\n            return this.fixTitle(frag);\r\n          });\r\n        }\r\n      }))\r\n      .subscribe((pathString) => this.titleService.setTitle(`${APP_TITLE} ${pathString}`));\r\n  }\r\n\r\n  fixTitle(title: string) {\r\n    if ( !title ) { return title; }\r\n    if (/(-)/.test(title)) {\r\n      const splitTitle = title.split('-')\r\n      let newTitle = '';\r\n      splitTitle.forEach(word => {\r\n        newTitle += word.charAt(0).toUpperCase() + word.slice(1) + ' ';\r\n      })\r\n      return newTitle;\r\n    } else if (title.match(/[A-Z][a-z]+/g)) {\r\n      const splitTitle = title.split(/(?=[A-Z])/)\r\n      let newTitle = '';\r\n      splitTitle.forEach(word => {\r\n        newTitle += word.charAt(0).toUpperCase() + word.slice(1) + ' ';\r\n      })\r\n      return newTitle;\r\n    }\r\n    return title.charAt(0).toUpperCase() + title.slice(1);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class TransactionsInfoService {\r\n  private hiddenColumns = ['transactionId'];\r\n\r\n  private defaultColumns = [\r\n    'displayId',\r\n    'assetTagNumber',\r\n    'activity',\r\n    'fieldName',\r\n    'oldValue',\r\n    'newValue',\r\n    'transactionDate',\r\n    'user',\r\n  ];\r\n\r\n  public GetInternalColumns(): Array<string> {\r\n    return this.hiddenColumns;\r\n  }\r\n\r\n  public GetDefaultColumns(): Array<string> {\r\n    return this.defaultColumns;\r\n  }\r\n\r\n}\r\n","import { UserStore } from '../user/user.store';\r\nimport { SortDescriptor, State, CompositeFilterDescriptor } from '@progress/kendo-data-query';\r\nimport { Injectable } from '@angular/core';\r\nimport { GroupSettingDto } from '../../_api/_runtime/dtos/group-setting.dto';\r\nimport { SettingsApiService } from '../../_api/_runtime/services/settings-api.service';\r\nimport { Observable } from 'rxjs';\r\nimport { SettingType } from '../../_enums/setting-type';\r\n\r\n@Injectable()\r\nexport class UserGridService {\r\n  private userGrids = new Array<GroupSettingDto>();\r\n\r\n  constructor(private settingsApiService: SettingsApiService, private userStore: UserStore) {}\r\n\r\n  createUserGridId(id: string, routePath: string, name = ''): string {\r\n    return `${id}${routePath}${name}`;\r\n  }\r\n\r\n  getSettings(userId: string, name: string, defaultHeaders: Array<string>): Observable<GridSetting> {\r\n    const s = this;\r\n\r\n    return Observable.create(function(observer) {\r\n      s.settingsApiService.getSettingsByUserId(userId).subscribe(\r\n        result => {\r\n          s.userGrids = result;\r\n\r\n          const index = s.userGrids.findIndex(c => c.name === name);\r\n\r\n          if (index !== -1 && s.userGrids[index].settingJson) {\r\n            observer.next(s.userGrids[index].settingJson);\r\n          } else {\r\n            observer.next(<GridSetting>{ headers: defaultHeaders });\r\n          }\r\n        },\r\n        error => {\r\n          observer.next(<GridSetting>{ headers: defaultHeaders });\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  updateUserSettingsCache(userSetting: GroupSettingDto): void {\r\n    const index = this.userGrids.findIndex(c => c.name === name);\r\n\r\n    if (index !== -1 && this.userGrids[index].settingJson) {\r\n      this.userGrids[index] = userSetting;\r\n    } else {\r\n      this.userGrids.push(userSetting);\r\n    }\r\n  }\r\n\r\n  public saveSettings(\r\n    id: string,\r\n    headers: Array<string>,\r\n    groupId: string,\r\n    userId: string,\r\n    kendoGridState?: State,\r\n    gridFilters?: CompositeFilterDescriptor,\r\n    columnSizes?: Array<ColumnSize>,\r\n    gridSort?: Array<SortDescriptor>\r\n  ): Observable<GroupSettingDto> {\r\n    const index = this.userGrids.findIndex(c => c.name === id);\r\n\r\n    const gridSetting =\r\n      <GridSetting>{\r\n        headers: headers,\r\n        kendoGridState: kendoGridState ? kendoGridState : null,\r\n        filters: gridFilters ? gridFilters : null,\r\n        columnSizes: columnSizes ? columnSizes : null,\r\n        gridSort: gridSort ? gridSort : null\r\n      };\r\n\r\n    if (index !== -1) {\r\n      const dto = this.userGrids[index];\r\n      dto.settingJson = gridSetting;\r\n\r\n      return this.settingsApiService.update(dto.id, dto);\r\n    } else {\r\n      return this.settingsApiService.create(<GroupSettingDto>{\r\n        groupId: groupId,\r\n        userId: userId,\r\n        name: id,\r\n        settingType: SettingType.gridSetting,\r\n        settingJson: gridSetting\r\n      });\r\n    }\r\n  }\r\n\r\n  public saveSelectedHeaders(\r\n    gridSettingsName: string,\r\n    headers: Array<string>\r\n  ): Observable<GroupSettingDto> {\r\n\r\n    const userSetting = this.getUserGridSetting(gridSettingsName);\r\n    userSetting.settingJson.headers = headers;\r\n    return this.settingsApiService.update(userSetting.id, userSetting);\r\n  }\r\n\r\n  public saveColumnSizes(\r\n    gridSettingsName: string,\r\n    columnSizes: Array<ColumnSize>\r\n  ): Observable<GroupSettingDto> {\r\n\r\n    const userSetting = this.getUserGridSetting(gridSettingsName);\r\n    userSetting.settingJson.columnSizes = columnSizes;\r\n    return this.settingsApiService.update(userSetting.id, userSetting);\r\n  }\r\n\r\n  public saveActiveFilters(\r\n    gridSettingsName: string,\r\n    kendoGridState: State,\r\n    gridFilters: CompositeFilterDescriptor,\r\n  ): Observable<GroupSettingDto> {\r\n\r\n    const userSetting = this.getUserGridSetting(gridSettingsName);\r\n    userSetting.settingJson.kendoGridState = kendoGridState;\r\n    userSetting.settingJson.filters = gridFilters;\r\n    return this.settingsApiService.update(userSetting.id, userSetting);\r\n  }\r\n\r\n  public saveActiveSorts(\r\n    gridSettingsName: string,\r\n    kendoGridState: State,\r\n    gridSorts: Array<SortDescriptor>\r\n  ): Observable<GroupSettingDto> {\r\n\r\n    const userSetting = this.getUserGridSetting(gridSettingsName);\r\n    userSetting.settingJson.kendoGridState = kendoGridState;\r\n    userSetting.settingJson.gridSort = gridSorts;\r\n    return this.settingsApiService.update(userSetting.id, userSetting);\r\n  }\r\n\r\n  private getUserGridSetting(gridSettingsName: string): GroupSettingDto {\r\n    const index = this.userGrids.findIndex(c => c.name === gridSettingsName);\r\n    if (index !== -1) {\r\n      return this.userGrids[index];\r\n    }\r\n    return <GroupSettingDto> {};\r\n  }\r\n\r\n}\r\n\r\nexport interface GridSetting {\r\n  headers: Array<string>;\r\n  kendoGridState: State;\r\n  filters: CompositeFilterDescriptor;\r\n  columnSizes: Array<ColumnSize>;\r\n  gridSort: Array<SortDescriptor>;\r\n}\r\n\r\nexport interface ColumnSize {\r\n  fieldName: string;\r\n  width: number;\r\n}\r\n","import { DefaultTitleBarComponent } from '../../_shared/components/window/default-title-bar.component';\r\nimport { ModalBackdropComponent } from '../../_shared/components/window/modal-backdrop.component';\r\nimport { Injectable, ViewContainerRef, ComponentFactoryResolver } from '@angular/core';\r\nimport { WindowOption } from '../../_models/window-option';\r\nimport { WindowRef, WindowService } from '@progress/kendo-angular-dialog';\r\n\r\n@Injectable()\r\nexport class WindowManager {\r\n  public window: WindowRef = new WindowRef();\r\n\r\n  public viewContainerRef: ViewContainerRef;\r\n  public scrollPosition = 0;\r\n\r\n  private opened = false;\r\n\r\n  constructor(private windowService: WindowService, private componentResolver: ComponentFactoryResolver) {  }\r\n\r\n  public open(content: any, title = '', options?: WindowOption): WindowRef {\r\n    let backdrop: any;\r\n\r\n    const titleBarComponent = this.componentResolver.resolveComponentFactory(DefaultTitleBarComponent);\r\n    const defaultTitleBar = this.viewContainerRef.createComponent(titleBarComponent);\r\n\r\n    defaultTitleBar.instance.title = title;\r\n    defaultTitleBar.instance.translationkey = options ? options.translationKey : null;\r\n\r\n    if (!this.opened && defaultTitleBar) {\r\n      if (options && options.isModal) {\r\n        const backdropComponent = this.componentResolver.resolveComponentFactory(ModalBackdropComponent);\r\n        backdrop = this.viewContainerRef.createComponent(backdropComponent);\r\n      }\r\n\r\n      this.window = this.windowService.open({\r\n        title: title,\r\n        content: content,\r\n        width: options && options.width ? options.width : 600,\r\n        top: this.scrollPosition > 0 ? this.scrollPosition + 50 : 50,\r\n        resizable: true,\r\n        titleBarContent: defaultTitleBar.instance.windowTitleBar,\r\n        appendTo: this.viewContainerRef,\r\n        draggable: true,\r\n      });\r\n\r\n      this.window.result.subscribe(windowCloseResult => {\r\n        this.opened = false;\r\n\r\n        if (options && options.isModal) {\r\n          backdrop.destroy();\r\n        }\r\n      });\r\n\r\n      this.opened = true;\r\n    }\r\n\r\n    return this.window;\r\n  }\r\n\r\n  public isOpened(): boolean {\r\n    return this.opened;\r\n  }\r\n\r\n  public close() {\r\n    this.window.close();\r\n  }\r\n}\r\n","import { first, filter, takeUntil } from 'rxjs/operators';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { OnDestroy } from '@angular/core';\r\n\r\ntype SubscribeFunction<TIn, TOut> = (data: TIn) => TOut|void;\r\n\r\nexport class Subscriber {\r\n    protected subscribe<TIn, TOut>(\r\n        observable: Observable<TIn>,\r\n        work: SubscribeFunction<TIn, TOut| Observable<TOut>>\r\n    ): Observable<TOut> {\r\n        const result = new Subject<TOut>();\r\n        observable.subscribe((input: TIn) => {\r\n            setTimeout(() => { // Guarantee async\r\n                const output = work(input);\r\n                if (output instanceof Observable) {\r\n                    output.subscribe((outputValue: TOut) => {\r\n                        result.next(outputValue);\r\n                        result.complete();\r\n                    });\r\n                } else {\r\n                    if (output) {\r\n                        result.next(output);\r\n                        result.complete();\r\n                    } else {\r\n                        result.next();\r\n                        result.complete();\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        return result;\r\n    }\r\n\r\n    protected subscribeDefined<TIn, TOut>(\r\n        observable: Observable<TIn | undefined>,\r\n        work: SubscribeFunction<TIn, TOut| Observable<TOut>>\r\n    ): Observable<TOut> {\r\n        const defined = this.getDefined(observable);\r\n\r\n        return this.subscribe(defined, work);\r\n    }\r\n\r\n    protected subscribeDefinedOnce<TIn, TOut>(\r\n        observable: Observable<TIn | undefined>,\r\n        work: SubscribeFunction<TIn, TOut| Observable<TOut>>\r\n    ): Observable<TOut> {\r\n        const firstDefined = this.getDefined(observable).pipe(first());\r\n\r\n        return this.subscribe(firstDefined, work);\r\n    }\r\n\r\n    protected getDefined<TIn>(observable: Observable<TIn | undefined>): Observable<TIn> {\r\n        return <Observable<TIn>>observable.pipe(filter((item: TIn | undefined) => item !== undefined));\r\n    }\r\n}\r\n\r\nexport class SubscriberEntity extends Subscriber implements OnDestroy {\r\n    protected destroyed = new Subject();\r\n\r\n    public ngOnDestroy(): void {\r\n        this.destroyed.next();\r\n    }\r\n\r\n    protected subscribe<TIn, TOut>(\r\n        observable: Observable<TIn>,\r\n        work: SubscribeFunction<TIn, TOut| Observable<TOut>>\r\n    ): Observable<TOut> {\r\n        const untilDestroyed = observable.pipe(takeUntil(this.destroyed));\r\n\r\n        return super.subscribe(untilDestroyed, work);\r\n    }\r\n\r\n    protected subscribeDefined<TIn, TOut>(\r\n        observable: Observable<TIn | undefined>,\r\n        work: SubscribeFunction<TIn, TOut| Observable<TOut>>\r\n    ): Observable<TOut> {\r\n        const definedUntilDestroyed = this.getDefined(observable).pipe(takeUntil(this.destroyed));\r\n\r\n        return this.subscribe(definedUntilDestroyed, work);\r\n    }\r\n\r\n    protected subscribeDefinedOnce<TIn, TOut>(\r\n        observable: Observable<TIn | undefined>,\r\n        work: SubscribeFunction<TIn, TOut| Observable<TOut>>\r\n    ): Observable<TOut> {\r\n        const firstDefinedUntilDestroyed = this.getDefined(observable).pipe(takeUntil(this.destroyed)).pipe(first());\r\n\r\n        return this.subscribe(firstDefinedUntilDestroyed, work);\r\n    }\r\n}\r\n","import { Authorization } from '../../_api/_authorization/dtos/authorization.dto';\r\n\r\nexport enum SystemPermissionsEnum {\r\n  canReadData,\r\n  canWriteData,\r\n  canAdminProjects,\r\n  canImportData,\r\n  canReconcileData,\r\n  canManageHeaders,\r\n  canManageTemplates,\r\n  canManagePortal,\r\n}\r\n\r\nexport class Permissions {\r\n  public permissionsGranted = new Array<SystemPermissionsEnum>();\r\n\r\n  constructor(authorization?: Authorization) {\r\n    if (authorization === undefined) {\r\n      return;\r\n    }\r\n\r\n    // All users can read data\r\n    this.permissionsGranted.push(SystemPermissionsEnum.canReadData);\r\n\r\n    if (authorization.Roles.indexOf('Famis.GlobalAdmin') !== -1) {\r\n      this.permissionsGranted.push(\r\n        SystemPermissionsEnum.canWriteData,\r\n        SystemPermissionsEnum.canAdminProjects,\r\n        SystemPermissionsEnum.canImportData,\r\n        SystemPermissionsEnum.canReconcileData,\r\n        SystemPermissionsEnum.canManageHeaders,\r\n        SystemPermissionsEnum.canManageTemplates,\r\n        SystemPermissionsEnum.canManagePortal,\r\n      );\r\n    }\r\n\r\n    if (authorization.Roles.indexOf('Famis.ProjectWriteAccess') !== -1 || authorization.Roles.indexOf('Famis.GlobalWrite') !== -1) {\r\n      this.permissionsGranted.push(\r\n        SystemPermissionsEnum.canWriteData,\r\n        SystemPermissionsEnum.canAdminProjects,\r\n        SystemPermissionsEnum.canImportData,\r\n        SystemPermissionsEnum.canReconcileData,\r\n        SystemPermissionsEnum.canManageHeaders\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n","import { User, UserType } from './user';\r\nimport { AuthenticationManager, LoginType } from '../authentication/authentication.manager';\r\nimport { Subscriber } from '../subscriber-entity';\r\nimport { Permissions } from './permissions';\r\n\r\nimport * as moment from 'moment';\r\nimport { CldrIntlService, IntlService } from '@progress/kendo-angular-intl';\r\nimport { zip, BehaviorSubject, Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { AccountApiService } from '../../_api/_authorization/services/account-api.service';\r\nimport { AuthorizationApiService } from '../../_api/_authorization/services/authorization-api.service';\r\nimport { ReferenceDataApiService } from '../../_api/_configuration/services/reference-data-api.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CountriesApiService } from '../../_api/_configuration/services/countries-api.service';\r\n\r\n@Injectable()\r\nexport class UserStore extends Subscriber {\r\n  private _lastLoginType = new BehaviorSubject<UserType | undefined>(undefined);\r\n  private _user = new BehaviorSubject<User | undefined>(undefined);\r\n\r\n  public user = this._user.asObservable();\r\n  public lastLoginType = this._lastLoginType.asObservable();\r\n\r\n  constructor(\r\n    private authenticationManager: AuthenticationManager,\r\n    private accountService: AccountApiService,\r\n    private authorizationService: AuthorizationApiService,\r\n    private referenceDataService: ReferenceDataApiService,\r\n    private translate: TranslateService,\r\n    private intlService: IntlService,\r\n    private countryService: CountriesApiService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  public hasAnyAuth(): Observable<boolean> {\r\n    return this.authenticationManager.hasAnyAuth;\r\n  }\r\n\r\n  public initializeAuthentication(): void {\r\n    this.subscribeDefined(this.authenticationManager.hasAnyAuth, hasAnyAuth => {\r\n      this.subscribe(this.authenticationManager.lastLoginType, lastLoginType => {\r\n        this.findUser(<LoginType> lastLoginType, <boolean> hasAnyAuth);\r\n        if (lastLoginType === LoginType.adal) {\r\n          this._lastLoginType.next(UserType.Employee);\r\n        } else if (lastLoginType === LoginType.msal) {\r\n          this._lastLoginType.next(UserType.Consumer);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private findUser(lastLoginType?: LoginType, hasAnyAuth?: boolean) {\r\n    const userType = lastLoginType === LoginType.adal ? UserType.Employee : UserType.Consumer;\r\n\r\n    if (hasAnyAuth === false) {\r\n      this._user.next(new User(userType));\r\n    }\r\n\r\n    if (hasAnyAuth === true) {\r\n      const request = zip(this.accountService.read(), this.authorizationService.read());\r\n\r\n      this.subscribe(request, data => {\r\n        const profile = data[0];\r\n        const authorization = data[1];\r\n\r\n\r\n        this.countryService.getCountryLanguage(profile.CountryCode).subscribe(countryLanguage => {\r\n          if (countryLanguage) {\r\n\r\n            this.translate.use(countryLanguage.languageId);\r\n\r\n            (<CldrIntlService>this.intlService).localeId = countryLanguage.locale;\r\n            moment.locale(countryLanguage.locale);\r\n\r\n            this._user.next(\r\n              new User(userType, profile, new Permissions(authorization),\r\n              countryLanguage.languageId, countryLanguage.locale, profile.IsActive)\r\n            );\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  public loginUser(): void {\r\n    sessionStorage.setItem('user-current-url', window.location.pathname);\r\n\r\n    this.authenticationManager.loginAdal();\r\n  }\r\n\r\n  public logoutUser(): void {\r\n    this.authenticationManager.forgetLoginType();\r\n    this.subscribeDefined(this.authenticationManager.hasAdalAuth, () => {\r\n      this.authenticationManager.forgetAdal();\r\n      window.location.href = '/';\r\n    });\r\n  }\r\n}\r\n","import { Permissions } from './permissions';\r\nimport { AuthAccount } from '../../_api/_authorization/dtos/account.dto';\r\n\r\nexport enum UserType {\r\n  Consumer,\r\n  Employee\r\n}\r\n\r\nexport class User {\r\n  private hiddenUserNames = ['NULL'];\r\n\r\n  constructor(\r\n    public userType: UserType,\r\n    public profile?: AuthAccount,\r\n    public permissions: Permissions = new Permissions(),\r\n    public countryCode?: string,\r\n    public locale?: string,\r\n    public isActive?: boolean\r\n  ) {}\r\n\r\n  public getName(): string {\r\n    let userName = '';\r\n    // console.log(this.profile.FirstName);\r\n    if (\r\n      this.profile &&\r\n      this.hiddenUserNames.findIndex(c => c === this.profile.FirstName.toUpperCase()) === -1 &&\r\n      this.hiddenUserNames.findIndex(c => c === this.profile.LastName.toUpperCase()) === -1\r\n    ) {\r\n      userName = `${this.profile.FirstName} ${this.profile.LastName}`;\r\n    }\r\n\r\n    return userName;\r\n\r\n  }\r\n}\r\n","export enum AlertType {\r\n    Success,\r\n    Error,\r\n    Info,\r\n    Warning\r\n}","export enum DataTargetName {\r\n    client,\r\n    inventory,\r\n    consolidated,\r\n    building\r\n}","export enum FieldCategory {\r\nGeneral,\r\nCustomFields\r\n}","export enum FieldType {\r\n  String,\r\n  Integer,\r\n  Double,\r\n  Boolean,\r\n  DateTime,\r\n  DropDown,\r\n  Image,\r\n  CascadingDropDown,\r\n  CascadingComboBox,\r\n  MultiValue,\r\n  ReadOnly,\r\n  Hidden,\r\n  Date,\r\n  EmptySpace,\r\n  Percent,\r\n  DateWithTimeStamp\r\n}\r\n","\r\nexport enum FormAction {\r\n  Save,\r\n  Edit,\r\n  Remove,\r\n  Cancel,\r\n  ValueChange,\r\n  KeepOpen\r\n }\r\n","export enum ImportMode {\r\n  ClearAndReplace,\r\n  AddOrUpdate\r\n}\r\n","export enum ModalFormEvent {\r\n    Dismiss,\r\n    Save,\r\n    Failed,\r\n    Success\r\n  }","export enum PortalSetupMode {\r\n  SetupAccess,\r\n  SetupData,\r\n  SetupImage,\r\n  SetupMetadata\r\n}\r\n","export enum ReconciliationMatchType {\r\n    parentChildMatch,\r\n    allocationMatch,\r\n    oneToOneMatch,\r\n    singleMatch,\r\n    unMatch\r\n}","export enum ReconciliationStatus {\r\n        Success = 0,\r\n        IdNotFound = 1,\r\n        AssetIdNotFound = 2,\r\n        InventoryAssetIdNotFound = 3,\r\n        ParentAssetIdNotFound = 4,\r\n        MatchCodeIdNotFound = 5,\r\n        UnknownError = 6,\r\n        InvalidData = 7,\r\n        DuplicateMatch = 8\r\n}","export enum ReplaceFieldModes {\r\n    Text,\r\n    Advanced\r\n}","export enum ResultType {\r\n  reconciliationSummaryResult,\r\n  matchOrAllocationResult\r\n}","export enum SettingType {\r\n  buildingFilter,\r\n  assetFilter,\r\n  excelExport,\r\n  assetDisplayColumns,\r\n  buildingDisplayColumns,\r\n  gridSetting,\r\n  acceptTerms,\r\n  importMappedColumns\r\n}\r\n","import { ColumnMap } from './column-map.model';\r\nimport { ExcelSummaryDto } from '../_api/dtos/excel-summary.dto';\r\nimport { UploadSpreadsheetDto } from '../_api/dtos/upload-spreadsheet.dto';\r\n\r\nexport class DataImport {\r\n  constructor(\r\n    public spreadsheetUpload?: UploadSpreadsheetDto,\r\n    public excelSummary?: ExcelSummaryDto,\r\n    public mapping: Array<ColumnMap> = new Array<ColumnMap>()\r\n  ) {}\r\n}","export class DataType {\r\n  static building = 'building';\r\n  static asset = 'asset';\r\n}\r\n","export class BaseField<T> {\r\n  value: T;\r\n  key: string;\r\n  label: string;\r\n  required: boolean;\r\n  order: number;\r\n  controlType: string;\r\n  fieldName: string;\r\n  isCustomField: boolean;\r\n\r\n  constructor(options: {\r\n    value?: T,\r\n    templateFieldId?: string,\r\n    moduleId?: string,\r\n    label?: string,\r\n    required?: boolean,\r\n    order?: number,\r\n    controlType?: string,\r\n    fieldName?: string,\r\n    isCustomField?: boolean\r\n\r\n  } = {}) {\r\n    this.value = options.value;\r\n    this.key = options.templateFieldId;\r\n    this.label = options.label || '';\r\n    this.required = !!options.required;\r\n    this.order = options.order === undefined ? 1 : options.order;\r\n    this.controlType = options.controlType || '';\r\n    this.fieldName = options.fieldName || '';\r\n    this.isCustomField = options.isCustomField || false;\r\n  }\r\n}\r\n","import { BaseField } from './base-field.model';\r\n\r\nexport class BooleanField extends BaseField<boolean> {\r\n\r\n controlType = 'boolean';\r\n\r\n  constructor(options: {} = {}) {\r\n    super(options);\r\n  }\r\n\r\n}\r\n","import { BaseField } from './base-field.model';\r\n\r\nexport class DateField extends BaseField<string> {\r\n\r\n  controlType = 'date';\r\n\r\n  constructor(options: {} = {}) {\r\n    super(options);\r\n  }\r\n\r\n}\r\n","import { BaseField } from './base-field.model';\r\n\r\nexport class DecimalField extends BaseField<string> {\r\n\r\n  controlType = 'decimalnumber';\r\n\r\n  constructor(options: {} = {}) {\r\n    super(options);\r\n  }\r\n\r\n}\r\n","import { BaseField } from './base-field.model';\r\n\r\nexport class DropDownField extends BaseField<string> {\r\n\r\n  controlType = 'dropdown';\r\n\r\n  dropDownOptions: { key: string, value: string }[] = [];\r\n\r\n  constructor(options: {} = {}) {\r\n    super(options);\r\n    this.dropDownOptions = options['dropDownOptions'] || [];\r\n  }\r\n\r\n}\r\n","import { BaseField } from './base-field.model';\r\n\r\nexport class MultiLineTextField extends BaseField<string> {\r\n\r\n  controlType = 'textarea';\r\n\r\n  constructor(options: {} = {}) {\r\n    super(options);\r\n  }\r\n\r\n}\r\n","import { BaseField } from './base-field.model';\r\nexport class PeoplePickerField extends BaseField<string> {\r\n  controlType = 'peoplePicker';\r\n  public displayValue: string;\r\n  constructor(options: {} = {}) {\r\n    super(options);\r\n    this.displayValue = options['displayValue'] || undefined;\r\n  }\r\n}\r\n","import { BaseField } from './base-field.model';\r\n\r\nexport class TextField extends BaseField<string> {\r\n\r\n  controlType = 'text';\r\n\r\n  constructor(options: {} = {}) {\r\n    super(options);\r\n  }\r\n\r\n}\r\n","import { BaseField } from './base-field.model';\r\n\r\nexport class WholeNumberField extends BaseField<string> {\r\n\r\n  controlType = 'wholenumber';\r\n\r\n  constructor(options: {} = {}) {\r\n    super(options);\r\n  }\r\n\r\n}\r\n","export class GroupMatchCode {\r\n\r\n  constructor(\r\n      public groupId: number,\r\n      public matchCodeId: string,\r\n      public matchCodeName: string,\r\n      public matchCodeDescription: string,\r\n      public matchCodeCategoryId: string,\r\n      public matchCodeIsEnabled: Boolean,\r\n      public groupMatchCodeIsEnabled: Boolean,\r\n      public matchCodeIsUsed: boolean\r\n    ) {}\r\n}","import { ColumnMap } from './column-map.model';\r\n\r\nexport class HeaderRow {\r\n\r\n    constructor(\r\n        public isCalculated: boolean,\r\n        public confidence: string,\r\n        public row: number,\r\n        public columnMapping: Array<ColumnMap>\r\n    ) { }\r\n\r\n}\r\n","export class Locale {\r\n\r\n    constructor(\r\n        public id: string,\r\n        public name: string\r\n    ) { }\r\n\r\n}\r\n","export class MatchCodeCategory {\r\n\r\n  constructor(public id?: string, public name?: string) {}\r\n\r\n  public static jsonArrayToObjects(array): MatchCodeCategory[] {\r\n    return array.map(MatchCodeCategory.toObjectFromJson);\r\n  }\r\n\r\n  public static toObjectFromJson({id, name}): MatchCodeCategory {\r\n    return new MatchCodeCategory(id, name);\r\n  }\r\n}","\r\nexport class MatchCode {\r\n\r\n  constructor(public id?: string,\r\n    public name?: string,\r\n    public description?: string,\r\n    public categoryName?: string,\r\n    public categoryId?: string,\r\n    public isEnabled?: boolean\r\n  ) {\r\n  }\r\n\r\n  public isSelected: boolean;\r\n\r\n  public static jsonArrayToObjects(array): MatchCode[] {\r\n    return array.map(MatchCode.toObjectFromJson);\r\n  }\r\n\r\n  public static toObjectFromJson({id, name, description, categoryName, categoryId, isEnabled}): MatchCode {\r\n    return new MatchCode(id, name, description, categoryName, categoryId, isEnabled);\r\n  }\r\n\r\n}","import { GridColumnHeader } from '../grid-column-header.model';\r\nimport { GridSubGridData } from './famis-sub-grid.model';\r\nimport { SortDescriptor } from '@progress/kendo-data-query';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { DataTargetName } from '../../_enums/data-target-name';\r\n\r\nexport interface FamisGrid {\r\n  columnToSelectBy: string;\r\n  fileId: string;\r\n  gridId: number;\r\n  gridData: Observable<Array<any>>; // Usage of Any type is by design as Grid can present a collection of any datatype\r\n  gridSubGridData?: GridSubGridData;\r\n  actions: Array<string>;\r\n  loading: Subscription | boolean;\r\n  cacheLoading: Subscription;\r\n  selectedHeaders: Array<string>;\r\n  columnHeaders: Array<GridColumnHeader>;\r\n  dataSource?: DataTargetName;\r\n  windowSize?: number;\r\n  totalRecordCount: number;\r\n  name: string;\r\n  height: number;\r\n  supportedOperators?: Array<FamisGridFeature>;\r\n  translationBaseKey?: string;\r\n  groupId?: string;\r\n  scrollingMode?: string;\r\n  hideTitle: boolean;\r\n  defaultSort: Array<SortDescriptor>;\r\n}\r\n\r\nexport enum FamisGridFeature {\r\n  Sort,\r\n  Filter,\r\n  ColumnSelection,\r\n  SingleSelectable,\r\n  MultiSelectable,\r\n  InGridEditable,\r\n  HideTableCounts,\r\n  DashboardGroupSubGrid\r\n}\r\n","export class Task {\r\n  constructor(\r\n    public id?: string,\r\n    public WorkflowId?: string,\r\n    public taskType?: string,\r\n    public description?: string,\r\n    public status?: string,\r\n    public lastExecutionTime?: string,\r\n    public isActive?: boolean,\r\n    public assignedUserId?: string,\r\n    public assignedTeamId?: string,\r\n    public assignedToName?: string,\r\n    public escalationDays?: number,\r\n    public escalationuserId?: string,\r\n    public escalationTeamId?: string,\r\n    public escalationToName?: string,\r\n    public preceedingTasks?: Array<any>,\r\n    public SubsequentTasks?: Array<any>\r\n  ) {}\r\n}\r\n\r\n","export class Team {\r\n    Name: string;\r\n    Active: boolean;\r\n}","export class User {\r\n    Username: string;\r\n    Name: string;\r\n    Active: boolean;\r\n    DateAdded: Date;\r\n    DonationAmount: number;\r\n    Height: number;\r\n}","import { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, Output, Input, EventEmitter } from '@angular/core';\r\nimport { CustomDataTypesRepository } from '../../_api/services/custom-data-types-repository.service';\r\nimport { SupportedCustomColumnDataTypeDto } from '../../_api/dtos/shared/supported-custom-column-datatype.dto';\r\nimport { CreateAssetFileCustomColumnDto } from '../../_api/dtos/create-asset-file-custom-column.dto';\r\n\r\n@Component({\r\n  selector: 'add-asset-column-component',\r\n  templateUrl: './add-asset-column-component.html'\r\n})\r\nexport class AddAssetColumnComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  constructor(private customDataTypesService: CustomDataTypesRepository) {}\r\n\r\n  public isAddColumn = false;\r\n  isNameValid = true;\r\n  isDataTypeValid = true;\r\n  dataType: number;\r\n  name: string;\r\n  nameFieldError: string;\r\n\r\n  dataTypes: SupportedCustomColumnDataTypeDto[];\r\n  @Output()\r\n  onColumnAdded = new EventEmitter<CreateAssetFileCustomColumnDto>();\r\n  @Output()\r\n  onFormOpen = new EventEmitter<boolean>();\r\n  @Input()\r\n  knownColumnNames: string[];\r\n\r\n  ngOnInit() {\r\n    // console.log(this.dataType, 'AddAssetColumnComponent');\r\n\r\n    this.customDataTypesService.getCustomColumnDataTypes().subscribe(res => {\r\n      this.dataTypes = res;\r\n    });\r\n  }\r\n\r\n  showForm() {\r\n    this.isAddColumn = true;\r\n    this.name = '';\r\n    this.dataType = -1;\r\n    this.isNameValid = true;\r\n    this.isDataTypeValid = true;\r\n  }\r\n\r\n  submit() {\r\n    let isValid = true;\r\n    if (this.name === '') {\r\n      isValid = false;\r\n      this.isNameValid = false;\r\n      this.nameFieldError = 'Field name is required.';\r\n    }\r\n    if (isValid) {\r\n      if (!this.name.match('^[a-zA-Z_$][a-zA-Z_$0-9]*$')) {\r\n        isValid = false;\r\n        this.isNameValid = false;\r\n        this.nameFieldError = 'Custom columns cannot contain spaces or special characters.';\r\n      }\r\n    }\r\n    if (isValid) {\r\n      for (let i = 0; i < this.knownColumnNames.length; i++) {\r\n        if (this.knownColumnNames[i].toLowerCase() === this.name.toLowerCase()) {\r\n          this.isNameValid = false;\r\n          isValid = false;\r\n          this.nameFieldError = 'Field name must be unique.';\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.dataType === -1) {\r\n      isValid = false;\r\n      this.isDataTypeValid = false;\r\n    }\r\n\r\n    if (isValid) {\r\n      this.isAddColumn = false;\r\n      this.onColumnAdded.emit(new CreateAssetFileCustomColumnDto(this.name, this.dataType));\r\n    }\r\n  }\r\n}\r\n","import { AlertService } from '../../_core/services/alert.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Alert } from '../../_models/alert.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AlertType } from '../../_enums/alert-type';\r\n\r\n@Component({\r\n  selector: 'alert',\r\n  templateUrl: './alert.component.html'\r\n})\r\nexport class AlertComponent implements OnInit {\r\n  alerts: Alert[] = [];\r\n\r\n  constructor(private alertService: AlertService, private toastrService: ToastrService) {}\r\n\r\n  ngOnInit() {\r\n    this.alertService.getAlert().subscribe((alert: Alert) => {\r\n      if (alert) {\r\n        switch (alert.type) {\r\n          case AlertType.Success:\r\n            this.toastrService.success(alert.message);\r\n            break;\r\n          case AlertType.Error:\r\n            this.toastrService.error(alert.message);\r\n            break;\r\n          case AlertType.Info:\r\n            this.toastrService.info(alert.message);\r\n            break;\r\n          case AlertType.Warning:\r\n            this.toastrService.warning(alert.message);\r\n            break;\r\n          default:\r\n            this.toastrService.error(alert.message);\r\n            break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { AfterViewInit, Component, Input, ViewChild } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport 'bingmaps';\r\n\r\n@Component({\r\n  selector: 'bing-map',\r\n  templateUrl: './bing-map.component.html'\r\n})\r\nexport class BingMapComponent implements AfterViewInit {\r\n  @Input() longitude: number;\r\n  @Input() latitude: number;\r\n  @Input() buildingName: string;\r\n  @Input() mapZoom: number;\r\n\r\n  apiKey = this.configService.getSettings('bingMapAPIKey');\r\n  defaultMapZoom = 15;\r\n\r\n  @ViewChild('bingMap', {static: false}) bingMap;\r\n\r\n  constructor(private configService: ConfigService) { }\r\n\r\n  ngAfterViewInit() {\r\n    this.initMap();\r\n  }\r\n\r\n  private initMap() {\r\n    const map = new Microsoft.Maps.Map(this.bingMap.nativeElement, {\r\n      credentials: this.apiKey,\r\n      disableBirdseye: true\r\n    });\r\n    \r\n    const location = new Microsoft.Maps.Location(this.latitude, this.longitude);\r\n    //Add a pushpin at the user's location.\r\n    const options = {};\r\n    if (this.buildingName) {\r\n      options['title'] = this.buildingName;\r\n    }\r\n    const pin = new Microsoft.Maps.Pushpin(location, options);\r\n    map.entities.push(pin);\r\n    //Center the map on the user's location.\r\n    map.setView({ center: location, zoom: this.mapZoom && this.mapZoom > 0 ? this.mapZoom : this.defaultMapZoom });\r\n  }\r\n}\r\n","import { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { WindowManager } from '../../_core/services/window-manager.service';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { ModalFormEvent } from '../../_enums/modal-form-event';\r\n\r\n@Component({\r\n  selector: 'carousel-modal',\r\n  templateUrl: './carousel-modal.component.html'\r\n})\r\nexport class CarouselModalComponent implements OnInit {\r\n\r\n    @Input() imageUrlCollection: Array<string>;\r\n    @Input() modalTitle: string;\r\n    @Input() hideSubmit: boolean;\r\n\r\n    constructor(\r\n        public windowManager: WindowManager\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    handleModalEvent(modalEvent: ModalFormEvent) {\r\n        if (modalEvent === ModalFormEvent.Dismiss) {\r\n            this.windowManager.close();\r\n        }\r\n    }\r\n}\r\n","import {NgbModal, NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { TranslationManager } from '../../_core/i18n/translation-manager';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { ModalProperties } from '../../_models/modal-properties.model';\r\n\r\n@Component({\r\n  selector: 'confirm-modal',\r\n  templateUrl: './confirm-modal.component.html'\r\n})\r\nexport class ConfirmModalComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  @Input() options: ModalProperties;\r\n\r\n  constructor(\r\n    public activeModal: NgbActiveModal,\r\n    private translateService: TranslationManager\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.options.heading.key = this.translateMessage(this.options.heading.key, this.options.heading.params);\r\n    this.options.body.key = this.translateMessage(this.options.body.key, this.options.body.params);\r\n\r\n    if (this.options.successText) {\r\n      this.options.successText.key = this.translateMessage(this.options.successText.key, this.options.successText.params);\r\n    }\r\n\r\n    if (this.options.dismissText) {\r\n      this.options.dismissText.key = this.translateMessage(this.options.dismissText.key, this.options.dismissText.params);\r\n    }\r\n  }\r\n\r\n  private translateMessage(message: string, params?: object) {\r\n    return this.translateService.instant(this.options.translateBaseKey + message, params);\r\n  }\r\n}\r\n","import { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'confirm',\r\n  templateUrl: './confirm.component.html'\r\n})\r\n// TODO add translations to confirm for delete action\r\nexport class ConfirmComponent implements TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  @Input() confirmHeading: string;\r\n  @Input() confirmationMessage: string;\r\n  @Output() isConfirmed = new EventEmitter<boolean>();\r\n\r\n  constructor() {}\r\n\r\n  public onConfirmed() {\r\n    this.isConfirmed.emit(true);\r\n  }\r\n\r\n  public onCancel() {\r\n    this.isConfirmed.emit(false);\r\n  }\r\n}\r\n","import { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { AlertService } from '../../../_core/services/alert.service';\r\nimport { WindowRef } from '@progress/kendo-angular-dialog/dist/es2015';\r\nimport { WindowManager } from '../../../_core/services/window-manager.service';\r\nimport { Component, Output, Input, EventEmitter } from '@angular/core';\r\nimport { WindowOption } from '../../../_models/window-option';\r\n\r\n @Component({\r\n  selector: 'copy-asset-record-component',\r\n  templateUrl: './copy-asset-record.component.html'\r\n})\r\nexport class CopyAssetRecordComponent implements TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n   @Output() copyAssetRequested = new EventEmitter<void>();\r\n   @Input() disabled: boolean;\r\n\r\n  private windowRef: WindowRef;\r\n  constructor(\r\n    private windowManager: WindowManager,\r\n  ) {}\r\n\r\n  open(content) {\r\n    this.windowRef = this.windowManager.open(content, 'Duplicate Record', <WindowOption>{\r\n      isModal: true\r\n    });\r\n    this.windowRef.result.subscribe(result => {});\r\n  }\r\n\r\n  close() {\r\n    if (this.windowRef) {\r\n      this.windowRef.close();\r\n    }\r\n  }\r\n\r\n  createCopy() {\r\n    this.copyAssetRequested.emit();\r\n    this.close();\r\n  }\r\n}\r\n","import { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { SortDescriptor, orderBy, State, process } from '@progress/kendo-data-query/dist/es/main';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { ContractsGroupSummaryDto } from '../../_api/dtos/shared/contracts-groups-summary.dto';\r\nimport { GridDataResult, DataStateChangeEvent } from '@progress/kendo-angular-grid';\r\nimport { ContractService } from '../../_api/services/dashboard/contract.service';\r\nimport { Router } from '@angular/router';\r\nimport { DataTargetName } from '../../_enums/data-target-name';\r\n\r\n@Component({\r\n  selector: 'dashboard-groups',\r\n  templateUrl: './dashboard-groups.component.html'\r\n})\r\nexport class DashboardGroupsComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  @Input()\r\n  id: string;\r\n  public groups: ContractsGroupSummaryDto[] = new Array<ContractsGroupSummaryDto>();\r\n  public gridViewData: GridDataResult;\r\n  public groupsGridBusy = true;\r\n  public height: number;\r\n  private rowHeight = 80;\r\n  public state: State = {\r\n    skip: 0,\r\n    take: 15,\r\n\r\n    // Initial filter descriptor\r\n    filter: {\r\n      logic: 'and',\r\n      filters: []\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    private contractRepositoryService: ContractService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.id) {\r\n      this.contractRepositoryService.getContractsGroups(this.id).subscribe(\r\n        result => {\r\n          this.groups = result;\r\n          this.loadGroups();\r\n          this.groupsGridBusy = false;\r\n        },\r\n        error => {},\r\n        () => (this.groupsGridBusy = false)\r\n      );\r\n    }\r\n  }\r\n\r\n  public dataStateChange(state: DataStateChangeEvent): void {\r\n    this.state = state;\r\n    this.loadGroups();\r\n  }\r\n\r\n  public getTypeName(type: number) {\r\n    if (type === DataTargetName.client) {\r\n      return 'Client';\r\n    }\r\n\r\n    if (type === DataTargetName.inventory) {\r\n      return 'Inventory';\r\n    }\r\n\r\n    if (type === DataTargetName.consolidated) {\r\n      return 'Consolidated';\r\n    }\r\n\r\n    if (type === DataTargetName.building) {\r\n      return 'Buildings';\r\n    }\r\n\r\n    return 'Unknown Source';\r\n  }\r\n\r\n  public navigateToProject(id: string, event: any) {\r\n    event.preventDefault();\r\n    this.router.navigate([`/project-profile/${id}/MainProfile`]);\r\n  }\r\n\r\n  private loadGroups() {\r\n    this.gridViewData = process(this.groups, this.state);\r\n    this.height = this.calculateDynamicHeight(this.groups.length);\r\n  }\r\n\r\n  private calculateDynamicHeight(totalGroups: number): number {\r\n    const c = this;\r\n    const baseHeight = (2 * c.rowHeight);\r\n    if (totalGroups >= this.state.take) {\r\n      return baseHeight * (this.state.take / 2);\r\n    } else {\r\n      return baseHeight * totalGroups;\r\n    }\r\n  }\r\n}\r\n","import { HelperService } from '../../../_core/services/helper.service';\r\nimport { DefaultAssetFields } from './default-asset-fields';\r\nimport { BuildingInfoService } from '../../../_core/services/building-info-service';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { AlertService } from '../../../_core/services/alert.service';\r\nimport { Component, OnInit, Input, EventEmitter, Output, ViewChild } from '@angular/core';\r\nimport { AssetDto } from '../../../_api/_runtime/dtos/asset.dto';\r\nimport { ImageEntityType } from '../../../_api/_runtime/enums/image-entity-type';\r\nimport { FormActionEvent } from '../../../_models/form-action-event.model';\r\nimport { FieldCategory } from '../../../_enums/field-category';\r\nimport { FormGroup, NgForm } from '@angular/forms';\r\nimport { FormField } from '../../../_models/form-field.model';\r\nimport { IntlService } from '@progress/kendo-angular-intl';\r\nimport { FieldType } from '../../../_enums/field-type';\r\nimport { FieldMetaDataDto } from '../../../_api/dtos/inventory/field-meta-data.dto';\r\nimport { FormAction } from '../../../_enums/form-action';\r\n\r\n@Component({\r\n  selector: 'asset-form',\r\n  templateUrl: './asset-form.component.html'\r\n})\r\nexport class AssetFormComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  @Input()\r\n  assetDto = <AssetDto>{ id: '' };\r\n  @Input()\r\n  fieldMetaData = new Array<FieldMetaDataDto>();\r\n  @Input()\r\n  isModal = false;\r\n  @Input()\r\n  imageEntityType: ImageEntityType;\r\n  @Output()\r\n  formActionEvent = new EventEmitter<FormActionEvent>();\r\n  @Input()\r\n  isReadOnly = false;\r\n  @Input()\r\n  savingForm: boolean;\r\n\r\n  @Input()\r\n  translationKey: string;\r\n\r\n  @Input()\r\n  depreciationFieldMetadata = new Array<FieldMetaDataDto>();\r\n\r\n  public isSaving = false;\r\n\r\n  public FieldCategory: FieldCategory;\r\n\r\n  formGroup: FormGroup;\r\n  @ViewChild('assetForm', { static: false })\r\n  assetForm: NgForm;\r\n\r\n  defaultFormFields = new Array<FormField>();\r\n  generalFormFields = new Array<FormField>();\r\n  customFormFields = new Array<FormField>();\r\n  depreciationFields = new Array<FormField>();\r\n\r\n\r\n  fields = new Array<FormField>();\r\n\r\n  private editedCustomFields: Array<FieldMetaDataDto> = [];\r\n\r\n  constructor(\r\n    private helperService: HelperService,\r\n    private buildingInfoService: BuildingInfoService,\r\n    private intl: IntlService,\r\n    private alertService: AlertService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    console.log(this.fieldMetaData, 'fieldMetaData asset-form');\r\n\r\n    this.fieldMetaData.forEach(field => {\r\n      if (field.name === 'assetImages') {\r\n        field.fieldType = FieldType.Image;\r\n      }\r\n\r\n      const defaultField = DefaultAssetFields.find(c => c.id === field.name);\r\n\r\n      if (field.name === 'matchCodeName') {\r\n        field.fieldType = FieldType.ReadOnly;\r\n      }\r\n\r\n      if (field.fieldType === FieldType.DropDown) {\r\n        if (field.options && field.options.length > 0) {\r\n         field.options = this.helperService.sortCollection(field.options, 'displayName');\r\n\r\n        }\r\n      }\r\n\r\n      if (defaultField) {\r\n        this.defaultFormFields.push(this.mapMetaDataToField(field, defaultField.order));\r\n      }\r\n\r\n      if (!defaultField && !field.isCustom && this.depreciationFieldMetadata.findIndex(df => df.name === field.name) === -1) {\r\n        this.generalFormFields.push(this.mapMetaDataToField(field));\r\n      }\r\n\r\n      if (!defaultField && field.isCustom) {\r\n        this.customFormFields.push(this.mapMetaDataToField(field));\r\n      }\r\n    });\r\n\r\n    if (this.depreciationFieldMetadata && this.depreciationFieldMetadata.length > 0) {\r\n      this.depreciationFields = this.depreciationFieldMetadata.map(f => this.mapMetaDataToField(f));\r\n    }\r\n\r\n    const depreciationAsOfDate = this.depreciationFields.find(c => c.id === 'depreciationAsOfDate');\r\n\r\n    if (depreciationAsOfDate) {\r\n      depreciationAsOfDate.isReadOnly = true;\r\n    }\r\n\r\n\r\n    this.formGroup = this.helperService\r\n      .toFormGroup(this.generalFormFields\r\n        .concat(this.defaultFormFields)\r\n        .concat(this.customFormFields)\r\n        .concat(this.depreciationFields));\r\n  }\r\n\r\n  save(formAction: FormAction): void {\r\n    this.isSaving = true;\r\n    const assetDto = this.formGroup.value;\r\n    if (assetDto.buildingId && assetDto.buildingId.indexOf(',') > 0) {\r\n      [, assetDto.siteId, assetDto.buildingId] = assetDto.buildingId.split(',');\r\n      if (assetDto.siteId.indexOf('blank') !== -1) {\r\n        assetDto.siteId = '';\r\n      }\r\n    }\r\n    if (this.validAssetDto(assetDto)) {\r\n      assetDto.customColumns = this.editedCustomFields;\r\n      this.formActionEvent.emit({ action: formAction, formGroup: this.formGroup, form: this.assetForm, dto: assetDto });\r\n    } else {\r\n      this.alertService.error('Missing required fields');\r\n      this.isSaving = false;\r\n    }\r\n  }\r\n\r\n  private validAssetDto(assetDto: AssetDto): boolean {\r\n    if (!assetDto.buildingId) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  getTranslationKey(fieldKey: string): string {\r\n    return this.translationKey ? this.translationKey : fieldKey;\r\n  }\r\n\r\n  cancel(): void {\r\n    this.formActionEvent.emit({ action: FormAction.Cancel });\r\n  }\r\n\r\n  keepFormOpen(): void {\r\n    this.save(FormAction.KeepOpen);\r\n    this.isSaving = false;\r\n  }\r\n\r\n  saveAndClose(): void {\r\n    this.save(FormAction.Save);\r\n  }\r\n\r\n  private mapMetaDataToField(field: FieldMetaDataDto, defaultOrder?: number): FormField {\r\n    return <FormField>{\r\n      id: field.name,\r\n      type: field.fieldType,\r\n      value: this.assetDto ? this.mapValue(field, this.assetDto[field.name]) : '',\r\n      displayName: field.displayName,\r\n      name: field.name,\r\n      options: field.options,\r\n      cascadedValueOptions: field.cascadedValueOptions,\r\n      cascadedValues: field.cascadedValues,\r\n      order: defaultOrder,\r\n      required: field.required,\r\n      translationKey: field.translationKey\r\n    };\r\n  }\r\n\r\n  private mapValue(field: FieldMetaDataDto, value: string) {\r\n    if (field.fieldType === FieldType.DateTime) {\r\n      return this.intl.parseDate(value);\r\n    }\r\n\r\n    if (field.fieldType === FieldType.Double) {\r\n      return this.intl.parseNumber(value, 'n2', 'en');\r\n    }\r\n\r\n    if (field.fieldType === FieldType.Integer) {\r\n      return this.intl.parseNumber(value, 'n', 'en');\r\n    }\r\n\r\n    return field.name === 'buildingId' ? this.buildingInfoService.mapBuildingSelection(value, field.cascadedValueOptions) : value;\r\n  }\r\n\r\n  public handleCustomFieldLabelChange(field: FieldMetaDataDto) {\r\n    const existingCustomField = this.editedCustomFields.find(f => f.name === field.name);\r\n    if (existingCustomField) {\r\n      existingCustomField.displayName = field.displayName;\r\n    } else {\r\n      this.editedCustomFields.push(field);\r\n    }\r\n  }\r\n}\r\n","import { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { forwardRef, Renderer2, Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { TranslatedComponent } from '../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../_core/i18n/translation-base-keys';\r\nimport { CascadedSelectOption } from '../../../../_models/cascaded-select-option.model';\r\nimport { CascadedSelectValue } from '../../../../_models/cascaded-select-value.model';\r\n\r\n@Component({\r\n  selector: 'cascading-combo-box',\r\n  templateUrl: './cascading-combo-box.component.html',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => CascadingComboBoxComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class CascadingComboBoxComponent implements OnInit, ControlValueAccessor, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  @Input() options = new Array<CascadedSelectOption>();\r\n  @Input() valuesToSelect = new Array<CascadedSelectValue>();\r\n  @Input() required = false;\r\n  @Output() OnSelectedItemsChange: EventEmitter<Array<string>> = new EventEmitter<Array<string>>();\r\n\r\n  public selectedItems = [];\r\n  public selectedIds: Array<string>;\r\n  public depth = [];\r\n\r\n  constructor(private renderer: Renderer2) {}\r\n\r\n  ngOnInit() {\r\n    this.selectedItems = [];\r\n  }\r\n\r\n  onComboboxChange(index: number, event: any) {\r\n    let selectedValue = '';\r\n\r\n    if (event === undefined) {\r\n      this.selectedItems[index] = null;\r\n    } else {\r\n      selectedValue = this.selectedItems.map(c => !!c && c.key).toString();\r\n    }\r\n\r\n    // Clear selected items after index\r\n    for (let i = 0; i < this.selectedItems.length; i++) {\r\n      if (i > index) {\r\n        this.selectedItems[i] = null;\r\n      }\r\n    }\r\n\r\n    // console.log(selectedValue);\r\n\r\n    this.writeValue(selectedValue);\r\n  }\r\n\r\n  setRemainingOptions(field: CascadedSelectOption, depth: number): void {\r\n    if (field && field.options) {\r\n      const current = field.options.find(c => !!c && c.key === this.selectedIds[depth]);\r\n\r\n      if (current) {\r\n        this.selectedItems.push(current);\r\n      }\r\n\r\n      this.setRemainingOptions(current, depth + 1);\r\n    }\r\n  }\r\n\r\n  // Angular Forms API Interface Members\r\n  // The Angular Forms API calls this method to write form control value\r\n\r\n  onChange = (value: any) => {};\r\n\r\n  writeValue(value: string): void {\r\n    this.onChange(value);\r\n\r\n    if (this.selectedIds === undefined) {\r\n      this.initialize(value);\r\n    }\r\n  }\r\n\r\n  propagateChange = (_: any) => {};\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    // Required by ControlValueAccessor - DO NOT Remove\r\n  }\r\n  setDisabledState?(isDisabled: boolean): void {}\r\n\r\n\r\n  private initialize(value: string): void {\r\n    this.selectedIds = new Array<string>();\r\n\r\n    if (value && value.indexOf(',') !== -1) {\r\n      this.selectedIds = value.split(',');\r\n    }\r\n\r\n    // Setting the first set of options\r\n    if (this.options) {\r\n      const firstSelectOption = this.options.find(f => f && f.key === this.selectedIds[0]);\r\n\r\n      if (firstSelectOption) {\r\n        this.selectedItems.push(firstSelectOption);\r\n\r\n        // Recursively set the remaining options\r\n        this.setRemainingOptions(firstSelectOption, 1);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { TranslatedComponent } from '../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../_core/i18n/translation-base-keys';\r\nimport { Component, OnChanges, OnInit, Input, ComponentRef, AfterViewInit, Output, EventEmitter } from '@angular/core';\r\nimport { FieldType } from '../../../../_enums/field-type';\r\nimport { FormField } from '../../../../_models/form-field.model';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { IntlService } from '@progress/kendo-angular-intl';\r\nimport { FieldMetaDataDto } from '../../../../_api/dtos/inventory/field-meta-data.dto';\r\n\r\n@Component({\r\n  selector: 'dynamic-field',\r\n  templateUrl: './dynamic-field.component.html'\r\n})\r\nexport class DynamicFieldComponent implements OnInit, OnChanges, AfterViewInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  fieldTypes = FieldType;\r\n\r\n  @Input() canRemove: boolean;\r\n  @Input() field: FormField;\r\n  @Input() form: FormGroup;\r\n  @Input() key: string;\r\n  @Input() value: string | Date;\r\n  @Input() entityId: string;\r\n  @Input() imageEntityType: number;\r\n  @Input() sourceTranslationKey = '';\r\n\r\n  @Output() customFieldLabelChange: EventEmitter<FieldMetaDataDto> = new EventEmitter();\r\n\r\n  hasMinProperty = false;\r\n\r\n  translationBaseKey: boolean;\r\n  ref: ComponentRef<DynamicFieldComponent>;\r\n  dateValue: Date;\r\n\r\n  constructor(private intl: IntlService) {}\r\n\r\n  ngOnInit(): void {\r\n    if (this.field.type === this.fieldTypes.Date || \r\n      this.field.type === this.fieldTypes.DateTime) {\r\n        this.dateValue = this.field.value;\r\n    }\r\n\r\n    if (this.field.type === this.fieldTypes.Double) {\r\n      this.field.decimalLength = this.field.decimalLength ? this.field.decimalLength : 2;\r\n      this.field.format = this.field.format ? this.field.format : 'n2';\r\n    }\r\n\r\n    if (this.field.type === this.fieldTypes.Percent) {\r\n      this.field.decimalLength = this.field.decimalLength ? this.field.decimalLength : 2;\r\n      this.field.format = this.field.format ? this.field.format : '#\\\\%';\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.dateValue) {\r\n      if (this.isTimePresent(this.dateValue)) {\r\n        this.dateValue = new Date(this.removeTimeZoneOffsetFromDate(this.dateValue));\r\n      } else {\r\n        this.dateValue.setTime(this.removeTimeZoneOffsetFromDate(this.dateValue));\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    this.hasMinProperty = this.field && typeof this.field.min === 'number' ? true : false;\r\n  }\r\n\r\n  public onChange(value: Date): void {\r\n    if (value) {\r\n      value.setHours(0, 0, 0, 0);\r\n      this.dateValue.setTime(this.removeTimeZoneOffsetFromDate(value));\r\n    }\r\n  }\r\n\r\n  get isValid(): boolean {\r\n    return this.form.controls[this.field.id] ? this.form.controls[this.field.id].valid : false;\r\n  }\r\n\r\n  remove() {\r\n    this.ref.destroy();\r\n  }\r\n\r\n  private removeTimeZoneOffsetFromDate(date: Date) {\r\n    const timeOffsetInMS: number = date.getTimezoneOffset() * 60000;\r\n    return (date.getTime() - timeOffsetInMS);\r\n  }\r\n\r\n  private isTimePresent(inputDate: Date) {\r\n    if(inputDate.getHours() === 0\r\n    && inputDate.getMinutes() === 0\r\n    && inputDate.getSeconds() === 0\r\n    && inputDate.getMilliseconds() === 0) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public customLabelChange($event: any, field: FormField) {\r\n    const newDisplayName = $event.target.innerText.trim();\r\n    if (!!newDisplayName && newDisplayName !== field.displayName) {\r\n      this.customFieldLabelChange.emit(<FieldMetaDataDto> {\r\n        displayName: newDisplayName,\r\n        name: field.name,\r\n        isCustom: true\r\n      });\r\n    } else {\r\n      $event.target.innerText = field.displayName;\r\n    }\r\n  }\r\n}\r\n","import { CarouselModalComponent } from '../../carousel-modal.component';\r\nimport { TranslatedComponent } from '../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../_core/i18n/translation-base-keys';\r\nimport { ImageService } from '../../../../_core/services/image.service';\r\nimport { WindowManager } from '../../../../_core/services/window-manager.service';\r\nimport { Component, OnInit, Input, ViewContainerRef } from '@angular/core';\r\nimport { ImageEntityType } from '../../../../_api/_runtime/enums/image-entity-type';\r\nimport { CreateImageDto } from '../../../../_api/_runtime/dtos/create-image.dto';\r\nimport { ImageDto } from '../../../../_api/_runtime/dtos/image.dto';\r\nimport { ImageApiService } from '../../../../_api/_runtime/services/image-api.service';\r\nimport { InsuranceApiService } from '../../../../_api/_runtime/services/insurance-api.service';\r\nimport { InventoryApiService } from '../../../../_api/_runtime/services/inventory-api.service';\r\nimport { WindowOption } from '../../../../_models/window-option';\r\n\r\n@Component({\r\n  selector: 'image-upload-field',\r\n  templateUrl: './image-upload-field.component.html'\r\n})\r\nexport class ImageUploadFieldComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  @Input() entityId: string;\r\n  @Input() imageEntityType: ImageEntityType;\r\n\r\n  uploadImageDto = <CreateImageDto>{ file: null, imageName: '' };\r\n  images: Array<ImageDto> = new Array<ImageDto>();\r\n  disabled: boolean;\r\n\r\n  constructor(\r\n    private imageApiService: ImageApiService,\r\n    private InventoryApiService: InventoryApiService,\r\n    private insuranceApiService: InsuranceApiService,\r\n    private windowManager: WindowManager,\r\n    private container: ViewContainerRef,\r\n    private imageService: ImageService\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n    if (this.entityId) {\r\n      this.uploadImageDto.id = this.entityId;\r\n      this.updateImages();\r\n    } else {\r\n      this.disabled = true;\r\n    }\r\n  }\r\n\r\n  fileChange(event) {\r\n    const fileList: FileList = event.target.files;\r\n\r\n    if (fileList.length > 0) {\r\n      this.uploadImageDto.file = fileList[0];\r\n      this.uploadImageDto.imageName = fileList[0].name;\r\n    }\r\n  }\r\n\r\n  upload() {\r\n    this.uploadImageDto.index = this.images.length;\r\n\r\n    if (this.imageEntityType === 0) {\r\n      this.imageApiService.createAssetImage(this.uploadImageDto).subscribe(() => {\r\n        this.updateImages();\r\n      });\r\n    } else {\r\n      this.imageApiService.createBuildingImage(this.uploadImageDto).subscribe(() => {\r\n        this.updateImages();\r\n      });\r\n    }\r\n  }\r\n\r\n  updateImages() {\r\n    if (this.imageEntityType === 0) {\r\n      this.InventoryApiService.getAssetRecord(this.entityId).subscribe(dto => {\r\n        if (dto.assetImages) {\r\n          this.images = dto.assetImages.sort(this.imageService.compareImageIndexes);\r\n          this.imageService.imageCollection = this.images;\r\n        }\r\n      });\r\n    } else {\r\n      this.insuranceApiService.getBuilding(this.entityId).subscribe(dto => {\r\n        if (dto.buildingImages) {\r\n          this.images = dto.buildingImages.sort(this.imageService.compareImageIndexes);\r\n          this.imageService.imageCollection = this.images;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  delete(image: ImageDto) {\r\n    this.imageApiService.deleteImage(image.id).subscribe(() => {\r\n      this.images = this.images.filter((img) => {\r\n        return img.index !== image.index;\r\n      });\r\n      this.imageService.imageCollection = this.images;\r\n    });\r\n  }\r\n\r\n  onInputBlur(event: Event, imageIndex: number) {\r\n    const inputValue = Number((<HTMLInputElement>event.target).value);\r\n\r\n    if (inputValue !== this.images[imageIndex].index) {\r\n      const editedImageIndex: number = this.images[imageIndex].index;\r\n\r\n      for (let i = 0; i < this.images.length; i++) {\r\n        if (this.images[i].index === inputValue) {\r\n\r\n          this.images[i].index = this.images[imageIndex].index;\r\n          this.images[imageIndex].index = this.images[i].index;\r\n\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (this.images[imageIndex].index === editedImageIndex) {\r\n        this.images[imageIndex].index = inputValue;\r\n      }\r\n\r\n      this.images.sort(this.imageService.compareImageIndexes);\r\n      this.imageService.imageCollection = this.images;\r\n\r\n    }\r\n  }\r\n\r\n  showImageCarouselOnClick(imageUrl: string) {\r\n    let imageUrlCollection = new Array<string>();\r\n\r\n    this.images.forEach((image) => {\r\n      imageUrlCollection.push(image.url);\r\n    });\r\n\r\n    imageUrlCollection = imageUrlCollection.filter((url) => {\r\n      return url !== imageUrl;\r\n    });\r\n    imageUrlCollection.unshift(imageUrl);\r\n\r\n\r\n    const modal = this.windowManager.open(CarouselModalComponent, 'Images', <WindowOption>{\r\n      isModal: true\r\n    });\r\n\r\n    modal.content.instance.hideSubmit = true;\r\n    modal.content.instance.imageUrlCollection = imageUrlCollection;\r\n  }\r\n\r\n}\r\n","import { FormField } from '../../../_models/form-field.model';\r\n\r\nexport const DefaultAssetFields: Array<FormField> = [\r\n  <FormField>{ id: 'buildingId', order: 0 },\r\n  <FormField>{ id: 'assetImages', order: 1 },\r\n  <FormField>{ id: 'floor', order: 2 },\r\n  <FormField>{ id: 'room', order: 3 },\r\n  <FormField>{ id: 'department', order: 4 },\r\n  <FormField>{ id: 'assetTagNumber', order: 5 },\r\n  <FormField>{ id: 'description', order: 6 },\r\n  <FormField>{ id: 'manufacturer', order: 7 },\r\n  <FormField>{ id: 'modelNumber', order: 8 },\r\n  <FormField>{ id: 'serialNumber', order: 9 },\r\n  <FormField>{ id: 'quantity', order: 10 },\r\n  <FormField>{ id: 'acquisitionDate', order: 11 },\r\n  <FormField>{ id: 'historicalCost', order: 12 },\r\n  <FormField>{ id: 'assetClass', order: 13 },\r\n  <FormField>{ id: 'costReplacementNew', order: 14 }\r\n];\r\n","import { SortDescriptor } from '@progress/kendo-data-query/dist/es/main';\r\nimport { FamisGridService } from '../../_core/services/famis-grid.service';\r\nimport { AlertService } from '../../_core/services/alert.service';\r\nimport { HelperService } from '../../_core/services/helper.service';\r\nimport { CellCloseEvent } from '@progress/kendo-angular-grid/dist/es2015/editing/cell-close-event';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { UserGridService, ColumnSize, GridSetting } from '../../_core/services/user-grid.service';\r\nimport { ColumnReorderEvent, RowClassArgs, ColumnComponent, \r\n  SelectableSettings, DataStateChangeEvent, GridDataResult, SelectionEvent } from '@progress/kendo-angular-grid';\r\nimport { UserStore } from '../../_core/user/user.store';\r\nimport { takeUntil, tap } from 'rxjs/operators';\r\nimport { of, Subject, Observable } from 'rxjs';\r\nimport { Component, OnInit, OnDestroy, Input, EventEmitter, Output } from '@angular/core';\r\nimport { FamisGrid, FamisGridFeature } from '../../_models/shared/famis-grid-state.model';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { DataItemValue } from '../../_models/data-item-value.model';\r\nimport { FamisGridCacheResult, FamisGridCacheWindow } from '../../_models/shared/famis-grid-cache-result.model';\r\nimport { FamisGridActionEvent } from '../../_models/shared/famis-grid-action-event.model';\r\nimport { SelectionChangeEvent } from '../../_models/selection-change-event.model';\r\nimport { CompositeFilterDescriptor, State, filterBy } from '@progress/kendo-data-query';\r\nimport { GridColumnHeader } from '../../_models/grid-column-header.model';\r\nimport { FieldType } from '../../_enums/field-type';\r\nimport { Router } from '@angular/router';\r\nimport { FamisGridUpdateColumnSelectionEvent } from '../../_models/shared/famis-grid-update-column-selection-event.model';\r\nimport { DataTargetName } from '../../_enums/data-target-name';\r\nimport { CreateAssetFileCustomColumnDto } from '../../_api/dtos/create-asset-file-custom-column.dto';\r\nimport { FormField } from '../../_models/form-field.model';\r\nimport { AssetSortTermDto } from '../../_api/_runtime/dtos/asset-sort-term.dto';\r\n\r\n@Component({\r\n  selector: 'famis-grid',\r\n  templateUrl: './famis-grid.component.html'\r\n})\r\nexport class FamisGridComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  @Input() famisGrid: FamisGrid;\r\n  @Input() showAddCustomColumn = false;\r\n  @Input() InGridEditableNonNegativeColumns = Array<string>();\r\n  @Input() isPersistentGrid = true; // defaulted to true. Pass in \"false\" where you don't need the grid to be persistent\r\n\r\n  /* A Subject for monitoring the destruction of the component. */\r\n  private destroyed$ = new Subject<any>();\r\n\r\n  // Usage of Any type is by design as Grid can present a collection of ANY datatype\r\n  public gridData: any;\r\n  public formGroup: FormGroup;\r\n  public selectableSettings: SelectableSettings;\r\n  public selectedRows = [];\r\n\r\n  public canSelect: boolean | string = false;\r\n  public canSort: boolean | string = false;\r\n  public canFilter: boolean | string = 'menu';\r\n  public canSelectColumns = false;\r\n  public canInGridEditCells: boolean;\r\n\r\n  public editedRecords = new Array<DataItemValue>();\r\n  public editedRecordsWithErrors = new Array<DataItemValue>();\r\n\r\n  @Output() updateCacheEvent = new EventEmitter<FamisGridCacheResult>();\r\n  @Output() actionEvent = new EventEmitter<FamisGridActionEvent>();\r\n  @Output() selectionChanged = new EventEmitter<SelectionChangeEvent>();\r\n\r\n  @Output() filterChanged = new EventEmitter<CompositeFilterDescriptor>();\r\n  @Output() sortChanged = new EventEmitter<Array<SortDescriptor>>();\r\n  @Output() dataStateChanged = new EventEmitter<DataStateChangeEvent>();\r\n  @Output() cellValueChanged = new EventEmitter<Array<DataItemValue>>();\r\n\r\n  public sort: SortDescriptor[];\r\n  public view: Observable<GridDataResult>;\r\n\r\n  public filterRoot: CompositeFilterDescriptor;\r\n  public dataLoading = false;\r\n\r\n  public selectedHeaders = new Array<GridColumnHeader>();\r\n  public state: State;\r\n  private editedRowIndex: string;\r\n  private unsortableFields: Array<string> = ['inventoryImageUrl1'];\r\n\r\n  public gridSettingsName: string;\r\n\r\n  public userId: string;\r\n  public gridSettingsLoaded: boolean | undefined = undefined;\r\n\r\n  public fieldTypes = FieldType;\r\n\r\n  public hideTableCounts = false;\r\n  public showDashboarGroupSubGrid = false;\r\n\r\n  private fixedColumnLength = 0;\r\n  private grid: string;\r\n  private defaultHeaderWidth: '255';\r\n\r\n  private scrollingMode: string;\r\n\r\n  constructor(\r\n    private famisGridService: FamisGridService,\r\n    private alertService: AlertService,\r\n    private helperService: HelperService,\r\n    private userGridService: UserGridService,\r\n    private router: Router,\r\n    private userStore: UserStore,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const s = this;\r\n    s.dataLoading = true;\r\n    this.gridSettingsName = this.userGridService.createUserGridId(\r\n      this.famisGrid.dataSource ? this.famisGrid.dataSource.toString() : null,\r\n      this.router.url.toString().split('?')[0],\r\n      this.famisGrid.name\r\n    );\r\n\r\n    this.famisGrid.columnToSelectBy = !!this.famisGrid.columnToSelectBy ? this.famisGrid.columnToSelectBy : 'id';\r\n\r\n    this.state = {\r\n      skip: 0,\r\n      take: this.famisGridService.windowSize\r\n    };\r\n\r\n    this.famisGrid.height = !!this.famisGrid.height ? this.famisGrid.height : 330;\r\n\r\n    this.famisGrid.scrollingMode = !!this.famisGrid.scrollingMode ? this.famisGrid.scrollingMode : 'virtual';\r\n\r\n    this.filterRoot = { logic: 'and', filters: [] };\r\n\r\n    this.userStore.user.subscribe(user => {\r\n      this.userId = user.profile.IdentityId.toString();\r\n      this.userGridService.getSettings(this.userId, this.gridSettingsName, this.famisGrid.selectedHeaders).subscribe(savedSetting => {\r\n        const defaultSort = this.famisGrid.defaultSort ? this.famisGrid.defaultSort : null;\r\n        if (!savedSetting.gridSort) {\r\n          savedSetting.gridSort = defaultSort;\r\n        }\r\n\r\n        this.applySavedSettings(savedSetting);\r\n\r\n        if (this.isPersistentGrid) {\r\n          this.userGridService.saveSettings(\r\n            this.gridSettingsName,\r\n            savedSetting.headers,\r\n            null,\r\n            this.userId,\r\n            savedSetting.kendoGridState ? savedSetting.kendoGridState : null,\r\n            savedSetting.filters ? savedSetting.filters : null,\r\n            savedSetting.columnSizes ? savedSetting.columnSizes : null,\r\n            savedSetting.gridSort ? savedSetting.gridSort : defaultSort,\r\n          ).subscribe(updatedSetting => {\r\n            this.userGridService.updateUserSettingsCache(updatedSetting);\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    let order = 0;\r\n    this.famisGrid.columnHeaders.forEach(header => {\r\n      header.order = order++;\r\n      if (header.width === undefined) {\r\n        header.width = '255';\r\n      }\r\n    });\r\n\r\n    this.editedRecords = new Array<DataItemValue>();\r\n\r\n    this.famisGridService.editedRecords$.subscribe(editedRecords => {\r\n      this.editedRecords = editedRecords;\r\n    });\r\n\r\n    this.editedRecordsWithErrors = new Array<DataItemValue>();\r\n\r\n    this.famisGridService.editedRecordsWithErrors$.subscribe(editedRecordsWithErrors => {\r\n      this.editedRecordsWithErrors = editedRecordsWithErrors;\r\n    });\r\n\r\n    if (this.famisGrid.supportedOperators) {\r\n      this.hideTableCounts = this.famisGrid.supportedOperators.some(x => x === FamisGridFeature.HideTableCounts);\r\n      this.canSelect = this.famisGrid.supportedOperators.some(x => x === FamisGridFeature.SingleSelectable)\r\n                                                              ? `{checkboxOnly:true, 'single'}`\r\n                                                              : false;\r\n      this.canSelect = this.famisGrid.supportedOperators.some(x => x === FamisGridFeature.MultiSelectable)\r\n                                                              ? `{checkboxOnly:true, 'multiple'}`\r\n                                                              : false;\r\n\r\n      this.showDashboarGroupSubGrid = this.famisGrid.supportedOperators.some(x => x === FamisGridFeature.DashboardGroupSubGrid);\r\n      this.canSort = this.famisGrid.supportedOperators.some(x => x === FamisGridFeature.Sort)\r\n                      ? `{allowUnsort: false,mode: 'single'}`\r\n                      : false;\r\n      this.canFilter = this.famisGrid.supportedOperators.some(x => x === FamisGridFeature.Filter) ? 'menu' : false;\r\n      this.canSelectColumns = this.famisGrid.supportedOperators.some(x => x === FamisGridFeature.ColumnSelection);\r\n      this.canInGridEditCells = this.famisGrid.supportedOperators.some(x => x === FamisGridFeature.InGridEditable);\r\n\r\n      this.fixedColumnLength = this.canSelect ? 1 : 0;\r\n      this.fixedColumnLength = !!this.famisGrid.actions && this.famisGrid.actions.length > 0\r\n                                ? this.fixedColumnLength + 1\r\n                                : this.fixedColumnLength;\r\n    }\r\n\r\n    this.famisGridService.cachedRecords$\r\n    .pipe(takeUntil(this.destroyed$))\r\n    .subscribe(cachedRecords => {\r\n      s.dataLoading = true;\r\n      if (cachedRecords[this.famisGrid.gridId]) {\r\n        s.updateView(cachedRecords[this.famisGrid.gridId]);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  public inGridSave() {\r\n    const enumColumns = this.famisGrid.columnHeaders.filter(header => header.enumOptions && header.enumOptions.length > 0);\r\n    if (enumColumns && enumColumns.length > 0) {\r\n      this.editedRecords.forEach(record => {\r\n        const enumKeys = Object.keys(record.dataItem).filter(key => enumColumns.map(enumColumn => enumColumn.name).includes(key));\r\n        enumKeys.forEach(enumKey => {\r\n          const enumColumn = enumColumns.find(col => col.name === enumKey);\r\n          if (enumColumn) {\r\n            const enumOption = enumColumn.enumOptions.find(option => option.displayName === record.dataItem[enumKey]);\r\n            if (enumOption) {\r\n              record.dataItem[enumKey] = enumOption.name;\r\n            }\r\n          }\r\n        });\r\n      });\r\n    }\r\n    this.cellValueChanged.emit(this.editedRecords);\r\n  }\r\n\r\n  public dataStateChange(state: DataStateChangeEvent): void {\r\n    const s = this;\r\n    s.dataLoading = true;\r\n    // Emit change right away to let consuming component handle\r\n    s.dataStateChanged.emit(state);\r\n    this.state = state;\r\n    this.famisGridService\r\n      .update(s.famisGrid.gridId, s.state.skip, s.state.take, s.famisGrid.totalRecordCount,\r\n        s.famisGridService.currentSort[s.famisGrid.gridId])\r\n      .pipe(takeUntil(s.destroyed$))\r\n      .subscribe(result => {\r\n        if (result.updateCache) {\r\n          s.updateCacheEvent.emit(result);\r\n        } else if (result.gridId === s.famisGrid.gridId && result.cachedData.length) {\r\n          s.updateView(result.cachedData);\r\n        }\r\n      });\r\n  }\r\n\r\n  public onColumnSelection(selectedEvent: FamisGridUpdateColumnSelectionEvent) {\r\n    if (selectedEvent.RemoveCustomColumns && selectedEvent.RemoveCustomColumns.length > 0) {\r\n      const removeCustomColumns = selectedEvent.RemoveCustomColumns;\r\n      if (this.famisGrid.dataSource === DataTargetName.building) {\r\n        selectedEvent.RemoveCustomColumns.forEach(\r\n          customColumn => {\r\n            // Delete custom column from Building\r\n            this.famisGridService.DeleteBuildingCustomColumn(this.famisGrid.groupId,\r\n              customColumn.displayName).subscribe(result => {\r\n                if (result) {\r\n                  removeCustomColumns.pop();\r\n                  this.handleDeletedColumnResult(selectedEvent, removeCustomColumns, customColumn);\r\n                }\r\n              });\r\n          });\r\n      } else {\r\n        selectedEvent.RemoveCustomColumns.forEach(\r\n          customColumn => {\r\n            // Delete custom column from Asset\r\n            this.famisGridService.DeleteAssetCustomColumn(this.famisGrid.fileId,\r\n              customColumn.displayName).subscribe(result => {\r\n                if (result) {\r\n                  removeCustomColumns.pop();\r\n                  this.handleDeletedColumnResult(selectedEvent, removeCustomColumns, customColumn);\r\n                }\r\n              });\r\n          });\r\n      }\r\n    } else {\r\n      this.createCustomColumns(selectedEvent);\r\n    }\r\n  }\r\n\r\n  private createCustomColumns(selectedEvent: FamisGridUpdateColumnSelectionEvent) {\r\n    if (selectedEvent.PendingCustomColumns && selectedEvent.PendingCustomColumns.length > 0) {\r\n      // Create Custom Columns\r\n      if (this.famisGrid.dataSource === DataTargetName.building) {\r\n        this.famisGridService.AddBuildingCustomColumns(this.famisGrid.groupId,\r\n          selectedEvent.PendingCustomColumns).subscribe(createdBuildingColumnsResult => {\r\n          this.handleCreatedColumnsResult(selectedEvent, createdBuildingColumnsResult);\r\n        });\r\n      } else {\r\n        this.famisGridService.AddAssetCustomColumns(this.famisGrid.fileId,\r\n          selectedEvent.PendingCustomColumns).subscribe(createdColumnsResult => {\r\n          this.handleCreatedColumnsResult(selectedEvent, createdColumnsResult.result);\r\n        });\r\n      }\r\n    } else {\r\n      // Set Selected Headers\r\n      this.setSelectedHeaders(selectedEvent.SelectedHeaders);\r\n    }\r\n  }\r\n\r\n  private handleCreatedColumnsResult(selectedEvent: FamisGridUpdateColumnSelectionEvent,\r\n                                     createdColumnsResult: CreateAssetFileCustomColumnDto[]) {\r\n    this.alertService.success('Columns added to successfully.');\r\n    createdColumnsResult.forEach(column => {\r\n      const newHeader = <GridColumnHeader>{\r\n        displayName: column.columnName,\r\n        name: column.columnName,\r\n        fieldType: column.dataType,\r\n        isCustom: true,\r\n        isSearchable: true,\r\n        isSortable: true,\r\n        isFilterable: true,\r\n        width: '255'\r\n      };\r\n      if (this.famisGrid.dataSource === DataTargetName.building) {\r\n        newHeader.isEditable = true;\r\n      }\r\n      this.famisGrid.columnHeaders.push(newHeader);\r\n      // Set Selected Headers\r\n      selectedEvent.SelectedHeaders.push(newHeader.name);\r\n    });\r\n    this.setSelectedHeaders(selectedEvent.SelectedHeaders);\r\n  }\r\n\r\n\r\n  private handleDeletedColumnResult(selectedEvent: FamisGridUpdateColumnSelectionEvent,\r\n                                    removeCustomColumns: GridColumnHeader[],\r\n                                    column: GridColumnHeader) {\r\n    this.alertService.success('Column removed successfully.');\r\n    // Remove column from grid column headers\r\n    let index = this.famisGrid.columnHeaders.findIndex(header => header.name === column.name);\r\n    if (index !== -1) {\r\n      this.famisGrid.columnHeaders.splice(index, 1);\r\n    }\r\n    // Remove column from selected headers\r\n    index = selectedEvent.SelectedHeaders.findIndex(headerName => headerName === column.name);\r\n    if (index !== -1) {\r\n      selectedEvent.SelectedHeaders.splice(index, 1);\r\n    }\r\n    this.setSelectedHeaders(selectedEvent.SelectedHeaders);\r\n    this.gridData.forEach(record => {\r\n      if (Object.keys(record).includes(column.name)) {\r\n        delete record[column.name];\r\n      }\r\n    });\r\n    if (removeCustomColumns.length === 0) {\r\n      this.createCustomColumns(selectedEvent);\r\n    }\r\n  }\r\n\r\n  private setSelectedHeaders(columnsSelected: Array<string>) {\r\n    this.selectedHeaders = new Array<GridColumnHeader>();\r\n\r\n    columnsSelected.forEach(name => {\r\n      const index = this.famisGrid.columnHeaders.findIndex(c => !!c && c.name === name);\r\n\r\n      if (index !== -1) {\r\n        this.selectedHeaders.push(this.famisGrid.columnHeaders[index]);\r\n      }\r\n    });\r\n\r\n    this.userGridService.saveSettings(\r\n      this.gridSettingsName,\r\n      this.selectedHeaders.map(c => c.name),\r\n      null,\r\n      this.userId)\r\n        .subscribe(saveResult => {\r\n          this.userGridService.updateUserSettingsCache(saveResult);\r\n          this.updateHeaders(this.selectedHeaders.map(c => c.name));\r\n        });\r\n  }\r\n\r\n  public updateCurrentView() {\r\n    const s = this;\r\n\r\n    this.famisGridService\r\n      .update(s.famisGrid.gridId, s.state.skip, s.state.take, s.famisGrid.totalRecordCount,\r\n        s.famisGridService.currentSort[s.famisGrid.gridId])\r\n      .pipe(takeUntil(s.destroyed$))\r\n      .subscribe(result => {\r\n        if (result.cachedData.length > 0 && result.gridId === this.famisGrid.gridId) {\r\n          s.updateView(result.cachedData);\r\n        }\r\n      });\r\n  }\r\n\r\n  public applySavedFilter(filter: CompositeFilterDescriptor) {\r\n\r\n    this.state.filter = filter;\r\n    let filterCleared = false;\r\n\r\n    if (this.state.filter.filters && this.state.filter.filters.length === 0) {\r\n      filterCleared = true;\r\n    }\r\n\r\n  }\r\n\r\n  public filterChange(filter: CompositeFilterDescriptor) {\r\n    const s = this;\r\n    this.applySavedFilter(filter);\r\n\r\n    this.famisGridService.mapFilterTerms(filter, s.famisGrid.gridId, s.famisGrid.dataSource).subscribe(result => {\r\n      s.famisGridService\r\n        .update(s.famisGrid.gridId, s.state.skip, s.state.take, s.famisGridService.windowSize,\r\n          s.famisGridService.currentSort[s.famisGrid.gridId], true)\r\n        .pipe(takeUntil(s.destroyed$))\r\n        .subscribe(res => {\r\n          // send out a filter save http post request to the api\r\n          this.userGridService.saveActiveFilters(this.gridSettingsName, s.state, filter,\r\n            ).subscribe(gridFilterSettingResult => {\r\n              this.userGridService.updateUserSettingsCache(gridFilterSettingResult);\r\n            s.updateCacheEvent.emit(res);\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  public cellClick({ sender, rowIndex, columnIndex, dataItem, isEdited, column }) {\r\n    if (this.canInGridEditCells) {\r\n      this.editCell({ sender, rowIndex, columnIndex, dataItem, isEdited, column });\r\n    }\r\n  }\r\n\r\n  public rowCallback = (context: RowClassArgs) => {\r\n    const id = context.dataItem.id;\r\n\r\n    if (this.editedRecordsWithErrors && this.editedRecordsWithErrors.findIndex(c => c.itemId === id) !== -1) {\r\n      return 'edited-row with-errors';\r\n    } else if (this.editedRecords && this.editedRecords.findIndex(c => c.itemId === id) !== -1) {\r\n      return 'edited-row';\r\n    }\r\n  }\r\n\r\n  public viewInGridSaveErrors(): void {\r\n    this.editedRecordsWithErrors.forEach(error => {\r\n      console.log(`In grid errors ${error.value}`);\r\n    });\r\n  }\r\n\r\n  public editCell({ sender, rowIndex, columnIndex, dataItem, isEdited, column }) {\r\n    if (!isEdited && column.editable === 'true') {\r\n      const fields = new Array<FormField>();\r\n\r\n      this.famisGrid.columnHeaders.forEach(columnHeader => {\r\n        fields.push(<FormField>{\r\n          id: columnHeader.name,\r\n          displayName: columnHeader.displayName,\r\n          type: columnHeader.fieldType\r\n        });\r\n      });\r\n\r\n      this.formGroup = this.helperService.toFormGroup(fields);\r\n      this.formGroup.patchValue(this.famisGridService.mapToTypedValues(dataItem, this.famisGrid.columnHeaders));\r\n\r\n      sender.editCell(rowIndex, columnIndex, this.formGroup);\r\n    }\r\n  }\r\n\r\n  public onColumnReorder(event: ColumnReorderEvent) {\r\n    if (event.newIndex <= this.fixedColumnLength - 1) {\r\n      event.preventDefault();\r\n    } else {\r\n      const headerNames = this.selectedHeaders.map(c => c.name);\r\n      const reorderedColumns =\r\n        this.move(headerNames, event.oldIndex - this.fixedColumnLength, event.newIndex - this.fixedColumnLength) as Array<string>;\r\n\r\n      this.userGridService.saveSelectedHeaders(this.gridSettingsName, reorderedColumns).subscribe(saveResult => {\r\n        this.userGridService.updateUserSettingsCache(saveResult);\r\n        this.applySavedSettings(saveResult.settingJson);\r\n      });\r\n    }\r\n  }\r\n\r\n  public onColumnResize(event: any) {\r\n    const sizes = new Array<ColumnSize>();\r\n    const resizedColumn = (event[0].column.field);\r\n    this.selectedHeaders.forEach(h => {\r\n      let width = h.width ? +h.width : +this.defaultHeaderWidth;\r\n      if (h.name === resizedColumn) {\r\n        width = event[0].newWidth;\r\n      }\r\n      sizes.push(<ColumnSize>{\r\n        fieldName: h.name,\r\n        width: width\r\n      });\r\n    });\r\n    this.userGridService.saveColumnSizes(this.gridSettingsName, sizes).subscribe(saveRes => {\r\n      this.userGridService.updateUserSettingsCache(saveRes);\r\n    });\r\n  }\r\n\r\n  public cellClose(args: CellCloseEvent) {\r\n    const { dataItem, column } = args;\r\n\r\n    if (!this.formGroup.valid) {\r\n      // prevent closing the edited cell if there are invalid values.\r\n      args.preventDefault();\r\n    } else if (this.formGroup.dirty) {\r\n      const columnFieldIsNonNegative = this.InGridEditableNonNegativeColumns.some(negativeColumn => negativeColumn === column.field);\r\n\r\n      dataItem[column.field] = columnFieldIsNonNegative && this.formGroup.value[column.field] < 0\r\n        ? Math.abs(this.formGroup.value[column.field])\r\n        : this.formGroup.value[column.field];\r\n\r\n      this.famisGridService.addEditedRecord(dataItem.id, dataItem);\r\n    }\r\n  }\r\n\r\n  public gridSelectionChange(event: SelectionEvent) {\r\n    if (this.canSelect || this.famisGrid.name === 'Duplicates') {\r\n\r\n        const selectionChangeEvent = <SelectionChangeEvent>{\r\n          itemsAdded: event.selectedRows,\r\n          itemsRemoved: event.deselectedRows\r\n        };\r\n        this.selectionChanged.emit(selectionChangeEvent);\r\n      }\r\n  }\r\n\r\n  private applySavedSettings(savedSetting: GridSetting) {\r\n    const s = this;\r\n    const cacheUpdate = <FamisGridCacheResult> {\r\n      cacheWindow: <FamisGridCacheWindow> {\r\n        skip: 0,\r\n        take: this.famisGridService.windowSize\r\n      }\r\n    };\r\n    if (savedSetting.kendoGridState) {\r\n      s.state = savedSetting.kendoGridState;\r\n    }\r\n    if (savedSetting.gridSort) {\r\n      s.sort = savedSetting.gridSort;\r\n      s.state.sort = savedSetting.gridSort;\r\n      s.famisGridService.currentSort[s.famisGrid.gridId] = s.mapSortDto(savedSetting.gridSort);\r\n      cacheUpdate.sortTerms = s.famisGridService.currentSort[s.famisGrid.gridId];\r\n    }\r\n\r\n    s.state.skip = cacheUpdate.cacheWindow.skip;\r\n    s.state.take = cacheUpdate.cacheWindow.take;\r\n\r\n    this.updateHeaders(savedSetting.headers);\r\n    // update filters with the ones fetched from the database\r\n    if (savedSetting.filters && savedSetting.filters.filters) {\r\n      s.state.filter = savedSetting.filters;\r\n      s.applySavedFilter(savedSetting.filters);\r\n    }\r\n    if (savedSetting.columnSizes) {\r\n      this.famisGrid.columnHeaders.forEach(header => {\r\n        const index = savedSetting.columnSizes.findIndex(c => c.fieldName === header.name);\r\n        if (index !== -1){\r\n          header.width = savedSetting.columnSizes[index].width.toString();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (savedSetting.filters) {\r\n      this.filterChange(savedSetting.filters);\r\n    } else {\r\n      s.updateCacheEvent.emit(cacheUpdate);\r\n    }\r\n\r\n  }\r\n\r\n  private updateHeaders(headers: Array<string>) {\r\n    const s = this;\r\n\r\n    this.selectedHeaders = new Array<GridColumnHeader>();\r\n    this.famisGrid.selectedHeaders = new Array<string>();\r\n\r\n    headers.forEach(name => {\r\n      s.gridSettingsLoaded = true;\r\n\r\n      const index = this.famisGrid.columnHeaders.findIndex(c => !!c && c.name === name);\r\n\r\n      if (index !== -1) {\r\n        s.selectedHeaders.push(s.famisGrid.columnHeaders[index]);\r\n        this.famisGrid.selectedHeaders.push(name);\r\n      }\r\n    });\r\n  }\r\n\r\n  private move(arr, old_index, new_index) {\r\n    while (old_index < 0) {\r\n      old_index += arr.length;\r\n    }\r\n    while (new_index < 0) {\r\n      new_index += arr.length;\r\n    }\r\n    if (new_index >= arr.length) {\r\n      let k = new_index - arr.length;\r\n      while (k-- + 1) {\r\n        arr.push(undefined);\r\n      }\r\n    }\r\n    arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\r\n    return arr;\r\n  }\r\n\r\n  private mapGridDataResult(): Observable<GridDataResult> {\r\n    if (this.gridData && this.gridData.length > 0) {\r\n      const gridDataResult = <GridDataResult>{\r\n        data: filterBy(this.gridData, this.filterRoot),\r\n        total: this.famisGrid.totalRecordCount\r\n      };\r\n      this.dataLoading = false;\r\n      return of(gridDataResult);\r\n    } else {\r\n      return of(<GridDataResult> {\r\n        data: new Array(),\r\n        total: 0\r\n      });\r\n    }\r\n  }\r\n\r\n  public sortChange(sort: SortDescriptor[]): void {\r\n    if (this.unsortableFields.indexOf(sort[0].field) < 0) {\r\n      const s = this;\r\n\r\n      // Emit change right away to let consuming component handle\r\n      s.sortChanged.emit(sort);\r\n\r\n      this.sort = sort;\r\n\r\n      const sortTerms = s.mapSortDto(sort);\r\n\r\n      this.famisGridService.currentSort[this.famisGrid.gridId] = sortTerms;\r\n\r\n      s.famisGridService\r\n        .update(s.famisGrid.gridId, s.state.skip, s.state.take, s.famisGrid.totalRecordCount,\r\n          s.famisGridService.currentSort[s.famisGrid.gridId], true)\r\n        .pipe(takeUntil(s.destroyed$))\r\n        .subscribe(result => {\r\n          s.updateCacheEvent.emit(result);\r\n        });\r\n\r\n        s.userGridService.saveActiveSorts(this.gridSettingsName, s.state, sort)\r\n          .subscribe(savedSetting => {\r\n            s.userGridService.updateUserSettingsCache(savedSetting);\r\n          });\r\n    }\r\n  }\r\n\r\n  private mapSortDto(sort: SortDescriptor[]): Array<AssetSortTermDto> {\r\n    const sortTerms = new Array<AssetSortTermDto>();\r\n\r\n      const orderCount = 0;\r\n\r\n      sort.forEach(c => {\r\n        const sortTerm = <AssetSortTermDto>{\r\n          termOrder: orderCount,\r\n          sortDirection: c.dir === 'asc' ? 0 : 1,\r\n          field: c.field\r\n        };\r\n\r\n        sortTerms.push(sortTerm);\r\n      });\r\n      return sortTerms;\r\n  }\r\n\r\n  private updateView(data: any[]) {\r\n    if (this.gridData && this.gridData.length === 0 && data.length === 0) {\r\n      this.dataLoading = false;\r\n      return;\r\n    }\r\n\r\n    this.gridData = data;\r\n    this.view = this.mapGridDataResult();\r\n  }\r\n\r\n  // ** Any type is intentional as the grid row can differ based on implementation\r\n  public actionClicked(rowIndex: number, dataItem: any, action: string) {\r\n    this.actionEvent.emit(<FamisGridActionEvent>{ rowIndex: rowIndex, item: dataItem, action: action });\r\n  }\r\n\r\n  public getColumnTitle(column: GridColumnHeader): string {\r\n    return this.helperService.getColumnTitle(this.famisGrid.translationBaseKey, column);\r\n  }\r\n\r\n  pageChange(state: any): void {\r\n    console.log('Page Change Event: Current S: '+ this.state.skip +' T: '+ this.state.take+ ' Event S: '+ state.skip + ' T: ' + state.take);\r\n    this.dataStateChange(state);\r\n  }\r\n}\r\n","import { process, State } from '@progress/kendo-data-query';\r\nimport { GridSubGridData } from '../../_models/shared/famis-sub-grid.model';\r\nimport { HelperService } from '../../_core/services/helper.service';\r\nimport { GridColumnHeader } from '../../_models/grid-column-header.model';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { GridDataResult, DataStateChangeEvent } from '@progress/kendo-angular-grid';\r\n\r\n\r\n@Component({\r\n  selector: 'famis-sub-grid',\r\n  templateUrl: './famis-sub-grid.component.html'\r\n})\r\nexport class FamisSubGridComponent implements OnInit {\r\n  @Input() data: GridSubGridData;\r\n  @Input() dataItem: any;\r\n  @Input() translationBaseKey: string;\r\n\r\n  public columns: Array<GridColumnHeader>;\r\n  public subGridSortedData: any;\r\n  public gridDataResult: GridDataResult;\r\n  public state: State = {\r\n    skip: 0,\r\n    take: 8,\r\n\r\n    filter: {\r\n      logic: 'and',\r\n      filters: []\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    private helperService: HelperService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.subGridSortedData = this.data.subGridData.filter((dataObj) => {\r\n      for (const prop in dataObj) {\r\n        if (dataObj[prop] === this.dataItem.id) {\r\n          return dataObj;\r\n        }\r\n      }\r\n    });\r\n    this.columns = this.data.subGridHeaders;\r\n    this.loadItems();\r\n  }\r\n\r\n  public dataStateChange(state: DataStateChangeEvent): void {\r\n    this.state = state;\r\n    this.loadItems();\r\n  }\r\n\r\n  private loadItems() {\r\n    this.gridDataResult = process(this.subGridSortedData, this.state);\r\n  }\r\n\r\n  public getColumnTitle(column: GridColumnHeader): string {\r\n    return this.helperService.getColumnTitle(this.translationBaseKey, column);\r\n  }\r\n}\r\n","import { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'file-upload-control',\r\n    templateUrl: './file-upload-control.component.html'\r\n})\r\nexport class FileUploadControlComponent implements OnInit, TranslatedComponent {\r\n    i18n = TranslationBaseKeys;\r\n\r\n     @Input() fileInputLabel: string;\r\n     @Input() supportedFileTypes: Array<string>;\r\n     @Output() onFileUploadRequested = new EventEmitter<File>();\r\n\r\n    public isAddingFile: boolean;\r\n    public isFileSelected: boolean;\r\n    public isInvalidFileType: boolean;\r\n    public file: File;\r\n    constructor() {\r\n      this.fileInputLabel = 'Add File';\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.isAddingFile = false;\r\n    }\r\n\r\n    AddFileClicked(event: Event) {\r\n        event.preventDefault();\r\n\r\n        this.isAddingFile = true;\r\n    }\r\n\r\n    CancelUpload(event: Event) {\r\n        event.preventDefault();\r\n        this.resetControl();\r\n    }\r\n\r\n    updateFile(event) {\r\n        const fileList: FileList = event.target.files;\r\n        this.isInvalidFileType = false;\r\n\r\n        if (fileList.length > 0) {\r\n            if (this.isValidType(fileList[0].name)) {\r\n                this.file = fileList[0];\r\n                this.isFileSelected = true;\r\n            } else {\r\n                this.isInvalidFileType = true;\r\n            }\r\n        } else {\r\n            this.file = null;\r\n            this.isFileSelected = false;\r\n        }\r\n    }\r\n\r\n    RequestFileUpload() {\r\n        this.onFileUploadRequested.emit(this.file);\r\n        this.resetControl();\r\n    }\r\n\r\n    private isValidType(fileName: string): boolean {\r\n        const fileType = fileName.substring(fileName.lastIndexOf('.'), fileName.length).toLocaleLowerCase();\r\n        for (let i = 0; i < this.supportedFileTypes.length; i++) {\r\n            if (this.supportedFileTypes[i].toLocaleLowerCase() === fileType) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private resetControl() {\r\n        this.isAddingFile = false;\r\n        this.isFileSelected = false;\r\n        this.isInvalidFileType = false;\r\n    }\r\n}\r\n","import { HelperService } from '../../_core/services/helper.service';\r\nimport { FilterOperationsService } from '../../_core/services/filter-operations.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, ComponentRef, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FieldMetaDataDto } from '../../_api/_configuration/dtos/field-metadata.dto';\r\nimport { DataTargetName } from '../../_enums/data-target-name';\r\nimport { FilterDto } from '../../_api/dtos/inventory/filter.dto';\r\nimport { FieldType } from '../../_enums/field-type';\r\nimport { FilterOperation } from '../../_models/filter-operation.model';\r\nimport { FilterTermDto } from '../../_api/dtos/inventory/filter-term.dto';\r\n\r\n@Component({\r\n  selector: 'filter-criteria-builder',\r\n  templateUrl: './filter-criteria-builder.component.html'\r\n})\r\nexport class FilterCriteriaBuilderComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  ref: ComponentRef<FilterCriteriaBuilderComponent>;\r\n  @Input() filterMetadata = new Array<FieldMetaDataDto>();\r\n  @Input() dataTarget: DataTargetName;\r\n  @Input() translationKeyBase: string;\r\n  @Output() criteriaChangedEvent = new EventEmitter<FilterDto>();\r\n  @Output() filterRemovedEvent = new EventEmitter<FilterDto>();\r\n\r\n  filter: FilterDto;\r\n  selectedField: FieldMetaDataDto;\r\n\r\n  fieldTypes = FieldType;\r\n  dataTargetNames = DataTargetName;\r\n\r\n  selectedSource: number = DataTargetName.client;\r\n\r\n  operationsForSelectedTerm: Array<FilterOperation> = new Array<FilterOperation>();\r\n\r\n  // Setting unique form field names\r\n  formFieldNames = {\r\n    sourceClientFile: 'selectedSourceClientFile' + this.helperService.generateGuid(),\r\n    sourceInventoryFile: 'selectedSourceInventoryFile' + this.helperService.generateGuid(),\r\n    selectedField: 'selectedField' + this.helperService.generateGuid(),\r\n    selectedFilterType: 'selectedFilterType' + this.helperService.generateGuid(),\r\n    value: 'value' + this.helperService.generateGuid()\r\n  };\r\n\r\n  constructor(private helperService: HelperService, private filterOperationService: FilterOperationsService, private datePipe: DatePipe) {}\r\n\r\n  ngOnInit(): void {\r\n    if (!this.filter) {\r\n      this.filter = <FilterDto>{ term: <FilterTermDto>{} };\r\n      this.filter.id = this.helperService.generateGuid();\r\n      this.filter.term.dataTarget = this.dataTarget ? this.dataTarget : DataTargetName.client;\r\n    } else {\r\n      this.selectedField = this.filterMetadata.find(c => c.name === this.filter.term.field);\r\n      if (this.selectedField) {\r\n        this.operationsForSelectedTerm = this.filterOperationService.getOperationsForFieldType(this.selectedField.fieldType);\r\n      }\r\n    }\r\n  }\r\n\r\n  initOperationAndValue() {\r\n    this.filter.term.value = null;\r\n    this.filter.operation = null;\r\n\r\n    this.filter.term.field = this.selectedField.name;\r\n\r\n    this.operationsForSelectedTerm = this.filterOperationService.getOperationsForFieldType(this.selectedField.fieldType);\r\n  }\r\n\r\n  filterOperationChange() {\r\n    this.criteriaChangedEvent.emit(this.filter);\r\n  }\r\n\r\n  criteriaChange() {\r\n    // If field is date, change format to match DB\r\n    if (this.selectedField.fieldType === FieldType.DateTime) {\r\n      this.filter.term.value.setTime(this.removeTimeZoneOffsetFromDate(this.filter.term.value));\r\n    }\r\n\r\n    this.criteriaChangedEvent.emit(this.filter);\r\n  }\r\n\r\n  private removeTimeZoneOffsetFromDate(date: Date) {\r\n    const timeOffsetInMS: number = date.getTimezoneOffset() * 60000;\r\n    return (date.getTime() - timeOffsetInMS);\r\n  }\r\n\r\n  remove() {\r\n    this.ref.destroy();\r\n    this.filterRemovedEvent.emit(this.filter);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { MapMarker } from '../../_ui/models/map-marker';\r\nimport { MapTypeStyle } from '@agm/core';\r\n\r\n@Component({\r\n  selector: 'google-map',\r\n  templateUrl: './google-map.component.html'\r\n})\r\nexport class GoogleMapComponent implements OnInit {\r\n  @Input() longitude: number;\r\n  @Input() latitude: number;\r\n  @Input() buildingName: string;\r\n  @Input() googleMapZoom: number;\r\n\r\n  mapMarkers = new Array<MapMarker>();\r\n\r\n  mapStyles: MapTypeStyle[] = [\r\n    {\r\n      elementType: 'labels',\r\n      stylers: [\r\n        {\r\n          visibility: 'off'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      featureType: 'administrative.neighborhood',\r\n      stylers: [\r\n        {\r\n          visibility: 'off'\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    this.initMap();\r\n  }\r\n\r\n  private initMap() {\r\n      this.mapMarkers.push(<MapMarker>{ lat: this.latitude, lng: this.longitude, label: this.buildingName, draggable: false });\r\n  }\r\n}\r\n","import { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TransactionsService } from '../../../transactions/services/transactions.service';\r\nimport { AlertService } from '../../../_core/services/alert.service';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { WindowManager } from '../../../_core/services/window-manager.service';\r\nimport { Router } from '@angular/router';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Component, OnDestroy, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { TransactionSummaryFieldDto } from '../../../_api/_runtime/dtos/transaction-revert-summary-current.dto';\r\nimport { TransactionAssetSummaryDto } from '../../../_api/_runtime/dtos/transaction-revert-summary.dto';\r\n\r\n@Component({\r\n  selector: 'revert',\r\n  templateUrl: './revert.component.html'\r\n})\r\n\r\nexport class RevertComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  @Output() submitSuccess = new EventEmitter<boolean>();\r\n\r\n  private destroyed$ = new Subject<any>();\r\n\r\n  public headers = Array<TransactionSummaryFieldDto>();\r\n  public currentTransaction = Array<TransactionAssetSummaryDto>();\r\n  public previousTransaction = Array<TransactionAssetSummaryDto>();\r\n  public transactionId: string;\r\n  public transactionType: string;\r\n  public assetTagNumber: string;\r\n\r\n  public isLoading: Subscription;\r\n  public minColWidth = 150;\r\n  constructor(\r\n    public activeModal: NgbActiveModal,\r\n    private transactionsService: TransactionsService,\r\n    private alertService: AlertService,\r\n    private windowManager: WindowManager,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.isLoading = this.transactionsService.getRevertSummary(this.transactionId)\r\n        .pipe(takeUntil(this.destroyed$))\r\n        .subscribe((revertSummary) => {\r\n        this.transactionType = revertSummary.transactionType;\r\n\r\n        revertSummary.headers.forEach(header => this.createMappingForKendoGrid(header));\r\n        this.currentTransaction = revertSummary.current;\r\n        this.previousTransaction.push(revertSummary.previous);\r\n    });\r\n  }\r\n\r\n  private createMappingForKendoGrid(header: TransactionSummaryFieldDto) {\r\n    header.name = header.name.toLowerCase().charAt(0) + header.name.slice(1);\r\n    header.source = header.source !== null\r\n      ? header.source.toLowerCase().charAt(0) + header.source.slice(1)\r\n      : header.name;\r\n\r\n    this.headers.push(header);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  onSubmit() {\r\n    this.transactionsService.revertTransaction(this.transactionId)\r\n        .pipe(takeUntil(this.destroyed$))\r\n        .subscribe(() => {\r\n          this.alertService.success('Transaction successfully Reverted.');\r\n          this.submitSuccess.emit(true);\r\n          this.closeModalEvent();\r\n        },\r\n        error => {\r\n          this.alertService.error('An error has occurred reverting the transaction.');\r\n          this.closeModalEvent();\r\n          this.router.navigate([`error/409`]);\r\n        },\r\n        () => { }\r\n  );\r\n  }\r\n\r\n  public closeModalEvent() {\r\n    this.windowManager.close();\r\n  }\r\n}\r\n","import { CarouselModalComponent } from '../carousel-modal.component';\r\nimport { HelperService } from '../../../_core/services/helper.service';\r\nimport { ImageService } from '../../../_core/services/image.service';\r\nimport { WindowManager } from '../../../_core/services/window-manager.service';\r\nimport { Component, Input, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { ImageDto } from '../../../_api/_runtime/dtos/image.dto';\r\nimport { WindowOption } from '../../../_models/window-option';\r\n\r\n@Component({\r\n  selector: 'view-image',\r\n  templateUrl: './view-image.component.html'\r\n})\r\nexport class ViewImageComponent implements OnInit {\r\n  @Input()\r\n  imageCollection = new Array<ImageDto>();\r\n\r\n  public firstImage: ImageDto;\r\n\r\n  constructor(private windowManager: WindowManager, public container: ViewContainerRef, private imageService: ImageService) {}\r\n\r\n  ngOnInit() {\r\n    this.imageCollection.sort(this.imageService.compareImageIndexes);\r\n  }\r\n\r\n  showImageCarouselOnClick() {\r\n    const imageUrlCollection = new Array<string>();\r\n\r\n    this.imageCollection.forEach(image => {\r\n      imageUrlCollection.push(image.url);\r\n    });\r\n\r\n    const modal = this.windowManager.open(CarouselModalComponent, 'Images', <WindowOption>{\r\n      isModal: true\r\n    });\r\n\r\n    modal.content.instance.hideSubmit = true;\r\n    modal.content.instance.imageUrlCollection = imageUrlCollection;\r\n  }\r\n}\r\n","import { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { WindowManager } from '../../../_core/services/window-manager.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'view-map',\r\n  templateUrl: './view-map.component.html'\r\n})\r\n\r\nexport class ViewMapComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  public longitude: number;\r\n  public latitude: number;\r\n  public buildingName: string;\r\n\r\n  constructor(public windowManager: WindowManager) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  public closeModalEvent() {\r\n    this.windowManager.close();\r\n  }\r\n}\r\n","import { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { WindowManager } from '../../../_core/services/window-manager.service';\r\nimport { WindowRef } from '@progress/kendo-angular-dialog';\r\nimport { AssetFileInfoService } from '../../../_core/services/asset-file-info-service';\r\nimport { Component, Input, OnInit, EventEmitter, ViewContainerRef, Output } from '@angular/core';\r\nimport { GridColumnHeader } from '../../../_models/grid-column-header.model';\r\nimport { CreateAssetFileCustomColumnDto } from '../../../_api/dtos/create-asset-file-custom-column.dto';\r\nimport { FamisGridUpdateColumnSelectionEvent } from '../../../_models/shared/famis-grid-update-column-selection-event.model';\r\nimport { WindowOption } from '../../../_models/window-option';\r\nimport { FamisGridService } from '../../../_core/services/famis-grid.service';\r\nimport { ModalProperties } from '../../../_models/modal-properties.model';\r\nimport { ConfirmModalComponent } from '../confirm-modal.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DataTargetName } from '../../../_enums/data-target-name';\r\n\r\n@Component({\r\n  selector: 'grid-column-selector-modal',\r\n  templateUrl: './grid-column-selector-modal.component.html'\r\n})\r\n\r\nexport class GridColumnSelectorModalComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  @Input() headersAvailable = new Array<GridColumnHeader>();\r\n  @Input() selectedColumns = new Array<string>();\r\n  @Input() sourceTranslationKey = '';\r\n  @Input() showAddCustomColumn = false;\r\n  @Input() groupId = '';\r\n  @Input() assetFileId = '';\r\n  @Input() dataSource: DataTargetName;\r\n\r\n  public columnSelection = new Array<string>();\r\n  public knownColumns = new Array<string>();\r\n  private windowRef: WindowRef;\r\n  private pendingCustomColumns = new Array<CreateAssetFileCustomColumnDto>();\r\n  private removeCustomColumns = new Array<GridColumnHeader>();\r\n  private customColumns = new Array<GridColumnHeader>();\r\n\r\n  @Output() columnSelectionEvent = new EventEmitter<FamisGridUpdateColumnSelectionEvent>();\r\n\r\n  constructor(\r\n    private windowManager: WindowManager,\r\n    public container: ViewContainerRef,\r\n    public assetFileInfoService: AssetFileInfoService,\r\n    private famisGridService: FamisGridService,\r\n    private modalService: NgbModal\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.headersAvailable.forEach(header => {\r\n      this.knownColumns.push(header.name);\r\n    });\r\n    this.assetFileInfoService.GetInternalColumns().forEach(col => {\r\n      this.knownColumns.push(col);\r\n    });\r\n    this.columnSelection = Object.assign([], this.selectedColumns);\r\n    this.customColumns = this.headersAvailable.filter(header => header.isCustom);\r\n  }\r\n\r\n  open(content) {\r\n    this.customColumns = this.customColumns.sort((a, b) => {\r\n      return a.displayName.localeCompare(b.displayName);\r\n    });\r\n    this.windowRef = this.windowManager.open(content, 'Select Columns to Display', <WindowOption>{\r\n      isModal: true\r\n    });\r\n\r\n    this.windowRef.result.subscribe(result => { this.close(); });\r\n  }\r\n\r\n  close() {\r\n    if (this.removeCustomColumns.length > 0) {\r\n      this.removeCustomColumns.forEach(\r\n        column => {\r\n          this.customColumns.push(column);\r\n          this.knownColumns.push(column.displayName);\r\n        }\r\n      );\r\n      this.removeCustomColumns = [];\r\n    }\r\n    if (this.pendingCustomColumns.length > 0) {\r\n      this.pendingCustomColumns.forEach(\r\n        column => {\r\n          const index = this.knownColumns.findIndex(i => i.toLowerCase() === column.columnName.toLowerCase());\r\n          if (index !== -1) {\r\n            this.knownColumns.splice(index, 1);\r\n          }\r\n        }\r\n      );\r\n      this.pendingCustomColumns = [];\r\n    }\r\n    if (this.windowRef) {\r\n      this.windowRef.close();\r\n    }\r\n  }\r\n\r\n  saveChanges() {\r\n    // TODO Save Custom Column\r\n    this.columnSelectionEvent.emit(<FamisGridUpdateColumnSelectionEvent>{\r\n      SelectedHeaders: this.columnSelection,\r\n      PendingCustomColumns: this.pendingCustomColumns,\r\n      RemoveCustomColumns: this.removeCustomColumns\r\n    });\r\n    if (this.pendingCustomColumns.length > 0) {\r\n      this.pendingCustomColumns.forEach(\r\n        column => {\r\n          const newHeader = <GridColumnHeader>{\r\n            displayName: column.columnName,\r\n            name: column.columnName,\r\n            fieldType: column.dataType,\r\n            isCustom: true,\r\n            isSearchable: true,\r\n            isSortable: true,\r\n            isFilterable: true,\r\n            width: '255'\r\n          };\r\n          this.customColumns.push(newHeader);\r\n        }\r\n      );\r\n      this.pendingCustomColumns = [];\r\n    }\r\n    this.removeCustomColumns = [];\r\n    this.windowRef.close();\r\n  }\r\n\r\n  public onColumnAdded(col: CreateAssetFileCustomColumnDto) {\r\n    this.pendingCustomColumns.push(col);\r\n    this.knownColumns.push(col.columnName);\r\n  }\r\n\r\n  public removePendingColumn(col: CreateAssetFileCustomColumnDto) {\r\n    let index = this.pendingCustomColumns.findIndex(i => i.columnName.toLowerCase() === col.columnName.toLowerCase());\r\n    if (index !== -1) {\r\n      this.pendingCustomColumns.splice(index, 1);\r\n    }\r\n    index = this.knownColumns.findIndex(i => i.toLowerCase() === col.columnName.toLowerCase());\r\n    if (index !== -1) {\r\n      this.knownColumns.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  public removeCustomCol(header: GridColumnHeader) {\r\n    if (this.dataSource === DataTargetName.building) {\r\n      this.famisGridService.IsBuildingCustomColumnEmpty(this.groupId, header.displayName).subscribe(\r\n        result => {\r\n          if (result && !result.entity) {\r\n            this.confirmRemoveModal(header);\r\n          } else {\r\n            this.removeCustomHeader(header);\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      this.famisGridService.IsAssetCustomColumnEmpty(this.assetFileId, header.displayName).subscribe(\r\n        result => {\r\n          if (result && !result.result) {\r\n            this.confirmRemoveModal(header);\r\n          } else {\r\n            this.removeCustomHeader(header);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  public removeCustomHeader(header: GridColumnHeader) {\r\n    let index = this.customColumns.findIndex(i => i === header);\r\n    if (index !== -1) {\r\n      this.customColumns.splice(index, 1);\r\n    }\r\n    index = this.knownColumns.findIndex(i => i.toLowerCase() === header.displayName.toLowerCase());\r\n    if (index !== -1) {\r\n      this.knownColumns.splice(index, 1);\r\n    }\r\n    this.removeCustomColumns.push(header);\r\n  }\r\n\r\n  private confirmRemoveModal(header: GridColumnHeader) {\r\n    const modalOptions = <ModalProperties>{\r\n      heading: {\r\n        key: 'Remove custom column'\r\n      },\r\n      body: {\r\n        key: 'Column you are about to remove contains data'\r\n      },\r\n      dismissText: {\r\n        key: 'Cancel'\r\n      },\r\n      successText: {\r\n        key: 'Confirm'\r\n      },\r\n      translateBaseKey: this.i18n.common\r\n    };\r\n\r\n    const modal = this.modalService.open(ConfirmModalComponent, { windowClass: 'modal-over-window', backdropClass: 'modal-over-window' });\r\n    modal.componentInstance.options = modalOptions;\r\n\r\n    modal.result.then(() => {\r\n      this.removeCustomHeader(header);\r\n    }).catch(err => { });\r\n  }\r\n}\r\n","import { GridComponent, SelectionEvent, GridDataResult } from '@progress/kendo-angular-grid';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { orderBy, SortDescriptor } from '@progress/kendo-data-query';\r\nimport { Component, OnInit, Input, Output, EventEmitter, OnDestroy } from '@angular/core';\r\nimport { GridColumnHeader } from '../../../_models/grid-column-header.model';\r\nimport { ReconcileDataGridService } from '../../../reconciliation/services/reconcile-data-grid.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'grid-column-selector',\r\n  templateUrl: './grid-column-selector.component.html'\r\n})\r\nexport class GridColumnSelectorComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  public gridView: GridDataResult;\r\n\r\n  @Input()\r\n  headersAvailable = new Array<GridColumnHeader>();\r\n  @Input()\r\n  selectedColumns = new Array<string>();\r\n  @Input()\r\n  sourceTranslationKey = '';\r\n\r\n  @Output()\r\n  onColumnSelectionChange = new EventEmitter<Array<string>>();\r\n  subscription: Subscription;\r\n  public sort: SortDescriptor[] = [\r\n    {\r\n      field: 'displayName',\r\n      dir: 'asc'\r\n    }\r\n  ];\r\n\r\n  constructor(\r\n    private reconcileDataGridService: ReconcileDataGridService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.reconcileDataGridService.clearAvailableColumns();\r\n\r\n    this.subscription =  this.reconcileDataGridService.availableColumns$.subscribe(headers => {\r\n      if (headers && headers.length > 0) {\r\n     this.headersAvailable = headers;\r\n     this.loadHeaders();\r\n      }\r\n   });\r\n\r\n    this.loadHeaders();\r\n  }\r\n\r\n  // TODO: Handle sorting of i18n/translated strings\r\n  public sortChange(sort: SortDescriptor[]): void {\r\n    this.sort = sort;\r\n    this.loadHeaders();\r\n  }\r\n\r\n  private loadHeaders(): void {\r\n    this.gridView = {\r\n      data: orderBy(this.headersAvailable, this.sort),\r\n      total: this.headersAvailable.length\r\n    };\r\n  }\r\n  ngOnDestroy() {\r\n    // unsubscribe to ensure no memory leaks\r\n    this.subscription.unsubscribe();\r\n}\r\n}\r\n","import { Component, ContentChild, EventEmitter, Input, Output, OnDestroy, Renderer2, TemplateRef } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { GridComponent } from '@progress/kendo-angular-grid';\r\n\r\n@Component({\r\n    selector: 'grid-context-menu',\r\n    template: `\r\n        <kendo-popup *ngIf=\"show\" [offset]=\"offset\">\r\n            <ul class=\"menu\">\r\n              <li *ngFor=\"let item of menuItems\" (click)=\"menuItemSelected(item)\">\r\n                <ng-template *ngIf=\"menuItemTemplate\" [ngTemplateOutlet]=\"menuItemTemplate\"\r\n                    [ngTemplateOutletContext]=\"{ item: item, dataItem: dataItem }\">\r\n                </ng-template>\r\n                <ng-container *ngIf=\"!menuItemTemplate\">\r\n                    {{ item }}\r\n                </ng-container>\r\n              </li>\r\n            </ul>\r\n        </kendo-popup>\r\n    `,\r\n    styles: [`\r\n     .menu {\r\n        list-style:none;\r\n        margin: 0;\r\n        padding: 0;\r\n        cursor: pointer;\r\n      }\r\n\r\n      .menu li {\r\n        border-bottom: 1px solid rgba(0,0,0,.08);\r\n        padding: 8px 12px;\r\n        transition: background .2s, color .2s;\r\n      }\r\n\r\n      .menu li:last-child {\r\n        border-bottom: 0;\r\n      }\r\n\r\n      .menu li:hover {\r\n        background: #e8e8e8;\r\n      }\r\n\r\n      .menu li:active {\r\n        background: #ff6358;\r\n        color: #fff;\r\n      }\r\n    `]\r\n})\r\nexport class GridContextMenuComponent implements OnDestroy {\r\n\r\n    @ContentChild(TemplateRef, { static: false })\r\n    public menuItemTemplate: TemplateRef<any>;\r\n\r\n    @Input()\r\n    public menuItems: any[] = [];\r\n\r\n    @Output()\r\n    public select: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Input() public set for(grid: GridComponent) {\r\n        this.unsubscribe();\r\n        this.cellClickSubscription = grid.cellClick.subscribe(this.onCellClick);\r\n    }\r\n\r\n    public show: boolean;\r\n    public dataItem: any;\r\n    public offset: any;\r\n\r\n    private cellClickSubscription: Subscription;\r\n    private documentClickSubscription: any;\r\n\r\n    constructor(private renderer: Renderer2) {\r\n        this.onCellClick = this.onCellClick.bind(this);\r\n        this.documentClickSubscription = this.renderer.listen('document', 'click', () => {\r\n            this.show = false;\r\n        });\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.unsubscribe();\r\n        this.documentClickSubscription();\r\n    }\r\n\r\n    public menuItemSelected(item: any): void {\r\n        this.select.emit({ item: item, dataItem: this.dataItem });\r\n    }\r\n\r\n    private onCellClick({ dataItem, type, originalEvent }): void {\r\n        if (type === 'contextmenu') {\r\n            originalEvent.preventDefault();\r\n            this.dataItem = dataItem;\r\n            this.show = true;\r\n            this.offset = { left: originalEvent.pageX, top: originalEvent.pageY };\r\n        }\r\n    }\r\n\r\n    private unsubscribe(): void {\r\n        if (this.cellClickSubscription) {\r\n            this.cellClickSubscription.unsubscribe();\r\n            this.cellClickSubscription = null;\r\n        }\r\n    }\r\n\r\n}\r\n","import { Component, OnInit, ElementRef, ViewChild, Output, EventEmitter, Input } from '@angular/core';\r\nimport { BaseFilterCellComponent, FilterService } from '@progress/kendo-angular-grid';\r\n\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { HelperService } from '../../../_core/services/helper.service';\r\nimport { FilterOperationsService } from '../../../_core/services/filter-operations.service';\r\nimport { SinglePopupService, PopupCloseEvent } from '@progress/kendo-angular-grid';\r\nimport { FieldType } from '../../../_enums/field-type';\r\nimport { FilterDto } from '../../../_api/_runtime/dtos/filter.dto';\r\nimport { FilterOperation } from '../../../_models/filter-operation.model';\r\nimport { CompositeFilterDescriptor, FilterDescriptor } from '@progress/kendo-data-query';\r\nimport { EnumOptionDto } from '../../../_api/_configuration/dtos/enum-option.dto';\r\n\r\nconst closest = (node: any, predicate: any): any => {\r\n  while (node && !predicate(node)) {\r\n    node = node.parentNode;\r\n  }\r\n\r\n  return node;\r\n};\r\n\r\n@Component({\r\n  selector: 'grid-filter',\r\n  templateUrl: './grid-filter.component.html'\r\n})\r\nexport class GridFilterComponent extends BaseFilterCellComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n   @ViewChild('filterList', { read: ElementRef, static: true }) filterListERef: ElementRef;\r\n\r\n  fieldTypes = FieldType;\r\n\r\n  famisFilter: FilterDto;\r\n\r\n   @Output() filterChangeEvent = new EventEmitter<any>();\r\n\r\n  operationsForSelectedTerm: Array<FilterOperation> = new Array<FilterOperation>();\r\n\r\n  public get selectedValue(): any {\r\n    const filter = this.filterByField(this.valueField);\r\n    return filter ? filter.value : null;\r\n  }\r\n\r\n  formFieldNames = {\r\n    sourceClientFile: 'selectedSourceClientFile' + this.helperService.generateGuid(),\r\n    sourceInventoryFile: 'selectedSourceInventoryFile' + this.helperService.generateGuid(),\r\n    selectedField: 'selectedField' + this.helperService.generateGuid(),\r\n    selectedFilterType: 'selectedFilterType' + this.helperService.generateGuid(),\r\n    value: 'value' + this.helperService.generateGuid()\r\n  };\r\n\r\n   @Input() public filter: CompositeFilterDescriptor;\r\n   @Input() public textField: string;\r\n   @Input() public valueField: string;\r\n   @Input() public fieldType: number;\r\n   @Input() public filterService: FilterService;\r\n   @Input() public enumOptions: Array<EnumOptionDto>;\r\n   @Input() public isNullable: boolean;\r\n\r\n  public filterValue: any;\r\n  public filterOperation: any;\r\n\r\n  public filters: Array<CompositeFilterDescriptor | FilterDescriptor> = [\r\n    {\r\n      field: '',\r\n      operator: '',\r\n      value: ''\r\n    }\r\n  ];\r\n\r\n  public get defaultItem(): any {\r\n    return {\r\n      [this.textField]: 'Select item...',\r\n      [this.valueField]: null\r\n    };\r\n  }\r\n\r\n  private filterIsClosed: boolean;\r\n\r\n  private popupSubscription: any;\r\n\r\n  constructor(\r\n    filterService: FilterService,\r\n    private helperService: HelperService,\r\n    private filterOperationService: FilterOperationsService,\r\n    private popupService: SinglePopupService\r\n  ) {\r\n    super(filterService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.operationsForSelectedTerm = this.filterOperationService.getOperationsForFieldType(this.fieldType, this.isNullable);\r\n\r\n    if (this.filter.filters.length > 0) {\r\n      const f = this.filter.filters.find(c => c['field'] === this.valueField);\r\n      const filter = <FilterDescriptor>f;\r\n\r\n      if (this.fieldType === this.fieldTypes.Date ||\r\n          this.fieldType === this.fieldTypes.DateTime ||\r\n          this.fieldType === this.fieldTypes.DateWithTimeStamp) {\r\n        if (Array.isArray(filter.value)) {\r\n          filter.value.forEach(value => {\r\n            if (!isNaN(Date.parse(value.value))) {\r\n              const dateValue = new Date(value.value);\r\n              if (dateValue.getHours() !== 0 ||\r\n                  dateValue.getMinutes() !== 0 ||\r\n                  dateValue.getSeconds() !== 0 ||\r\n                  dateValue.getMilliseconds() !== 0) {\r\n                dateValue.setTime(this.addTimeZoneOffsetToDate(dateValue));\r\n              }\r\n              value.value = dateValue;\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      this.filters = Array.isArray(filter.value) ? filter.value : [filter];\r\n    }\r\n\r\n    this.popupSubscription = this.popupService.onClose.subscribe((e: PopupCloseEvent) => {\r\n      if (e.originalEvent.path.findIndex(c => c.tagName === 'KENDO-POPUP') >= 0) {\r\n        e.preventDefault();\r\n      }\r\n    });\r\n    console.log(this.filter.filters.filter(c => c['field'] === this.valueField), 'Current Filter');\r\n  }\r\n\r\n  public onChange(event?: any): void {\r\n    const selectedFilters = [];\r\n\r\n    this.removeFilter(this.valueField);\r\n\r\n    this.filters.forEach(f => {\r\n      const filter = <FilterDescriptor>f;\r\n\r\n      if (filter.operator) {\r\n        if (filter.operator === 'in' || filter.operator === 'nin') {\r\n          filter.value = null;\r\n        }\r\n\r\n        if (event instanceof Date) {\r\n          event.setHours(0, 0, 0, 0);\r\n          filter.value.setTime(this.removeTimeZoneOffsetFromDate(event));\r\n        }\r\n\r\n        filter.field = this.valueField;\r\n        \r\n        if(this.fieldType != FieldType.DropDown || \r\n          (this.fieldType == FieldType.DropDown && (filter.value ||\r\n          (filter.operator === 'in' || filter.operator === 'nin'))))\r\n          selectedFilters.push(filter);\r\n      }\r\n    });\r\n\r\n    if (selectedFilters.length > 0) {\r\n      this.applyFilter(\r\n        this.updateFilter({\r\n          field: this.valueField,\r\n          operator: '0',\r\n          value: selectedFilters\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public addFilter(event) {\r\n    event.preventDefault();\r\n    this.filters.push({\r\n      field: '',\r\n      operator: '',\r\n      value: ''\r\n    });\r\n  }\r\n\r\n  closeFilter() {\r\n    this.filterIsClosed = true;\r\n  }\r\n\r\n  remove(event: any, index: number) {\r\n    event.preventDefault();\r\n\r\n    if (this.filters.length > 1) {\r\n      this.filters.splice(index, 1);\r\n      this.onChange();\r\n    }\r\n  }\r\n\r\n  private removeTimeZoneOffsetFromDate(date: Date) {\r\n    const timeOffsetInMS: number = date.getTimezoneOffset() * 60000;\r\n    return (date.getTime() - timeOffsetInMS);\r\n  }\r\n\r\n  private addTimeZoneOffsetToDate(date: Date) {\r\n    const timeOffsetInMS: number = date.getTimezoneOffset() * 60000;\r\n    return (date.getTime() + timeOffsetInMS);\r\n  }\r\n}\r\n","import { debounceTime, distinctUntilChanged, tap, catchError, switchMap, merge } from 'rxjs/operators';\r\nimport { of, Observable } from 'rxjs';\r\nimport { Component, Input, Output, OnInit, EventEmitter } from '@angular/core';\r\nimport { Group } from '../../_models/group';\r\nimport { NgbTypeaheadSelectItemEvent } from '@ng-bootstrap/ng-bootstrap';\r\nimport { GroupSearchService } from '../../_api/services/group-search.service';\r\nimport { GroupSearchResultDto } from '../../_api/dtos/group-search-result.dto';\r\n\r\n@Component({\r\n  selector: 'group-search',\r\n  templateUrl: './group-search.component.html'\r\n})\r\nexport class GroupSearchComponent implements OnInit {\r\n  @Input() selectedGroup: any;\r\n  @Input() includeContractSearch: boolean;\r\n  @Output() selectGroup = new EventEmitter<Group>();\r\n\r\n  model: any;\r\n  searching: Boolean = false;\r\n  searchFailed = false;\r\n  item: NgbTypeaheadSelectItemEvent;\r\n  hideSearchingWhenUnsubscribed = new Observable(() => () =>\r\n    (this.searching = false)\r\n  );\r\n\r\n  constructor(private groupSearchService: GroupSearchService) {}\r\n\r\n  ngOnInit() {\r\n    if (this.includeContractSearch) {\r\n      this.includeContractSearch = this.includeContractSearch;\r\n    }\r\n    if (this.selectedGroup) {\r\n      this.groupSearchService.getGroup(this.selectedGroup).subscribe(group => {\r\n        this.model = group;\r\n      });\r\n    }\r\n  }\r\n\r\n  onSelectItem(event: NgbTypeaheadSelectItemEvent): void {\r\n    const group: GroupSearchResultDto = event.item;\r\n    this.selectGroup.emit(group);\r\n  }\r\n\r\n  public getResultFormatter(result) {\r\n    return result.groupName + ' (' + result.contractName + ')';\r\n  }\r\n\r\n  public getInputFormatter(result) {\r\n    return result.groupName + ' (' + result.contractName + ')';\r\n  }\r\n\r\nsearch = (text$: Observable<string>) =>\r\n    text$\r\n      .pipe(debounceTime(300))\r\n      .pipe(distinctUntilChanged())\r\n      .pipe(tap(() => (this.searching = true)))\r\n      .pipe(switchMap(term =>\r\n        this.groupSearchService\r\n          .searchGroups(term, this.includeContractSearch)\r\n          .pipe(tap(() => {\r\n            this.searchFailed = false;\r\n          }))\r\n          .pipe(catchError(() => {\r\n            this.searchFailed = true;\r\n            return of([]);\r\n          }))\r\n      ))\r\n      .pipe(tap(() => {\r\n        this.searching = false;\r\n      }))\r\n      .pipe(merge(this.hideSearchingWhenUnsubscribed))\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\n\r\n@Component({\r\n  selector: 'kendo-grid-translation',\r\n  templateUrl: './kendo-grid-translation.component.html'\r\n})\r\nexport class KendoGridTranslationComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ModalFormEvent } from '../../_enums/modal-form-event';\r\n\r\n@Component({\r\n  selector: 'modal-form',\r\n  templateUrl: './modal-form.component.html'\r\n})\r\nexport class ModalFormComponent {\r\n\r\n    @Input() hideSubmit = false;\r\n    @Input() modalTitle: string = null;\r\n    @Output() modalEvent = new EventEmitter<ModalFormEvent>();\r\n    @Input() submitButtonName = 'Save';\r\n\r\n\r\n    constructor() { }\r\n\r\n    dismiss() {\r\n        this.modalEvent.emit(ModalFormEvent.Dismiss);\r\n    }\r\n\r\n    save() {\r\n        this.modalEvent.emit(ModalFormEvent.Save);\r\n    }\r\n}","import { Component, OnInit, Input } from '@angular/core';\r\nimport * as pbi from 'powerbi-client';\r\nimport { ReportsApiService } from '../../../_api/_runtime/services/reports-api.service';\r\nimport { ReportDto } from '../../../_api/_runtime/dtos/reporting/report.dto';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ReportType } from '../../../_api/_runtime/enums/report-type';\r\nimport { ReportInfoDto } from '../../../_api/_runtime/dtos/reporting/report-info.dto';\r\n\r\n@Component({\r\n  selector: 'app-power-bi',\r\n  templateUrl: './power-bi.component.html'\r\n})\r\nexport class PowerBIComponent implements OnInit {\r\n\r\n  @Input() report: ReportDto;\r\n  @Input() isDefaultDashboard: boolean;\r\n  @Input() filterPaneEnabled: boolean;\r\n  @Input() filters: Array<pbi.models.IFilter>;\r\n\r\n  public isLoading: boolean;\r\n  public groupId: string;\r\n\r\n  constructor\r\n  (private reportService: ReportsApiService,\r\n    private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.groupId = this.route.parent.snapshot.paramMap.get('groupId');\r\n    this.filters = this.getPowerBiFilters();\r\n    this.displaySelectedReport();\r\n  }\r\n\r\n  public displaySelectedReport() {\r\n    if (this.isDefaultDashboard) {\r\n      this.isLoading = true;\r\n      this.reportService.GetDefaultDashboard(this.groupId).subscribe(res => {\r\n        const reportType = this.GetEmbededReportType(ReportType.PowerBiDashboard);\r\n        this.showReport(res, reportType);\r\n      });\r\n    }\r\n    if (this.report) {\r\n      this.isLoading = true;\r\n      this.reportService.GetReportOrDashboardInfo(this.groupId, this.report.id, this.report.type).subscribe(res => {\r\n        this.showReport(res, this.GetEmbededReportType(this.report.type));\r\n      });\r\n    }\r\n  }\r\n  private showReport(reportInfo: ReportInfoDto, reportType: string): void {\r\n\r\n      const config = <pbi.IEmbedConfiguration>{\r\n        type: reportType,\r\n        tokenType: pbi.models.TokenType.Embed,\r\n        accessToken: reportInfo.reportToken,\r\n        embedUrl: reportInfo.reportUrl,\r\n        id: reportInfo.reportId,\r\n        pageView: 'fitToWidth',\r\n        filters: this.filters,\r\n        settings: {\r\n          filterPaneEnabled: this.filterPaneEnabled\r\n        }\r\n      };\r\n\r\n      const reportContainer = <HTMLElement>document.getElementById('reportContainer');\r\n      const powerbi = new pbi.service.Service(pbi.factories.hpmFactory, pbi.factories.wpmpFactory, pbi.factories.routerFactory);\r\n      powerbi.reset(reportContainer);\r\n      const rpt = powerbi.embed(reportContainer, config);\r\n\r\n      rpt.off('loaded');\r\n      rpt.on('loaded', () => {\r\n        this.isLoading = false;\r\n      // Add styling to the iFrame that gets added by the power bi library so it\r\n      // displays at a resonable height instead of being ~100 px tall\r\n        const reportIframe = <HTMLElement>reportContainer.getElementsByTagName('iframe').item(0);\r\n        reportIframe.setAttribute('style', 'min-height:850px; width:100%');\r\n        // console.log('Loaded');\r\n      });\r\n  }\r\n\r\n  private GetEmbededReportType(type: ReportType): string {\r\n    if (type === ReportType.PowerBiDashboard) {\r\n        return 'dashboard';\r\n    } else if (type === ReportType.PowerBi) {\r\n        return 'report';\r\n    }\r\n    return 'Unknown';\r\n  }\r\n\r\n  private getPowerBiFilters(): Array<pbi.models.IFilter> {\r\n    return [this.createGroupFilter()];\r\n  }\r\n\r\n  private createGroupFilter(): pbi.models.IBasicFilter {\r\n    return {\r\n      $schema: 'http://powerbi.com/product/schema#basic',\r\n      operator: 'In',\r\n          values: [this.groupId],\r\n          target: {\r\n            table: 'VW_Group',\r\n            column: 'GroupId'\r\n          },\r\n      filterType: pbi.models.FilterType.Basic\r\n    };\r\n  }\r\n}\r\n\r\n","import { ReplaceFieldModes } from '../../_enums/replace-field-modes';\r\nimport * as mjs from 'mathjs';\r\nimport { FieldType } from '../../_api/_runtime/enums/field-type';\r\nimport { HelperService } from '../../_core/services/helper.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { Component, ViewChild, OnInit, ElementRef, Input, EventEmitter, Output, AfterViewInit } from '@angular/core';\r\nimport { ReplaceFieldSelectionOption, ReplaceFieldSelectionInfo } from '../../_models/shared/replace-field-selection-info.model';\r\nimport { MassUpdateRequestAdvancedTermDto } from '../../_api/_runtime/dtos/mass-update-request-advanced-term.dto';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ReplaceField } from '../../_models/replace-field-state.model';\r\nimport { FieldMetaDataDto } from '../../_api/_runtime/dtos/field-meta-data.dto';\r\n\r\n@Component({\r\n  selector: 'replace-field',\r\n  templateUrl: './replace-field.component.html'\r\n})\r\nexport class ReplaceFieldComponent implements OnInit, AfterViewInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  @ViewChild('replaceValue', { static: false }) replaceValue: ElementRef;\r\n\r\n  public replaceFieldModes = ReplaceFieldModes;\r\n  public mode: ReplaceFieldModes = ReplaceFieldModes.Text;\r\n  public fieldTypes = FieldType;\r\n  public currentSelectionOptions: Array<ReplaceFieldSelectionOption>;\r\n  private loadedCollection: Array<FieldMetaDataDto>;\r\n\r\n  @Input()\r\n  state: ReplaceField = <ReplaceField>{\r\n    isAdvanced: false,\r\n    replacementField: '',\r\n    replacementValue: null,\r\n    advancedReplacementValue: <MassUpdateRequestAdvancedTermDto>{},\r\n    advancedReplacementHtml: '',\r\n  };\r\n\r\n  @Input() form: NgForm;\r\n\r\n  @Input() supportsAdvancedReplace = false;\r\n\r\n  @Input() isAdvanced = false;\r\n\r\n  @Input() translatedBaseKey: string;\r\n\r\n  @Input() selectionFieldInfo: ReplaceFieldSelectionInfo[];\r\n\r\n  @Output() modelChanged = new EventEmitter<ReplaceField>();\r\n\r\n  constructor(private helperSerivce: HelperService) {}\r\n\r\n  ngOnInit() {\r\n    this.mode = this.isAdvanced ? ReplaceFieldModes.Advanced : this.replaceFieldModes.Text;\r\n    this.state.isAdvanced = this.isAdvanced;\r\n    if (!this.state.replacementValue) {\r\n      this.state.replacementValue = null;\r\n    }\r\n    this.updateModel();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.replaceValue) {\r\n      this.replaceValue.nativeElement.innerHTML = this.state.advancedReplacementHtml;\r\n    }\r\n  }\r\n\r\n  updateModel() {\r\n    if (!this.state.replacementValue) {\r\n      if (this.mode === this.replaceFieldModes.Advanced) {\r\n        this.state.replacementValue = null;\r\n        this.state.advancedReplacementHtml = null;\r\n      } else if (this.mode === this.replaceFieldModes.Text) {\r\n        this.state.replacementValue = null;\r\n        this.state.advancedReplacementHtml = null;\r\n        this.state.advancedReplacementValue = null;\r\n      }\r\n    }\r\n    this.modelChanged.emit(this.state);\r\n  }\r\n\r\n  updateAdvancedModel() {\r\n    this.state.replacementValue = this.replaceValue.nativeElement.innerText;\r\n    this.state.advancedReplacementHtml = this.replaceValue.nativeElement.innerHTML;\r\n    this.state.advancedReplacementValue = this.helperSerivce.convertMathTree(\r\n      mjs.parse(this.state.replacementValue.replace(new RegExp(String.fromCharCode(160), 'g'), ' '))\r\n    );\r\n    this.updateModel();\r\n  }\r\n\r\n  validateAdvancedReplacement(event: any) {\r\n    if (this.mode === this.replaceFieldModes.Advanced) {\r\n      const pattern = /[0-9()+\\-*/. ]/;\r\n      const keys = ['Backspace', 'Delete', 'ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown', 'Home', 'End'];\r\n      if (!pattern.test(event.key) && keys.indexOf(event.key) < 0) {\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  insertAdvancedField(field: string) {\r\n    this.replaceValue.nativeElement.innerHTML\r\n      += '<span contenteditable=\\'false\\' style=\\'background-color:lightgray; display: inline-block;\\'>' + field + '</span>&nbsp;';\r\n\r\n    this.updateAdvancedModel();\r\n  }\r\n\r\n  toggleAdvancedMode(mode: ReplaceFieldModes) {\r\n    this.mode = mode;\r\n\r\n    this.state.isAdvanced = this.mode === this.replaceFieldModes.Advanced ? true : false;\r\n    this.state.replacementValue = null;\r\n    this.state.replacementField = '';\r\n    this.state.advancedReplacementValue = null;\r\n    if (this.replaceValue) {\r\n      this.replaceValue.nativeElement.innerText = '';\r\n    }\r\n\r\n    if (!this.loadedCollection) {\r\n      this.loadedCollection = this.state.collection;\r\n    }\r\n\r\n    if (mode === this.replaceFieldModes.Advanced) {\r\n      this.state.collection = this.loadedCollection.filter(\r\n        x => x.fieldType === this.fieldTypes.Double || x.fieldType === this.fieldTypes.Integer\r\n      );\r\n    } else {\r\n      this.state.collection = this.loadedCollection;\r\n    }\r\n    this.updateModel();\r\n  }\r\n\r\n  checkFieldIsDate(field: string): boolean {\r\n    if (this.state.collection) {\r\n      return this.state.collection.find(c => c.name === field).fieldType === FieldType.DateTime;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  checkFieldIsSelection(field: string): boolean {\r\n    if (this.state.collection && this.selectionFieldInfo) {\r\n      const infoSet = this.selectionFieldInfo.find(c => c.fieldNames.indexOf(field) !== -1);\r\n      if (infoSet) {\r\n        this.currentSelectionOptions = infoSet.values;\r\n        return true;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'type-ahead',\r\n  templateUrl: './typeahead.component.html'\r\n})\r\nexport class TypeaheadComponent {\r\n    @Input() searching: boolean = false;\r\n    @Input() model: any;\r\n    @Input() search: any;\r\n    @Input() resultFormatter: any;\r\n    @Input() inputFormatter: any;\r\n    @Output() selectItem = new EventEmitter<any>();\r\n\r\n    onSelectItem(event: any) {\r\n        this.selectItem.emit(event);\r\n    }\r\n}","import { TemplateRef, OnInit, Component, Input, ViewChild } from '@angular/core';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\n\r\n@Component({\r\n  selector: 'default-title-bar',\r\n  templateUrl: './default-title-bar.component.html'\r\n})\r\nexport class DefaultTitleBarComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  @Input() translationkey = undefined;\r\n  @Input() title = '';\r\n\r\n  @ViewChild('windowTitleBar', { static: false })\r\n  windowTitleBar: TemplateRef<any>;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    if (this.translationkey === undefined) {\r\n      this.translationkey = this.i18n.common;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'modal-backdrop',\r\n  templateUrl: './modal-backdrop.component.html'\r\n})\r\nexport class ModalBackdropComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { TranslationManager } from '../../_core/i18n/translation-manager';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'dynamicTranslate'\r\n})\r\nexport class DynamicDataTranslation implements PipeTransform {\r\n  constructor(private translateService: TranslationManager) {}\r\n\r\n  transform(value: string): string {\r\n    if (value) {\r\n      const translationKeys = value.split('_');\r\n      const translatedValue = this.translateService.instant(value);\r\n\r\n      if (translationKeys.length > 1 && value.toLowerCase() === translatedValue) {\r\n        return translationKeys[1];\r\n      }\r\n\r\n      return translatedValue;\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'evenodd'\r\n})\r\nexport class EvenoddPipe implements PipeTransform {\r\n  transform(value: any[], filter: string) {\r\n    if (!value || (filter !== 'even' && filter !== 'odd')) {\r\n      return value;\r\n    }\r\n\r\n    return value.filter(i => (filter === 'odd' ? i.order % 2 === 1 : i.order % 2 === 0));\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'is-matched'\r\n})\r\nexport class IsMatchedPipe implements PipeTransform {\r\n\r\n  transform(id: any, matchedValues: any[]) {\r\n\r\n    return matchedValues.find(c => c === id);\r\n\r\n  }\r\n\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n// import * as moment from 'moment';\r\n\r\nimport * as moment from 'moment-timezone';\r\n\r\n@Pipe({\r\n  name: 'localTime'\r\n})\r\nexport class LocalTimePipe implements PipeTransform {\r\n  userTimeZone = moment.tz.guess(true); // true - replaces cached value w/ the newly computed one\r\n  minDate = moment.utc('1900-01-02');\r\n\r\n  transform(dateString: string) {\r\n    if (!moment(dateString).isValid() || moment.utc(dateString).isBefore(this.minDate)) {\r\n      return '';\r\n    }\r\n\r\n    return moment\r\n      .utc(dateString)\r\n      .tz(this.userTimeZone)\r\n      .format('LLL');\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n// import * as moment from 'moment';\r\n\r\nimport * as moment from 'moment-timezone';\r\nimport { IntlService } from '@progress/kendo-angular-intl';\r\n\r\n@Pipe({\r\n  name: 'localizedDate'\r\n})\r\nexport class LocalizedDatePipe implements PipeTransform {\r\n  constructor(private intlService: IntlService) {}\r\n\r\n  minDate = moment.utc('1500-01-01');\r\n\r\n  transform(dateString: string) {\r\n    if (!moment(dateString).isValid() || moment.utc(dateString).isBefore(this.minDate)) {\r\n      return '';\r\n    }\r\n\r\n    return this.intlService.formatDate(this.intlService.parseDate(dateString), 'd');\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { IntlService } from '@progress/kendo-angular-intl';\r\n\r\n\r\n@Pipe({\r\n  name: 'localizedNumber'\r\n})\r\nexport class LocalizedNumberPipe implements PipeTransform {\r\n  constructor(private intlService: IntlService) {}\r\n\r\n  transform(numberString: string) {\r\n    return this.intlService.formatNumber(this.intlService.parseNumber(numberString), 'n');\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n  name: 'localizedPercent'\r\n})\r\nexport class LocalizedPercentPipe implements PipeTransform {\r\n\r\n  transform(numberString: string) {\r\n    return numberString ? `${Math.round(parseFloat(numberString))}%` : numberString;\r\n  }\r\n}\r\n","import { GroupSearchComponent } from './components/group-search.component';\r\nimport { AlertComponent } from './components/alert.component';\r\nimport { AddAssetColumnComponent } from './components/add-asset-column-component';\r\nimport { GridColumnSelectorComponent } from './components/grid-column-selector/grid-column-selector.component';\r\nimport { GridColumnSelectorModalComponent } from './components/grid-column-selector/grid-column-selector-modal.component';\r\nimport { ConfirmComponent } from './components/confirm.component';\r\nimport { ConfirmModalComponent } from './components/confirm-modal.component';\r\nimport { GridContextMenuComponent } from './components/grid-column-selector/grid-context-menu.component';\r\nimport { TypeaheadComponent } from './components/typeahead.component';\r\nimport { PopupModule } from '@progress/kendo-angular-popup';\r\nimport { FilterCriteriaBuilderComponent } from './components/filter-criteria-builder.component';\r\nimport { FilterOperationsService } from '../_core/services/filter-operations.service';\r\nimport { FamisGridComponent } from './components/famis-grid.component';\r\nimport { ModalFormComponent } from './components/modal-form.component';\r\nimport { ReplaceFieldComponent } from './components/replace-field.component';\r\nimport { CarouselModalComponent } from './components/carousel-modal.component';\r\nimport { DatePipe, CommonModule } from '@angular/common';\r\nimport { ViewMapComponent } from './components/grid-actions/view-map.component';\r\nimport { GoogleMapComponent } from './components/google-map.component';\r\nimport { BingMapComponent } from './components/bing-map.component';\r\nimport { CoreModule } from '../_core/core.module';\r\nimport { GoogleMapsService } from '../_core/services/google-maps-config.service';\r\nimport { DynamicFormControlService } from '../_core/services/dynamic-form-control.service';\r\nimport { LAZY_MAPS_API_CONFIG, AgmCoreModule } from '@agm/core';\r\nimport { DynamicFieldComponent } from './components/dynamic-form/controls/dynamic-field.component';\r\nimport { CascadingComboBoxComponent } from './components/dynamic-form/controls/cascading-combo-box.component';\r\nimport { ImageUploadFieldComponent } from './components/dynamic-form/controls/image-upload-field.component';\r\nimport { AssetFormComponent } from './components/dynamic-form/asset-form.component';\r\nimport { RevertComponent } from './components/grid-actions/revert.component';\r\nimport { ViewImageComponent } from './components/grid-actions/view-image.component';\r\nimport { KendoGridTranslationComponent } from './components/kendo-grid-translation.component';\r\nimport { PowerBIComponent } from './components/power-bi/power-bi.component';\r\nimport { LocalTimePipe } from './pipes/local-time.pipe';\r\nimport { FamisSubGridComponent } from './components/famis-sub-grid.component';\r\nimport { LocalizedDatePipe } from './pipes/localized-date.pipe';\r\nimport { LocalizedNumberPipe } from './pipes/localized-number.pipe';\r\nimport { LocalizedPercentPipe } from './pipes/localized-percent.pipe';\r\nimport { InputsModule } from '@progress/kendo-angular-inputs';\r\nimport { UserGridService } from '../_core/services/user-grid.service';\r\nimport { FilterService, SinglePopupService, GridModule } from '@progress/kendo-angular-grid';\r\nimport { GridFilterComponent } from './components/grid-filter/grid-filter.component';\r\nimport { WindowModule, WindowRef } from '@progress/kendo-angular-dialog';\r\nimport { DefaultTitleBarComponent } from './components/window/default-title-bar.component';\r\nimport { ModalBackdropComponent } from './components/window/modal-backdrop.component';\r\nimport { CopyAssetRecordComponent } from './components/copy-asset-modal/copy-asset-record.component';\r\nimport { FileUploadControlComponent } from './components/file-upload-control/file-upload-control.component';\r\nimport { DashboardGroupsComponent } from './components/dashboard-groups.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { OrderModule } from 'ngx-order-pipe';\r\nimport { DateInputsModule } from '@progress/kendo-angular-dateinputs';\r\nimport { LaddaModule } from 'angular2-ladda';\r\nimport { DropDownsModule } from '@progress/kendo-angular-dropdowns';\r\nimport { EvenoddPipe } from './pipes/evenodd.pipe';\r\nimport { DynamicDataTranslation } from './pipes/dynamic-data-translation.pipe';\r\nimport { WizardService } from '../_ui/services/wizard.service';\r\nimport { GroupSearchService } from '../_api/services/group-search.service';\r\nimport { CustomDataTypesRepository } from '../_api/services/custom-data-types-repository.service';\r\nimport { ImageApiService } from '../_api/_runtime/services/image-api.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgbModule,\r\n    GridModule,\r\n    PopupModule,\r\n    CoreModule,\r\n    OrderModule,\r\n    DateInputsModule,\r\n    InputsModule,\r\n    ReactiveFormsModule,\r\n    LaddaModule,\r\n    DropDownsModule,\r\n    AgmCoreModule.forRoot(),\r\n    WindowModule\r\n  ],\r\n  declarations: [\r\n    EvenoddPipe,\r\n    DynamicDataTranslation,\r\n    GroupSearchComponent,\r\n    AlertComponent,\r\n    AddAssetColumnComponent,\r\n    GridColumnSelectorComponent,\r\n    GridColumnSelectorModalComponent,\r\n    ConfirmComponent,\r\n    ConfirmModalComponent,\r\n    GridContextMenuComponent,\r\n    TypeaheadComponent,\r\n    FilterCriteriaBuilderComponent,\r\n    FamisGridComponent,\r\n    FamisSubGridComponent,\r\n    ModalFormComponent,\r\n    AssetFormComponent,\r\n    DynamicFieldComponent,\r\n    ReplaceFieldComponent,\r\n    CascadingComboBoxComponent,\r\n    ReplaceFieldComponent,\r\n    CarouselModalComponent,\r\n    ImageUploadFieldComponent,\r\n    ViewMapComponent,\r\n    ViewImageComponent,\r\n    GoogleMapComponent,\r\n    BingMapComponent,\r\n    RevertComponent,\r\n    KendoGridTranslationComponent,\r\n    PowerBIComponent,\r\n    LocalTimePipe,\r\n    LocalizedDatePipe,\r\n    LocalizedNumberPipe,\r\n    LocalizedPercentPipe,\r\n    GridFilterComponent,\r\n    DefaultTitleBarComponent,\r\n    ModalBackdropComponent,\r\n    CopyAssetRecordComponent,\r\n    FileUploadControlComponent,\r\n    DashboardGroupsComponent\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    EvenoddPipe,\r\n    DynamicDataTranslation,\r\n    GroupSearchComponent,\r\n    AlertComponent,\r\n    AddAssetColumnComponent,\r\n    GridColumnSelectorComponent,\r\n    GridColumnSelectorModalComponent,\r\n    ConfirmComponent,\r\n    ConfirmModalComponent,\r\n    TypeaheadComponent,\r\n    FilterCriteriaBuilderComponent,\r\n    FamisGridComponent,\r\n    FamisSubGridComponent,\r\n    ModalFormComponent,\r\n    AssetFormComponent,\r\n    ReplaceFieldComponent,\r\n    CascadingComboBoxComponent,\r\n    CarouselModalComponent,\r\n    ViewMapComponent,\r\n    ViewImageComponent,\r\n    RevertComponent,\r\n    DynamicFieldComponent,\r\n    PowerBIComponent,\r\n    KendoGridTranslationComponent,\r\n    LocalTimePipe,\r\n    LocalizedDatePipe,\r\n    LocalizedNumberPipe,\r\n    ImageUploadFieldComponent,\r\n    GridFilterComponent,\r\n    CopyAssetRecordComponent,\r\n    FileUploadControlComponent,\r\n    GoogleMapComponent,\r\n    BingMapComponent,\r\n    DashboardGroupsComponent\r\n  ],\r\n  providers: [\r\n    WizardService,\r\n    GroupSearchService,\r\n    CustomDataTypesRepository,\r\n    ImageApiService,\r\n    FilterOperationsService,\r\n    UserGridService,\r\n    DatePipe,\r\n    FilterService,\r\n    SinglePopupService,\r\n    DynamicFormControlService,\r\n    WindowRef,\r\n    { provide: LAZY_MAPS_API_CONFIG,\r\n      useClass: GoogleMapsService }\r\n  ],\r\n  entryComponents: [\r\n    DynamicFieldComponent,\r\n    ConfirmModalComponent,\r\n    FilterCriteriaBuilderComponent,\r\n    CarouselModalComponent,\r\n    AssetFormComponent,\r\n    ViewMapComponent,\r\n    ViewImageComponent,\r\n    RevertComponent,\r\n    PowerBIComponent,\r\n    ImageUploadFieldComponent,\r\n    DefaultTitleBarComponent,\r\n    ModalBackdropComponent\r\n  ]\r\n})\r\nexport class SharedModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class WizardService {\r\n  public activeTabs: Array<string>;\r\n  public previousTab: string;\r\n\r\n\r\n  // Observable string sources\r\n  private activeTabSource = new BehaviorSubject<string>('');\r\n\r\n\r\n  // Observable string streams\r\n  activeTab$ = this.activeTabSource.asObservable();\r\n\r\n  constructor() {\r\n    this.activeTabs = new Array<string>();\r\n  }\r\n\r\n  public clearActiveTab() {\r\n    let current = this.activeTabSource.getValue();\r\n    current = '';\r\n\r\n    this.activeTabSource.next(current);\r\n  }\r\n\r\n  setActiveTab(activeTab: string) {\r\n    const current = this.activeTabSource.getValue();\r\n    this.previousTab = current;\r\n    this.activeTabSource.next(activeTab);\r\n    this.activeTabs.push(activeTab);\r\n  }\r\n}\r\n","import { AdminHomeComponent } from './components/admin-home.component';\r\n\r\nimport { UserHomeComponent } from './components/user/user-home.component';\r\nimport { UserListComponent } from './components/user/user-list.component';\r\nimport { UserEditComponent } from './components/user/user-edit.component';\r\n\r\nimport { TeamEditComponent } from './components/team/team-edit.component';\r\nimport { TeamHomeComponent } from './components/team/team-home.component';\r\nimport { TeamListComponent } from './components/team/team-list.component';\r\n\r\nimport { TemplateManagementComponent } from './components/template/template-management.component';\r\n\r\nimport { SharedModule } from '../_shared/shared.module';\r\nimport { TemplateBuilderWizardComponent } from './components/template/wizard/template-builder-wizard.component';\r\nimport { TemplateBuilderStep1Component } from './components/template/wizard/template-builder-step1/template-builder-step1.component';\r\nimport { TemplateBuilderStep2Component } from './components/template/wizard/template-builder-step2/template-builder-step2.component';\r\nimport { TemplateBuilderStep3Component } from './components/template/wizard/template-builder-step3/template-builder-step3.component';\r\nimport { TemplateBuilderStep4Component } from './components/template/wizard/template-builder-step4/template-builder-step4.component';\r\nimport { CustomFieldComponent } from './components/template/wizard/custom-field/custom-field.component';\r\nimport { TemplateService } from './services/template.service';\r\nimport { GroupSaveService } from './services/group-save-service';\r\nimport { GroupSaveComponent } from './components/group-saves/group-save.component';\r\nimport { RestoreModalComponent } from './components/group-saves/restore-modal.component';\r\nimport { CoreModule } from '../_core/core.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { GridModule } from '@progress/kendo-angular-grid';\r\nimport { IntlModule } from '@progress/kendo-angular-intl';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DragulaModule, DragulaService } from 'ng2-dragula';\r\nimport { OrderModule } from 'ngx-order-pipe';\r\nimport { TemplateRepositoryService } from '../_api/services/admin/template-repository.service';\r\nimport { ModuleRepositoryService } from '../_api/services/module-repository.service';\r\nimport { CountryRepositoryService } from '../_api/services/country-repository.service';\r\nimport { OfficeRepositoryService } from '../_api/services/office-repository.service';\r\nimport { RemoveDeactivatedComponent } from './components/remove-deactivated/remove-deactivated.component';\r\nimport { RemoveDeactivatedService } from './services/remove-deactivated.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    GridModule,\r\n    IntlModule,\r\n    RouterModule,\r\n    CommonModule,\r\n    GridModule,\r\n    NgbModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    DragulaModule,\r\n    CoreModule,\r\n    SharedModule,\r\n    OrderModule,\r\n  ],\r\n  declarations: [\r\n    AdminHomeComponent,\r\n    UserHomeComponent,\r\n    UserListComponent,\r\n    UserEditComponent,\r\n    TeamHomeComponent,\r\n    TeamListComponent,\r\n    TeamEditComponent,\r\n    TemplateManagementComponent,\r\n    TemplateBuilderWizardComponent,\r\n    TemplateBuilderStep1Component,\r\n    TemplateBuilderStep2Component,\r\n    TemplateBuilderStep3Component,\r\n    TemplateBuilderStep4Component,\r\n    CustomFieldComponent,\r\n    GroupSaveComponent,\r\n    RestoreModalComponent,\r\n    RemoveDeactivatedComponent\r\n  ],\r\n  entryComponents: [\r\n    RestoreModalComponent\r\n  ],\r\n  exports: [\r\n    TemplateBuilderWizardComponent,\r\n    TemplateBuilderStep1Component,\r\n    TemplateBuilderStep2Component,\r\n    TemplateBuilderStep3Component,\r\n    TemplateBuilderStep4Component\r\n  ],\r\n  providers: [\r\n    TemplateService,\r\n    GroupSaveService,\r\n    TemplateRepositoryService,\r\n    ModuleRepositoryService,\r\n    CountryRepositoryService,\r\n    OfficeRepositoryService,\r\n    DragulaService,\r\n    RemoveDeactivatedService\r\n  ]\r\n})\r\nexport class AdminModule {}\r\n","import { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'admin-home',\r\n  templateUrl: './admin-home.component.html'\r\n})\r\nexport class AdminHomeComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  constructor(\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.router.navigate(['/admin/users']);\r\n  }\r\n\r\n}\r\n","import { FieldType } from '../../../_enums/field-type';\r\n\r\nexport const groupSaveHeaders = [\r\n  {\r\n    name: 'id',\r\n    displayName: 'Id',\r\n    fieldType: FieldType.String,\r\n    isSearchable: false,\r\n    isFilterable: false,\r\n    isSortable: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false\r\n  },\r\n  {\r\n    name: 'groupId',\r\n    displayName: 'Group Id',\r\n    fieldType: FieldType.String,\r\n    isSearchable: false,\r\n    isFilterable: false,\r\n    isSortable: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false\r\n  },\r\n  {\r\n    name: 'updatedUserName',\r\n    displayName: 'Created by',\r\n    fieldType: FieldType.String,\r\n    isSearchable: false,\r\n    isFilterable: false,\r\n    isSortable: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false\r\n  },\r\n  {\r\n    name: 'createdTime',\r\n    displayName: 'Date & Time',\r\n    fieldType: FieldType.DateWithTimeStamp,\r\n    isSearchable: false,\r\n    isFilterable: false,\r\n    isSortable: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false\r\n  },\r\n  {\r\n    name: 'description',\r\n    displayName: 'Name',\r\n    fieldType: FieldType.String,\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: false,\r\n    isFacetable: false,\r\n    isKey: true,\r\n    isCustom: false\r\n  },\r\n];\r\n\r\nexport const defaultGroupSaveHeaders = [\r\n  'description',\r\n  'createdTime',\r\n  'updatedUserName'\r\n];\r\n\r\n","import { FamisGridService } from '../../../_core/services/famis-grid.service';\r\nimport { GroupSaveService } from '../../services/group-save-service';\r\nimport { groupSaveHeaders, defaultGroupSaveHeaders } from '../default-values/default-header';\r\nimport { AlertService } from '../../../_core/services/alert.service';\r\nimport { RestoreModalComponent } from './restore-modal.component';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { LocalTimePipe } from '../../../_shared/pipes/local-time.pipe';\r\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { FamisGrid } from '../../../_models/shared/famis-grid-state.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { GroupSave } from '../../../_models/group-save.model';\r\nimport { FamisGridActionEvent } from '../../../_models/shared/famis-grid-action-event.model';\r\n\r\n@Component({\r\n  selector: 'group-save-component',\r\n  templateUrl: './group-save.component.html'\r\n})\r\nexport class GroupSaveComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  private destroyed$ = new Subject<any>();\r\n  private windowSize = 500;\r\n  private initWindowSize = 84;\r\n  private defaultSkip = 0;\r\n  private groupId: string;\r\n  public savePointGrid: FamisGrid;\r\n  public savePointName: string;\r\n  public isDuplicateName = false;\r\n  public saveClicked = false;\r\n\r\n  @ViewChild(RestoreModalComponent, { static: false })\r\n  restoreModalComponent: RestoreModalComponent;\r\n\r\n  constructor(\r\n    private famisGridService: FamisGridService,\r\n    private groupSaveService: GroupSaveService,\r\n    private alertService: AlertService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.famisGridService.resetCache();\r\n    this.groupSaveService.clearGroupSave();\r\n    this.groupId = this.route.parent.snapshot.paramMap.get('groupId');\r\n    this.groupSaveService.groupId = this.groupId;\r\n    this.savePointGrid = <FamisGrid>{\r\n      gridData: this.groupSaveService.savePointGridData$,\r\n      gridId: this.famisGridService.createGrid(),\r\n      columnHeaders: groupSaveHeaders,\r\n      selectedHeaders: defaultGroupSaveHeaders,\r\n      windowSize: this.windowSize,\r\n      name: '',\r\n      totalRecordCount: 0,\r\n      height: 350,\r\n      dataSource: this.groupSaveService.dataTarget,\r\n      supportedOperators: [],\r\n      actions: ['Restore'],\r\n      translationBaseKey: this.i18n.admin\r\n    };\r\n\r\n    const getSuccessfulRecords = this.groupSaveService.updateGroupSaveData(this.groupId, this.defaultSkip, this.initWindowSize);\r\n    const loading = getSuccessfulRecords.subscribe(successfulRecords => {\r\n      if (successfulRecords) {\r\n        this.savePointGrid.totalRecordCount = successfulRecords.length;\r\n        this.groupSaveService.setSavePointGridDataSource(successfulRecords);\r\n        if (successfulRecords.length > 0) {\r\n          this.famisGridService.setCacheRecords(\r\n            successfulRecords,\r\n            this.savePointGrid.gridId,\r\n            0,\r\n            successfulRecords.length,\r\n            this.initWindowSize\r\n          );\r\n        }\r\n      }\r\n    });\r\n    this.savePointGrid.loading = loading;\r\n  }\r\n\r\n  updateCache() {\r\n    const getSuccessfulRecords = this.groupSaveService.updateGroupSaveData(this.groupId, this.defaultSkip, this.initWindowSize);\r\n    const loading = getSuccessfulRecords.subscribe(successfulRecords => {\r\n      if (successfulRecords) {\r\n        this.savePointGrid.totalRecordCount = successfulRecords.length;\r\n        this.groupSaveService.setSavePointGridDataSource(successfulRecords);\r\n        if (successfulRecords.length > 0) {\r\n          this.famisGridService.setCacheRecords(\r\n            successfulRecords,\r\n            this.savePointGrid.gridId,\r\n            0,\r\n            successfulRecords.length,\r\n            this.initWindowSize\r\n          );\r\n        }\r\n      }\r\n    });\r\n    this.savePointGrid.loading = loading;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  onSubmit(form: any) {\r\n    this.saveClicked = true;\r\n    if (this.savePointName) {\r\n      this.groupSaveService.setGroupSavePoints(this.groupSaveService.groupId, this.savePointName).subscribe(result => {\r\n        if (result) {\r\n          if (result.code === 0) {\r\n            this.savePointName = '';\r\n            this.updateCache();\r\n            this.isDuplicateName = false;\r\n          } else if (result.code === 2) {\r\n            this.isDuplicateName = true;\r\n          }\r\n        }\r\n      });\r\n    }\r\n    this.saveClicked = false;\r\n  }\r\n\r\n  handleAddOrUpdate(responseFromModal: GroupSave) {\r\n    // console.log(responseFromModal);\r\n  }\r\n\r\n  handleAction(responseFromModal: GroupSave) {\r\n    this.updateCache();\r\n    if (responseFromModal) {\r\n      this.alertService.success('Save/Restore successfully completed');\r\n    }\r\n  }\r\n\r\n  handleActionEvent(actionEvent: FamisGridActionEvent) {\r\n    if (actionEvent.action === 'Restore') {\r\n      const modall = this.restoreModalComponent.open(actionEvent.item);\r\n    }\r\n  }\r\n\r\n  mapRequestDto(item: GroupSave): GroupSave {\r\n    const request = <GroupSave>{\r\n      description: item.description,\r\n      createdTime: item.createdTime,\r\n      groupId: item.groupId,\r\n      updatedUserId: item.updatedUserId,\r\n      id: item.id\r\n    };\r\n    return request;\r\n  }\r\n\r\n}\r\n","import {NgbModal, NgbActiveModal, NgbModalRef} from '@ng-bootstrap/ng-bootstrap';\r\nimport { AlertService } from '../../../_core/services/alert.service';\r\nimport { GroupSaveService } from '../../services/group-save-service';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { WindowManager } from '../../../_core/services/window-manager.service';\r\nimport { Component, OnInit, OnDestroy, EventEmitter, Output, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { GroupSave } from '../../../_models/group-save.model';\r\n\r\n@Component({\r\n  selector: 'restore-milestone',\r\n  templateUrl: './restore-modal.component.html'\r\n})\r\n\r\nexport class RestoreModalComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  private modalRef: NgbModalRef;\r\n  private restoreGroupSave: GroupSave;\r\n  public restoreComplete = false;\r\n  public restoreInitiated = false;\r\n\r\n  @ViewChild('content', { static: false }) private content: any; // intentional, following previous examples\r\n  @Output() onAction = new EventEmitter<GroupSave>();\r\n  @Output() onAddOrUpdate = new EventEmitter<GroupSave>();\r\n  constructor(private modalService: NgbModal,\r\n              private groupSaveService: GroupSaveService,\r\n              private alertService: AlertService,     private windowManager: WindowManager,\r\n              public container: ViewContainerRef) {}\r\n  ngOnInit() {}\r\n\r\n  ngOnDestroy() {}\r\n\r\n  restore() {\r\n    const requestDto = this.mapRequestDto(this.restoreGroupSave);\r\n    // tslint:disable-next-line:max-line-length\r\n    this.alertService.info('Your restore request has been successfully initiated. Please refrain access to this group until the restoration is complete!');\r\n    // internally includes inserting a new entry into the rollback milestones table\r\n    this.restoreInitiated = true;\r\n    this.groupSaveService.restoreToSavePoint(requestDto).subscribe(response => {\r\n        // console.log(response);\r\n        if (response) {\r\n          this.restoreComplete = true;\r\n          this.restoreInitiated = false;\r\n          this.modalRef.dismiss();\r\n          this.onAction.emit(this.restoreGroupSave);\r\n        }\r\n    });\r\n\r\n    this.restoreComplete = false;\r\n  }\r\n\r\n  cancel() {\r\n    this.modalRef.dismiss();\r\n  }\r\n\r\n  open(item?: GroupSave) {\r\n    this.restoreGroupSave = item;\r\n    this.modalRef = this.modalService.open(this.content, {\r\n                                           backdrop: 'static', size: 'lg',\r\n                                           keyboard: false,\r\n                                           windowClass: 'mediumModal' });\r\n  }\r\n\r\n  mapRequestDto(item: GroupSave): GroupSave {\r\n    const request = <GroupSave>{\r\n        description: item.description,\r\n        createdTime: item.createdTime,\r\n        groupId: item.groupId,\r\n        updatedUserId: item.updatedUserId,\r\n        id: item.id\r\n    };\r\n    return request;\r\n  }\r\n\r\n}\r\n","import { FamisGridService } from '../../../_core/services/famis-grid.service';\r\nimport { GroupSaveService } from '../../services/group-save-service';\r\nimport { groupSaveHeaders, defaultGroupSaveHeaders } from '../default-values/default-header';\r\nimport { AlertService } from '../../../_core/services/alert.service';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { LocalTimePipe } from '../../../_shared/pipes/local-time.pipe';\r\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BreadCrumb } from '../../../_models/breadcrumbs.model';\r\nimport { RemoveDeactivatedService } from '../../services/remove-deactivated.service';\r\nimport { NgForm } from '@angular/forms';\r\n@Component({\r\n  selector: 'remove-deactivated',\r\n  templateUrl: './remove-deactivated.component.html'\r\n})\r\nexport class RemoveDeactivatedComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n\r\n  i18n = TranslationBaseKeys;\r\n  selectedType: any;\r\n  selectedDatatarget: string;\r\n  private destroyed$ = new Subject<any>();\r\n\r\n  private defaultSkip = 0;\r\n  private groupId: string;\r\n\r\n  public saveClicked = false;\r\n  breadCrumbs = [\r\n    <BreadCrumb>{ name: 'Administration', routerLink: '../' },\r\n    <BreadCrumb>{ name: 'Remove Deactivated', routerLink: 'RemoveDeactivated', isDisabled: true }\r\n  ];\r\n\r\n  constructor(\r\n    private groupSaveService: GroupSaveService,\r\n    private removeDeactivatedService: RemoveDeactivatedService,\r\n    private alertService: AlertService,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.groupId = this.route.parent.snapshot.paramMap.get('groupId');\r\n  }\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n  }\r\n  onSubmit(form) {\r\n    if (form.valid) {\r\n    this.saveClicked = true;\r\n     this.selectedDatatarget = this.selectedDatatarget === '' || this.selectedDatatarget === undefined ? '-1' : this.selectedDatatarget;\r\n    // WIP\r\n    // call the api method to execute the procedure\r\n    this.removeDeactivatedService.RemoveDeactivatedItems(this.groupId, this.selectedType, this.selectedDatatarget).subscribe(result => {\r\n          this.alertService.success('Deactivated items removed successfully');\r\n          // this.alertService.error('Error removing deactivated items, please try again.');\r\n    }, error => {\r\n      this.alertService.error('Error removing deactivated items, please try again');\r\n      this.resetForm(form);\r\n    });\r\n    this.saveClicked = false;\r\n    }\r\n  }\r\n  private resetForm(form: NgForm) {\r\n\r\n    this.selectedDatatarget = '';\r\n    this.selectedType = '';\r\n    form.resetForm();\r\n\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Team } from '../../../_models/team.model';\r\n\r\n@Component({\r\n  selector: 'team-edit',\r\n  templateUrl: './team-edit.component.html'\r\n})\r\nexport class TeamEditComponent implements OnInit {\r\n\r\n  team: Team;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.team = new Team();\r\n    this.team.Name = 'FAMIS';\r\n    this.team.Active = true;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'team-home',\r\n  templateUrl: './team-home.component.html'\r\n})\r\nexport class TeamHomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { SelectionEvent, RowArgs } from '@progress/kendo-angular-grid';\r\nimport { testTeams } from './teams';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Team } from '../../../_models/team.model';\r\n\r\n@Component({\r\n  selector: 'team-list',\r\n  templateUrl: './team-list.component.html'\r\n})\r\nexport class TeamListComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  teams: Team[] = testTeams;\r\n  selectedRow: number;\r\n  selectedTeam: Team = this.teams[0];\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    this.selectedRow = 0;\r\n  }\r\n\r\n  selectRow(event: SelectionEvent) {\r\n    this.selectedRow = 0;\r\n    this.selectedTeam = event.selectedRows[0].dataItem;\r\n  }\r\n\r\n  public isRowSelected = (e: RowArgs) => e.index === this.selectedRow;\r\n}\r\n","export const testTeams = [\r\n    {\r\n      'Name': 'FAAs',\r\n      'Active': true,\r\n    },\r\n    {\r\n      'Name': 'Admin',\r\n      'Active': true\r\n    },\r\n    {\r\n      'Name': 'IT',\r\n      'Active': false,\r\n    },\r\n    {\r\n      'Name': 'Field',\r\n      'Active': true\r\n    },\r\n    {\r\n      'Name': 'Project Management',\r\n      'Active': true\r\n    }\r\n  ];","import { TemplateService } from '../../services/template.service';\r\nimport { AlertService } from '../../../_core/services/alert.service';\r\nimport { RowClassArgs, GridDataResult, DataStateChangeEvent } from '@progress/kendo-angular-grid';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { FamisGridService } from '../../../_core/services/famis-grid.service';\r\nimport { UserGridService } from '../../../_core/services/user-grid.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { OfficeDto } from '../../../_api/dtos/office.dto';\r\nimport { State, CompositeFilterDescriptor, process } from '@progress/kendo-data-query';\r\nimport { Router } from '@angular/router';\r\nimport { SetTemplateIsRetiredDto } from '../../../_api/dtos/template-management/set-template-isretired.dto';\r\nimport { TemplateBaseDto } from '../../../_api/dtos/template-management/template-base.dto';\r\n\r\n@Component({\r\n  selector: 'template-management',\r\n  templateUrl: './template-management.component.html'\r\n})\r\nexport class TemplateManagementComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  public templatesGridBusy = true;\r\n  public templates: Array<TemplateBaseDto> = new Array<TemplateBaseDto>();\r\n  public offices: Array<OfficeDto> = new Array<OfficeDto>();\r\n\r\n\r\n  template: TemplateBaseDto;\r\n\r\n  state: State = {\r\n    skip: 0,\r\n    take: 50\r\n  };\r\n\r\n  public userGridSettingName = this.userGridService.createUserGridId(\r\n    null,\r\n    this.router.url.toString().split('?')[0],\r\n    'Template Management Grid'\r\n  );\r\n\r\n  filterRoot = { logic: 'and', filters: [] } as CompositeFilterDescriptor;\r\n\r\n  gridData: GridDataResult = process(this.templates, this.state);\r\n\r\n  constructor(private templateService: TemplateService,\r\n              private alertService: AlertService,\r\n              private famisGridService: FamisGridService,\r\n              private userGridService: UserGridService,\r\n              private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.templateService\r\n      .getAll()\r\n      .subscribe(templates => {\r\n        this.userGridService.getSettings(this.famisGridService.userId, this.userGridSettingName, null)\r\n          .subscribe(gridSettings => {\r\n              if (gridSettings.filters && gridSettings.filters.filters && gridSettings.filters.filters.length > 0) {\r\n                this.filterRoot = gridSettings.filters;\r\n                this.state.filter = this.filterRoot;\r\n                this.loadTemplates(templates);\r\n              } else {\r\n                this.loadTemplates(templates);\r\n              }\r\n            });\r\n      },\r\n      error => {}, () => (this.templatesGridBusy = false));\r\n\r\n    this.famisGridService.setUserId();\r\n  }\r\n\r\n  private loadTemplates(templates: Array<TemplateBaseDto>) {\r\n    this.templates = templates;\r\n    this.refreshGridData();\r\n  }\r\n\r\n  handleCopy(sourceId: string, $event) {\r\n    const errors = new Array<string>();\r\n    event.preventDefault();\r\n\r\n    const sourceTemplate = this.templates.find(c => c.id === sourceId);\r\n\r\n    if (sourceTemplate) {\r\n      this.templateService.clone(sourceTemplate).subscribe(result => {\r\n\r\n        if (result === null) {\r\n          errors.push('An error occurred while copying the template.');\r\n        } else {\r\n          this.templates.push(<TemplateBaseDto>result);\r\n          this.refreshGridData();\r\n          this.alertService.success('Template copied successfully!');\r\n        }\r\n      });\r\n    } else {\r\n      errors.push('An error occurred while copying the template.');\r\n    }\r\n\r\n    errors.forEach(error => {\r\n      this.alertService.error(error);\r\n    });\r\n  }\r\n\r\n  toggleIsRetired(id: string, $event) {\r\n    event.preventDefault();\r\n\r\n    const templateIndex = this.templates.findIndex(t => t.id === id);\r\n    if (templateIndex === -1) {\r\n      return;\r\n    }\r\n    if (this.templates[templateIndex].isMasterTemplate) {\r\n      this.alertService.error('Cannot retire a master template.');\r\n    }\r\n\r\n    if (this.templates) {\r\n      this.templateService.setIsRetired(id, !this.templates[templateIndex].isRetired).subscribe(\r\n        data => this.setIsRetiredState(data),\r\n        error => {\r\n          this.alertService.error('This isn\\'t working yet, remove this message after the route exists.');\r\n          this.templates[0].isRetired = !this.templates[0].isRetired;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  private setIsRetiredState(dto: SetTemplateIsRetiredDto) {\r\n    if (dto == null) {\r\n      return;\r\n    }\r\n    const templateIndex = this.templates.findIndex(t => t.id === dto.templateId);\r\n    if (templateIndex === -1) {\r\n      return;\r\n    }\r\n\r\n    this.templates[templateIndex].isRetired = dto.isRetired;\r\n  }\r\n\r\n  public isDisabled(context: RowClassArgs) {\r\n    return context.dataItem.isRetired ? 'disabled-row' : 'enabled-row';\r\n  }\r\n\r\n  dataStateChange(state: DataStateChangeEvent): void {\r\n    this.state = state;\r\n    this.gridData = process(this.templates, this.state);\r\n  }\r\n\r\n  private refreshGridData() {\r\n    this.gridData = process(this.templates, this.state);\r\n  }\r\n\r\n  public handleFilterChange(filter: any): void {\r\n    // save the filter\r\n    this.filterRoot = filter;\r\n    this.userGridService.saveSettings(this.userGridSettingName, null,\r\n    null, this.famisGridService.userId, null, this.filterRoot).subscribe();\r\n  }\r\n}\r\n","import { TemplateService } from '../../../../services/template.service';\r\nimport { TranslatedComponent } from '../../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormArray, FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { TemplateFieldBaseDto } from '../../../../../_api/dtos/template-management/template-field-base.dto';\r\n\r\n@Component({\r\n  selector: 'app-custom-field',\r\n  templateUrl: './custom-field.component.html'\r\n})\r\nexport class CustomFieldComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  form: FormGroup;\r\n  formArray: FormArray;\r\n  customFieldFormArray = new FormArray([new FormControl()]);\r\n\r\n  @Input() customFields: Array<TemplateFieldBaseDto> = new Array<TemplateFieldBaseDto>();\r\n  @Input() moduleId: string;\r\n\r\n  @Input() invalidFieldTypeIndexes: string[];\r\n  @Input() invalidFieldNameIndexes: Array<[string, string]>;\r\n  @Output() customFieldAdded = new EventEmitter<TemplateFieldBaseDto>();\r\n  @Output() customFieldRemoved = new EventEmitter<string>();\r\n  @Input() isEditTemplate: boolean;\r\n\r\n  constructor(private formBuilder: FormBuilder, private templateService: TemplateService) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.formArray = this.formBuilder.array([]);\r\n\r\n    this.form = this.formBuilder.group({\r\n      customFields: this.formArray\r\n    });\r\n\r\n    this.customFields.forEach(field => {\r\n      if (field.moduleId === this.moduleId) {\r\n        const control = <FormArray>this.form.controls['customFields'];\r\n        control.push(this.initCustomFields(field));\r\n      }\r\n    });\r\n\r\n   this.form.valueChanges.subscribe(val => {\r\n      const customField = <Array<TemplateFieldBaseDto>>val;\r\n      this.customFieldAdded.emit(val.customFields);\r\n      // console.log(val);\r\n    });\r\n  }\r\n\r\n  initCustomFields(field?: TemplateFieldBaseDto) {\r\n    return this.formBuilder.group({\r\n      id: [field ? field.id : this.generateUUID()],\r\n      isCustomField: [true],\r\n      moduleId: this.moduleId,\r\n      name: [field ? field.name : '', Validators.required],\r\n      fieldType: [field ? field.fieldType : '', Validators.required],\r\n      order: [field && field.order > 0 ? field.order : 0]\r\n    });\r\n  }\r\n\r\n  addNewRow() {\r\n    const control = <FormArray>this.form.controls['customFields'];\r\n    control.push(this.initCustomFields());\r\n\r\n  }\r\n\r\n  // Todo: Check if this is still needed\r\n  private generateUUID() {\r\n    let d = new Date().getTime();\r\n    const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n      // tslint:disable-next-line: no-bitwise\r\n      const r = ((d + Math.random() * 16) % 16) | 0;\r\n      d = Math.floor(d / 16);\r\n      // tslint:disable-next-line: no-bitwise\r\n      return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\r\n    });\r\n    return uuid;\r\n  }\r\n\r\n  isSelectFieldDirty(c: FormControl): boolean {\r\n    const fieldId = c.value.id;\r\n    return this.invalidFieldTypeIndexes.find(item => item === fieldId) != null;\r\n  }\r\n\r\n  isNameFieldDirty(c: FormControl): boolean {\r\n    const fieldId = c.value.id;\r\n    return this.invalidFieldNameIndexes.find(item => item[0] === fieldId) != null;\r\n  }\r\n\r\n  GetNameFieldErrors(c: FormControl): string {\r\n    let res = '';\r\n    const fieldId = c.value.id;\r\n    const errorTuple = this.invalidFieldNameIndexes.find(x => x[0] === fieldId);\r\n    if (errorTuple != null){\r\n      res += errorTuple[1];\r\n    }\r\n    return res;\r\n  }\r\n\r\n  deleteRow(c: FormControl) {\r\n    const fieldId = c.value.id;\r\n    const index = this.customFields.findIndex(f => f.id === fieldId);\r\n    if (index !== -1) {\r\n      this.customFields.splice(index, 1);\r\n      const controlIndex = this.formArray.controls.findIndex(f => f.value.id === fieldId);\r\n      this.formArray.controls.splice(controlIndex, 1);\r\n    }\r\n    this.customFieldRemoved.emit(fieldId);\r\n  }\r\n\r\n}\r\n","import { SimpleChanges, OnInit, OnChanges, Input, Output, ViewChild, EventEmitter, Component } from '@angular/core';\r\nimport { TemplateService } from '../../../../services/template.service';\r\nimport { TranslatedComponent } from '../../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../../_core/i18n/translation-base-keys';\r\nimport { TemplateWizard } from '../../../../../_models/template-wizard.model';\r\nimport { NgForm } from '@angular/forms';\r\nimport { TemplateUpdateEvent } from '../../../../../_models/events/template-update-event.model';\r\nimport { OfficeDto } from '../../../../../_api/dtos/office.dto';\r\nimport { WizardService } from '../../../../../_ui/services/wizard.service';\r\nimport { ModuleDto } from '../../../../../_api/dtos/module.dto';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TemplateBaseDto } from '../../../../../_api/dtos/template-management/template-base.dto';\r\n\r\n@Component({\r\n  selector: 'app-template-builder-step1',\r\n  templateUrl: './template-builder-step1.component.html'\r\n})\r\nexport class TemplateBuilderStep1Component implements OnInit, OnChanges, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  errors: Object = {};\r\n  isSubmitting = false;\r\n  isDuplicate = false;\r\n\r\n  templateWizard: TemplateWizard;\r\n\r\n  form: NgForm;\r\n\r\n  @Input() template: TemplateBaseDto;\r\n  @Input() selectedModules: Array<ModuleDto>;\r\n  @Input() modules: Array<ModuleDto>;\r\n  @Input() offices: Array<OfficeDto>;\r\n  @Input() templates: Array<TemplateBaseDto>;\r\n\r\n  @Output() templateUpdated = new EventEmitter<TemplateUpdateEvent>();\r\n\r\n  @ViewChild('dataImportForm', { static: true }) currentForm: NgForm;\r\n\r\n\r\n  selectedModuleIds = new Array<string>();\r\n\r\n  constructor(\r\n    private templateService: TemplateService,\r\n    private wizardService: WizardService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.templateService.templateWizard$.subscribe(templateWizard => {\r\n      this.templateWizard = templateWizard;\r\n    });\r\n\r\n    this.currentForm.valueChanges.subscribe(() => {\r\n      this.templateService.templateFormDirty = this.currentForm.dirty;\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const s = this;\r\n    if (changes.selectedModules) {\r\n      const selectedModules = <Array<ModuleDto>>changes.selectedModules.currentValue;\r\n\r\n      this.selectedModuleIds = selectedModules.filter(c => !c.isRequired).map(c => c.id);\r\n    }\r\n  }\r\n\r\n  handleKeyDown(event: any) {\r\n    if (event.keyCode === 13) {\r\n      // TODO: This is to prevent the cancel button from being clicked on 'enter pressed'\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  onSubmit(form) {\r\n    if (this.isDuplicateName()) {\r\n      this.isDuplicate = true;\r\n    } else if (form.valid) {\r\n      this.isDuplicate = false;\r\n      const event = <TemplateUpdateEvent>{\r\n        selectedModuleIds: this.selectedModuleIds.concat(this.modules.filter(c => c.isRequired).map(c => c.id)),\r\n        template: this.template\r\n      };\r\n\r\n      this.templateUpdated.emit(event);\r\n\r\n      this.wizardService.setActiveTab('step-2');\r\n    }\r\n  }\r\n\r\n  onCancel(event: any) {\r\n    event.preventDefault();\r\n\r\n    if (!this.templateWizard.isEditingForGroup) {\r\n      this.router.navigateByUrl('/admin/templates');\r\n    } else {\r\n      this.router.navigate([`/project-profile/${this.templateWizard.groupId}/MainProfile`]);\r\n    }\r\n  }\r\n\r\n  onInputChange(event: any) {\r\n    if (this.isDuplicate) {\r\n      this.isDuplicate = false;\r\n    }\r\n  }\r\n\r\n  private isDuplicateName(): Boolean {\r\n    let res = false;\r\n    this.templates.forEach(existingTemplate => {\r\n      if (existingTemplate.name === this.template.name && existingTemplate.id !== this.template.id) {\r\n        res = true;\r\n        return;\r\n      }\r\n    });\r\n    return res;\r\n  }\r\n}\r\n","import { TemplateService } from '../../../../services/template.service';\r\n\r\nimport { TranslatedComponent } from '../../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../../_core/i18n/translation-base-keys';\r\nimport { OnChanges, Component, OnInit, Input, ViewChild, EventEmitter, Output, SimpleChanges } from '@angular/core';\r\nimport { TemplateFieldBaseDto } from '../../../../../_api/dtos/template-management/template-field-base.dto';\r\nimport { TemplateBaseDto } from '../../../../../_api/dtos/template-management/template-base.dto';\r\nimport { ModuleDto } from '../../../../../_api/dtos/module.dto';\r\nimport { NgForm } from '@angular/forms';\r\nimport { TemplateUpdateEvent } from '../../../../../_models/events/template-update-event.model';\r\nimport { WizardService } from '../../../../../_ui/services/wizard.service';\r\n\r\n@Component({\r\n  selector: 'app-template-builder-step2',\r\n  templateUrl: './template-builder-step2.component.html'\r\n})\r\nexport class TemplateBuilderStep2Component implements OnChanges, OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  errors: Object = {};\r\n  isSubmitting = false;\r\n  customFields: Array<TemplateFieldBaseDto> = new Array<TemplateFieldBaseDto>();\r\n  selectedModuleFieldIds = new Array<string>();\r\n\r\n  validCustomFields: Boolean = true;\r\n  invalidCustomFieldDataTypes: Array<string> = new Array<string>();\r\n  invalidCustomFieldNames: Array<[string, string]> = new Array<[string, string]>();\r\n\r\n  @Input() template: TemplateBaseDto;\r\n  @Input() modules: Array<ModuleDto>;\r\n  @Input() selectedModules: Array<ModuleDto>;\r\n\r\n  @ViewChild('dataImportForm', { static: true }) currentForm: NgForm;\r\n\r\n  @Output() templateUpdated = new EventEmitter<TemplateUpdateEvent>();\r\n  isEdit: boolean;\r\n  constructor(private templateService: TemplateService, private wizardService: WizardService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.currentForm.valueChanges.subscribe(() => {\r\n      this.templateService.templateFormDirty = this.currentForm.dirty;\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.isEdit = this.template.id !== undefined;\r\n\r\n    if (changes.selectedModules) {\r\n      const selectedModules = <Array<ModuleDto>>changes.selectedModules.currentValue;\r\n\r\n      this.selectedModules.forEach(selectedModule => {\r\n        const fields = this.template.templateFields\r\n          .filter(c => c.moduleId === selectedModule.id && !c.isCustomField)\r\n          .map(obj => obj.moduleFieldId);\r\n\r\n        if (fields) {\r\n          this.selectedModuleFieldIds[selectedModule.id] = fields;\r\n        }\r\n\r\n        // console.log(this.selectedModuleFieldIds);\r\n      });\r\n    }\r\n\r\n    // Init Custom Fields\r\n    this.template.templateFields.forEach(field => {\r\n      if (field.isCustomField) {\r\n        this.customFields.push(field);\r\n      }\r\n    });\r\n  }\r\n\r\n  handleKeyDown(event: any) {\r\n    if (event.keyCode === 13) {\r\n      // TODO: This is to prevent the cancel button from being clicked on 'enter pressed'\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  onSubmit(form) {\r\n    if (form.valid && this.validateCustomFields(true)) {\r\n      const selectedTemplateFields = new Array<TemplateFieldBaseDto>();\r\n\r\n      this.selectedModules.forEach(module => {\r\n        const enableOnlyModuleFields = module.moduleFields.filter(c => c.dataType === 'Module');\r\n\r\n        enableOnlyModuleFields.forEach(field => {\r\n          const enableOnlyField = <TemplateFieldBaseDto>{\r\n            id: field.id,\r\n            moduleId: field.moduleId,\r\n            name: field.name,\r\n            fieldType: field.dataType,\r\n            isRequired: field.isRequired,\r\n            order: field.order,\r\n            isCustomField: false,\r\n            moduleFieldId: field.id\r\n          };\r\n\r\n          selectedTemplateFields.push(enableOnlyField);\r\n        });\r\n\r\n        this.selectedModuleFieldIds[module.id].forEach(option => {\r\n          const matchedField = module.moduleFields.find(c => c.id === option);\r\n\r\n          if (matchedField) {\r\n            selectedTemplateFields.push(this.templateService.mapTemplateField(matchedField, module.id));\r\n          }\r\n        });\r\n\r\n        // Adding custom fields\r\n        this.customFields.forEach(field => {\r\n          if (field.moduleId === module.id) {\r\n            selectedTemplateFields.push(field);\r\n          }\r\n        });\r\n      });\r\n\r\n      const event = <TemplateUpdateEvent>{ templateFields: selectedTemplateFields };\r\n\r\n      this.templateUpdated.emit(event);\r\n\r\n      this.wizardService.setActiveTab('step-3');\r\n    }\r\n  }\r\n\r\n  addCustomField(fields: Array<TemplateFieldBaseDto>) {\r\n    if (fields.length > 0) {\r\n      fields.forEach(field => {\r\n        const current = this.customFields.find(c => c.id === field.id);\r\n        const index = this.customFields.indexOf(current);\r\n\r\n        if (index === -1) {\r\n          this.customFields.push(field);\r\n        } else {\r\n          this.customFields[index] = field;\r\n        }\r\n      });\r\n      this.validateCustomFields(false);\r\n    }\r\n  }\r\n\r\n  navigateBack(event) {\r\n    event.preventDefault();\r\n    this.wizardService.setActiveTab('step-1');\r\n  }\r\n\r\n  removeCustomField(fieldId: string) {\r\n    if (fieldId) {\r\n      const index = this.customFields.findIndex(i => i.id === fieldId);\r\n      if (index !== -1) { this.customFields.splice(index, 1); }\r\n    }\r\n  }\r\n\r\n  isModuleOnly(module: ModuleDto) {\r\n    return module.moduleFields.some(c => c.dataType === 'Module');\r\n  }\r\n\r\n  private validateCustomFields(isSubmission: boolean): Boolean {\r\n    const invalidDataTypeIndexes = new Array<string>();\r\n    const invalidNameIndexes = new Array<[string, string]>();\r\n\r\n    for (let i = 0; i < this.customFields.length; i++) {\r\n      const field = this.customFields[i];\r\n\r\n      if (field.fieldType === '' && isSubmission) {\r\n        invalidDataTypeIndexes.push(field.id);\r\n      }\r\n\r\n      if (isSubmission) {\r\n        let errors = '';\r\n        if (field.name === '') {\r\n          errors = 'Name is required.';\r\n        }\r\n        if (!this.isFieldNameUnique(field)) {\r\n          errors = 'Name must be unique.';\r\n        }\r\n        if (errors !== '') {\r\n          invalidNameIndexes.push([field.id, errors]);\r\n        }\r\n      }\r\n\r\n      if (this.invalidCustomFieldDataTypes.findIndex(a => a === field.id) !== -1 && !isSubmission) {\r\n        if (field.fieldType === '') {\r\n          invalidDataTypeIndexes.push(field.id);\r\n        }\r\n      }\r\n\r\n      if (this.invalidCustomFieldNames.findIndex(tuple => tuple[0] === field.id) !== -1 && !isSubmission) {\r\n        if (field.name === '') {\r\n          invalidNameIndexes.push([field.id, 'Name is required.']);\r\n        } else if (!this.isFieldNameUnique(field)) {\r\n          invalidNameIndexes.push([field.id, 'Name must be unique.']);\r\n        }\r\n      }\r\n    }\r\n    this.invalidCustomFieldDataTypes = invalidDataTypeIndexes;\r\n    this.invalidCustomFieldNames = invalidNameIndexes;\r\n    this.validCustomFields = this.invalidCustomFieldDataTypes.length === 0 && this.invalidCustomFieldNames.length === 0;\r\n    return this.validCustomFields;\r\n  }\r\n\r\n  private isFieldNameUnique(field: TemplateFieldBaseDto): boolean {\r\n    let isUnique = true;\r\n    const _module = this.modules.find(m => m.id === field.moduleId);\r\n\r\n    // Check Module's fields for uniqueness\r\n    for (let i = 0; i < _module.moduleFields.length; ++i) {\r\n        if (_module.moduleFields[i].name.toLowerCase().trim().replace(/ /g, '') === field.name.toLowerCase().trim().replace(/ /g, '')) {\r\n        return isUnique = false;\r\n      }\r\n    }\r\n\r\n\r\n    const fieldIndex = this.customFields.findIndex(i => i.id === field.id);\r\n    // Check custom field names\r\n    if (this.customFields && this.customFields.length > 0) {\r\n      for (let i = 0; i < this.customFields.length; i++) {\r\n        if (this.customFields[i].moduleId !== field.moduleId) { continue; }\r\n\r\n        if (this.customFields[i].id !== field.id) {\r\n          if (this.customFields[i].name === field.name && i < fieldIndex) {\r\n            isUnique = false;\r\n            break;\r\n          }\r\n          if (this.customFields[i].name.trim().replace(/ /g, '') === field.name.trim().replace(/ /g, '')) {\r\n            isUnique = false;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return isUnique;\r\n  }\r\n}\r\n","import { TemplateService } from '../../../../services/template.service';\r\nimport { TranslatedComponent } from '../../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { FormLayout } from '../../../../../_models/data-import/form-layout.model';\r\nimport { ModuleDto } from '../../../../../_api/dtos/module.dto';\r\nimport { NgForm } from '@angular/forms';\r\nimport { DragulaService } from 'ng2-dragula';\r\nimport { WizardService } from '../../../../../_ui/services/wizard.service';\r\nimport { TemplateBaseDto } from '../../../../../_api/dtos/template-management/template-base.dto';\r\n\r\n@Component({\r\n  selector: 'app-template-builder-step3',\r\n  templateUrl: './template-builder-step3.component.html'\r\n})\r\nexport class TemplateBuilderStep3Component implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  // Dragula Options\r\n  public options: any = {\r\n    invalid(el, handle) {\r\n      return el.tagname === 'H1';\r\n    }\r\n  };\r\n\r\n  public formLayouts: Array<Array<FormLayout>> = new Array<Array<FormLayout>>();\r\n\r\n  @Input() template: TemplateBaseDto = <TemplateBaseDto>{};\r\n  @Input() modules: Array<ModuleDto>;\r\n  @Input() selectedModules: Array<ModuleDto>;\r\n\r\n  @ViewChild('dataImportForm', { static: true }) currentForm: NgForm;\r\n\r\n  constructor(\r\n    private templateService: TemplateService,\r\n    private dragulaService: DragulaService,\r\n    private wizardService: WizardService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    console.log(this.template);\r\n\r\n    this.selectedModules.forEach(m => {\r\n      const selectedModuleFields = this.template.templateFields.filter(c => c.moduleId === m.id && c.name.length > 0);\r\n\r\n      this.formLayouts[m.id] = this.templateService.mapLayoutOrder(m.id, selectedModuleFields);\r\n      // console.log('Form Layout');\r\n      // console.log(this.formLayouts[m.id]);\r\n\r\n      this.templateService.selectedModules = this.selectedModules;\r\n      this.templateService.template = this.template;\r\n      this.templateService.currentFormLayout = this.formLayouts;\r\n    });\r\n\r\n    this.dragulaService.dropModel().subscribe(value => {\r\n      this.onDropModel(value.targetModel.slice(1));\r\n    });\r\n    this.dragulaService.removeModel().subscribe(value => {\r\n      this.onRemoveModel(value.sourceModel.slice(1));\r\n    });\r\n\r\n    // END NG UPGRADE TWEAK\r\n\r\n    this.currentForm.valueChanges.subscribe(() => {\r\n      this.templateService.templateFormDirty = this.currentForm.dirty;\r\n    });\r\n  }\r\n\r\n  handleKeyDown(event: any) {\r\n    if (event.keyCode === 13) {\r\n      // TODO: This is to prevent the cancel button from being clicked on 'enter pressed'\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  onSubmit(form) {\r\n    if (form.valid) {\r\n      this.templateService.saveLayout();\r\n      this.wizardService.setActiveTab('step-4');\r\n    }\r\n  }\r\n\r\n  isModuleOnly(module: ModuleDto) {\r\n    return module.moduleFields.some(c => c.dataType === 'Module');\r\n  }\r\n\r\n  navigateBack(event) {\r\n    event.preventDefault();\r\n    this.templateService.saveLayout();\r\n    this.wizardService.setActiveTab('step-2');\r\n  }\r\n\r\n  private onDropModel(args) {\r\n    const [el, target, source] = args;\r\n\r\n    this.templateService.templateFormDirty = true;\r\n\r\n    this.templateService.currentFormLayout = this.formLayouts;\r\n  }\r\n\r\n  private onRemoveModel(args) {\r\n    const [el, source] = args;\r\n  }\r\n}\r\n","import { TemplateService } from '../../../../services/template.service';\r\nimport { AlertService } from '../../../../../_core/services/alert.service';\r\nimport { TranslatedComponent } from '../../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { FormLayout } from '../../../../../_models/data-import/form-layout.model';\r\nimport { ModuleDto } from '../../../../../_api/dtos/module.dto';\r\nimport { TemplateWizard } from '../../../../../_models/template-wizard.model';\r\nimport { WizardService } from '../../../../../_ui/services/wizard.service';\r\nimport { Router } from '@angular/router';\r\nimport { TemplateBaseDto } from '../../../../../_api/dtos/template-management/template-base.dto';\r\n\r\n@Component({\r\n  selector: 'app-template-builder-step4',\r\n  templateUrl: './template-builder-step4.component.html'\r\n})\r\nexport class TemplateBuilderStep4Component implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  moduleMapping: Array<any>;\r\n  selectedFields: Array<any>;\r\n\r\n  public formLayouts: Array<FormLayout> = new Array<FormLayout>();\r\n\r\n  @Input() template: TemplateBaseDto = <TemplateBaseDto>{};\r\n  @Input() modules: Array<ModuleDto>;\r\n  @Input() selectedModules: Array<ModuleDto>;\r\n\r\n  templateWizard: TemplateWizard;\r\n\r\n  constructor(\r\n    private templateService: TemplateService,\r\n    private wizardService: WizardService,\r\n    private router: Router,\r\n    private alertService: AlertService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.templateService.templateWizard$.subscribe(templateWizard => {\r\n      this.templateWizard = templateWizard;\r\n    });\r\n\r\n    this.selectedModules.forEach(m => {\r\n      const selectedModuleFields = this.template.templateFields.filter(c => c.moduleId === m.id && c.name.length > 0);\r\n\r\n      this.formLayouts[m.id] = this.templateService.mapLayoutOrder(m.id, selectedModuleFields);\r\n\r\n      // console.log('Template ready to save');\r\n      // console.log(this.template);\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.templateService.save(this.template).subscribe(data => {\r\n      if (data === null) {\r\n        this.alertService.error('An error occurred while saving the template.');\r\n      } else {\r\n        if (!this.templateWizard.isEditingForGroup) {\r\n          this.templateService.templateFormDirty = false;\r\n\r\n          this.router.navigateByUrl('/admin/templates');\r\n          this.alertService.success('Template saved successfully!');\r\n        } else {\r\n          window.location.href = `/project-profile/${this.templateService.groupId}/MainProfile`;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  handleKeyDown(event: any) {\r\n    if (event.keyCode === 13) {\r\n      // TODO: This is to prevent the cancel button from being clicked on 'enter pressed'\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  navigateBack(event) {\r\n    event.preventDefault();\r\n    this.wizardService.setActiveTab('step-3');\r\n  }\r\n\r\n  isModuleOnly(module: ModuleDto) {\r\n    return module.moduleFields.some(c => c.dataType === 'Module');\r\n  }\r\n}\r\n","import { TemplateService } from '../../../services/template.service';\r\n\r\nimport { AlertService } from '../../../../_core/services/alert.service';\r\nimport { TemplateBuilderStep3Component } from './template-builder-step3/template-builder-step3.component';\r\nimport { NgbTabChangeEvent, NgbTabset } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ComponentCanDeactivate } from '../../../../_core/guards/component-can-deactivate';\r\nimport { CanDeactivateService } from '../../../../_core/guards/can-deactivate.service';\r\nimport { TranslatedComponent } from '../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../_core/i18n/translation-base-keys';\r\nimport { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { ModuleDto } from '../../../../_api/dtos/module.dto';\r\nimport { OfficeDto } from '../../../../_api/dtos/office.dto';\r\nimport { Subscription } from 'rxjs';\r\nimport { TemplateFieldBaseDto } from '../../../../_api/dtos/template-management/template-field-base.dto';\r\nimport { TemplateUpdateEvent } from '../../../../_models/events/template-update-event.model';\r\nimport { WizardService } from '../../../../_ui/services/wizard.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TemplateBaseDto } from '../../../../_api/dtos/template-management/template-base.dto';\r\n\r\n@Component({\r\n  selector: 'app-template-builder-wizard',\r\n  templateUrl: './template-builder-wizard.component.html'\r\n})\r\nexport class TemplateBuilderWizardComponent extends ComponentCanDeactivate implements OnDestroy, OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  @Input() editingTemplateForGroupId: string;\r\n  @Input() groupId: string;\r\n\r\n  modules: ModuleDto[] = new Array<ModuleDto>();\r\n  offices: OfficeDto[] = new Array<OfficeDto>();\r\n  subscription: Subscription;\r\n  nameSubscription: Subscription;\r\n  name = 'Create Template';\r\n\r\n  selectedModules: ModuleDto[] = new Array<ModuleDto>();\r\n  selectedModuleIds: string[] = new Array<string>();\r\n  template = <TemplateBaseDto>{ templateFields: new Array<TemplateFieldBaseDto>() };\r\n  templates: TemplateBaseDto[] = new Array<TemplateBaseDto>();\r\n  templateId: string;\r\n\r\n  isEditingForGroup = true;\r\n\r\n  @ViewChild('tabs', { static: false }) private tabsControl: NgbTabset;\r\n  @ViewChild('app-template-builder-step3', { static: false }) private step3CreateLayout: TemplateBuilderStep3Component;\r\n\r\n  constructor(\r\n    private wizardService: WizardService,\r\n    private route: ActivatedRoute,\r\n    router: Router,\r\n    private templateService: TemplateService,\r\n    private alertService: AlertService,\r\n    private canDeactivateService: CanDeactivateService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.wizardService.setActiveTab('step-1');\r\n\r\n    this.templateService.groupId = this.groupId;\r\n\r\n    this.templateService.layoutInProgress = new Array<TemplateFieldBaseDto>();\r\n    this.templateService.moduleWithCustomLayout = new Array<string>();\r\n\r\n    this.templateService.resetTemplateWizard();\r\n\r\n    this.isEditingForGroup = !!this.groupId && this.groupId.length > 0;\r\n\r\n    this.subscription = this.wizardService.activeTab$.subscribe(activeTab => {\r\n      // console.log(activeTab);\r\n\r\n      if (this.tabsControl) {\r\n        // Setting timeout to wait for tab to be set to enabled\r\n        setTimeout(() => {\r\n          this.tabsControl.select(activeTab);\r\n        }, 100);\r\n      }\r\n    });\r\n\r\n    this.templateService.getOffices().subscribe(offices => {\r\n      this.offices = offices;\r\n    });\r\n\r\n    this.templateService.getAll().subscribe(templates => {\r\n      this.templates = templates;\r\n    });\r\n\r\n    this.templateService.getModules().subscribe(modules => {\r\n      this.modules = modules;\r\n\r\n      this.modules.forEach(module => {\r\n        module.order = this.setOrder(module);\r\n        module.isRequired = this.templateService.requiredModules.some(c => c === module.name);\r\n      });\r\n\r\n      let templateId = '';\r\n      if (this.editingTemplateForGroupId) {\r\n        this.templateService.updateTemplateWizard(this.groupId);\r\n        templateId = this.editingTemplateForGroupId;\r\n      } else {\r\n        templateId = this.route.snapshot.paramMap.get('templateId');\r\n      }\r\n\r\n      this.name = templateId ? 'Edit Template' : 'Create Template';\r\n\r\n      // Retrieve template to edit\r\n      if (templateId) {\r\n        this.templateService.get(templateId).subscribe(template => {\r\n          this.template = template;\r\n\r\n          this.selectedModules = this.mapSelectedModules(template);\r\n\r\n          // console.log('Mapping template to edit');\r\n          // console.log(template.templateFields);\r\n\r\n          // Initialize saved layout\r\n          this.templateService.layoutInProgress = template.templateFields;\r\n          this.templateService.moduleWithCustomLayout = this.selectedModules.map(c => c.id);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // Autosave Layout on tab change\r\n  beforeChange($event: NgbTabChangeEvent) {\r\n    if ($event.activeId === 'step-3') {\r\n      this.templateService.saveLayout();\r\n    }\r\n  }\r\n\r\n  public isActive(activeTab) {\r\n    return this.wizardService.activeTabs.indexOf(activeTab) === -1;\r\n  }\r\n\r\n  canDeactivate(): boolean {\r\n    return this.canDeactivateService.canDeactivateComponent(this.templateService.templateFormDirty);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // unsubscribe to ensure no memory leaks\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onTemplateUpdated(event: TemplateUpdateEvent) {\r\n    // console.log(event);\r\n\r\n    if (event.template) {\r\n      this.template = event.template;\r\n    }\r\n    if (event.selectedModuleIds) {\r\n      this.selectedModules = new Array<ModuleDto>();\r\n\r\n      event.selectedModuleIds.forEach(moduleId => {\r\n        this.selectedModules.push(this.modules.find(c => c.id === moduleId));\r\n      });\r\n    }\r\n\r\n    if (event.templateFields) {\r\n      this.template.templateFields = event.templateFields;\r\n    }\r\n  }\r\n\r\n  setOrder(module: ModuleDto): number {\r\n    switch (module.name) {\r\n      case 'Main Profile':\r\n        return 1;\r\n      case 'Sub-Profile':\r\n        return 2;\r\n\r\n      case 'Data Import':\r\n        return 3;\r\n\r\n      case 'Reconciliation':\r\n        return 4;\r\n\r\n      case 'Trending':\r\n        return 5;\r\n\r\n        case 'Depreciation':\r\n        return 6;\r\n\r\n      case 'Task Management':\r\n        return 7;\r\n\r\n      case 'Quality Control ':\r\n        return 8;\r\n\r\n      case 'Administration':\r\n        return 9;\r\n\r\n      case 'Processing Instructions':\r\n        return 10;\r\n\r\n      case 'Shipping Instructions':\r\n        return 11;\r\n    }\r\n  }\r\n\r\n  private mapSelectedModules(template: TemplateBaseDto): Array<ModuleDto> {\r\n    const mappedSelectedModules = new Array<ModuleDto>();\r\n\r\n    if (template.templateFields.length > 0) {\r\n      const moduleIds = template.templateFields.map(c => c.moduleId).filter(function(elem, i, array) {\r\n        return array.indexOf(elem) === i;\r\n      });\r\n\r\n      moduleIds.forEach(moduleId => {\r\n        const index = this.modules.findIndex(c => c.id === moduleId);\r\n\r\n        mappedSelectedModules.push(this.modules[index]);\r\n      });\r\n    }\r\n\r\n    return mappedSelectedModules;\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { IntlService } from '@progress/kendo-angular-intl';\r\nimport { User } from '../../../_models/user.model';\r\n\r\n@Component({\r\n  selector: 'user-edit',\r\n  templateUrl: './user-edit.component.html'\r\n})\r\nexport class UserEditComponent implements OnInit {\r\n  @Input() user: User;\r\n\r\n  constructor(public intl: IntlService) {}\r\n\r\n  ngOnInit() {\r\n    this.user = new User();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'user-home',\r\n  templateUrl: './user-home.component.html'\r\n})\r\nexport class UserHomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { SelectionEvent, RowArgs } from '@progress/kendo-angular-grid';\r\nimport { testUsers } from './users';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { User } from '../../../_models/user.model';\r\n\r\n@Component({\r\n  selector: 'user-list',\r\n  templateUrl: './user-list.component.html'\r\n})\r\nexport class UserListComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  users: User[] = testUsers;\r\n  selectedRow:  number;\r\n  selectedUser: User;\r\n\r\n\r\n  constructor() {\r\n    this.selectedUser = testUsers[0];\r\n   }\r\n\r\n  ngOnInit() {\r\n   this.selectedRow = 0;\r\n\r\n  }\r\n\r\n  selectRow(event: SelectionEvent) {\r\n    this.selectedRow = 0;\r\n    this.selectedUser = event.selectedRows[0].dataItem;\r\n  }\r\n\r\n  public isRowSelected = (e: RowArgs) =>  e.index === this.selectedRow;\r\n\r\n  delete() {\r\n    this.users = [];\r\n  }\r\n}\r\n","export const testUsers = [\r\n  {\r\n    'Username': 'cwalters',\r\n    'Name': 'Chris Walters',\r\n    'Active': true,\r\n    'DateAdded': new Date(2017, 1, 25),\r\n    'Height': 70.5,\r\n    'DonationAmount': 25.50\r\n  },\r\n  {\r\n    'Username': 'jgarza',\r\n    'Name': 'Jessica Garza',\r\n    'Active': true,\r\n    'DateAdded': new Date(2016,12,29),\r\n    'Height': 74,\r\n    'DonationAmount': 10.75\r\n  },\r\n  {\r\n    'Username': 'triley',\r\n    'Name': 'Tiffany Riley',\r\n    'Active': false,\r\n    'DateAdded': new Date(2017,1,20),\r\n    'Height': 71.5,\r\n    'DonationAmount': 0\r\n  },\r\n  {\r\n    'Username': 'dfox',\r\n    'Name': 'Dylan Fox',\r\n    'Active': true,\r\n    'DateAdded': new Date(2017, 9, 30),\r\n    'Height': 68.3,\r\n    'DonationAmount': 2500.99\r\n  },\r\n  {\r\n    'Username': 'ginger',\r\n    'Name': 'Ginger Rayl',\r\n    'Active': true,\r\n    'DateAdded': new Date(2017, 8, 1),\r\n    'Height': 65.2,\r\n    'DonationAmount': 1050.50\r\n  }\r\n];\r\n\r\nexport const sampleProducts = [\r\n  {\r\n    'ProductID': 1,\r\n    'ProductName': 'Chai',\r\n    'SupplierID': 1,\r\n    'CategoryID': 1,\r\n    'QuantityPerUnit': '10 boxes x 20 bags',\r\n    'UnitPrice': 18,\r\n    'UnitsInStock': 39,\r\n    'UnitsOnOrder': 0,\r\n    'ReorderLevel': 10,\r\n    'Discontinued': false,\r\n    'Category': {\r\n      'CategoryID': 1,\r\n      'CategoryName': 'Beverages',\r\n      'Description': 'Soft drinks, coffees, teas, beers, and ales'\r\n    },\r\n    'FirstOrderedOn': new Date(1996, 8, 20)\r\n  },\r\n  {\r\n    'ProductID': 2,\r\n    'ProductName': 'Chang',\r\n    'SupplierID': 1,\r\n    'CategoryID': 1,\r\n    'QuantityPerUnit': '24 - 12 oz bottles',\r\n    'UnitPrice': 19,\r\n    'UnitsInStock': 17,\r\n    'UnitsOnOrder': 40,\r\n    'ReorderLevel': 25,\r\n    'Discontinued': false,\r\n    'Category': {\r\n      'CategoryID': 1,\r\n      'CategoryName': 'Beverages',\r\n      'Description': 'Soft drinks, coffees, teas, beers, and ales'\r\n    },\r\n    'FirstOrderedOn': new Date(1996, 7, 12)\r\n  },\r\n  {\r\n    'ProductID': 3,\r\n    'ProductName': 'Aniseed Syrup',\r\n    'SupplierID': 1,\r\n    'CategoryID': 2,\r\n    'QuantityPerUnit': '12 - 550 ml bottles',\r\n    'UnitPrice': 10,\r\n    'UnitsInStock': 13,\r\n    'UnitsOnOrder': 70,\r\n    'ReorderLevel': 25,\r\n    'Discontinued': false,\r\n    'Category': {\r\n      'CategoryID': 2,\r\n      'CategoryName': 'Condiments',\r\n      'Description': 'Sweet and savory sauces, relishes, spreads, and seasonings'\r\n    },\r\n    'FirstOrderedOn': new Date(1996, 8, 26)\r\n  },\r\n  {\r\n    'ProductID': 4,\r\n    'ProductName': 'Chef Anton\\'s Cajun Seasoning',\r\n    'SupplierID': 2,\r\n    'CategoryID': 2,\r\n    'QuantityPerUnit': '48 - 6 oz jars',\r\n    'UnitPrice': 22,\r\n    'UnitsInStock': 53,\r\n    'UnitsOnOrder': 0,\r\n    'ReorderLevel': 0,\r\n    'Discontinued': false,\r\n    'Category': {\r\n      'CategoryID': 2,\r\n      'CategoryName': 'Condiments',\r\n      'Description': 'Sweet and savory sauces, relishes, spreads, and seasonings'\r\n    },\r\n    'FirstOrderedOn': new Date(1996, 9, 19)\r\n  },\r\n  {\r\n    'ProductID': 5,\r\n    'ProductName': 'Chef Anton\\'s Gumbo Mix',\r\n    'SupplierID': 2,\r\n    'CategoryID': 2,\r\n    'QuantityPerUnit': '36 boxes',\r\n    'UnitPrice': 21.35,\r\n    'UnitsInStock': 0,\r\n    'UnitsOnOrder': 0,\r\n    'ReorderLevel': 0,\r\n    'Discontinued': true,\r\n    'Category': {\r\n      'CategoryID': 2,\r\n      'CategoryName': 'Condiments',\r\n      'Description': 'Sweet and savory sauces, relishes, spreads, and seasonings'\r\n    },\r\n    'FirstOrderedOn': new Date(1996, 7, 17)\r\n  },\r\n  {\r\n    'ProductID': 6,\r\n    'ProductName': 'Grandma\\'s Boysenberry Spread',\r\n    'SupplierID': 3,\r\n    'CategoryID': 2,\r\n    'QuantityPerUnit': '12 - 8 oz jars',\r\n    'UnitPrice': 25,\r\n    'UnitsInStock': 120,\r\n    'UnitsOnOrder': 0,\r\n    'ReorderLevel': 25,\r\n    'Discontinued': false,\r\n    'Category': {\r\n      'CategoryID': 2,\r\n      'CategoryName': 'Condiments',\r\n      'Description': 'Sweet and savory sauces, relishes, spreads, and seasonings'\r\n    },\r\n    'FirstOrderedOn': new Date(1996, 9, 19)\r\n  },\r\n  {\r\n    'ProductID': 7,\r\n    'ProductName': 'Uncle Bob\\'s Organic Dried Pears',\r\n    'SupplierID': 3,\r\n    'CategoryID': 7,\r\n    'QuantityPerUnit': '12 - 1 lb pkgs.',\r\n    'UnitPrice': 30,\r\n    'UnitsInStock': 15,\r\n    'UnitsOnOrder': 0,\r\n    'ReorderLevel': 10,\r\n    'Discontinued': false,\r\n    'Category': {\r\n      'CategoryID': 7,\r\n      'CategoryName': 'Produce',\r\n      'Description': 'Dried fruit and bean curd'\r\n    },\r\n    'FirstOrderedOn': new Date(1996, 7, 22)\r\n  },\r\n  {\r\n    'ProductID': 8,\r\n    'ProductName': 'Northwoods Cranberry Sauce',\r\n    'SupplierID': 3,\r\n    'CategoryID': 2,\r\n    'QuantityPerUnit': '12 - 12 oz jars',\r\n    'UnitPrice': 40,\r\n    'UnitsInStock': 6,\r\n    'UnitsOnOrder': 0,\r\n    'ReorderLevel': 0,\r\n    'Discontinued': false,\r\n    'Category': {\r\n      'CategoryID': 2,\r\n      'CategoryName': 'Condiments',\r\n      'Description': 'Sweet and savory sauces, relishes, spreads, and seasonings'\r\n    },\r\n    'FirstOrderedOn': new Date(1996, 11, 1)\r\n  },\r\n  {\r\n    'ProductID': 9,\r\n    'ProductName': 'Mishi Kobe Niku',\r\n    'SupplierID': 4,\r\n    'CategoryID': 6,\r\n    'QuantityPerUnit': '18 - 500 g pkgs.',\r\n    'UnitPrice': 97,\r\n    'UnitsInStock': 29,\r\n    'UnitsOnOrder': 0,\r\n    'ReorderLevel': 0,\r\n    'Discontinued': true,\r\n    'Category': {\r\n      'CategoryID': 6,\r\n      'CategoryName': 'Meat/Poultry',\r\n      'Description': 'Prepared meats'\r\n    },\r\n    'FirstOrderedOn': new Date(1997, 1, 21)\r\n  },\r\n  {\r\n    'ProductID': 10,\r\n    'ProductName': 'Ikura',\r\n    'SupplierID': 4,\r\n    'CategoryID': 8,\r\n    'QuantityPerUnit': '12 - 200 ml jars',\r\n    'UnitPrice': 31,\r\n    'UnitsInStock': 31,\r\n    'UnitsOnOrder': 0,\r\n    'ReorderLevel': 0,\r\n    'Discontinued': false,\r\n    'Category': {\r\n      'CategoryID': 8,\r\n      'CategoryName': 'Seafood',\r\n      'Description': 'Seaweed and fish'\r\n    },\r\n    'FirstOrderedOn': new Date(1996, 8, 5)\r\n  }\r\n];\r\n\r\nexport const products = [{\r\n  'ProductID': 1,\r\n  'ProductName': 'Chai',\r\n  'SupplierID': 1,\r\n  'CategoryID': 1,\r\n  'QuantityPerUnit': '10 boxes x 20 bags',\r\n  'UnitPrice': 18.0000,\r\n  'UnitsInStock': 39,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 10,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 1,\r\n    'CategoryName': 'Beverages',\r\n    'Description': 'Soft drinks, coffees, teas, beers, and ales'\r\n  }\r\n}, {\r\n  'ProductID': 2,\r\n  'ProductName': 'Chang',\r\n  'SupplierID': 1,\r\n  'CategoryID': 1,\r\n  'QuantityPerUnit': '24 - 12 oz bottles',\r\n  'UnitPrice': 19.0000,\r\n  'UnitsInStock': 17,\r\n  'UnitsOnOrder': 40,\r\n  'ReorderLevel': 25,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 1,\r\n    'CategoryName': 'Beverages',\r\n    'Description': 'Soft drinks, coffees, teas, beers, and ales'\r\n  }\r\n}, {\r\n  'ProductID': 3,\r\n  'ProductName': 'Aniseed Syrup',\r\n  'SupplierID': 1,\r\n  'CategoryID': 2,\r\n  'QuantityPerUnit': '12 - 550 ml bottles',\r\n  'UnitPrice': 10.0000,\r\n  'UnitsInStock': 13,\r\n  'UnitsOnOrder': 70,\r\n  'ReorderLevel': 25,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 2,\r\n    'CategoryName': 'Condiments',\r\n    'Description': 'Sweet and savory sauces, relishes, spreads, and seasonings'\r\n  }\r\n}, {\r\n  'ProductID': 4,\r\n  'ProductName': 'Chef Anton\\'s Cajun Seasoning',\r\n  'SupplierID': 2,\r\n  'CategoryID': 2,\r\n  'QuantityPerUnit': '48 - 6 oz jars',\r\n  'UnitPrice': 22.0000,\r\n  'UnitsInStock': 53,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 0,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 2,\r\n    'CategoryName': 'Condiments',\r\n    'Description': 'Sweet and savory sauces, relishes, spreads, and seasonings'\r\n  }\r\n}, {\r\n  'ProductID': 5,\r\n  'ProductName': 'Chef Anton\\'s Gumbo Mix',\r\n  'SupplierID': 2,\r\n  'CategoryID': 2,\r\n  'QuantityPerUnit': '36 boxes',\r\n  'UnitPrice': 21.3500,\r\n  'UnitsInStock': 0,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 0,\r\n  'Discontinued': true,\r\n  'Category': {\r\n    'CategoryID': 2,\r\n    'CategoryName': 'Condiments',\r\n    'Description': 'Sweet and savory sauces, relishes, spreads, and seasonings'\r\n  }\r\n}, {\r\n  'ProductID': 6,\r\n  'ProductName': 'Grandma\\'s Boysenberry Spread',\r\n  'SupplierID': 3,\r\n  'CategoryID': 2,\r\n  'QuantityPerUnit': '12 - 8 oz jars',\r\n  'UnitPrice': 25.0000,\r\n  'UnitsInStock': 120,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 25,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 2,\r\n    'CategoryName': 'Condiments',\r\n    'Description': 'Sweet and savory sauces, relishes, spreads, and seasonings'\r\n  }\r\n}, {\r\n  'ProductID': 7,\r\n  'ProductName': 'Uncle Bob\\'s Organic Dried Pears',\r\n  'SupplierID': 3,\r\n  'CategoryID': 7,\r\n  'QuantityPerUnit': '12 - 1 lb pkgs.',\r\n  'UnitPrice': 30.0000,\r\n  'UnitsInStock': 15,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 10,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 7,\r\n    'CategoryName': 'Produce',\r\n    'Description': 'Dried fruit and bean curd'\r\n  }\r\n}, {\r\n  'ProductID': 8,\r\n  'ProductName': 'Northwoods Cranberry Sauce',\r\n  'SupplierID': 3,\r\n  'CategoryID': 2,\r\n  'QuantityPerUnit': '12 - 12 oz jars',\r\n  'UnitPrice': 40.0000,\r\n  'UnitsInStock': 6,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 0,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 2,\r\n    'CategoryName': 'Condiments',\r\n    'Description': 'Sweet and savory sauces, relishes, spreads, and seasonings'\r\n  }\r\n}, {\r\n  'ProductID': 9,\r\n  'ProductName': 'Mishi Kobe Niku',\r\n  'SupplierID': 4,\r\n  'CategoryID': 6,\r\n  'QuantityPerUnit': '18 - 500 g pkgs.',\r\n  'UnitPrice': 97.0000,\r\n  'UnitsInStock': 29,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 0,\r\n  'Discontinued': true,\r\n  'Category': {\r\n    'CategoryID': 6,\r\n    'CategoryName': 'Meat/Poultry',\r\n    'Description': 'Prepared meats'\r\n  }\r\n}, {\r\n  'ProductID': 10,\r\n  'ProductName': 'Ikura',\r\n  'SupplierID': 4,\r\n  'CategoryID': 8,\r\n  'QuantityPerUnit': '12 - 200 ml jars',\r\n  'UnitPrice': 31.0000,\r\n  'UnitsInStock': 31,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 0,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 8,\r\n    'CategoryName': 'Seafood',\r\n    'Description': 'Seaweed and fish'\r\n  }\r\n}, {\r\n  'ProductID': 11,\r\n  'ProductName': 'Queso Cabrales',\r\n  'SupplierID': 5,\r\n  'CategoryID': 4,\r\n  'QuantityPerUnit': '1 kg pkg.',\r\n  'UnitPrice': 21.0000,\r\n  'UnitsInStock': 22,\r\n  'UnitsOnOrder': 30,\r\n  'ReorderLevel': 30,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 4,\r\n    'CategoryName': 'Dairy Products',\r\n    'Description': 'Cheeses'\r\n  }\r\n}, {\r\n  'ProductID': 12,\r\n  'ProductName': 'Queso Manchego La Pastora',\r\n  'SupplierID': 5,\r\n  'CategoryID': 4,\r\n  'QuantityPerUnit': '10 - 500 g pkgs.',\r\n  'UnitPrice': 38.0000,\r\n  'UnitsInStock': 86,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 0,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 4,\r\n    'CategoryName': 'Dairy Products',\r\n    'Description': 'Cheeses'\r\n  }\r\n}, {\r\n  'ProductID': 13,\r\n  'ProductName': 'Konbu',\r\n  'SupplierID': 6,\r\n  'CategoryID': 8,\r\n  'QuantityPerUnit': '2 kg box',\r\n  'UnitPrice': 6.0000,\r\n  'UnitsInStock': 24,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 5,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 8,\r\n    'CategoryName': 'Seafood',\r\n    'Description': 'Seaweed and fish'\r\n  }\r\n}, {\r\n  'ProductID': 14,\r\n  'ProductName': 'Tofu',\r\n  'SupplierID': 6,\r\n  'CategoryID': 7,\r\n  'QuantityPerUnit': '40 - 100 g pkgs.',\r\n  'UnitPrice': 23.2500,\r\n  'UnitsInStock': 35,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 0,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 7,\r\n    'CategoryName': 'Produce',\r\n    'Description': 'Dried fruit and bean curd'\r\n  }\r\n}, {\r\n  'ProductID': 15,\r\n  'ProductName': 'Genen Shouyu',\r\n  'SupplierID': 6,\r\n  'CategoryID': 2,\r\n  'QuantityPerUnit': '24 - 250 ml bottles',\r\n  'UnitPrice': 15.5000,\r\n  'UnitsInStock': 39,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 5,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 2,\r\n    'CategoryName': 'Condiments',\r\n    'Description': 'Sweet and savory sauces, relishes, spreads, and seasonings'\r\n  }\r\n}, {\r\n  'ProductID': 16,\r\n  'ProductName': 'Pavlova',\r\n  'SupplierID': 7,\r\n  'CategoryID': 3,\r\n  'QuantityPerUnit': '32 - 500 g boxes',\r\n  'UnitPrice': 17.4500,\r\n  'UnitsInStock': 29,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 10,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 3,\r\n    'CategoryName': 'Confections',\r\n    'Description': 'Desserts, candies, and sweet breads'\r\n  }\r\n}, {\r\n  'ProductID': 17,\r\n  'ProductName': 'Alice Mutton',\r\n  'SupplierID': 7,\r\n  'CategoryID': 6,\r\n  'QuantityPerUnit': '20 - 1 kg tins',\r\n  'UnitPrice': 39.0000,\r\n  'UnitsInStock': 0,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 0,\r\n  'Discontinued': true,\r\n  'Category': {\r\n    'CategoryID': 6,\r\n    'CategoryName': 'Meat/Poultry',\r\n    'Description': 'Prepared meats'\r\n  }\r\n}, {\r\n  'ProductID': 18,\r\n  'ProductName': 'Carnarvon Tigers',\r\n  'SupplierID': 7,\r\n  'CategoryID': 8,\r\n  'QuantityPerUnit': '16 kg pkg.',\r\n  'UnitPrice': 62.5000,\r\n  'UnitsInStock': 42,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 0,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 8,\r\n    'CategoryName': 'Seafood',\r\n    'Description': 'Seaweed and fish'\r\n  }\r\n}, {\r\n  'ProductID': 19,\r\n  'ProductName': 'Teatime Chocolate Biscuits',\r\n  'SupplierID': 8,\r\n  'CategoryID': 3,\r\n  'QuantityPerUnit': '10 boxes x 12 pieces',\r\n  'UnitPrice': 9.2000,\r\n  'UnitsInStock': 25,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 5,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 3,\r\n    'CategoryName': 'Confections',\r\n    'Description': 'Desserts, candies, and sweet breads'\r\n  }\r\n}, {\r\n  'ProductID': 20,\r\n  'ProductName': 'Sir Rodney\\'s Marmalade',\r\n  'SupplierID': 8,\r\n  'CategoryID': 3,\r\n  'QuantityPerUnit': '30 gift boxes',\r\n  'UnitPrice': 81.0000,\r\n  'UnitsInStock': 40,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 0,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 3,\r\n    'CategoryName': 'Confections',\r\n    'Description': 'Desserts, candies, and sweet breads'\r\n  }\r\n}, {\r\n  'ProductID': 21,\r\n  'ProductName': 'Sir Rodney\\'s Scones',\r\n  'SupplierID': 8,\r\n  'CategoryID': 3,\r\n  'QuantityPerUnit': '24 pkgs. x 4 pieces',\r\n  'UnitPrice': 10.0000,\r\n  'UnitsInStock': 3,\r\n  'UnitsOnOrder': 40,\r\n  'ReorderLevel': 5,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 3,\r\n    'CategoryName': 'Confections',\r\n    'Description': 'Desserts, candies, and sweet breads'\r\n  }\r\n}, {\r\n  'ProductID': 22,\r\n  'ProductName': 'Gustaf\\'s Knäckebröd',\r\n  'SupplierID': 9,\r\n  'CategoryID': 5,\r\n  'QuantityPerUnit': '24 - 500 g pkgs.',\r\n  'UnitPrice': 21.0000,\r\n  'UnitsInStock': 104,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 25,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 5,\r\n    'CategoryName': 'Grains/Cereals',\r\n    'Description': 'Breads, crackers, pasta, and cereal'\r\n  }\r\n}, {\r\n  'ProductID': 23,\r\n  'ProductName': 'Tunnbröd',\r\n  'SupplierID': 9,\r\n  'CategoryID': 5,\r\n  'QuantityPerUnit': '12 - 250 g pkgs.',\r\n  'UnitPrice': 9.0000,\r\n  'UnitsInStock': 61,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 25,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 5,\r\n    'CategoryName': 'Grains/Cereals',\r\n    'Description': 'Breads, crackers, pasta, and cereal'\r\n  }\r\n}, {\r\n  'ProductID': 24,\r\n  'ProductName': 'Guaraná Fantástica',\r\n  'SupplierID': 10,\r\n  'CategoryID': 1,\r\n  'QuantityPerUnit': '12 - 355 ml cans',\r\n  'UnitPrice': 4.5000,\r\n  'UnitsInStock': 20,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 0,\r\n  'Discontinued': true,\r\n  'Category': {\r\n    'CategoryID': 1,\r\n    'CategoryName': 'Beverages',\r\n    'Description': 'Soft drinks, coffees, teas, beers, and ales'\r\n  }\r\n}, {\r\n  'ProductID': 25,\r\n  'ProductName': 'NuNuCa Nuß-Nougat-Creme',\r\n  'SupplierID': 11,\r\n  'CategoryID': 3,\r\n  'QuantityPerUnit': '20 - 450 g glasses',\r\n  'UnitPrice': 14.0000,\r\n  'UnitsInStock': 76,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 30,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 3,\r\n    'CategoryName': 'Confections',\r\n    'Description': 'Desserts, candies, and sweet breads'\r\n  }\r\n}, {\r\n  'ProductID': 26,\r\n  'ProductName': 'Gumbär Gummibärchen',\r\n  'SupplierID': 11,\r\n  'CategoryID': 3,\r\n  'QuantityPerUnit': '100 - 250 g bags',\r\n  'UnitPrice': 31.2300,\r\n  'UnitsInStock': 15,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 0,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 3,\r\n    'CategoryName': 'Confections',\r\n    'Description': 'Desserts, candies, and sweet breads'\r\n  }\r\n}, {\r\n  'ProductID': 27,\r\n  'ProductName': 'Schoggi Schokolade',\r\n  'SupplierID': 11,\r\n  'CategoryID': 3,\r\n  'QuantityPerUnit': '100 - 100 g pieces',\r\n  'UnitPrice': 43.9000,\r\n  'UnitsInStock': 49,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 30,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 3,\r\n    'CategoryName': 'Confections',\r\n    'Description': 'Desserts, candies, and sweet breads'\r\n  }\r\n}, {\r\n  'ProductID': 28,\r\n  'ProductName': 'Rössle Sauerkraut',\r\n  'SupplierID': 12,\r\n  'CategoryID': 7,\r\n  'QuantityPerUnit': '25 - 825 g cans',\r\n  'UnitPrice': 45.6000,\r\n  'UnitsInStock': 26,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 0,\r\n  'Discontinued': true,\r\n  'Category': {\r\n    'CategoryID': 7,\r\n    'CategoryName': 'Produce',\r\n    'Description': 'Dried fruit and bean curd'\r\n  }\r\n}, {\r\n  'ProductID': 29,\r\n  'ProductName': 'Thüringer Rostbratwurst',\r\n  'SupplierID': 12,\r\n  'CategoryID': 6,\r\n  'QuantityPerUnit': '50 bags x 30 sausgs.',\r\n  'UnitPrice': 123.7900,\r\n  'UnitsInStock': 0,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 0,\r\n  'Discontinued': true,\r\n  'Category': {\r\n    'CategoryID': 6,\r\n    'CategoryName': 'Meat/Poultry',\r\n    'Description': 'Prepared meats'\r\n  }\r\n}, {\r\n  'ProductID': 30,\r\n  'ProductName': 'Nord-Ost Matjeshering',\r\n  'SupplierID': 13,\r\n  'CategoryID': 8,\r\n  'QuantityPerUnit': '10 - 200 g glasses',\r\n  'UnitPrice': 25.8900,\r\n  'UnitsInStock': 10,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 15,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 8,\r\n    'CategoryName': 'Seafood',\r\n    'Description': 'Seaweed and fish'\r\n  }\r\n}, {\r\n  'ProductID': 31,\r\n  'ProductName': 'Gorgonzola Telino',\r\n  'SupplierID': 14,\r\n  'CategoryID': 4,\r\n  'QuantityPerUnit': '12 - 100 g pkgs',\r\n  'UnitPrice': 12.5000,\r\n  'UnitsInStock': 0,\r\n  'UnitsOnOrder': 70,\r\n  'ReorderLevel': 20,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 4,\r\n    'CategoryName': 'Dairy Products',\r\n    'Description': 'Cheeses'\r\n  }\r\n}, {\r\n  'ProductID': 32,\r\n  'ProductName': 'Mascarpone Fabioli',\r\n  'SupplierID': 14,\r\n  'CategoryID': 4,\r\n  'QuantityPerUnit': '24 - 200 g pkgs.',\r\n  'UnitPrice': 32.0000,\r\n  'UnitsInStock': 9,\r\n  'UnitsOnOrder': 40,\r\n  'ReorderLevel': 25,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 4,\r\n    'CategoryName': 'Dairy Products',\r\n    'Description': 'Cheeses'\r\n  }\r\n}, {\r\n  'ProductID': 33,\r\n  'ProductName': 'Geitost',\r\n  'SupplierID': 15,\r\n  'CategoryID': 4,\r\n  'QuantityPerUnit': '500 g',\r\n  'UnitPrice': 2.5000,\r\n  'UnitsInStock': 112,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 20,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 4,\r\n    'CategoryName': 'Dairy Products',\r\n    'Description': 'Cheeses'\r\n  }\r\n}, {\r\n  'ProductID': 34,\r\n  'ProductName': 'Sasquatch Ale',\r\n  'SupplierID': 16,\r\n  'CategoryID': 1,\r\n  'QuantityPerUnit': '24 - 12 oz bottles',\r\n  'UnitPrice': 14.0000,\r\n  'UnitsInStock': 111,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 15,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 1,\r\n    'CategoryName': 'Beverages',\r\n    'Description': 'Soft drinks, coffees, teas, beers, and ales'\r\n  }\r\n}, {\r\n  'ProductID': 35,\r\n  'ProductName': 'Steeleye Stout',\r\n  'SupplierID': 16,\r\n  'CategoryID': 1,\r\n  'QuantityPerUnit': '24 - 12 oz bottles',\r\n  'UnitPrice': 18.0000,\r\n  'UnitsInStock': 20,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 15,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 1,\r\n    'CategoryName': 'Beverages',\r\n    'Description': 'Soft drinks, coffees, teas, beers, and ales'\r\n  }\r\n}, {\r\n  'ProductID': 36,\r\n  'ProductName': 'Inlagd Sill',\r\n  'SupplierID': 17,\r\n  'CategoryID': 8,\r\n  'QuantityPerUnit': '24 - 250 g  jars',\r\n  'UnitPrice': 19.0000,\r\n  'UnitsInStock': 112,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 20,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 8,\r\n    'CategoryName': 'Seafood',\r\n    'Description': 'Seaweed and fish'\r\n  }\r\n}, {\r\n  'ProductID': 37,\r\n  'ProductName': 'Gravad lax',\r\n  'SupplierID': 17,\r\n  'CategoryID': 8,\r\n  'QuantityPerUnit': '12 - 500 g pkgs.',\r\n  'UnitPrice': 26.0000,\r\n  'UnitsInStock': 11,\r\n  'UnitsOnOrder': 50,\r\n  'ReorderLevel': 25,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 8,\r\n    'CategoryName': 'Seafood',\r\n    'Description': 'Seaweed and fish'\r\n  }\r\n}, {\r\n  'ProductID': 38,\r\n  'ProductName': 'Côte de Blaye',\r\n  'SupplierID': 18,\r\n  'CategoryID': 1,\r\n  'QuantityPerUnit': '12 - 75 cl bottles',\r\n  'UnitPrice': 263.5000,\r\n  'UnitsInStock': 17,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 15,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 1,\r\n    'CategoryName': 'Beverages',\r\n    'Description': 'Soft drinks, coffees, teas, beers, and ales'\r\n  }\r\n}, {\r\n  'ProductID': 39,\r\n  'ProductName': 'Chartreuse verte',\r\n  'SupplierID': 18,\r\n  'CategoryID': 1,\r\n  'QuantityPerUnit': '750 cc per bottle',\r\n  'UnitPrice': 18.0000,\r\n  'UnitsInStock': 69,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 5,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 1,\r\n    'CategoryName': 'Beverages',\r\n    'Description': 'Soft drinks, coffees, teas, beers, and ales'\r\n  }\r\n}, {\r\n  'ProductID': 40,\r\n  'ProductName': 'Boston Crab Meat',\r\n  'SupplierID': 19,\r\n  'CategoryID': 8,\r\n  'QuantityPerUnit': '24 - 4 oz tins',\r\n  'UnitPrice': 18.4000,\r\n  'UnitsInStock': 123,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 30,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 8,\r\n    'CategoryName': 'Seafood',\r\n    'Description': 'Seaweed and fish'\r\n  }\r\n}, {\r\n  'ProductID': 41,\r\n  'ProductName': 'Jack\\'s New England Clam Chowder',\r\n  'SupplierID': 19,\r\n  'CategoryID': 8,\r\n  'QuantityPerUnit': '12 - 12 oz cans',\r\n  'UnitPrice': 9.6500,\r\n  'UnitsInStock': 85,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 10,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 8,\r\n    'CategoryName': 'Seafood',\r\n    'Description': 'Seaweed and fish'\r\n  }\r\n}, {\r\n  'ProductID': 42,\r\n  'ProductName': 'Singaporean Hokkien Fried Mee',\r\n  'SupplierID': 20,\r\n  'CategoryID': 5,\r\n  'QuantityPerUnit': '32 - 1 kg pkgs.',\r\n  'UnitPrice': 14.0000,\r\n  'UnitsInStock': 26,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 0,\r\n  'Discontinued': true,\r\n  'Category': {\r\n    'CategoryID': 5,\r\n    'CategoryName': 'Grains/Cereals',\r\n    'Description': 'Breads, crackers, pasta, and cereal'\r\n  }\r\n}, {\r\n  'ProductID': 43,\r\n  'ProductName': 'Ipoh Coffee',\r\n  'SupplierID': 20,\r\n  'CategoryID': 1,\r\n  'QuantityPerUnit': '16 - 500 g tins',\r\n  'UnitPrice': 46.0000,\r\n  'UnitsInStock': 17,\r\n  'UnitsOnOrder': 10,\r\n  'ReorderLevel': 25,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 1,\r\n    'CategoryName': 'Beverages',\r\n    'Description': 'Soft drinks, coffees, teas, beers, and ales'\r\n  }\r\n}, {\r\n  'ProductID': 44,\r\n  'ProductName': 'Gula Malacca',\r\n  'SupplierID': 20,\r\n  'CategoryID': 2,\r\n  'QuantityPerUnit': '20 - 2 kg bags',\r\n  'UnitPrice': 19.4500,\r\n  'UnitsInStock': 27,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 15,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 2,\r\n    'CategoryName': 'Condiments',\r\n    'Description': 'Sweet and savory sauces, relishes, spreads, and seasonings'\r\n  }\r\n}, {\r\n  'ProductID': 45,\r\n  'ProductName': 'Rogede sild',\r\n  'SupplierID': 21,\r\n  'CategoryID': 8,\r\n  'QuantityPerUnit': '1k pkg.',\r\n  'UnitPrice': 9.5000,\r\n  'UnitsInStock': 5,\r\n  'UnitsOnOrder': 70,\r\n  'ReorderLevel': 15,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 8,\r\n    'CategoryName': 'Seafood',\r\n    'Description': 'Seaweed and fish'\r\n  }\r\n}, {\r\n  'ProductID': 46,\r\n  'ProductName': 'Spegesild',\r\n  'SupplierID': 21,\r\n  'CategoryID': 8,\r\n  'QuantityPerUnit': '4 - 450 g glasses',\r\n  'UnitPrice': 12.0000,\r\n  'UnitsInStock': 95,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 0,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 8,\r\n    'CategoryName': 'Seafood',\r\n    'Description': 'Seaweed and fish'\r\n  }\r\n}, {\r\n  'ProductID': 47,\r\n  'ProductName': 'Zaanse koeken',\r\n  'SupplierID': 22,\r\n  'CategoryID': 3,\r\n  'QuantityPerUnit': '10 - 4 oz boxes',\r\n  'UnitPrice': 9.5000,\r\n  'UnitsInStock': 36,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 0,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 3,\r\n    'CategoryName': 'Confections',\r\n    'Description': 'Desserts, candies, and sweet breads'\r\n  }\r\n}, {\r\n  'ProductID': 48,\r\n  'ProductName': 'Chocolade',\r\n  'SupplierID': 22,\r\n  'CategoryID': 3,\r\n  'QuantityPerUnit': '10 pkgs.',\r\n  'UnitPrice': 12.7500,\r\n  'UnitsInStock': 15,\r\n  'UnitsOnOrder': 70,\r\n  'ReorderLevel': 25,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 3,\r\n    'CategoryName': 'Confections',\r\n    'Description': 'Desserts, candies, and sweet breads'\r\n  }\r\n}, {\r\n  'ProductID': 49,\r\n  'ProductName': 'Maxilaku',\r\n  'SupplierID': 23,\r\n  'CategoryID': 3,\r\n  'QuantityPerUnit': '24 - 50 g pkgs.',\r\n  'UnitPrice': 20.0000,\r\n  'UnitsInStock': 10,\r\n  'UnitsOnOrder': 60,\r\n  'ReorderLevel': 15,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 3,\r\n    'CategoryName': 'Confections',\r\n    'Description': 'Desserts, candies, and sweet breads'\r\n  }\r\n}, {\r\n  'ProductID': 50,\r\n  'ProductName': 'Valkoinen suklaa',\r\n  'SupplierID': 23,\r\n  'CategoryID': 3,\r\n  'QuantityPerUnit': '12 - 100 g bars',\r\n  'UnitPrice': 16.2500,\r\n  'UnitsInStock': 65,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 30,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 3,\r\n    'CategoryName': 'Confections',\r\n    'Description': 'Desserts, candies, and sweet breads'\r\n  }\r\n}, {\r\n  'ProductID': 51,\r\n  'ProductName': 'Manjimup Dried Apples',\r\n  'SupplierID': 24,\r\n  'CategoryID': 7,\r\n  'QuantityPerUnit': '50 - 300 g pkgs.',\r\n  'UnitPrice': 53.0000,\r\n  'UnitsInStock': 20,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 10,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 7,\r\n    'CategoryName': 'Produce',\r\n    'Description': 'Dried fruit and bean curd'\r\n  }\r\n}, {\r\n  'ProductID': 52,\r\n  'ProductName': 'Filo Mix',\r\n  'SupplierID': 24,\r\n  'CategoryID': 5,\r\n  'QuantityPerUnit': '16 - 2 kg boxes',\r\n  'UnitPrice': 7.0000,\r\n  'UnitsInStock': 38,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 25,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 5,\r\n    'CategoryName': 'Grains/Cereals',\r\n    'Description': 'Breads, crackers, pasta, and cereal'\r\n  }\r\n}, {\r\n  'ProductID': 53,\r\n  'ProductName': 'Perth Pasties',\r\n  'SupplierID': 24,\r\n  'CategoryID': 6,\r\n  'QuantityPerUnit': '48 pieces',\r\n  'UnitPrice': 32.8000,\r\n  'UnitsInStock': 0,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 0,\r\n  'Discontinued': true,\r\n  'Category': {\r\n    'CategoryID': 6,\r\n    'CategoryName': 'Meat/Poultry',\r\n    'Description': 'Prepared meats'\r\n  }\r\n}, {\r\n  'ProductID': 54,\r\n  'ProductName': 'Tourtière',\r\n  'SupplierID': 25,\r\n  'CategoryID': 6,\r\n  'QuantityPerUnit': '16 pies',\r\n  'UnitPrice': 7.4500,\r\n  'UnitsInStock': 21,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 10,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 6,\r\n    'CategoryName': 'Meat/Poultry',\r\n    'Description': 'Prepared meats'\r\n  }\r\n}, {\r\n  'ProductID': 55,\r\n  'ProductName': 'Pâté chinois',\r\n  'SupplierID': 25,\r\n  'CategoryID': 6,\r\n  'QuantityPerUnit': '24 boxes x 2 pies',\r\n  'UnitPrice': 24.0000,\r\n  'UnitsInStock': 115,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 20,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 6,\r\n    'CategoryName': 'Meat/Poultry',\r\n    'Description': 'Prepared meats'\r\n  }\r\n}, {\r\n  'ProductID': 56,\r\n  'ProductName': 'Gnocchi di nonna Alice',\r\n  'SupplierID': 26,\r\n  'CategoryID': 5,\r\n  'QuantityPerUnit': '24 - 250 g pkgs.',\r\n  'UnitPrice': 38.0000,\r\n  'UnitsInStock': 21,\r\n  'UnitsOnOrder': 10,\r\n  'ReorderLevel': 30,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 5,\r\n    'CategoryName': 'Grains/Cereals',\r\n    'Description': 'Breads, crackers, pasta, and cereal'\r\n  }\r\n}, {\r\n  'ProductID': 57,\r\n  'ProductName': 'Ravioli Angelo',\r\n  'SupplierID': 26,\r\n  'CategoryID': 5,\r\n  'QuantityPerUnit': '24 - 250 g pkgs.',\r\n  'UnitPrice': 19.5000,\r\n  'UnitsInStock': 36,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 20,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 5,\r\n    'CategoryName': 'Grains/Cereals',\r\n    'Description': 'Breads, crackers, pasta, and cereal'\r\n  }\r\n}, {\r\n  'ProductID': 58,\r\n  'ProductName': 'Escargots de Bourgogne',\r\n  'SupplierID': 27,\r\n  'CategoryID': 8,\r\n  'QuantityPerUnit': '24 pieces',\r\n  'UnitPrice': 13.2500,\r\n  'UnitsInStock': 62,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 20,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 8,\r\n    'CategoryName': 'Seafood',\r\n    'Description': 'Seaweed and fish'\r\n  }\r\n}, {\r\n  'ProductID': 59,\r\n  'ProductName': 'Raclette Courdavault',\r\n  'SupplierID': 28,\r\n  'CategoryID': 4,\r\n  'QuantityPerUnit': '5 kg pkg.',\r\n  'UnitPrice': 55.0000,\r\n  'UnitsInStock': 79,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 0,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 4,\r\n    'CategoryName': 'Dairy Products',\r\n    'Description': 'Cheeses'\r\n  }\r\n}, {\r\n  'ProductID': 60,\r\n  'ProductName': 'Camembert Pierrot',\r\n  'SupplierID': 28,\r\n  'CategoryID': 4,\r\n  'QuantityPerUnit': '15 - 300 g rounds',\r\n  'UnitPrice': 34.0000,\r\n  'UnitsInStock': 19,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 0,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 4,\r\n    'CategoryName': 'Dairy Products',\r\n    'Description': 'Cheeses'\r\n  }\r\n}, {\r\n  'ProductID': 61,\r\n  'ProductName': 'Sirop d\\'érable',\r\n  'SupplierID': 29,\r\n  'CategoryID': 2,\r\n  'QuantityPerUnit': '24 - 500 ml bottles',\r\n  'UnitPrice': 28.5000,\r\n  'UnitsInStock': 113,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 25,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 2,\r\n    'CategoryName': 'Condiments',\r\n    'Description': 'Sweet and savory sauces, relishes, spreads, and seasonings'\r\n  }\r\n}, {\r\n  'ProductID': 62,\r\n  'ProductName': 'Tarte au sucre',\r\n  'SupplierID': 29,\r\n  'CategoryID': 3,\r\n  'QuantityPerUnit': '48 pies',\r\n  'UnitPrice': 49.3000,\r\n  'UnitsInStock': 17,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 0,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 3,\r\n    'CategoryName': 'Confections',\r\n    'Description': 'Desserts, candies, and sweet breads'\r\n  }\r\n}, {\r\n  'ProductID': 63,\r\n  'ProductName': 'Vegie-spread',\r\n  'SupplierID': 7,\r\n  'CategoryID': 2,\r\n  'QuantityPerUnit': '15 - 625 g jars',\r\n  'UnitPrice': 43.9000,\r\n  'UnitsInStock': 24,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 5,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 2,\r\n    'CategoryName': 'Condiments',\r\n    'Description': 'Sweet and savory sauces, relishes, spreads, and seasonings'\r\n  }\r\n}, {\r\n  'ProductID': 64,\r\n  'ProductName': 'Wimmers gute Semmelknödel',\r\n  'SupplierID': 12,\r\n  'CategoryID': 5,\r\n  'QuantityPerUnit': '20 bags x 4 pieces',\r\n  'UnitPrice': 33.2500,\r\n  'UnitsInStock': 22,\r\n  'UnitsOnOrder': 80,\r\n  'ReorderLevel': 30,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 5,\r\n    'CategoryName': 'Grains/Cereals',\r\n    'Description': 'Breads, crackers, pasta, and cereal'\r\n  }\r\n}, {\r\n  'ProductID': 65,\r\n  'ProductName': 'Louisiana Fiery Hot Pepper Sauce',\r\n  'SupplierID': 2,\r\n  'CategoryID': 2,\r\n  'QuantityPerUnit': '32 - 8 oz bottles',\r\n  'UnitPrice': 21.0500,\r\n  'UnitsInStock': 76,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 0,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 2,\r\n    'CategoryName': 'Condiments',\r\n    'Description': 'Sweet and savory sauces, relishes, spreads, and seasonings'\r\n  }\r\n}, {\r\n  'ProductID': 66,\r\n  'ProductName': 'Louisiana Hot Spiced Okra',\r\n  'SupplierID': 2,\r\n  'CategoryID': 2,\r\n  'QuantityPerUnit': '24 - 8 oz jars',\r\n  'UnitPrice': 17.0000,\r\n  'UnitsInStock': 4,\r\n  'UnitsOnOrder': 100,\r\n  'ReorderLevel': 20,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 2,\r\n    'CategoryName': 'Condiments',\r\n    'Description': 'Sweet and savory sauces, relishes, spreads, and seasonings'\r\n  }\r\n}, {\r\n  'ProductID': 67,\r\n  'ProductName': 'Laughing Lumberjack Lager',\r\n  'SupplierID': 16,\r\n  'CategoryID': 1,\r\n  'QuantityPerUnit': '24 - 12 oz bottles',\r\n  'UnitPrice': 14.0000,\r\n  'UnitsInStock': 52,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 10,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 1,\r\n    'CategoryName': 'Beverages',\r\n    'Description': 'Soft drinks, coffees, teas, beers, and ales'\r\n  }\r\n}, {\r\n  'ProductID': 68,\r\n  'ProductName': 'Scottish Longbreads',\r\n  'SupplierID': 8,\r\n  'CategoryID': 3,\r\n  'QuantityPerUnit': '10 boxes x 8 pieces',\r\n  'UnitPrice': 12.5000,\r\n  'UnitsInStock': 6,\r\n  'UnitsOnOrder': 10,\r\n  'ReorderLevel': 15,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 3,\r\n    'CategoryName': 'Confections',\r\n    'Description': 'Desserts, candies, and sweet breads'\r\n  }\r\n}, {\r\n  'ProductID': 69,\r\n  'ProductName': 'Gudbrandsdalsost',\r\n  'SupplierID': 15,\r\n  'CategoryID': 4,\r\n  'QuantityPerUnit': '10 kg pkg.',\r\n  'UnitPrice': 36.0000,\r\n  'UnitsInStock': 26,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 15,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 4,\r\n    'CategoryName': 'Dairy Products',\r\n    'Description': 'Cheeses'\r\n  }\r\n}, {\r\n  'ProductID': 70,\r\n  'ProductName': 'Outback Lager',\r\n  'SupplierID': 7,\r\n  'CategoryID': 1,\r\n  'QuantityPerUnit': '24 - 355 ml bottles',\r\n  'UnitPrice': 15.0000,\r\n  'UnitsInStock': 15,\r\n  'UnitsOnOrder': 10,\r\n  'ReorderLevel': 30,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 1,\r\n    'CategoryName': 'Beverages',\r\n    'Description': 'Soft drinks, coffees, teas, beers, and ales'\r\n  }\r\n}, {\r\n  'ProductID': 71,\r\n  'ProductName': 'Flotemysost',\r\n  'SupplierID': 15,\r\n  'CategoryID': 4,\r\n  'QuantityPerUnit': '10 - 500 g pkgs.',\r\n  'UnitPrice': 21.5000,\r\n  'UnitsInStock': 26,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 0,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 4,\r\n    'CategoryName': 'Dairy Products',\r\n    'Description': 'Cheeses'\r\n  }\r\n}, {\r\n  'ProductID': 72,\r\n  'ProductName': 'Mozzarella di Giovanni',\r\n  'SupplierID': 14,\r\n  'CategoryID': 4,\r\n  'QuantityPerUnit': '24 - 200 g pkgs.',\r\n  'UnitPrice': 34.8000,\r\n  'UnitsInStock': 14,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 0,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 4,\r\n    'CategoryName': 'Dairy Products',\r\n    'Description': 'Cheeses'\r\n  }\r\n}, {\r\n  'ProductID': 73,\r\n  'ProductName': 'Röd Kaviar',\r\n  'SupplierID': 17,\r\n  'CategoryID': 8,\r\n  'QuantityPerUnit': '24 - 150 g jars',\r\n  'UnitPrice': 15.0000,\r\n  'UnitsInStock': 101,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 5,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 8,\r\n    'CategoryName': 'Seafood',\r\n    'Description': 'Seaweed and fish'\r\n  }\r\n}, {\r\n  'ProductID': 74,\r\n  'ProductName': 'Longlife Tofu',\r\n  'SupplierID': 4,\r\n  'CategoryID': 7,\r\n  'QuantityPerUnit': '5 kg pkg.',\r\n  'UnitPrice': 10.0000,\r\n  'UnitsInStock': 4,\r\n  'UnitsOnOrder': 20,\r\n  'ReorderLevel': 5,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 7,\r\n    'CategoryName': 'Produce',\r\n    'Description': 'Dried fruit and bean curd'\r\n  }\r\n}, {\r\n  'ProductID': 75,\r\n  'ProductName': 'Rhönbräu Klosterbier',\r\n  'SupplierID': 12,\r\n  'CategoryID': 1,\r\n  'QuantityPerUnit': '24 - 0.5 l bottles',\r\n  'UnitPrice': 7.7500,\r\n  'UnitsInStock': 125,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 25,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 1,\r\n    'CategoryName': 'Beverages',\r\n    'Description': 'Soft drinks, coffees, teas, beers, and ales'\r\n  }\r\n}, {\r\n  'ProductID': 76,\r\n  'ProductName': 'Lakkalikööri',\r\n  'SupplierID': 23,\r\n  'CategoryID': 1,\r\n  'QuantityPerUnit': '500 ml',\r\n  'UnitPrice': 18.0000,\r\n  'UnitsInStock': 57,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 20,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 1,\r\n    'CategoryName': 'Beverages',\r\n    'Description': 'Soft drinks, coffees, teas, beers, and ales'\r\n  }\r\n}, {\r\n  'ProductID': 77,\r\n  'ProductName': 'Original Frankfurter grüne Soße',\r\n  'SupplierID': 12,\r\n  'CategoryID': 2,\r\n  'QuantityPerUnit': '12 boxes',\r\n  'UnitPrice': 13.0000,\r\n  'UnitsInStock': 32,\r\n  'UnitsOnOrder': 0,\r\n  'ReorderLevel': 15,\r\n  'Discontinued': false,\r\n  'Category': {\r\n    'CategoryID': 2,\r\n    'CategoryName': 'Condiments',\r\n    'Description': 'Sweet and savory sauces, relishes, spreads, and seasonings'\r\n  }\r\n}];\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { GroupSave } from '../../_models/group-save.model';\r\nimport { GroupApiService } from '../../_api/_runtime/services/group-api.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { GroupSaveSortTermDto } from '../../_api/_runtime/dtos/group-save-sort-term.dto';\r\nimport { GroupSaveFilterTermDto } from '../../_api/_runtime/dtos/group-save-filter-term.dto';\r\nimport { ApiServiceResult } from '../../_api/dtos/api-service-result.dto';\r\n\r\n@Injectable()\r\nexport class GroupSaveService {\r\n  private savePointGridDataSource = new BehaviorSubject<Array<GroupSave>>(new Array<GroupSave>());\r\n  public savePointGridData$ = this.savePointGridDataSource.asObservable();\r\n  public dataTarget: number;\r\n\r\n  constructor(\r\n    private groupApiService: GroupApiService,\r\n    private route: ActivatedRoute,\r\n  ) {}\r\n\r\n  groupId: string;\r\n\r\n  public clearGroupSave() {\r\n    this.savePointGridDataSource.next(new Array<GroupSave>());\r\n  }\r\n\r\n  public updateGroupSaveData(\r\n    groupId: string,\r\n    skip: number,\r\n    take: number,\r\n    sortTerms: Array<GroupSaveSortTermDto> = new Array<GroupSaveSortTermDto>(),\r\n    filterTerms: Array<GroupSaveFilterTermDto> = new Array<GroupSaveFilterTermDto>()\r\n  ): Observable<Array<GroupSave>> {\r\n    this.groupId = groupId;\r\n    return this.getGroupSavePoints(this.groupId);\r\n  }\r\n\r\n  public getGroupSavePoints(groupId: string): Observable<Array<GroupSave>> {\r\n    return this.groupApiService.getGroupSavePoints(groupId);\r\n  }\r\n\r\n  public setGroupSavePoints(groupId: string, description: string): Observable<ApiServiceResult<GroupSave>> {\r\n    return this.groupApiService.setGroupSavePoint(groupId, description);\r\n  }\r\n\r\n  public restoreToSavePoint(request: GroupSave): Observable<string> {\r\n    return this.groupApiService.restoreToSavePoint(request, true);\r\n  }\r\n\r\n  public setSavePointGridDataSource(data: Array<GroupSave>): void {\r\n    this.savePointGridDataSource.next(data);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n///import { GroupApiService } from '../../_api/_runtime/services/group-api.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ApiServiceResult } from '../../_api/dtos/api-service-result.dto';\r\nimport { InventoryApiService } from '../../_api/_runtime/services/inventory-api.service';\r\n\r\n@Injectable()\r\nexport class RemoveDeactivatedService {\r\n  //private savePointGridDataSource = new BehaviorSubject<Array<GroupSave>>(new Array<GroupSave>());\r\n  //public savePointGridData$ = this.savePointGridDataSource.asObservable();\r\n  public dataTarget: number;\r\n\r\n  constructor(\r\n    //private groupApiService: GroupApiService,\r\n    private inventoryApiService: InventoryApiService,\r\n    private route: ActivatedRoute,\r\n  ) {}\r\n\r\n  groupId: string;\r\n\r\n  public RemoveDeactivatedItems(groupId: string, type: number, datatarget: string): Observable<any> {\r\n    return this.inventoryApiService.removeDeactivatedItems(groupId, type, datatarget);\r\n  }\r\n\r\n}\r\n","import { currencyDisplay } from '@telerik/kendo-intl/dist/es/main';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { TemplateWizard } from '../../_models/template-wizard.model';\r\nimport { TemplateRepositoryService } from '../../_api/services/admin/template-repository.service';\r\nimport { OfficeRepositoryService } from '../../_api/services/office-repository.service';\r\nimport { ModuleRepositoryService } from '../../_api/services/module-repository.service';\r\nimport { TemplateFieldBaseDto } from '../../_api/dtos/template-management/template-field-base.dto';\r\nimport { FormLayout } from '../../_models/data-import/form-layout.model';\r\nimport { ModuleDto } from '../../_api/dtos/module.dto';\r\nimport { TemplateBaseDto } from '../../_api/dtos/template-management/template-base.dto';\r\nimport { OfficeDto } from '../../_api/dtos/office.dto';\r\nimport { ModuleFieldDto } from '../../_api/dtos/module-field.dto';\r\nimport { SetTemplateIsRetiredDto } from '../../_api/dtos/template-management/set-template-isretired.dto';\r\n\r\n@Injectable()\r\nexport class TemplateService {\r\n  private templateWizardSource = new BehaviorSubject<TemplateWizard>(<TemplateWizard>{ isEditingForGroup: false });\r\n\r\n  public templateWizard$ = this.templateWizardSource.asObservable();\r\n\r\n  constructor(\r\n    private templateRepositoryService: TemplateRepositoryService,\r\n    private officeRepositoryService: OfficeRepositoryService,\r\n    private moduleRepositoryService: ModuleRepositoryService,\r\n  ) {}\r\n\r\n  layoutInProgress = new Array<TemplateFieldBaseDto>();\r\n  moduleWithCustomLayout = new Array<string>();\r\n\r\n  currentFormLayout: Array<Array<FormLayout>> = new Array<Array<FormLayout>>();\r\n\r\n  selectedModules: Array<ModuleDto>;\r\n  template: TemplateBaseDto;\r\n\r\n  templateFormDirty = false;\r\n\r\n  requiredModules = ['Main Profile'];\r\n\r\n  groupId: string;\r\n  getAll(): Observable<Array<TemplateBaseDto>> {\r\n    return this.templateRepositoryService.getAll();\r\n  }\r\n\r\n  get(id: string): Observable<any> {\r\n    return this.templateRepositoryService.get(id);\r\n  }\r\n\r\n  delete(id: string): Observable<any> {\r\n    return this.templateRepositoryService.delete(id);\r\n  }\r\n\r\n  clone(sourceTemplate: TemplateBaseDto): Observable<TemplateBaseDto> {\r\n    const clonedTemplate = <TemplateBaseDto>{\r\n      id: sourceTemplate.id,\r\n      officeId: sourceTemplate.officeId,\r\n      name: `Copy ${sourceTemplate.name} ${Date.now()}`,\r\n      isMasterTemplate: sourceTemplate.isMasterTemplate,\r\n      isRetired: sourceTemplate.isRetired,\r\n      sourceTemplateId: sourceTemplate.sourceTemplateId,\r\n      templateFields: sourceTemplate.templateFields\r\n    };\r\n\r\n    return this.templateRepositoryService.create(clonedTemplate);\r\n  }\r\n\r\n  getOffices(): Observable<Array<OfficeDto>> {\r\n    return this.officeRepositoryService.getAll();\r\n  }\r\n\r\n  getModules(): Observable<Array<ModuleDto>> {\r\n    return this.moduleRepositoryService.getAll();\r\n  }\r\n\r\n  save(template: TemplateBaseDto): Observable<TemplateBaseDto> {\r\n    // If we're updating an existing template\r\n    if (template.id) {\r\n      return this.templateRepositoryService.update(template);\r\n\r\n      // Otherwise, create a new template\r\n    } else {\r\n      return this.templateRepositoryService.create(template);\r\n    }\r\n  }\r\n\r\n  mapTemplateField(field: ModuleFieldDto, moduleId: string): TemplateFieldBaseDto {\r\n    return <TemplateFieldBaseDto>{\r\n      id: field.id,\r\n      moduleId: moduleId,\r\n      name: field.name,\r\n      isRequired: field.isRequired,\r\n      order: 0,\r\n      moduleFieldId: field.id\r\n    };\r\n  }\r\n\r\n  setIsRetired(templateId: string, isRetired: boolean): Observable<SetTemplateIsRetiredDto> {\r\n    const retire = isRetired ? 'true' : 'false';\r\n    return this.templateRepositoryService.retire(templateId, retire);\r\n  }\r\n\r\n  mapLayoutOrder(selectedModuleId: string, selectedFields: TemplateFieldBaseDto[]): FormLayout {\r\n    const index = this.layoutInProgress.findIndex(c => c.moduleId === selectedModuleId);\r\n\r\n    // Setting default order\r\n    if (index === -1) {\r\n      let count = 1;\r\n      selectedFields.forEach(field => {\r\n        field.order = field.isCustomField ? 0 : count;\r\n        count++;\r\n      });\r\n    } else {\r\n      selectedFields.forEach(field => {\r\n        const fieldIndex = selectedFields.findIndex(c => c.id === field.id);\r\n        const layoutIndex = this.layoutInProgress.findIndex(c => c.moduleFieldId === field.id);\r\n\r\n        if (layoutIndex !== -1) {\r\n          selectedFields[fieldIndex].order = this.layoutInProgress[layoutIndex].order;\r\n        }\r\n      });\r\n    }\r\n\r\n    const formLayout = <FormLayout>{\r\n      moduleId: selectedModuleId,\r\n      hasSelectedFields: selectedFields.length > 0,\r\n      customFieldsAvailable: selectedFields.filter(c => c.isCustomField),\r\n      evenOrderedFields: selectedFields\r\n        .filter(c => c.order % 2 === 0)\r\n        .sort((n1, n2) => n1.order - n2.order),\r\n      oddOrderedFields: selectedFields\r\n        .filter(c => c.order % 2 === 1)\r\n        .sort((n1, n2) => n1.order - n2.order)\r\n       \r\n    };\r\n\r\n    return formLayout;\r\n  }\r\n\r\n  saveLayout() {\r\n    this.selectedModules.forEach(module => {\r\n      const evenFields = this.currentFormLayout[module.id].evenOrderedFields;\r\n      const oddFields = this.currentFormLayout[module.id].oddOrderedFields;\r\n\r\n      // Saving selected order\r\n\r\n      // Even order number fields\r\n      let count = 2;\r\n      evenFields.forEach(element => {\r\n        const index = this.template.templateFields.findIndex(c => c.id === element.id);\r\n        if (index !== -1) {\r\n          this.template.templateFields[index].order = count;\r\n        }\r\n        count = count + 1;\r\n      });\r\n      // Odd order number fields\r\n      count = 1;\r\n      oddFields.forEach(element => {\r\n        const index = this.template.templateFields.findIndex(c => c.id === element.id);\r\n        if (index !== -1) {\r\n          this.template.templateFields[index].order = count;\r\n        }\r\n\r\n        count = count + 1;\r\n      });\r\n    });\r\n       this.layoutInProgress = this.template.templateFields;\r\n  }\r\n\r\n  updateTemplateWizard(groupId: string): void {\r\n    const current = this.templateWizardSource.getValue();\r\n\r\n    current.isEditingForGroup = groupId.length > 0;\r\n    current.groupId = groupId;\r\n    this.templateWizardSource.next(current);\r\n  }\r\n\r\n  resetTemplateWizard(): void {\r\n    this.templateWizardSource.next(<TemplateWizard>{ isEditingForGroup: false });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjbGllbnQtc3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyJ9 */\"","import { UserStore } from './_core/user/user.store';\r\nimport { AuthenticationManager } from './_core/authentication/authentication.manager';\r\nimport { WindowManager } from './_core/services/window-manager.service';\r\nimport { ApiService } from './_api/services/api.service';\r\nimport { IdleTimeoutService } from './_core/services/idle-timeout.service';\r\nimport { ConfirmModalComponent } from './_shared/components/confirm-modal.component';\r\nimport { Component, OnInit, ViewContainerRef, LOCALE_ID, Inject, HostListener } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  languageLoaded = false;\r\n\r\n  isBusy = false;\r\n\r\n  userIsActive = undefined;\r\n\r\n  isAuthError = undefined;\r\n  \r\n  constructor(\r\n    private authenticationManager: AuthenticationManager,\r\n    private configService: ConfigService,\r\n    private userStore: UserStore,\r\n    private translate: TranslateService,\r\n    private container: ViewContainerRef,\r\n    private windowManager: WindowManager,\r\n    @Inject(LOCALE_ID) protected localeId: string,\r\n    private apiService: ApiService,\r\n    private _idleTimeoutService: IdleTimeoutService,\r\n    private modalService: NgbModal\r\n  ) {}\r\n\r\n  @HostListener('window:scroll', ['$event'])\r\n  doSomething(event) {\r\n\r\n    // Prevent the page from scrolling to the bottom once a modal is opened.\r\n    if (this.windowManager.isOpened()) {\r\n      scrollTo(0, this.windowManager.scrollPosition);\r\n    }\r\n    this.windowManager.scrollPosition = window.pageYOffset;\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const s = this;\r\n\r\n    this.userStore.user.subscribe(user => {\r\n      if (user) {\r\n        this.userIsActive = user.permissions.permissionsGranted.length > 0;\r\n      }\r\n    });\r\n\r\n    this.apiService.isBusy$.subscribe(isBusy => {\r\n      this.isBusy = isBusy.length > 0;\r\n    }, error => {\r\n      this.isBusy = false;\r\n    }, () => {\r\n      this.isBusy = false;\r\n    });\r\n\r\n    this.windowManager.viewContainerRef = this.container;\r\n\r\n    this.translate.setDefaultLang(this.configService.getSettings('defaultLanguage'));\r\n    this.translate.use(this.configService.getSettings('defaultLanguage'));\r\n\r\n    this.translate.onLangChange.subscribe(result => {\r\n\r\n      this.languageLoaded = true;\r\n\r\n    });\r\n\r\n\r\n    this.translate.setDefaultLang(this.configService.getSettings('defaultLanguage'));\r\n\r\n    this._idleTimeoutService.initialise();\r\n    this.userStore.initializeAuthentication();\r\n    this.authenticationManager.processAdalToken();\r\n\r\n    this.authenticationManager.error.subscribe(errror=>\r\n      {\r\n        if(errror && errror.status == 403)\r\n        {\r\n    this.isAuthError = true;\r\n        }\r\n        else \r\n        {\r\n          this.isAuthError = false;\r\n        }\r\n      });\r\n\r\n    this._idleTimeoutService.PromptUserSessionEvent.subscribe((expireSeconds: number) => {\r\n      const modal = this.modalService.open(ConfirmModalComponent);\r\n      const modalOptions = this._idleTimeoutService.GetSessionTimeouModalOptions(expireSeconds);\r\n      modal.componentInstance.options = modalOptions;\r\n      modal.result.then(\r\n        confirm => {\r\n          this._idleTimeoutService.HandleExtendResult(true);\r\n      },\r\n      cancel => {this._idleTimeoutService.HandleExtendResult(false);\r\n      });\r\n    });\r\n  }\r\n}\r\n","// Components\r\nimport { DashboardComponent } from './dashboard/components/dashboard.component';\r\nimport { ProjectProfileComponent } from './project-profile/components/project-profile.component';\r\nimport { ReconciliationFormComponent } from './reconciliation/components/reconciliation-form.component';\r\nimport { TemplateFormComponent } from './project-profile/components/template-form.component';\r\nimport { SetupComponent } from './reconciliation/components/setup.component';\r\nimport { ReconcileDataComponent } from './reconciliation/components/reconcile-data.component';\r\nimport { RulesGuard } from './_core/guards/rules-guard.service';\r\nimport { UserListComponent } from './admin/components/user/user-list.component';\r\nimport { TemplateManagementComponent } from './admin/components/template/template-management.component';\r\nimport { ConfigLoader, ConfigStaticLoader } from '@ngx-config/core';\r\nimport { ConfigHttpLoader } from '@ngx-config/http-loader';\r\nimport { environment } from '../environments/environment';\r\nimport { DashboardHomeComponent } from './dashboard/components/dashboard-home.component';\r\nimport { NotFoundComponent } from './error/not-found.component';\r\nimport { UnauthorizedComponent } from './error/unauthorized.component';\r\nimport { AccessDeniedComponent } from './error/access-denied.component';\r\nimport { InternalServerErrorComponent } from './error/internal-server-error.component';\r\nimport { AdminHomeComponent } from './admin/components/admin-home.component';\r\nimport { TeamHomeComponent } from './admin/components/team/team-home.component';\r\nimport { TemplateBuilderWizardComponent } from './admin/components/template/wizard/template-builder-wizard.component';\r\nimport { DataImportParentComponent } from './data-import/components/data-import-parent.component';\r\nimport { TaskManagementComponent } from './project-profile/components/tasks/task-management.component';\r\nimport { MassMatchComponent } from './reconciliation/components/mass-match/mass-match.component';\r\nimport { DefineLayoutComponent } from './reconciliation/components/define-layout.component';\r\nimport { MapMatchCodesComponent } from './reconciliation/components/map-matchcodes.component';\r\nimport { ViewMatchesComponent } from './reconciliation/components/mass-match/view-matches.component';\r\nimport { FinalizeDataComponent } from './reconciliation/components/finalize-data.component';\r\nimport { AdministrationComponent } from './project-profile/components/administration/administration.component';\r\nimport { TrendingSummaryComponent } from './processing/trending/components/trending-summary.component';\r\nimport { TrendingFormComponent } from './processing/trending/components/trending-form.component';\r\nimport { TrendingSetupComponent } from './processing/trending/components/trending-setup.component';\r\nimport { DepreciationSummaryComponent } from './processing/depreciation/components/depreciation-summary.component';\r\nimport { DepreciationFormComponent } from './processing/depreciation/components/depreciation-form.component';\r\nimport { DepreciationSetupComponent } from './processing/depreciation/components/depreciation-setup.component';\r\nimport { GroupManagementComponent } from './groups/components/group-management.component';\r\nimport { EditGroupTemplateComponent } from './groups/components/edit-group-template.component';\r\nimport { GroupManagementFormComponent } from './groups/components/group-management-form.component';\r\nimport { QualityControlComponent } from './quality-control/components/quality-control.component';\r\nimport { MassUpdateFormComponent } from './quality-control/components/mass-update/mass-update-form.component';\r\nimport { MassUpdateCriteriaComponent } from './quality-control/components/mass-update/mass-update-criteria.component';\r\nimport { MassUpdateResultsComponent } from './quality-control/components/mass-update/mass-update-results.component';\r\nimport { QualityControlFormComponent } from './quality-control/components/quality-control-form.component';\r\nimport { DuplicateCheckComponent } from './quality-control/components/duplicate-check/duplicate-check.component';\r\nimport { AddContentComponent } from './quality-control/components/content/actions/add-content.component';\r\n\r\nimport { HeaderManagementComponent } from './header-management/components/header-management.component';\r\nimport { PortalManagementComponent } from './portal-management/components/portal-management.component';\r\nimport { AdministrationFormComponent } from './project-profile/components/administration/administration-form.component';\r\nimport { TransactionsGridComponent } from './transactions/components/transactions-grid.component';\r\nimport { EditContentComponent } from './quality-control/components/content/actions/edit-content.component';\r\nimport { MassUpdateContentComponent } from './quality-control/components/content/actions/mass-update-content.component';\r\nimport { MassUpdateBuildingComponent } from './quality-control/components/building/actions/mass-update-building.component';\r\nimport { RecipientsGridComponent } from './recipients/components/recipients-grid.component';\r\nimport { ConflictServerErrorComponent } from './error/conflict-transaction-error.component';\r\nimport { RecipientsComponent } from './recipients/components/recipients.component';\r\nimport { GroupSaveComponent } from './admin/components/group-saves/group-save.component';\r\nimport { CanDeactivateGuard } from './_core/guards/can-deactivate-guard.service';\r\nimport { AuthGuard } from './_core/authentication/auth-guard';\r\nimport { HomeComponent } from './home.component';\r\nimport { SystemPermissionsEnum } from './_core/user/permissions';\r\nimport { CanAccessGuard } from './_core/authentication/can-access.guard';\r\nimport { ViewContentComponent } from './quality-control/components/content/actions/view-content.component';\r\nimport { ReportsComponent } from './reports/components/reports.component';\r\nimport { ReportsDeliverablesComponent } from './reports/components/reports-deliverables.component';\r\nimport { FileUploadComponent } from './file-upload/components/file-upload/file-upload.component';\r\nimport { UpsertBuildingComponent } from './quality-control/components/building/form/building-form.component';\r\nimport { Routes } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SupportComponent } from './support/components/support.component';\r\nimport { RemoveDeactivatedComponent } from './admin/components/remove-deactivated/remove-deactivated.component';\r\n\r\nconst systemPermissionsEnum = SystemPermissionsEnum;\r\n\r\nexport const routeConfig: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: 'dashboard/all-projects' },\r\n  {\r\n    path: '',\r\n    component: HomeComponent,\r\n    children: [\r\n      {\r\n        path: 'dashboard',\r\n        component: DashboardHomeComponent,\r\n        children: [\r\n          {\r\n            path: '',\r\n            redirectTo: 'all-projects',\r\n            pathMatch: 'full'\r\n          },\r\n          {\r\n            path: 'all-projects',\r\n            component: DashboardComponent\r\n          }\r\n        ]\r\n      },\r\n      /* Going further, please add any error code routes that need Translation Service injection\r\n         into their components, to perform translations in here as a child to the HomeComponent,\r\n         where we don't need any of the user or group context data to render the error.\r\n         Why? The injection fails, otherwise.\r\n      */\r\n      {\r\n        path: 'error/409',\r\n        component: ConflictServerErrorComponent\r\n      },\r\n      {\r\n        path: 'portal-management',\r\n        component: PortalManagementComponent,\r\n        canActivate: [CanAccessGuard],\r\n        data: { permissions: [systemPermissionsEnum.canManagePortal] }\r\n      },\r\n      {\r\n        path: 'Admin',\r\n        component: AdminHomeComponent,\r\n        children: [\r\n          {\r\n            path: 'users',\r\n            component: UserListComponent\r\n          },\r\n          {\r\n            path: 'teams',\r\n            component: TeamHomeComponent\r\n          },\r\n          {\r\n            path: 'template-builder/:templateId',\r\n            component: TemplateBuilderWizardComponent\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: 'project-profile/:groupId',\r\n        component: ProjectProfileComponent,\r\n        children: [\r\n          {\r\n            path: '',\r\n            component: TemplateFormComponent\r\n          },\r\n          {\r\n            path: 'Reconciliation',\r\n            canDeactivate: [CanDeactivateGuard],\r\n            component: ReconciliationFormComponent,\r\n            children: [\r\n              { path: '', component: SetupComponent, canDeactivate: [CanDeactivateGuard, RulesGuard] },\r\n              { path: 'setup', component: SetupComponent, canDeactivate: [CanDeactivateGuard, RulesGuard] },\r\n              { path: 'reconcile-data', component: ReconcileDataComponent, canDeactivate: [CanDeactivateGuard] },\r\n              { path: 'mass-match', component: MassMatchComponent },\r\n              { path: 'view-matches', component: ViewMatchesComponent },\r\n              { path: 'define-layout', component: DefineLayoutComponent, canDeactivate: [CanDeactivateGuard] },\r\n              { path: 'finalize-data', component: FinalizeDataComponent },\r\n              { path: 'map-matchcodes', component: MapMatchCodesComponent, canDeactivate: [CanDeactivateGuard] },\r\n              { path: 'mass-match', component: MassMatchComponent }\r\n            ]\r\n          },\r\n          {\r\n            path: 'TaskManagement',\r\n            component: TaskManagementComponent\r\n          },\r\n          {\r\n            path: 'Trending',\r\n            component: TrendingFormComponent,\r\n            children: [\r\n              { path: '', component: TrendingSetupComponent },\r\n              { path: 'Setup', component: TrendingSetupComponent },\r\n              { path: 'Summary', component: TrendingSummaryComponent }\r\n            ]\r\n          },\r\n          {\r\n            path: 'Depreciation',\r\n            component: DepreciationFormComponent,\r\n            children: [\r\n              { path: '', component: DepreciationSetupComponent },\r\n              { path: 'Setup', component: DepreciationSetupComponent },\r\n              { path: 'Summary', component: DepreciationSummaryComponent }\r\n            ]\r\n          },\r\n          {\r\n            path: 'DataImport',\r\n            component: DataImportParentComponent\r\n          },\r\n          {\r\n            path: 'Administration',\r\n            component: AdministrationFormComponent,\r\n            children: [\r\n              {\r\n                path: '',\r\n                component: AdministrationComponent\r\n              },\r\n              {\r\n                path: 'Transactions',\r\n                component: TransactionsGridComponent\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            path: 'group-save',\r\n            component: GroupSaveComponent\r\n          },\r\n          {\r\n            path: 'remove-deactivated',\r\n            component: RemoveDeactivatedComponent\r\n          },\r\n          {\r\n            path: 'Groups',\r\n            component: GroupManagementFormComponent,\r\n            children: [\r\n              { path: '', component: GroupManagementComponent },\r\n              { path: 'Management', component: GroupManagementComponent },\r\n              {\r\n                path: 'EditForms',\r\n                component: EditGroupTemplateComponent,\r\n                canActivate: [CanAccessGuard],\r\n                data: { permissions: [systemPermissionsEnum.canManageTemplates] }\r\n              }\r\n            ],\r\n            canActivate: [CanAccessGuard],\r\n            data: { permissions: [systemPermissionsEnum.canWriteData] }\r\n          },\r\n          {\r\n            path: 'QualityControl',\r\n            component: QualityControlComponent,\r\n            canDeactivate: [CanDeactivateGuard],\r\n            data: { title: 'Quality Control' },\r\n            children: [\r\n              { path: '', component: QualityControlFormComponent },\r\n              { path: 'AddContent', component: AddContentComponent, canDeactivate: [CanDeactivateGuard], data: { title: 'Add Content' } },\r\n              {\r\n                path: 'EditContent/:contentId',\r\n                component: EditContentComponent,\r\n                canDeactivate: [CanDeactivateGuard],\r\n                data: { title: 'Edit Content' }\r\n              },\r\n              { path: 'ViewContent/:contentId', component: ViewContentComponent, canDeactivate: [CanDeactivateGuard] },\r\n              {\r\n                path: 'AddBuilding',\r\n                component: UpsertBuildingComponent,\r\n                canDeactivate: [CanDeactivateGuard],\r\n                data: { title: 'Add Building' }\r\n              },\r\n              {\r\n                path: 'EditBuilding/:buildingId',\r\n                component: UpsertBuildingComponent,\r\n                canDeactivate: [CanDeactivateGuard],\r\n                data: { title: 'Edit Building' }\r\n              },\r\n              { path: 'ViewBuilding/:buildingId', component: UpsertBuildingComponent, canDeactivate: [CanDeactivateGuard] },\r\n              {\r\n                path: 'MassUpdate',\r\n                component: MassUpdateFormComponent,\r\n                data: { title: 'Mass Update' },\r\n                children: [\r\n                  { path: '', component: MassUpdateCriteriaComponent, data: { title: 'Mass Update' } },\r\n                  { path: 'Content', component: MassUpdateContentComponent, data: { title: 'Mass Update' } },\r\n                  { path: 'Building', component: MassUpdateBuildingComponent, data: { title: 'Mass Update' } },\r\n                  { path: 'Criteria', component: MassUpdateCriteriaComponent, data: { title: 'Mass Update' } },\r\n                  { path: 'Results', component: MassUpdateResultsComponent, data: { title: 'Mass Update' } }\r\n                ]\r\n              },\r\n              {\r\n                path: 'DuplicateCheck',\r\n                component: DuplicateCheckComponent\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            path: 'HeaderManagement',\r\n            component: HeaderManagementComponent\r\n          },\r\n          {\r\n            path: 'Recipients',\r\n            component: RecipientsComponent,\r\n            children: [{ path: '', component: RecipientsGridComponent }]\r\n          },\r\n          {\r\n            path: 'Reports',\r\n            component: ReportsComponent,\r\n            children: [{ path: '', component: ReportsDeliverablesComponent }]\r\n          },\r\n          {\r\n            path: 'FileUpload',\r\n            component: FileUploadComponent\r\n          },\r\n          {\r\n            path: 'Support',\r\n            component: SupportComponent\r\n          },\r\n          { path: ':moduleId', component: TemplateFormComponent, canDeactivate: [CanDeactivateGuard] }\r\n        ]\r\n      },\r\n      // {\r\n      //   path: 'Support',\r\n      //   component: SupportComponent\r\n      // },\r\n      {\r\n        path: 'admin/templates',\r\n        component: TemplateManagementComponent,\r\n        canActivate: [CanAccessGuard],\r\n        data: { permissions: [systemPermissionsEnum.canManageTemplates] }\r\n      },\r\n      {\r\n        path: 'admin/templates/builder',\r\n        component: TemplateBuilderWizardComponent,\r\n        canDeactivate: [CanDeactivateGuard],\r\n        canActivate: [CanAccessGuard],\r\n        data: { permissions: [systemPermissionsEnum.canManageTemplates] }\r\n      },\r\n      {\r\n        path: 'admin/templates/builder/:templateId',\r\n        component: TemplateBuilderWizardComponent,\r\n        canDeactivate: [CanDeactivateGuard],\r\n        canActivate: [CanAccessGuard],\r\n        data: { permissions: [systemPermissionsEnum.canManageTemplates] }\r\n      }\r\n    ],\r\n    canActivate: [AuthGuard]\r\n  },\r\n\r\n  {\r\n    path: 'error/401',\r\n    component: UnauthorizedComponent\r\n  },\r\n  {\r\n    path: 'error/403',\r\n    component: AccessDeniedComponent\r\n  },\r\n  {\r\n    path: 'error/404',\r\n    component: NotFoundComponent\r\n  },\r\n  {\r\n    path: 'error/500',\r\n    component: InternalServerErrorComponent\r\n  },\r\n  { path: '**', redirectTo: 'error/404' }\r\n];\r\n\r\nexport class AppConfiguration {\r\n  private static configHttpFactory(http: HttpClient): ConfigLoader {\r\n    return new ConfigHttpLoader(http, environment.settingsEndpoint); // API ENDPOINT\r\n  }\r\n\r\n  private static configFactory(): ConfigLoader {\r\n    return new ConfigStaticLoader(environment);\r\n  }\r\n\r\n  public static getConfigFactory() {\r\n    if (environment.useAzureAppSettings) {\r\n      return AppConfiguration.configHttpFactory; // use configHttpFactory to pull from web service\r\n    }\r\n\r\n    return AppConfiguration.configFactory; // Use configFactory to pull from Angular environment settings\r\n  }\r\n}\r\n","import { ReconciliationModule } from './reconciliation/reconciliation.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { CoreModule } from './_core/core.module';\r\nimport { DataImportModule } from './data-import/data-import.module';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { ConfigModule, ConfigStaticLoader, ConfigLoader } from '@ngx-config/core';\r\nimport { ConfigHttpLoader } from '@ngx-config/http-loader';\r\nimport { environment } from '../environments/environment';\r\nimport { AdminModule } from './admin/admin.module';\r\nimport { ProjectProfileModule } from './project-profile/project-profile.module';\r\nimport { TranslateModule, TranslateLoader, MissingTranslationHandler } from '@ngx-translate/core';\r\nimport { routeConfig } from './app.configuration';\r\nimport { DashboardModule } from './dashboard/dashboard.module';\r\nimport { SharedModule } from './_shared/shared.module';\r\nimport { NotFoundComponent } from './error/not-found.component';\r\nimport { UnauthorizedComponent } from './error/unauthorized.component';\r\nimport { AccessDeniedComponent } from './error/access-denied.component';\r\nimport { InternalServerErrorComponent } from './error/internal-server-error.component';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { ProcessingModule } from './processing/processing.module';\r\nimport { GroupsModule } from './groups/groups.module';\r\nimport { QualityControlModule } from './quality-control/quality-control.module';\r\nimport { HeaderManagementModule } from './header-management/header-management.module';\r\nimport { PortalManagementModule } from './portal-management/portal-management.module';\r\nimport { RecipientsModule } from './recipients/recipients.module';\r\nimport { TransactionsModule } from './transactions/transaction.module';\r\nimport { ConflictServerErrorComponent } from './error/conflict-transaction-error.component';\r\nimport { CanDeactivateGuard } from './_core/guards/can-deactivate-guard.service';\r\nimport { HomeComponent } from './home.component';\r\nimport { ReportsModule } from './reports/reports.module';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\n\r\n\r\n\r\n// Kendo UI Locales\r\nimport '@progress/kendo-angular-intl/locales/en/all';\r\nimport '@progress/kendo-angular-intl/locales/fr/all';\r\nimport '@progress/kendo-angular-intl/locales/pt/all';\r\nimport '@progress/kendo-angular-intl/locales/it/all';\r\nimport '@progress/kendo-angular-intl/locales/es/all';\r\n\r\nimport { FileUploadModule } from './file-upload/file-upload.module';\r\nimport { TitleService } from './_core/services/title.service';\r\nimport { IdleTimeoutService } from './_core/services/idle-timeout.service';\r\nimport { SupportModule } from './support/support.module';\r\nimport { PLATFORM_ID, Inject, NgModule } from '@angular/core';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { LayoutModule } from '@progress/kendo-angular-layout';\n\n\r\n// Azure App Settings Config Factory\r\nexport function configHttpFactory(http: HttpClient): ConfigLoader {\r\n  return new ConfigHttpLoader(http, environment.settingsEndpoint); // API ENDPOINT\r\n}\r\n\r\n// Angular /environments config factory\r\nexport function configFactory(): ConfigLoader {\r\n  return new ConfigStaticLoader(environment);\r\n}\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, '/client-src/assets/i18n/', '.json');\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NotFoundComponent,\r\n    ConflictServerErrorComponent,\r\n    InternalServerErrorComponent,\r\n    UnauthorizedComponent,\r\n    AccessDeniedComponent,\r\n    HomeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule, // required animations module\r\n    ToastrModule.forRoot({\r\n      preventDuplicates: true,\r\n      positionClass: 'toast-bottom-right',\r\n      closeButton: true\r\n    }), // ToastrModule added\r\n    RouterModule.forRoot(routeConfig),\r\n    SharedModule,\r\n    CoreModule.forRoot(),\r\n    ConfigModule.forRoot({\r\n      provide: ConfigLoader,\r\n      // If Production -> Load settings from Azure App Settings via configHttpFactory\r\n      // If localhost -> Load settings from Angular /environments via configFactory\r\n      useFactory: environment.useAzureAppSettings ? configHttpFactory : configFactory,\r\n      deps: [HttpClient]\r\n    }),\r\n    DashboardModule,\r\n    TranslateModule.forRoot(),\r\n    DataImportModule,\r\n    ProjectProfileModule,\r\n    ReconciliationModule,\r\n    AdminModule,\r\n    NgbModule,\r\n    HttpClientModule,\r\n    ProcessingModule,\r\n    GroupsModule,\r\n    QualityControlModule,\r\n    HeaderManagementModule,\r\n    PortalManagementModule,\r\n    RecipientsModule,\r\n    TransactionsModule,\r\n    ReportsModule,\r\n    FileUploadModule,\r\n    SupportModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    })\r,\r\n    LayoutModule\n  ],\r\n  providers: [CanDeactivateGuard, TitleService, IdleTimeoutService, HttpClient],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n  constructor(@Inject(PLATFORM_ID) private platformId: any, titleService: TitleService) {\r\n    titleService.init();\r\n  }\r\n}\r\n","import { inOutFromLeftSideAnimation } from '../../_core/animations/in-out-from-left-side.animation';\r\nimport { LeftNavService } from '../../_core/services/left-nav-service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'dashboard-home',\r\n    templateUrl: './dashboard-home.component.html',\r\n    animations: [inOutFromLeftSideAnimation]\r\n})\r\nexport class DashboardHomeComponent implements OnInit {\r\n\r\n    public isCollapsed = false;\r\n    constructor(\r\n        private router: Router,\r\n        private leftNavService: LeftNavService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.router.navigate(['/dashboard']);\r\n        this.leftNavService.navCollapsed$.subscribe(val => {\r\n            this.isCollapsed = val;\r\n        });\r\n    }\r\n}\r\n","import { ContractSummaryService } from '../services/contract-summary.service';\r\nimport { ContractSummary } from '../../_models/contract-summary.model';\r\nimport { GridDataResult, DataStateChangeEvent, ColumnReorderEvent, GridComponent } from '@progress/kendo-angular-grid';\r\nimport { SortDescriptor, orderBy, State, process } from '@progress/kendo-data-query/dist/es/main';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { UserGridService } from '../../_core/services/user-grid.service';\r\nimport { UserStore } from '../../_core/user/user.store';\r\nimport { HelperService } from '../../_core/services/helper.service';\r\nimport { AlertService } from '../../_core/services/alert.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { GridColumnHeader } from '../../_models/grid-column-header.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { CompositeFilterDescriptor } from '@progress/kendo-data-query';\r\n\r\n @Component({\r\n  selector: 'dashboard',\r\n  templateUrl: './dashboard.component.html'\r\n})\r\nexport class DashboardComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  public contracts: Array<ContractSummary> = [];\r\n  public gridViewData: GridDataResult;\r\n  public dashboardGridBusy = true;\r\n\r\n  public userId: string;\r\n  public gridSettingsName: string;\r\n\r\n   @ViewChild(GridComponent, { static: false })\r\n  public grid: GridComponent;\r\n\r\n  public state: State = {\r\n    skip: 0,\r\n    take: 15,\r\n\r\n    sort: <SortDescriptor[]>[\r\n      {\r\n        dir: 'asc',\r\n        field: 'opportunityName'\r\n      }\r\n    ]\r\n  };\r\n\r\n  public defaultDashboardHeaders = [\r\n    <GridColumnHeader>{ name: 'client', displayName: 'Account Description', order: 0 },\r\n    <GridColumnHeader>{ name: 'opportunityName', displayName: 'Opportunity Name', order: 1 },\r\n    <GridColumnHeader>{ name: 'office', displayName: 'Office', order: 2 },\r\n    <GridColumnHeader>{ name: 'country', displayName: 'Country', order: 3 },\r\n    <GridColumnHeader>{ name: 'industry', displayName: 'Industry', order: 4 },\r\n    <GridColumnHeader>{ name: 'projectCode', displayName: 'Project Code', order: 5 },\r\n    <GridColumnHeader>{ name: 'service', displayName: 'Service', order: 6 },\r\n    <GridColumnHeader>{ name: 'billingDirector', displayName: 'Billing Director', order: 7 },\r\n    <GridColumnHeader>{ name: 'performingMd', displayName: 'Performing MD', order: 8 },\r\n    <GridColumnHeader>{ name: 'createdFromSalesforce', displayName: 'Created From Salesforce', order: 9 }\r\n  ];\r\n\r\n  public headers = new Array<GridColumnHeader>();\r\n  public defaultFilterSet = false;\r\n\r\n  // public gridData: GridDataResult = process(this.contracts, this.state);\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private contractService: ContractSummaryService,\r\n    private userGridService: UserGridService,\r\n    private userStore: UserStore,\r\n    private helperService: HelperService,\r\n    private alertService: AlertService\r\n  ) {\r\n    this.loadContracts();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.userStore.user.subscribe(user => {\r\n      this.userId = user.profile.IdentityId.toString();\r\n\r\n      this.gridSettingsName = this.userGridService.createUserGridId(this.userId, this.router.url.toString().split('?')[0], 'dashboard');\r\n\r\n      this.contractService.getContracts().subscribe(\r\n        contracts => {\r\n          this.contracts = contracts;\r\n          this.loadContracts();\r\n\r\n          let order = 0;\r\n          this.userGridService\r\n            .getSettings(this.userId, this.gridSettingsName, this.defaultDashboardHeaders.map(c => c.name))\r\n            .subscribe(result => {\r\n              console.log(result);\r\n              if (result.headers.length > 0) {\r\n                result.headers.forEach(header => {\r\n                  const h = this.defaultDashboardHeaders.find(c => c.name === header);\r\n\r\n                  if (h) {\r\n                    h.order = order++;\r\n                    this.headers.push(h);\r\n                  }\r\n\r\n                  this.dashboardGridBusy = false;\r\n                });\r\n\r\n                this.defaultFilterSet = !!result.kendoGridState;\r\n                if (result.kendoGridState) {\r\n                  this.state = result.kendoGridState;\r\n                  this.gridViewData = process(this.contracts, this.state);\r\n                }\r\n              } else {\r\n                this.headers = this.defaultDashboardHeaders;\r\n              }\r\n\r\n              const userPreviousUrl: string = sessionStorage.getItem('user-current-url');\r\n              if (userPreviousUrl && userPreviousUrl.length) {\r\n                sessionStorage.removeItem('user-current-url');\r\n                this.router.navigateByUrl(userPreviousUrl);\r\n                return;\r\n              }\r\n            });\r\n        },\r\n        error => {},\r\n        () => (this.dashboardGridBusy = false)\r\n      );\r\n    });\r\n  }\r\n\r\n  public saveDefaultFilter() {\r\n    this.userGridService\r\n      .saveSettings(this.gridSettingsName, this.headers.map(c => c.name), null, this.userId, this.state)\r\n      .subscribe(saveResult => {\r\n        this.alertService.success('Default Filter Saved');\r\n        this.defaultFilterSet = true;\r\n      });\r\n  }\r\n\r\n  public clearDefaultFilter() {\r\n    this.userGridService\r\n      .saveSettings(this.gridSettingsName, this.headers.map(c => c.name), null, this.userId, null)\r\n      .subscribe(saveResult => {\r\n        this.alertService.success('Default Filter Cleared');\r\n        this.state.filter = null;\r\n        this.gridViewData = process(this.contracts, this.state);\r\n        this.defaultFilterSet = false;\r\n\r\n      });\r\n  }\r\n\r\n  public onColumnReorder(event: ColumnReorderEvent) {\r\n    const reorderedColumns = this.helperService.move(this.headers, event.oldIndex, event.newIndex);\r\n\r\n    this.userGridService\r\n      .saveSettings(this.gridSettingsName, reorderedColumns.map(c => c.name), null, this.userId, this.state)\r\n      .subscribe(saveResult => {\r\n        this.userGridService.updateUserSettingsCache(saveResult);\r\n        this.headers = reorderedColumns;\r\n      });\r\n  }\r\n\r\n  public sortChange(sort: SortDescriptor[]): void {\r\n    this.state.sort = sort;\r\n    this.loadContracts();\r\n  }\r\n\r\n  public  filterChange(filter: CompositeFilterDescriptor): void {\r\n    this.state.filter = filter;\r\n    this.loadContracts();\r\n  }\r\n\r\n  public dataStateChange(state: DataStateChangeEvent): void {\r\n    this.state = state;\r\n    console.log('dashboard data state change', state);\r\n    this.loadContracts();\r\n  }\r\n\r\n  public navigateToProject(id: string, event: any) {\r\n    event.preventDefault();\r\n    this.router.navigate([`/project-profile/${id}/MainProfile`]);\r\n  }\r\n\r\n  public translate(key: string): string {\r\n    return 'test';\r\n  }\r\n\r\n  public getColumnTitle(column: GridColumnHeader): string {\r\n    return this.helperService.getColumnTitle(this.i18n.dashboard, column);\r\n  }\r\n\r\n  private loadContracts() {\r\n    this.contracts = orderBy(this.contracts, this.state.sort);\r\n    this.gridViewData = process(this.contracts, this.state);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DashboardComponent } from './components/dashboard.component';\r\n\r\nimport { DashboardHomeComponent } from './components/dashboard-home.component';\r\nimport { ContractSummaryService } from './services/contract-summary.service';\r\nimport { CoreModule } from '../_core/core.module';\r\nimport { SharedModule } from '../_shared/shared.module';\r\nimport { GridModule } from '@progress/kendo-angular-grid';\r\nimport { RouterModule } from '@angular/router';\r\nimport { OrderModule } from 'ngx-order-pipe';\r\nimport { ContractService } from '../_api/services/dashboard/contract.service';\r\nimport { ApiService } from '../_api/services/api.service';\r\n\r\n\r\n@NgModule({\r\n  imports: [CoreModule, CommonModule, GridModule, RouterModule, SharedModule, OrderModule],\r\n  declarations: [DashboardHomeComponent, DashboardComponent],\r\n  providers: [ApiService, ContractService, ContractSummaryService]\r\n})\r\nexport class DashboardModule {}\r\n","\r\nimport {map} from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { ContractSummary } from '../../_models/contract-summary.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { ContractService } from '../../_api/services/dashboard/contract.service';\r\nimport { GroupSummaryDto } from '../../_api/dtos/group-summary.dto';\r\n\r\n@Injectable()\r\nexport class ContractSummaryService {\r\n  constructor(private contractService: ContractService) {}\r\n\r\n  getContractsGroups(id: string): Observable<GroupSummaryDto[]> {\r\n    return this.contractService.getContractsGroups(id);\r\n\r\n\r\n  }\r\n\r\n  public getContracts(): Observable<ContractSummary[]> {\r\n    return this.contractService.getContracts().pipe(map(result =>\r\n      result.map(dto => {\r\n        const contract = <ContractSummary>{\r\n          id: dto.id,\r\n          client: dto.client,\r\n          opportunityName: dto.opportunityName,\r\n          office: dto.office,\r\n          country: dto.country,\r\n          industry: dto.industry,\r\n          projectCode: dto.projectCode,\r\n          service: dto.service,\r\n          billingDirector: dto.billingDirector,\r\n          performingMd: dto.performingMd,\r\n          groupIds: dto.groupIds,\r\n          createdFromSalesforce: dto.createdFromSalesforce\r\n        };\r\n\r\n        if(dto.groupIds.length > 0) {\r\n          contract.primaryGroupId = dto.groupIds[0];\r\n        }\r\n\r\n        return contract;\r\n      })\r\n    ));\r\n  }\r\n  \r\n}\r\n","import { AssetFileInfoService } from '../../_core/services/asset-file-info-service';\r\n\r\nimport { DataImportService } from '../services/data-import.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { WindowManager } from '../../_core/services/window-manager.service';\r\nimport { Component, ViewChild, Output, Input, OnInit, EventEmitter, ViewContainerRef } from '@angular/core';\r\nimport { ColumnMap } from '../../_models/column-map.model';\r\nimport { SupportedCustomColumnDataTypeDto } from '../../_api/dtos/shared/supported-custom-column-datatype.dto';\r\nimport { WindowOption } from '../../_models/window-option';\r\nimport { SpreadsheetColumnDto } from '../../_api/dtos/spreadsheet-column.dto';\r\n\r\n@Component({\r\n  selector: 'create-custom-column',\r\n  templateUrl: './create-custom-column.component.html'\r\n})\r\nexport class CreateCustomColumnComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  public name: string;\r\n  public dataType: number;\r\n  public isNameValid: boolean;\r\n\r\n  @ViewChild('content', { static: false }) private content: any;\r\n  @Output() onAddCustomColumn = new EventEmitter<ColumnMap>();\r\n  @Input() columnNames = new Array<string>();\r\n\r\n  title: string;\r\n  action: string;\r\n  customColumnDataTypes = new Array<SupportedCustomColumnDataTypeDto>();\r\n\r\n  constructor(\r\n    private windowManager: WindowManager,\r\n    public container: ViewContainerRef,\r\n    private dataImportService: DataImportService,\r\n    private assetFileInfoService: AssetFileInfoService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    // Get Suppported DataTypes\r\n    this.dataImportService.getCustomColumnDataTypes().subscribe(dataTypes => {\r\n      this.customColumnDataTypes = dataTypes;\r\n    });\r\n  }\r\n\r\n  open(event: any) {\r\n    event.preventDefault();\r\n\r\n    this.assetFileInfoService.GetInternalColumns().forEach(c => {\r\n      this.columnNames.push(c);\r\n    });\r\n    // this.customcolumn = new CustomColumn();\r\n    this.title = 'Create Custom Column';\r\n    this.action = 'Create';\r\n\r\n    this.name = null;\r\n    this.dataType = null;\r\n    this.isNameValid = true;\r\n\r\n    this.windowManager.open(this.content, 'Create Custom Column', <WindowOption>{\r\n      isModal: true\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.windowManager.close();\r\n  }\r\n\r\n  onSubmit(form) {\r\n    this.isNameValid = this.checkName(this.name);\r\n    if (form.valid && this.isNameValid) {\r\n      if (this.action === 'Create') {\r\n        this.windowManager.close();\r\n\r\n        const customColumn = <ColumnMap>{\r\n          spreadsheetColumn: <SpreadsheetColumnDto>{},\r\n          dataTargetField: this.name,\r\n          importTemplateColumnId: this.generateTempId(),\r\n          columnDataType: this.dataType,\r\n          isCustom: true,\r\n          isAutoMapped: false\r\n        };\r\n\r\n        this.onAddCustomColumn.emit(customColumn);\r\n      }\r\n    }\r\n  }\r\n\r\n  private checkName(name: string): boolean {\r\n    for (let i = 0; i < this.columnNames.length; i++) {\r\n      if (name.toLowerCase() === this.columnNames[i].toLowerCase().replace(/\\s/g, '')) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private generateTempId() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n      const r = (Math.random() * 16) | 0,\r\n        v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n      return v.toString(16);\r\n    });\r\n  }\r\n}\r\n","import { CopyGroupComponent } from '../../portal-management/components/copy-group.component';\r\nimport { DataCopyService } from '../services/data-copy.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, ComponentRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DataTargetName } from '../../_enums/data-target-name';\r\n\r\n@Component({\r\n  selector: 'app-data-copy-finish',\r\n  templateUrl: './data-copy-finish.component.html'\r\n})\r\nexport class DataCopyFinishComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  public groupId: string;\r\n  public copyFromGroupIds: Array<string>;\r\n  public rowsCopied: number;\r\n  isError: boolean;\r\n  errorMessage: string;\r\n  dataTargetName: string;\r\n  replace: boolean;\r\n  selections: Array<ComponentRef<CopyGroupComponent>>;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private dataCopyService: DataCopyService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.groupId = this.route.parent.snapshot.paramMap.get('groupId');\r\n    this.isError = this.dataCopyService.isError;\r\n    this.errorMessage = this.dataCopyService.errorMessage;\r\n    this.dataTargetName = this.dataCopyService.activeDataTargetName;\r\n    this.replace = this.dataCopyService.activeReplace;\r\n    this.selections = this.dataCopyService.activeSelections;\r\n    this.copyFromGroupIds = this.dataCopyService.copyFromGroupIds;\r\n\r\n    let dataTarget: DataTargetName;\r\n    if (this.dataTargetName === 'Client Inventory') {\r\n      dataTarget = DataTargetName.client;\r\n    } else if (this.dataTargetName === 'Actual Inventory') {\r\n      dataTarget = DataTargetName.inventory;\r\n    }\r\n\r\n    if (!this.isError) {\r\n      this.rowsCopied = 0;\r\n      this.copyFromGroupIds.forEach(id =>\r\n        this.dataCopyService.getAssetCount(id, dataTarget, true).subscribe((res: number) => {\r\n          if (!res) {\r\n            this.rowsCopied = 0;\r\n          }\r\n          this.rowsCopied += res;\r\n        },\r\n          error => {\r\n            this.rowsCopied = 0;\r\n          }\r\n\r\n        ));\r\n    }\r\n\r\n  }\r\n\r\n  finish(event: any) {\r\n    this.router.navigate([`/project-profile/${this.groupId}/MainProfile`]);\r\n  }\r\n}\r\n","import { CopyGroupComponent } from '../../portal-management/components/copy-group.component';\r\n\r\nimport { DataCopyService } from '../services/data-copy.service';\r\nimport { HelperService } from '../../_core/services/helper.service';\r\nimport { AlertService } from '../../_core/services/alert.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { TranslationManager } from '../../_core/i18n/translation-manager';\r\nimport { ComponentRef, ComponentFactoryResolver, ViewContainerRef, ViewChild, OnDestroy, OnInit, Component } from '@angular/core';\r\nimport { DataTargetName } from '../../_enums/data-target-name';\r\nimport { CopyGroupsDto } from '../../_api/_runtime/dtos/copy-groups.dto';\r\nimport { DataTarget } from '../../_models/data-target.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { WizardService } from '../../_ui/services/wizard.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-data-copy-groups',\r\n  templateUrl: './data-copy-groups.component.html'\r\n})\r\nexport class DataCopyGroupsComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  @ViewChild('selections', { read: ViewContainerRef, static: true })\r\n  selectionsContainer: ViewContainerRef;\r\n  public groupId: string;\r\n  public dataTargetName: string;\r\n  public dataAlreadyExists = false;\r\n  public availableDataTargets: Array<DataTarget> = new Array<DataTarget>();\r\n  public selections: Array<ComponentRef<CopyGroupComponent>> = new Array<ComponentRef<CopyGroupComponent>>();\r\n  public selectionErrors = false;\r\n  public replace = true;\r\n  public waiting: Subscription;\r\n  model = {\r\n    copyType: ''\r\n  };\r\n\r\n  constructor(\r\n    private wizardService: WizardService,\r\n    private componentResolver: ComponentFactoryResolver,\r\n    private route: ActivatedRoute,\r\n    private dataCopyService: DataCopyService,\r\n    private helperService: HelperService,\r\n    private translateService: TranslationManager\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.groupId = this.route.parent.snapshot.paramMap.get('groupId');\r\n    this.waiting = this.dataCopyService.getDataTargets().subscribe(result => {\r\n      this.availableDataTargets = result.filter((dataTarget: DataTarget) => {\r\n        return dataTarget.name === 'Client Inventory' || dataTarget.name === 'Actual Inventory';\r\n      });\r\n    });\r\n\r\n    this.dataTargetName = this.dataCopyService.activeDataTargetName;\r\n    this.replace = this.dataCopyService.activeReplace || true;\r\n    if (this.dataCopyService.activeSelections) {\r\n      this.dataCopyService.activeSelections.forEach((selection: ComponentRef<CopyGroupComponent>) => {\r\n        this.addSelection(selection);\r\n      });\r\n    } else {\r\n      this.addSelection();\r\n    }\r\n  }\r\n\r\n  copyData(): void {\r\n    this.selectionErrors = this.hasErrors();\r\n    if (!this.selectionErrors) {\r\n      this.dataCopyService.activeDataTargetName = this.dataTargetName;\r\n      this.dataCopyService.activeReplace = this.replace;\r\n      this.dataCopyService.activeSelections = this.selections;\r\n\r\n      const dto: CopyGroupsDto = this.buildRequestDto();\r\n      dto.prosRenewal = false;\r\n      this.waiting = this.dataCopyService.copyGroups(dto).subscribe(\r\n        res => {\r\n          this.dataCopyService.isError = false;\r\n          this.wizardService.setActiveTab('step-2-copy');\r\n        },\r\n        error => {\r\n          this.dataCopyService.isError = true;\r\n          this.dataCopyService.errorMessage = this.translateService.instant(this.i18n.dataImport + error.error.message);\r\n          this.wizardService.setActiveTab('step-2-copy');\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  buildRequestDto(): CopyGroupsDto {\r\n    const request = <CopyGroupsDto>{\r\n      fromGroupIds: new Array<string>(),\r\n      toGroupId: this.groupId,\r\n      dataTargetTo: null,\r\n      memberIds: new Array<string>(),\r\n      siteIds: new Array<string>(),\r\n      replace: this.replace\r\n    };\r\n\r\n    if (this.dataTargetName === 'Client Inventory') {\r\n      request.dataTargetTo = DataTargetName.client;\r\n    } else if (this.dataTargetName === 'Actual Inventory') {\r\n      request.dataTargetTo = DataTargetName.inventory;\r\n    }\r\n\r\n    this.selections.forEach((selection: ComponentRef<CopyGroupComponent>) => {\r\n      const refInstance = selection.instance.ref.instance;\r\n\r\n      // Add Groups\r\n      if (refInstance.selectedGroup != null && !request.fromGroupIds.includes(refInstance.selectedGroup.id)) {\r\n        request.fromGroupIds.push(refInstance.selectedGroupHierarchy.id);\r\n      }\r\n\r\n      // Add Members\r\n      if (refInstance.selectedMember != null && !request.memberIds.includes(refInstance.selectedMember.id)) {\r\n        request.memberIds.push(refInstance.selectedMember.id);\r\n      }\r\n\r\n      // Add Sites\r\n      if (refInstance.selectedSite != null && !request.siteIds.includes(refInstance.selectedSite.id)) {\r\n        request.siteIds.push(refInstance.selectedSite.id);\r\n      }\r\n    });\r\n\r\n    this.dataCopyService.copyFromGroupIds = request.fromGroupIds;\r\n    return request;\r\n  }\r\n\r\n  addSelection(existing?: ComponentRef<CopyGroupComponent>): void {\r\n    const comp = this.componentResolver.resolveComponentFactory(CopyGroupComponent);\r\n    const selection = this.selectionsContainer.createComponent(comp);\r\n\r\n    // Input References\r\n    if (existing) {\r\n      selection.instance.instanceId = existing.instance.instanceId;\r\n      selection.instance.toGroupId = existing.instance.toGroupId;\r\n      selection.instance.selectedContract = existing.instance.selectedContract;\r\n      selection.instance.selectedGroupHierarchy = existing.instance.selectedGroupHierarchy;\r\n      selection.instance.selectedGroup = existing.instance.selectedGroup;\r\n      selection.instance.groups = existing.instance.groups;\r\n      selection.instance.selectedMember = existing.instance.selectedMember;\r\n      selection.instance.members = existing.instance.members;\r\n      selection.instance.selectedSite = existing.instance.selectedSite;\r\n      selection.instance.sites = existing.instance.sites;\r\n      selection.instance.ref = selection;\r\n    } else {\r\n      selection.instance.instanceId = this.helperService.generateGuid();\r\n      selection.instance.toGroupId = this.groupId;\r\n      selection.instance.ref = selection;\r\n    }\r\n\r\n    selection.instance.componentRemoved.subscribe((instanceId: string) => {\r\n      this.removeComponent(instanceId);\r\n    });\r\n\r\n    this.selections.push(selection);\r\n  }\r\n\r\n  dataTargetChanged(dataTargetName: string): void {\r\n    let dataTarget: DataTargetName;\r\n    if (dataTargetName === 'Client Inventory') {\r\n      dataTarget = DataTargetName.client;\r\n    } else if (dataTargetName === 'Actual Inventory') {\r\n      dataTarget = DataTargetName.inventory;\r\n    }\r\n\r\n    this.dataCopyService.getAssetCount(this.groupId, dataTarget, true).subscribe(\r\n      (res: number) => {\r\n        if (!res || res === 0) {\r\n          this.dataAlreadyExists = false;\r\n        } else {\r\n          this.dataAlreadyExists = true;\r\n        }\r\n      },\r\n      error => {\r\n        this.dataAlreadyExists = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  removeComponent(instanceId: string): void {\r\n    this.selections.forEach((selection: ComponentRef<CopyGroupComponent>, index: number) => {\r\n      if (selection.instance.instanceId === instanceId) {\r\n        this.selections.splice(index, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  hasErrors(): boolean {\r\n    if (!this.dataTargetName || this.dataTargetName === '') {\r\n      return true;\r\n    }\r\n\r\n    for (let i = 0; i < this.selections.length; i++) {\r\n      const selection: ComponentRef<CopyGroupComponent> = this.selections[i];\r\n      const refInstance = selection.instance.ref.instance;\r\n      if (refInstance.selectedContract == null || refInstance.selectedGroup == null) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  hasSelections(): boolean {\r\n    return this.selections.length > 0;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.waiting) {\r\n      this.waiting.unsubscribe();\r\n    }\r\n  }\r\n\r\n  updateCopyType(event: any) {\r\n    this.replace = event.target.value === 'replace';\r\n  }\r\n}\r\n","import { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { NgbTabset } from '@ng-bootstrap/ng-bootstrap';\r\nimport { WizardService } from '../../_ui/services/wizard.service';\r\n\r\n@Component({\r\n  selector: 'app-data-copy',\r\n  templateUrl: './data-copy-wizard.component.html'\r\n})\r\nexport class DataCopyWizardComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  subscription: Subscription;\r\n  public activeTab: any;\r\n\r\n  @ViewChild('copytabs', { static: false }) private tabs: NgbTabset;\r\n\r\n  constructor(private wizardService: WizardService) {\r\n    // subscribe to home component messages\r\n    this.subscription = this.wizardService.activeTab$.subscribe(activeTab => {\r\n      this.activeTab = activeTab;\r\n      this.wizardService.activeTabs.push(activeTab);\r\n\r\n      if (this.tabs) {\r\n        // Setting timeout to wait for tab to be set to enabled\r\n        setTimeout(() => {\r\n          //\r\n          this.tabs.select(activeTab);\r\n        }, 100);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  public isActive(id) {\r\n    return this.wizardService.activeTabs.indexOf(id) === -1;\r\n  }\r\n}\r\n","import { DataImportService } from '../services/data-import.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { OnInit, Component } from '@angular/core';\r\nimport { DataImport } from '../../_models/data-import.model';\r\nimport { ImportResultDto } from '../../_api/dtos/import-result.dto';\r\nimport { WizardService } from '../../_ui/services/wizard.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-data-import-finish',\r\n  templateUrl: './data-import-finish.component.html'\r\n})\r\nexport class DataImportFinishComponent implements OnInit, TranslatedComponent {\r\n\r\n  i18n = TranslationBaseKeys;\r\n\r\n\r\n  dataImport: DataImport;\r\n  importResult: ImportResultDto = new ImportResultDto();\r\n  isError: Boolean;\r\n  groupId: string;\r\n  constructor(private wizardService: WizardService, private dataImportService: DataImportService, private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.dataImport = this.dataImportService.activeDataImport;\r\n    this.importResult = this.dataImportService.importResult;\r\n    this.isError = !this.dataImportService.importResult.success;\r\n\r\n    if (!this.isError) {\r\n      this.wizardService.activeTabs = [];\r\n      this.wizardService.clearActiveTab();\r\n    }\r\n  }\r\n\r\n  onSave(event: any) {\r\n    this.wizardService.activeTabs = [];\r\n    this.wizardService.clearActiveTab();\r\n    this.dataImportService.resetPublicProperties();\r\n    this.router.navigate([`/project-profile/${this.groupId}/MainProfile`]);\r\n  }\r\n  back(event) {\r\n    event.preventDefault();\r\n    this.wizardService.setActiveTab('step-2');\r\n  }\r\n}\r\n","import { DataImportService } from '../services/data-import.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { ColumnMap } from '../../_models/column-map.model';\r\nimport { WizardService } from '../../_ui/services/wizard.service';\r\nimport { ImportTemplateColumn } from '../../_api/_configuration/dtos/import-template-column.dto';\r\nimport { DataTargetField } from '../../_models/data-target-field.model';\r\nimport { DataSourceOption } from '../../_models/data-import/data-source-option.model';\r\nimport { SpreadsheetColumnDto } from '../../_api/dtos/spreadsheet-column.dto';\r\nimport { DataImport } from '../../_models/data-import.model';\r\nimport { Subject } from 'rxjs';\r\nimport { OnInit, OnDestroy, Component } from '@angular/core';\r\nimport { ImportTemplatesApiService } from '../../_api/_configuration/services/import-templates-api.service';\r\nimport { DragulaService } from 'ng2-dragula';\r\n// tslint:disable-next-line: max-line-length\r\nimport {  PrimaryInfoFieldLayout, BuildingLocationFieldLayout, BuildingValuationFieldLayout, BuildingSuperstructureFieldLayout, BuildingSubStructureFieldLayout, BuildingSystemFieldLayout, BuildingSiteAttributeFieldLayout, AdditionalDataFieldLayout, CoreLogicFieldLayout } from '../../quality-control/components/building/form/form-models/primary-info/primaryinfo-model';\r\n// tslint:disable-next-line: max-line-length\r\nimport { CopedataWindFieldLayout, CopeDataEarthquakeFieldLayout } from '../../quality-control/components/building/form/form-models/copedata-model';\r\n// tslint:disable-next-line: max-line-length\r\nimport { InitialFloodPlainFieldLayout, BuildingFloodPlainFieldLayout } from '../../quality-control/components/building/form/form-models/building-flood-plain-model';\r\n\r\nexport interface ColumnCategory {\r\n  categoryName: string;\r\n  columnMap: Array<ColumnMap>;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-data-import-mapping',\r\n  templateUrl: './data-import-mapping.component.html'\r\n})\r\nexport class DataImportMappingComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n\r\n  i18n = TranslationBaseKeys;\r\n  private destroyed$ = new Subject<any>();\r\n\r\n  showMappingAlert = false;\r\n  showKeyFieldMappingAlert = false;\r\n  dataImport: DataImport = new DataImport();\r\n  hideAutoMapped = false;\r\n  hideCategories = true;\r\n  showHideAutoMappedText = 'Show Auto Mapped';\r\n  showHideCategoriesText = 'Show Categories';\r\n  sourceSpreadSheetColumns: Array<SpreadsheetColumnDto> = new Array<SpreadsheetColumnDto>();\r\n  spreadsheetColumnsAvail: Array<DataSourceOption> = new Array<DataSourceOption>();\r\n  dataTargetColumns: Array<DataTargetField> = new Array<DataTargetField>();\r\n  mapping: Array<ColumnMap> = new Array<ColumnMap>();\r\n  selectedDataTargetIds: Array<string> = new Array<string>();\r\n  dataTargetName: string;\r\n  sourceSpreadsheetName: string;\r\n  columnNames: Array<string>;\r\n  activeReplace: boolean;\r\n  keyFields = new Array<ImportTemplateColumn>();\r\n  keyFieldId = '';\r\n  mappedSpreadsheetColumns = 0;\r\n  unmappedSpreadsheetColumns = 0;\r\n  dataTargetType: number;\r\n  isBuilding: boolean;\r\n  columnCategories: Array<ColumnCategory> = new Array<ColumnCategory>();\r\n  buildingCategories = [\r\n    'Primary Info',\r\n    'Location',\r\n    'Valuation',\r\n    'Superstructure',\r\n    'Substructure',\r\n    'Occupancy',\r\n    'Construction',\r\n    'Systems',\r\n    'Site Attributes',\r\n    'Additional Data',\r\n    'CoreLogic',\r\n    'Secondary COPE Data (Wind)',\r\n    'Secondary COPE Data (Earthquake)',\r\n    'Flood Zone',\r\n    'Others'\r\n  ];\r\n  inventoryCategories = [\r\n    'Account Information',\r\n    'Accounting Information',\r\n    'Cost Information',\r\n    'Descriptive Information',\r\n    'Locational Information',\r\n    'NA Removing',\r\n    'Unique ID',\r\n    'MISC Information',\r\n    'Others'\r\n  ];\r\n\r\n  isLoading = false;\r\n  hasDisplayIdColumn = false;\r\n\r\n  constructor(\r\n    private dragulaService: DragulaService,\r\n    private wizardService: WizardService,\r\n    private dataImportService: DataImportService,\r\n    private importTemplatesApiService: ImportTemplatesApiService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    const dataImport = this.dataImportService.activeDataImport;\r\n    this.columnNames = new Array<string>();\r\n    const excelSummary = dataImport.excelSummary;\r\n\r\n    this.activeReplace = this.dataImportService.activeReplace;\r\n\r\n    if (excelSummary) {\r\n      this.sourceSpreadsheetName = excelSummary.spreadsheetFileName;\r\n      this.sourceSpreadSheetColumns = excelSummary.spreadsheetColumns;\r\n      this.dataTargetColumns = excelSummary.dataTargetDescription.columns;\r\n      this.dataTargetName = dataImport.spreadsheetUpload.dataTargetName;\r\n      this.mapping = this.sortMapping(dataImport.mapping);\r\n      this.populateColumnCategories(this.dataTargetName, dataImport.mapping);\r\n    }\r\n    this.dataTargetColumns.forEach(col => {\r\n      this.columnNames.push(col.name);\r\n    });\r\n\r\n    this.sourceSpreadSheetColumns.forEach(col => {\r\n      const isMapped = this.mapping.findIndex(c => c.spreadsheetColumn.name === col.name) >= 0;\r\n      if (col.title.toLowerCase().replace(/\\s/g, '') === 'displayid') {\r\n        this.hasDisplayIdColumn = true;\r\n      }\r\n      this.spreadsheetColumnsAvail.push(<DataSourceOption>{ isMapped: isMapped, column: col });\r\n    });\r\n    this.sortSpreadsheetColumns();\r\n\r\n    this.importTemplatesApiService\r\n      .getImportTemplatesById(this.dataImportService.currentDataTargetId)\r\n      .pipe(takeUntil(this.destroyed$))\r\n      .subscribe(template => {\r\n        this.dataTargetType = template.dataTarget;\r\n        this.keyFields = template.importTemplateColumns.filter(column => {\r\n          if (template.dataTarget === 3 && column.destinationEntity === 'Building') {\r\n            if (column.name === 'DisplayId') {\r\n              this.keyFieldId = column.id;\r\n            }\r\n            this.isBuilding = true;\r\n            return column;\r\n          } else if (template.dataTarget <= 2 && column.destinationEntity === 'AssetFileRecord') {\r\n            return column;\r\n          }\r\n        });\r\n      });\r\n    this.updateMappedTotals();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n    // console.log('import upload destoryed');\r\n  }\r\n  onKeyFieldSelect(): void {\r\n    if (this.keyFieldId !== '') {\r\n      this.showKeyFieldMappingAlert = false;\r\n    }\r\n  }\r\n\r\n  getSpreadsheetColumn(columnName: string): any {\r\n    return this.dataImportService.activeDataImport.excelSummary.spreadsheetColumns.find(c => c.name === columnName);\r\n  }\r\n\r\n  createMapping(value: any) {\r\n    this.selectedDataTargetIds.push(value);\r\n  }\r\n\r\n  toggleAutoMapped() {\r\n    this.hideAutoMapped = !this.hideAutoMapped;\r\n    this.showHideAutoMappedText = this.hideAutoMapped ? 'Hide Auto-Mapped' : 'Show Auto-Mapped';\r\n  }\r\n\r\n  toggleCategories() {\r\n    this.hideCategories = !this.hideCategories;\r\n    this.showHideCategoriesText = !this.hideCategories ? 'Hide Categories' : 'Show Categories';\r\n  }\r\n\r\n  private hasClass(el: any, name: string) {\r\n    return new RegExp('(?:^|\\\\s+)' + name + '(?:\\\\s+|$)').test(el.className);\r\n  }\r\n\r\n  private addClass(el: any, name: string) {\r\n    if (!this.hasClass(el, name)) {\r\n      el.className = el.className ? [el.className, name].join(' ') : name;\r\n    }\r\n  }\r\n\r\n  handleCreatedCustomColumn(customColumn: ColumnMap) {\r\n    this.columnNames.push(customColumn.dataTargetField);\r\n    this.mapping.push(customColumn);\r\n  }\r\n\r\n  updateAvailableOptions(event: any) {\r\n    this.spreadsheetColumnsAvail.forEach(val => {\r\n      if (this.mapping.findIndex(c => c.spreadsheetColumn.name === val.column.name) !== -1) {\r\n        val.isMapped = true;\r\n      } else {\r\n        val.isMapped = false;\r\n\r\n        // This block will toggle autoMapped in the event the user manually un-maps an automaped field\r\n        const mappingIndex = this.mapping\r\n          .findIndex(c => c.dataTargetField.replace(/\\s/g, '').toLowerCase() === val.column.title.replace(/\\s/g, '').toLowerCase());\r\n        if (mappingIndex !== -1) {\r\n          this.mapping[mappingIndex].isAutoMapped = false;\r\n        }\r\n      }\r\n    });\r\n    this.sortSpreadsheetColumns();\r\n  }\r\n\r\n  back(event) {\r\n    event.preventDefault();\r\n    this.wizardService.setActiveTab('step-1');\r\n  }\r\n\r\n  isMapped(columnName: string) {\r\n    const mappedValue = this.dataImport.mapping.find(c => c.spreadsheetColumn != null && c.spreadsheetColumn.name === columnName);\r\n\r\n    return mappedValue == null;\r\n  }\r\n\r\n  onSubmit(form) {\r\n    this.isLoading = true;\r\n\r\n    if (!this.activeReplace && this.keyFieldId === '') {\r\n      this.showKeyFieldMappingAlert = true;\r\n      this.isLoading = false;\r\n      return;\r\n    }\r\n\r\n    if (!this.hasDisplayIdColumn && this.isBuilding) {\r\n      this.isLoading = false;\r\n      return;\r\n    }\r\n\r\n    if (this.mapping.length > 0) {\r\n      this.dataImportService.setMapping(this.mapping);\r\n      this.dataImportService.currentKeyFieldId = this.keyFieldId;\r\n\r\n      this.wizardService.setActiveTab('step-3');\r\n    } else {\r\n      this.showMappingAlert = true;\r\n    }\r\n    this.isLoading = false;\r\n  }\r\n\r\n  updateMappedTotals() {\r\n    this.mappedSpreadsheetColumns = this.spreadsheetColumnsAvail.filter(c => c.isMapped).length;\r\n    this.unmappedSpreadsheetColumns = this.spreadsheetColumnsAvail.filter(c => c.isMapped === false).length;\r\n  }\r\n  private sortSpreadsheetColumns() {\r\n    const sortedArray = this.spreadsheetColumnsAvail.sort((a, b) => this.stringComparator(a.column.title, b.column.title));\r\n    this.spreadsheetColumnsAvail = sortedArray;\r\n  }\r\n\r\n  private sortMapping(columns: ColumnMap[]): ColumnMap[] {\r\n    const sortedArray = columns.sort((a, b) => this.stringComparator(a.dataTargetField, b.dataTargetField));\r\n    return sortedArray;\r\n  }\r\n\r\n  private stringComparator(a, b): number {\r\n    if (a < b) {\r\n      return -1;\r\n    } else if (a > b) {\r\n      return 1;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  private populateColumnCategories(dataTargetName: string, columns: ColumnMap[]) {\r\n    let columnMap: ColumnMap[];\r\n    dataTargetName = dataTargetName.toLowerCase().replace(/\\s/g, '');\r\n    if ( dataTargetName.toLowerCase() === 'clientinventory'\r\n      || dataTargetName === 'actualinventory'\r\n      || dataTargetName === 'landimprovement'\r\n      || dataTargetName === 'consolidatedinventory') {\r\n      this.inventoryCategories.forEach((category) => {\r\n        columnMap = new Array<ColumnMap>();\r\n        columns.forEach(column => {\r\n          const dataTargetField = column.dataTargetField.toLowerCase().replace(/\\s/g, '');\r\n          switch (category) {\r\n            case 'Account Information':     if (dataTargetField === 'accountclass'\r\n                                            ||  dataTargetField === 'accountdescription'\r\n                                            ||  dataTargetField === 'accountnumber'\r\n                                            ||  dataTargetField === 'glaccount'\r\n                                            ||  dataTargetField === 'glaccumaccount'\r\n                                            ||  dataTargetField === 'glassetaccount'\r\n                                            ||  dataTargetField === 'insuranceaccount'\r\n                                            ||  dataTargetField === 'assetclass'\r\n                                            ||  dataTargetField === 'classcode') {\r\n                                              columnMap.push(column);\r\n                                            }\r\n                                            break;\r\n            case 'Accounting Information':  if (dataTargetField === 'activitycode'\r\n                                            ||  dataTargetField === 'acquisitiondate'\r\n                                            ||  dataTargetField === 'depreciationmethod'\r\n                                            ||  dataTargetField === 'disposalcode'\r\n                                            ||  dataTargetField === 'functionactivity'\r\n                                            ||  dataTargetField === 'fundcontribution'\r\n                                            ||  dataTargetField === 'fundingsource'\r\n                                            ||  dataTargetField === 'lifemonths'\r\n                                            ||  dataTargetField === 'lifeyears'\r\n                                            ||  dataTargetField === 'perioddepreciation'\r\n                                            ||  dataTargetField === 'sourcecode'\r\n                                            ||  dataTargetField === 'accumulateddepreciation'\r\n                                            ||  dataTargetField === 'depreciationasofdate'\r\n                                            ||  dataTargetField === 'disposaldate') {\r\n                                              columnMap.push(column);\r\n                                            }\r\n                                            break;\r\n            case 'Cost Information':        if (dataTargetField === 'accumulateddepreciation'\r\n                                            ||  dataTargetField === 'costofreproductionnew'\r\n                                            ||  dataTargetField === 'historicalcost'\r\n                                            ||  dataTargetField === 'netproceeds'\r\n                                            ||  dataTargetField === 'salvagevalue') {\r\n                                              columnMap.push(column);\r\n                                            }\r\n                                            break;\r\n            case 'Descriptive Information': if (dataTargetField === 'vendor'\r\n                                            ||  dataTargetField === 'description'\r\n                                            ||  dataTargetField === 'description2'\r\n                                            ||  dataTargetField === 'description3'\r\n                                            ||  dataTargetField === 'facedescription'\r\n                                            ||  dataTargetField === 'manufacturer'\r\n                                            ||  dataTargetField === 'modelnumber'\r\n                                            ||  dataTargetField === 'quantity'\r\n                                            ||  dataTargetField === 'serialnumber') {\r\n                                              columnMap.push(column);\r\n                                            }\r\n                                            break;\r\n            case 'Locational Information':  if (dataTargetField === 'departmentname'\r\n                                            ||  dataTargetField === 'departmentnumber'\r\n                                            ||  dataTargetField === 'sitename'\r\n                                            ||  dataTargetField === 'sitenumber'\r\n                                            ||  dataTargetField === 'buildingname'\r\n                                            ||  dataTargetField === 'buildingnumber'\r\n                                            ||  dataTargetField === 'city'\r\n                                            ||  dataTargetField === 'division'\r\n                                            ||  dataTargetField === 'floor'\r\n                                            ||  dataTargetField === 'locationinplant'\r\n                                            ||  dataTargetField === 'plant'\r\n                                            ||  dataTargetField === 'room'\r\n                                            ||  dataTargetField === 'membername'\r\n                                            ||  dataTargetField === 'membernumber') {\r\n                                              columnMap.push(column);\r\n                                            }\r\n                                            break;\r\n            case 'NA Removing':           if (dataTargetField === 'inventoryimageurl1'\r\n                                            ||  dataTargetField === 'inventoryimageurl2'\r\n                                            ||  dataTargetField === 'inventoryimageurl3'\r\n                                            ||  dataTargetField === 'inventoryimageurl4'\r\n                                            ||  dataTargetField === 'inventoryimageurl5'\r\n                                            ||  dataTargetField === 'inventoryimageurl6'\r\n                                            ||  dataTargetField === 'inventoryimageurl7') {\r\n                                              columnMap.push(column);\r\n                                            }\r\n                                            break;\r\n            case 'Unique ID':               if (dataTargetField === 'assettagnumber'\r\n                                            ||  dataTargetField === 'audittrail'\r\n                                            ||  dataTargetField === 'oldtagnumber'\r\n                                            ||  dataTargetField === 'displayid') {\r\n                                              columnMap.push(column);\r\n                                            }\r\n                                            break;\r\n            case 'MISC Information':        if (dataTargetField === 'businessunit'\r\n                                            ||  dataTargetField === 'invoicenumber'\r\n                                            ||  dataTargetField === 'purchaseorder'\r\n                                            ||  dataTargetField === 'lastinventorydate'\r\n                                            ||  dataTargetField === 'projectnumber'\r\n                                            ||  dataTargetField === 'propertytype'\r\n                                            ||  dataTargetField === 'shipmenttrackingnumber') {\r\n                                              columnMap.push(column);\r\n                                            }\r\n                                            break;\r\n            case 'Others':                  columnMap.push(column);\r\n                                            break;\r\n            default:                        break;\r\n          }\r\n        });\r\n        if (columnMap.length > 0) {\r\n          this.columnCategories.push({\r\n            categoryName: category,\r\n            columnMap: columnMap\r\n          });\r\n          columns = columns.filter(column => !columnMap.includes(column));\r\n        }\r\n      });\r\n    }\r\n    if (dataTargetName === 'building' || dataTargetName === 'minorbuilding') {\r\n      this.buildingCategories.forEach((category) => {\r\n        columnMap = new Array<ColumnMap>();\r\n        columns.forEach(column => {\r\n          const dataTargetField = column.dataTargetField.toLowerCase().replace(/\\s/g, '');\r\n          switch (category) {\r\n            case 'Primary Info':      if (PrimaryInfoFieldLayout.left.findIndex(field => field.toLowerCase() === dataTargetField) !== -1\r\n                                      || PrimaryInfoFieldLayout.right.findIndex(field => field.toLowerCase() === dataTargetField) !== -1) {\r\n                                        columnMap.push(column);\r\n                                      }\r\n                                      break;\r\n            // tslint:disable-next-line: max-line-length\r\n            case 'Location':          if (BuildingLocationFieldLayout.left.findIndex(field => field.toLowerCase() === dataTargetField) !== -1\r\n                                      || BuildingLocationFieldLayout.right.findIndex(field => field.toLowerCase() === dataTargetField) !== -1) {\r\n                                        columnMap.push(column);\r\n                                      }\r\n                                      break;\r\n            // tslint:disable-next-line: max-line-length\r\n            case 'Valuation':         if (BuildingValuationFieldLayout.left.findIndex(field => field.toLowerCase() === dataTargetField) !== -1\r\n                                      || BuildingValuationFieldLayout.right.findIndex(field => field.toLowerCase() === dataTargetField) !== -1) {\r\n                                        columnMap.push(column);\r\n                                      }\r\n                                      break;\r\n            // tslint:disable-next-line: max-line-length\r\n            case 'Superstructure':    if (BuildingSuperstructureFieldLayout.left.findIndex(field => field.toLowerCase() === dataTargetField) !== -1\r\n                                      || BuildingSuperstructureFieldLayout.right.findIndex(field => field.toLowerCase() === dataTargetField) !== -1) {\r\n                                        columnMap.push(column);\r\n                                      }\r\n                                      break;\r\n            // tslint:disable-next-line: max-line-length\r\n            case 'Substructure':      if (BuildingSubStructureFieldLayout.left.findIndex(field => field.toLowerCase() === dataTargetField) !== -1\r\n                                      || BuildingSubStructureFieldLayout.right.findIndex(field => field.toLowerCase() === dataTargetField) !== -1) {\r\n                                        columnMap.push(column);\r\n                                      }\r\n                                      break;\r\n            // tslint:disable-next-line: max-line-length\r\n            case 'Occupancy':         if (dataTargetField.startsWith('occupancy')\r\n                                      ||  dataTargetField.startsWith('storyheight')) {\r\n                                        columnMap.push(column);\r\n                                      }\r\n                                      break;\r\n            case 'Construction':      if (dataTargetField.startsWith('ceilingfinish')\r\n                                      ||  dataTargetField.startsWith('coolingsystem')\r\n                                      ||  dataTargetField.startsWith('electricalquality')\r\n                                      ||  dataTargetField.startsWith('exteriorwallfinish')\r\n                                      ||  dataTargetField.startsWith('floorfinish')\r\n                                      ||  dataTargetField.startsWith('heatingsystem')\r\n                                      ||  dataTargetField.startsWith('interiorwallfinish')\r\n                                      ||  dataTargetField.startsWith('isoclass')\r\n                                      ||  dataTargetField.startsWith('partitionwallstructure')\r\n                                      ||  dataTargetField.startsWith('roofmaterial')\r\n                                      ||  dataTargetField.startsWith('roofpitch')) {\r\n                                        columnMap.push(column);\r\n                                      }\r\n                                      break;\r\n            // tslint:disable-next-line: max-line-length\r\n            case 'Systems':           if (BuildingSystemFieldLayout.left.findIndex(field => field.toLowerCase() === dataTargetField) !== -1\r\n                                      || BuildingSystemFieldLayout.right.findIndex(field => field.toLowerCase() === dataTargetField) !== -1) {\r\n                                        columnMap.push(column);\r\n                                      }\r\n                                      break;\r\n            // tslint:disable-next-line: max-line-length\r\n            case 'Site Attributes':   if (BuildingSiteAttributeFieldLayout.left.findIndex(field => field.toLowerCase() === dataTargetField) !== -1\r\n                                      || BuildingSiteAttributeFieldLayout.right.findIndex(field => field.toLowerCase() === dataTargetField) !== -1) {\r\n                                        columnMap.push(column);\r\n                                      }\r\n                                      break;\r\n            // tslint:disable-next-line: max-line-length\r\n            case 'Additional Data':   if (AdditionalDataFieldLayout.left.findIndex(field => field.toLowerCase() === dataTargetField) !== -1\r\n                                      || AdditionalDataFieldLayout.right.findIndex(field => field.toLowerCase() === dataTargetField) !== -1) {\r\n                                        columnMap.push(column);\r\n                                      }\r\n                                      break;\r\n            case 'CoreLogic':         if (CoreLogicFieldLayout.left.findIndex(field => field.toLowerCase() === dataTargetField) !== -1\r\n                                      || CoreLogicFieldLayout.right.findIndex(field => field.toLowerCase() === dataTargetField) !== -1) {\r\n                                        columnMap.push(column);\r\n                                      }\r\n                                      break;\r\n            // tslint:disable-next-line: max-line-length\r\n            case 'Secondary COPE Data (Wind)':          if (CopedataWindFieldLayout.left.findIndex(field => field.toLowerCase() === dataTargetField) !== -1\r\n                                                        || CopedataWindFieldLayout.right.findIndex(field => field.toLowerCase() === dataTargetField) !== -1) {\r\n                                                          columnMap.push(column);\r\n                                                        }\r\n                                                        break;\r\n            // tslint:disable-next-line: max-line-length\r\n            case 'Secondary COPE Data (Earthquake)':    if (CopeDataEarthquakeFieldLayout.left.findIndex(field => field.toLowerCase() === dataTargetField) !== -1\r\n                                                        || CopeDataEarthquakeFieldLayout.right.findIndex(field => field.toLowerCase() === dataTargetField) !== -1) {\r\n                                                          columnMap.push(column);\r\n                                                        }\r\n                                                        break;\r\n            // tslint:disable-next-line: max-line-length\r\n            case 'Flood Zone':                          if (InitialFloodPlainFieldLayout.left.findIndex(field => field.toLowerCase() === dataTargetField) !== -1\r\n                                                        || InitialFloodPlainFieldLayout.right.findIndex(field => field.toLowerCase() === dataTargetField) !== -1\r\n                                                        // tslint:disable-next-line: max-line-length\r\n                                                        || BuildingFloodPlainFieldLayout.left.findIndex(field => field.toLowerCase() === dataTargetField) !== -1\r\n                                                        || BuildingFloodPlainFieldLayout.right.findIndex(field => field.toLowerCase() === dataTargetField) !== -1) {\r\n                                                          columnMap.push(column);\r\n                                                        }\r\n                                                        break;\r\n            // tslint:disable-next-line: max-line-length\r\n            case 'Others':            if (BuildingSubStructureFieldLayout.left.findIndex(field => field.toLowerCase() === dataTargetField) !== -1\r\n                                      || BuildingSubStructureFieldLayout.right.findIndex(field => field.toLowerCase() === dataTargetField) !== -1) {\r\n                                        columnMap.push(column);\r\n                                      }\r\n                                      break;\r\n            default:                  break;\r\n          }\r\n        });\r\n        if (columnMap.length > 0) {\r\n          this.columnCategories.push({\r\n            categoryName: category,\r\n            columnMap: columnMap\r\n          });\r\n          columns = columns.filter(column => !columnMap.includes(column));\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { DataImportService } from '../services/data-import.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-data-import-parent',\r\n  templateUrl: './data-import-parent.component.html',\r\n})\r\nexport class DataImportParentComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  constructor(\r\n    public dataImportService: DataImportService\r\n  ) { }\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { SortDescriptor, orderBy } from '@progress/kendo-data-query/dist/es/main';\r\nimport { DataImportService } from '../services/data-import.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { AlertService } from '../../_core/services/alert.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { ImportResultDto } from '../../_api/dtos/import-result.dto';\r\nimport { ImportSpreadsheetDto } from '../../_api/dtos/import-spreadsheet.dto';\r\nimport { WizardService } from '../../_ui/services/wizard.service';\r\nimport { DataImport } from '../../_models/data-import.model';\r\nimport { GridDataResult } from '@progress/kendo-angular-grid/dist/es2015/main';\r\nimport { Subject } from 'rxjs';\r\nimport { OnInit, OnDestroy, Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-data-import-review',\r\n  templateUrl: './data-import-review.component.html'\r\n})\r\nexport class DataImportReviewComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  private destroyed$ = new Subject<any>();\r\n  public multiple = false;\r\n  public allowUnsort = true;\r\n  public headers: any;\r\n  public dto: ImportSpreadsheetDto;\r\n  public APIError = '';\r\n\r\n  isLoading: boolean;\r\n  spreadsheetHasErrors = false;\r\n\r\n  sort: SortDescriptor[] = [];\r\n  private gridView: GridDataResult;\r\n  sampleData: any[];\r\n\r\n  private dataImport: DataImport;\r\n\r\n  constructor(\r\n    private wizardService: WizardService,\r\n    private dataImportService: DataImportService,\r\n    private alertService: AlertService\r\n  ) {}\r\n\r\n  sortChange(sort: SortDescriptor[]): void {\r\n    this.sort = sort;\r\n    this.loadSampleData();\r\n  }\r\n\r\n  private loadSampleData(): void {\r\n    this.gridView = {\r\n      data: orderBy(this.sampleData, this.sort),\r\n      total: this.sampleData.length\r\n    };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dataImport = this.dataImportService.activeDataImport;\r\n\r\n    const spreadSheetMapping = this.dataImport.mapping.filter(c => !!c.spreadsheetColumn && !!c.spreadsheetColumn.name);\r\n    const uniqueColumn = spreadSheetMapping.find(column => {\r\n      return column.importTemplateColumnId === this.dataImportService.currentKeyFieldId;\r\n    });\r\n\r\n    this.dto = new ImportSpreadsheetDto(\r\n      this.dataImport.excelSummary.id,\r\n      this.dataImport.spreadsheetUpload.groupId,\r\n      this.dataImport.spreadsheetUpload.dataTargetId,\r\n      10,\r\n      {\r\n        SpreadsheetMappings: spreadSheetMapping,\r\n        Mode: this.dataImportService.activeReplace === true ? 0 : 1,\r\n        UniqueIdentifierColumn: uniqueColumn\r\n      }\r\n    );\r\n\r\n    this.dataImportService\r\n      .getReviewData(this.dto)\r\n      .pipe(takeUntil(this.destroyed$))\r\n      .subscribe(data => {\r\n        if (data && data.dataRows) {\r\n          this.sampleData = data.dataRows;\r\n          this.headers = this.getKeys(this.sampleData[0]);\r\n        }\r\n      },\r\n      error => {\r\n        this.APIError = error.error;\r\n        this.spreadsheetHasErrors = true;\r\n        this.dataImportService.importResult.errors = ['error'];\r\n        this.alertService.error(!!error.error ? error.error : 'An unknown error has occurred while importing the spreadsheet');\r\n      });\r\n  }\r\n\r\n  back(event) {\r\n    event.preventDefault();\r\n    this.wizardService.setActiveTab('step-2');\r\n  }\r\n\r\n  onSubmit(form) {\r\n    this.isLoading = true;\r\n\r\n    this.dataImportService\r\n      .importSpreadsheet(this.dto)\r\n      .pipe(takeUntil(this.destroyed$))\r\n      .subscribe(data => {\r\n        const importResult = new ImportResultDto(data.success, data.rowsAdded, data.rowsUpdated, data.errors, data.name);\r\n\r\n        this.isLoading = false;\r\n        this.wizardService.setActiveTab('step-4');\r\n        this.dataImportService.importResult = importResult;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  private getKeys(obj) {\r\n    const keys = Object.keys(obj).map(key => {\r\n      return { key: key };\r\n    });\r\n\r\n    return keys;\r\n  }\r\n}\r\n","import { DataImportService } from '../services/data-import.service';\r\nimport { AlertService } from '../../_core/services/alert.service';\r\nimport { ConfirmModalComponent } from '../../_shared/components/confirm-modal.component';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { SpreadsheetColumnDto } from '../../_api/dtos/spreadsheet-column.dto';\r\nimport { ModalProperties } from '../../_models/modal-properties.model';\r\nimport { NgForm } from '@angular/forms';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { WizardService } from '../../_ui/services/wizard.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DataImport } from '../../_models/data-import.model';\r\nimport { DataTarget } from '../../_models/data-target.model';\r\nimport { Locale } from '@progress/kendo-angular-intl';\r\nimport { UploadSpreadsheetDto } from '../../_api/dtos/upload-spreadsheet.dto';\r\nimport { Subject, forkJoin } from 'rxjs';\r\nimport { OnInit, OnDestroy, Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-data-import-upload',\r\n  templateUrl: './data-import-upload.component.html'\r\n})\r\nexport class DataImportUploadComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  private destroyed$ = new Subject<any>();\r\n  public isLoading = false;\r\n  public importAfterReconciliation: boolean = this.dataImportService.importAfterReconciliation;\r\n  public replace = false;\r\n  public isButtonSelected = false;\r\n  public dto: UploadSpreadsheetDto = new UploadSpreadsheetDto();\r\n  public locales: Array<Locale> = new Array<Locale>();\r\n  public availableDataTargets: Array<DataTarget> = new Array<DataTarget>();\r\n  public currentDataTargetId: string;\r\n  public APIError = '';\r\n  public groupId =\"\";\r\n\r\n  dataImport: DataImport;\r\n  showMissingFileAlert = false;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private wizardService: WizardService,\r\n    private alertService: AlertService,\r\n    private modalService: NgbModal,\r\n    public dataImportService: DataImportService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n\r\nthis.groupId = this.route.parent.snapshot.paramMap.get('groupId');\r\n\r\n    if (this.dataImportService.importResult.success) {\r\n      this.dataImportService.resetPublicProperties();\r\n    }\r\n\r\n    if (this.dataImportService.activeReplace !== undefined) {\r\n      this.replace = this.dataImportService.activeReplace;\r\n    }\r\n\r\n    this.dataImport = this.dataImportService.activeDataImport;\r\n\r\n    if (this.dataImport.spreadsheetUpload) {\r\n      this.dto.file = this.dataImport.spreadsheetUpload.file;\r\n      this.dto.fileName = this.dataImport.excelSummary.spreadsheetFileName;\r\n      this.dto.groupId = this.dataImport.spreadsheetUpload.groupId;\r\n      this.dto.localeId = this.dataImport.spreadsheetUpload.localeId;\r\n      this.dto.dataTargetId = this.dataImport.spreadsheetUpload.dataTargetId;\r\n    }\r\n\r\n    this.dataImportService\r\n      .getLocales()\r\n      .pipe(takeUntil(this.destroyed$))\r\n      .subscribe(result => {\r\n        this.locales = result;\r\n      });\r\nforkJoin(\r\n this.dataImportService.getDataTargets(),\r\n  this.dataImportService.getDataTargetsForGroup(this.groupId)).pipe(takeUntil(this.destroyed$))\r\n      .subscribe(results => {\r\n        if(this.dataImportService.reconciliationStarted){\r\n          this.availableDataTargets = results[0].filter((dataTarget: DataTarget) => {\r\n            return dataTarget.name === 'Client Inventory' || dataTarget.name === 'Actual Inventory';\r\n          });\r\n        } else if(this.dataImportService.reconciliationCompleted) {\r\n          this.availableDataTargets = results[0].filter((dataTarget: DataTarget) => {\r\n            return dataTarget.name.startsWith('Consolidated') || dataTarget.name.includes('Building');\r\n          });\r\n        } else {\r\n          this.availableDataTargets = results[0];\r\n          if( results[1] != null && results[1].length>0 )\r\n          this.availableDataTargets=  this.availableDataTargets.concat(results[1])\r\n      }\r\n      });\r\n    this.dto.groupId = this.route.parent.snapshot.paramMap.get('groupId');\r\n  }\r\n\r\n  fileChange(event) {\r\n    const fileList: FileList = event.target.files;\r\n\r\n    if (fileList.length > 0) {\r\n      this.dto.file = fileList[0];\r\n      this.showMissingFileAlert = false;\r\n    }\r\n  }\r\n\r\n  buttonChange(option: string) {\r\n    this.isButtonSelected = true;\r\n    this.replace = option === 'replace';\r\n  }\r\n\r\n  clear() {\r\n    this.dataImport.spreadsheetUpload = null;\r\n  }\r\n\r\n  closeAlert(alert) {\r\n    this.showMissingFileAlert = false;\r\n  }\r\n\r\n  displayPostReconcilModal(event: MouseEvent, form: NgForm) {\r\n    event.preventDefault();\r\n    event.stopImmediatePropagation();\r\n\r\n    const modalOptions = <ModalProperties>{\r\n      heading: {\r\n        key: 'Import Alert'\r\n      },\r\n      body: {\r\n        key: 'If you continue, past reconciliation relationships will be removed.'\r\n      },\r\n      dismissText: {\r\n        key: 'Cancel'\r\n      },\r\n      successText: {\r\n        key: 'Continue'\r\n      },\r\n      translateBaseKey: this.i18n.dataImport\r\n    };\r\n\r\n    const modal = this.modalService.open(ConfirmModalComponent, { size: 'lg' });\r\n    modal.componentInstance.options = modalOptions;\r\n\r\n    modal.result.then(confirm => {\r\n      this.onSubmit(form);\r\n    },\r\n    cancel => {});\r\n  }\r\n\r\n  displayReplaceWarning(form: NgForm) {\r\n    const modalOptions = <ModalProperties>{\r\n      heading: {\r\n        key: 'Data import replace warning'\r\n      },\r\n      body: {\r\n        key: 'Data import replace warning msg'\r\n      },\r\n      dismissText: {\r\n        key: 'Cancel'\r\n      },\r\n      successText: {\r\n        key: 'Continue'\r\n      },\r\n      translateBaseKey: this.i18n.dataImport\r\n    };\r\n\r\n    const modal = this.modalService.open(ConfirmModalComponent, { size: 'lg' });\r\n    modal.componentInstance.options = modalOptions;\r\n    modal.result.then(confirm => {\r\n        this.uploadSpreadsheet();\r\n      },\r\n      cancel => {\r\n        this.isLoading = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmit(form) {\r\n    this.isLoading = true;\r\n\r\n    if (!this.isButtonSelected) {\r\n      this.isLoading = false;\r\n      return;\r\n    }\r\n\r\n    if (form.valid) {\r\n      if (this.replace) {\r\n        this.dataImportService.getDataCountByGroup(this.dto).subscribe(\r\n          (count) => {\r\n            if (count > 0) {\r\n              this.displayReplaceWarning(form);\r\n            } else {\r\n              this.uploadSpreadsheet();\r\n            }\r\n          }\r\n        );\r\n      } else {\r\n        this.uploadSpreadsheet();\r\n      }\r\n    } else {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  uploadSpreadsheet() {\r\n    this.dataImportService\r\n          .uploadSpreadsheet(this.dto, this.dto.dataTargetId)\r\n          .pipe(takeUntil(this.destroyed$))\r\n          .subscribe(\r\n            result => {\r\n              // console.log(result);\r\n              if (typeof result === 'number') {\r\n                this.alertService.error(\r\n                  'There was an error processing the file. Please check the file, correct any errors and submit again.'\r\n                );\r\n                this.isLoading = false;\r\n              } else if (result) {\r\n                if (result.importErrors && result.importErrors.length > 0) {\r\n                  this.alertService\r\n                    .error(\r\n                      `There were {{importErrorCount}} import errors.\\n* {{importError}} \\nPlease correct any errors and submit again.`,\r\n                      null,\r\n                      { importErrorCount: result.importErrors.length, importError: result.importErrors[0] }\r\n                    );\r\n                  this.isLoading = false;\r\n                } else {\r\n\r\n                this.dataImportService.getExistingCustomColumns(this.dto.groupId, result.dataTargetDescription.name)\r\n                .pipe(takeUntil(this.destroyed$))\r\n                .subscribe(\r\n                  cols => {\r\n                    this.dataImportService.activeReplace = this.replace;\r\n                    this.dto.dataTargetName = this.availableDataTargets.find(c => c.id === this.dto.dataTargetId).name;\r\n\r\n                    this.dataImportService.currentDataTargetId = this.dto.dataTargetId;\r\n                    cols.forEach(c => { c.spreadsheetColumn = <SpreadsheetColumnDto>{}; });\r\n                    this.dataImportService.initDataImport(result, this.dto, cols);\r\n                    this.wizardService.setActiveTab('step-2');\r\n                    this.isLoading = false;\r\n                  }\r\n                );\r\n              }\r\n            } else {\r\n              this.isLoading = false;\r\n              this.showMissingFileAlert = true;\r\n            }\r\n          },\r\n          error => {\r\n            this.isLoading = false;\r\n            this.APIError = error.error;\r\n\r\n              // This needs to be more descriptive\r\n              this.showMissingFileAlert = true;\r\n            }\r\n          );\r\n  }\r\n\r\n  isConsolidatedSelected() {\r\n    const dataTarget = this.availableDataTargets.find(a => a.id === this.dto.dataTargetId);\r\n    if (dataTarget && dataTarget.name.startsWith('Consolidated')) {\r\n      this.buttonChange('append');\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n  }\r\n}\r\n","import { DataImportService } from '../services/data-import.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { NgbTabset } from '@ng-bootstrap/ng-bootstrap';\r\nimport { WizardService } from '../../_ui/services/wizard.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { GroupSearchService } from '../../_api/services/group-search.service';\r\nimport { ContractService } from '../../_api/services/dashboard/contract.service';\r\n\r\n@Component({\r\n  selector: 'app-data-import',\r\n  templateUrl: './data-import-wizard.component.html'\r\n})\r\nexport class DataImportWizardComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  private destroyed$ = new Subject<any>();\r\n\r\n  public activeTab: any;\r\n  contractId: string;\r\n  groupId: string;\r\n  isLoading: boolean;\r\n  canDataImport: boolean;\r\n  errorMessage: string;\r\n\r\n  @ViewChild('tabs', { static: false }) private tabs: NgbTabset;\r\n\r\n  constructor(\r\n    private wizardService: WizardService,\r\n    private route: ActivatedRoute,\r\n    private dataImportService: DataImportService,\r\n    private contractService: ContractService,\r\n    private groupService: GroupSearchService\r\n  ) {\r\n    // subscribe to home component messages\r\n    this.wizardService.activeTab$.pipe(takeUntil(this.destroyed$)).subscribe(activeTab => {\r\n      this.activeTab = activeTab;\r\n      this.wizardService.activeTabs.push(activeTab);\r\n      if (this.tabs) {\r\n        // Setting timeout to wait for tab to be set to enabled\r\n        setTimeout(() => {\r\n          //\r\n          this.tabs.select(activeTab);\r\n        }, 100);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.isLoading = true;\r\n    this.groupId = this.route.parent.snapshot.paramMap.get('groupId');\r\n    this.groupService\r\n      .getContractGroup(this.groupId)\r\n      .pipe(takeUntil(this.destroyed$))\r\n      .subscribe(\r\n        result => {\r\n          this.contractId = result.contractId;\r\n\r\n          this.contractService\r\n            .getContractGroupsByGroupId(this.contractId, this.groupId)\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe(\r\n              contractGroups => {\r\n\r\n                this.dataImportService.dataImportHistory = contractGroups[0].recordCounts.length ? true : false;\r\n\r\n                if (contractGroups[0].reconciliationProgress.toLowerCase() === 'notstarted') {\r\n                  this.dataImportService.importAfterReconciliation = false;\r\n                  this.dataImportService.reconciliationStarted = false;\r\n                }else if (contractGroups[0].reconciliationProgress.toLowerCase() === 'started') {\r\n                  this.dataImportService.reconciliationStarted = true;\r\n                }else if (contractGroups[0].reconciliationProgress.toLowerCase() === 'completed') {\r\n                  this.dataImportService.importAfterReconciliation = true;\r\n                  this.dataImportService.reconciliationCompleted = true;\r\n\r\n                }\r\n                this.canDataImport = true;\r\n                this.isLoading = false;\r\n              },\r\n              error => {\r\n                this.errorMessage = 'Error determining reconciliation status, please try again later.';\r\n                this.isLoading = false;\r\n                this.canDataImport = false;\r\n              }\r\n            );\r\n        },\r\n        error => {\r\n          this.errorMessage = 'Error loading group, please try again.';\r\n          this.isLoading = false;\r\n          this.canDataImport = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  public isActive(id) {\r\n    return this.wizardService.activeTabs.indexOf(id) === -1;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n    // console.log('import wizard destoryed');\r\n  }\r\n}\r\n","import { CopyGroupComponent } from '../../portal-management/components/copy-group.component';\r\n\r\nimport { DataCopyService } from '../services/data-copy.service';\r\nimport { HelperService } from '../../_core/services/helper.service';\r\nimport { AlertService } from '../../_core/services/alert.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { TranslationManager } from '../../_core/i18n/translation-manager';\r\nimport { ComponentRef, ComponentFactoryResolver, ViewContainerRef, ViewChild, OnDestroy, OnInit, Component } from '@angular/core';\r\nimport { DataTargetName } from '../../_enums/data-target-name';\r\nimport { CopyGroupsDto } from '../../_api/_runtime/dtos/copy-groups.dto';\r\nimport { DataTarget } from '../../_models/data-target.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { WizardService } from '../../_ui/services/wizard.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-data-pros-renewal',\r\n  templateUrl: './data-pros-renewal.component.html'\r\n})\r\nexport class DataProsRenewalComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  @ViewChild('selections', { read: ViewContainerRef, static: true })\r\n  selectionsContainer: ViewContainerRef;\r\n  public groupId: string;\r\n  public dataTargetName: string;\r\n  public dataAlreadyExists = false;\r\n  public availableDataTargets: Array<DataTarget> = new Array<DataTarget>();\r\n  public selections: Array<ComponentRef<CopyGroupComponent>> = new Array<ComponentRef<CopyGroupComponent>>();\r\n  public selectionErrors = false;\r\n  public replace = true;\r\n  public waiting: Subscription;\r\n  model = {\r\n    copyType: ''\r\n  };\r\n\r\n  constructor(\r\n    private wizardService: WizardService,\r\n    private componentResolver: ComponentFactoryResolver,\r\n    private route: ActivatedRoute,\r\n    private dataCopyService: DataCopyService,\r\n    private helperService: HelperService,\r\n    private translateService: TranslationManager\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.groupId = this.route.parent.snapshot.paramMap.get('groupId');\r\n    this.waiting = this.dataCopyService.getDataTargets().subscribe(result => {\r\n      this.availableDataTargets = result.filter((dataTarget: DataTarget) => {\r\n        return dataTarget.name === 'Client Inventory' || dataTarget.name === 'Actual Inventory';\r\n      });\r\n    });\r\n\r\n    this.dataTargetName = this.dataCopyService.activeDataTargetName;\r\n    this.replace = this.dataCopyService.activeReplace || true;\r\n    if (this.dataCopyService.activeSelections) {\r\n      this.dataCopyService.activeSelections.forEach((selection: ComponentRef<CopyGroupComponent>) => {\r\n        this.addSelection(selection);\r\n      });\r\n    } else {\r\n      this.addSelection();\r\n    }\r\n  }\r\n\r\n  prosRenewal(): void {\r\n    this.selectionErrors = this.hasErrors();\r\n    if (!this.selectionErrors) {\r\n      this.dataCopyService.activeDataTargetName = this.dataTargetName;\r\n      this.dataCopyService.activeReplace = this.replace;\r\n      this.dataCopyService.activeSelections = this.selections;\r\n\r\n      const dto: CopyGroupsDto = this.buildRequestDto();\r\n      dto.prosRenewal = true;\r\n      this.waiting = this.dataCopyService.copyGroups(dto).subscribe(\r\n        res => {\r\n          this.dataCopyService.isError = false;\r\n          this.wizardService.setActiveTab('step-2-copy');\r\n        },\r\n        error => {\r\n          this.dataCopyService.isError = true;\r\n          this.dataCopyService.errorMessage = this.translateService.instant(this.i18n.dataImport + error.error.message);\r\n          this.wizardService.setActiveTab('step-2-copy');\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  buildRequestDto(): CopyGroupsDto {\r\n    const request = <CopyGroupsDto>{\r\n      fromGroupIds: new Array<string>(),\r\n      toGroupId: this.groupId,\r\n      dataTargetTo: null,\r\n      memberIds: new Array<string>(),\r\n      siteIds: new Array<string>(),\r\n      replace: this.replace\r\n    };\r\n\r\n    if (this.dataTargetName === 'Client Inventory') {\r\n      request.dataTargetTo = DataTargetName.client;\r\n    } else if (this.dataTargetName === 'Actual Inventory') {\r\n      request.dataTargetTo = DataTargetName.inventory;\r\n    }\r\n\r\n    this.selections.forEach((selection: ComponentRef<CopyGroupComponent>) => {\r\n      const refInstance = selection.instance.ref.instance;\r\n\r\n      // Add Groups\r\n      if (refInstance.selectedGroup != null && !request.fromGroupIds.includes(refInstance.selectedGroup.id)) {\r\n        request.fromGroupIds.push(refInstance.selectedGroupHierarchy.id);\r\n      }\r\n\r\n      // Add Members\r\n      if (refInstance.selectedMember != null && !request.memberIds.includes(refInstance.selectedMember.id)) {\r\n        request.memberIds.push(refInstance.selectedMember.id);\r\n      }\r\n\r\n      // Add Sites\r\n      if (refInstance.selectedSite != null && !request.siteIds.includes(refInstance.selectedSite.id)) {\r\n        request.siteIds.push(refInstance.selectedSite.id);\r\n      }\r\n    });\r\n\r\n    this.dataCopyService.copyFromGroupIds = request.fromGroupIds;\r\n    return request;\r\n  }\r\n\r\n  addSelection(existing?: ComponentRef<CopyGroupComponent>): void {\r\n    const comp = this.componentResolver.resolveComponentFactory(CopyGroupComponent);\r\n    const selection = this.selectionsContainer.createComponent(comp);\r\n\r\n    // Input References\r\n    if (existing) {\r\n      selection.instance.instanceId = existing.instance.instanceId;\r\n      selection.instance.toGroupId = existing.instance.toGroupId;\r\n      selection.instance.selectedContract = existing.instance.selectedContract;\r\n      selection.instance.selectedGroupHierarchy = existing.instance.selectedGroupHierarchy;\r\n      selection.instance.selectedGroup = existing.instance.selectedGroup;\r\n      selection.instance.groups = existing.instance.groups;\r\n      selection.instance.selectedMember = existing.instance.selectedMember;\r\n      selection.instance.members = existing.instance.members;\r\n      selection.instance.selectedSite = existing.instance.selectedSite;\r\n      selection.instance.sites = existing.instance.sites;\r\n      selection.instance.ref = selection;\r\n    } else {\r\n      selection.instance.instanceId = this.helperService.generateGuid();\r\n      selection.instance.toGroupId = this.groupId;\r\n      selection.instance.ref = selection;\r\n    }\r\n\r\n    selection.instance.componentRemoved.subscribe((instanceId: string) => {\r\n      this.removeComponent(instanceId);\r\n    });\r\n\r\n    this.selections.push(selection);\r\n  }\r\n\r\n  dataTargetChanged(dataTargetName: string): void {\r\n    let dataTarget: DataTargetName;\r\n    if (dataTargetName === 'Client Inventory') {\r\n      dataTarget = DataTargetName.client;\r\n    } else if (dataTargetName === 'Actual Inventory') {\r\n      dataTarget = DataTargetName.inventory;\r\n    }\r\n\r\n    this.dataCopyService.getAssetCount(this.groupId, dataTarget, true).subscribe(\r\n      (res: number) => {\r\n        if (!res || res === 0) {\r\n          this.dataAlreadyExists = false;\r\n        } else {\r\n          this.dataAlreadyExists = true;\r\n        }\r\n      },\r\n      error => {\r\n        this.dataAlreadyExists = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  removeComponent(instanceId: string): void {\r\n    this.selections.forEach((selection: ComponentRef<CopyGroupComponent>, index: number) => {\r\n      if (selection.instance.instanceId === instanceId) {\r\n        this.selections.splice(index, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  hasErrors(): boolean {\r\n    if (!this.dataTargetName || this.dataTargetName === '') {\r\n      return true;\r\n    }\r\n\r\n    for (let i = 0; i < this.selections.length; i++) {\r\n      const selection: ComponentRef<CopyGroupComponent> = this.selections[i];\r\n      const refInstance = selection.instance.ref.instance;\r\n      if (refInstance.selectedContract == null || refInstance.selectedGroup == null) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  hasSelections(): boolean {\r\n    return this.selections.length > 0;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.waiting) {\r\n      this.waiting.unsubscribe();\r\n    }\r\n  }\r\n\r\n  updateCopyType(event: any) {\r\n    this.replace = event.target.value === 'replace';\r\n  }\r\n}\r\n","import { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { NgbTabset } from '@ng-bootstrap/ng-bootstrap';\r\nimport { WizardService } from '../../_ui/services/wizard.service';\r\n\r\n@Component({\r\n  selector: 'pros-renewal-wizard',\r\n  templateUrl: './pros-renewal-wizard.component.html',\r\n  // styleUrls: ['./pros-renewal-wizard.component.scss']\r\n})\r\nexport class ProsRenewalWizardComponent implements  OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  subscription: Subscription;\r\n  public activeTab: any;\r\n\r\n  @ViewChild('prostabs', { static: false }) private tabs: NgbTabset;\r\n\r\n  constructor(private wizardService: WizardService) {\r\n    // subscribe to home component messages\r\n    this.subscription = this.wizardService.activeTab$.subscribe(activeTab => {\r\n      this.activeTab = activeTab;\r\n      this.wizardService.activeTabs.push(activeTab);\r\n\r\n      if (this.tabs) {\r\n        // Setting timeout to wait for tab to be set to enabled\r\n        setTimeout(() => {\r\n          //\r\n          this.tabs.select(activeTab);\r\n        }, 100);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  public isActive(id) {\r\n    return this.wizardService.activeTabs.indexOf(id) === -1;\r\n  }\r\n}\r\n","import {SharedModule} from '../_shared/shared.module';\r\n\r\nimport { DataImportParentComponent } from './components/data-import-parent.component';\r\nimport { DataImportUploadComponent } from './components/data-import-upload.component';\r\nimport { DataImportMappingComponent } from './components/data-import-mapping.component';\r\nimport { DataImportReviewComponent } from './components/data-import-review.component';\r\nimport { DataImportFinishComponent } from './components/data-import-finish.component';\r\nimport { DataImportWizardComponent } from './components/data-import-wizard.component';\r\nimport { CreateCustomColumnComponent } from './components/create-custom-column.component';\r\n\r\nimport { DataCopyGroupsComponent } from './components/data-copy-groups.component';\r\nimport { DataCopyFinishComponent } from './components/data-copy-finish.component';\r\nimport { DataCopyWizardComponent } from './components/data-copy-wizard.component';\r\n\r\nimport { ShowAutoMappedPipe } from './pipes/show-auto-mapped.pipe';\r\nimport { ImportTemplatesApiService } from '../_api/_configuration/services/import-templates-api.service';\r\nimport { DataImportService } from './services/data-import.service';\r\nimport { DataCopyService } from './services/data-copy.service';\r\nimport { CoreModule } from '../_core/core.module';\r\nimport { OrderModule } from 'ngx-order-pipe';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { GridModule } from '@progress/kendo-angular-grid';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { LaddaModule } from 'angular2-ladda';\r\nimport { DataImportRepository } from '../_api/services/data-import/data-import-repository.service';\r\nimport { ProsRenewalWizardComponent } from './components/pros-renewal-wizard.component';\r\nimport { DataProsRenewalComponent } from './components/data-pros-renewal.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CoreModule,\r\n    SharedModule,\r\n    BrowserModule,\r\n    NgbModule,\r\n    BrowserAnimationsModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    GridModule,\r\n    HttpClientModule,\r\n    LaddaModule,\r\n    OrderModule\r\n  ],\r\n  declarations: [\r\n    DataImportParentComponent,\r\n    DataImportUploadComponent,\r\n    DataImportMappingComponent,\r\n    DataImportReviewComponent,\r\n    DataImportFinishComponent,\r\n    DataImportWizardComponent,\r\n    DataCopyGroupsComponent,\r\n    DataCopyFinishComponent,\r\n    DataCopyWizardComponent,\r\n    CreateCustomColumnComponent,\r\n    ShowAutoMappedPipe,\r\n    ProsRenewalWizardComponent,\r\n    DataProsRenewalComponent\r\n  ],\r\n  providers: [\r\n    DataImportRepository,\r\n    DataImportService,\r\n    DataCopyService,\r\n    ImportTemplatesApiService\r\n  ]\r\n})\r\nexport class DataImportModule {}\r\n","import { Pipe } from '@angular/core';\r\nimport { PipeTransform } from '@angular/core';\r\nimport { ColumnMap } from '../../_models/column-map.model';\r\n\r\n@Pipe({\r\n  name: 'showAutoMapped',\r\n  pure: false\r\n})\r\nexport class ShowAutoMappedPipe implements PipeTransform {\r\n  options = [];\r\n\r\n  transform(values: Array<ColumnMap>, showAutoMapped: boolean) {\r\n    const filtered = new Array<ColumnMap>();\r\n\r\n    if (showAutoMapped) {\r\n      return values;\r\n    }\r\n\r\n    if (!showAutoMapped) {\r\n      values.forEach(col => {\r\n\r\n\r\n        if (!col.isAutoMapped) {\r\n          filtered.push(col);\r\n        }\r\n      });\r\n\r\n      return filtered;\r\n    }\r\n  }\r\n}\r\n","\r\nimport { CopyGroupComponent } from '../../portal-management/components/copy-group.component';\r\nimport { Injectable, ComponentRef } from '@angular/core';\r\nimport { DataImportRepository } from '../../_api/services/data-import/data-import-repository.service';\r\nimport { GroupApiService } from '../../_api/_runtime/services/group-api.service';\r\nimport { InventoryApiService } from '../../_api/_runtime/services/inventory-api.service';\r\nimport { Observable } from 'rxjs';\r\nimport { ImportTemplateDto } from '../../_api/dtos/data-import/import-template.dto';\r\nimport { CopyGroupsDto } from '../../_api/_runtime/dtos/copy-groups.dto';\r\n\r\n@Injectable()\r\nexport class DataCopyService {\r\n\r\n    activeDataTargetName: string;\r\n    activeReplace: boolean;\r\n    activeSelections: Array<ComponentRef<CopyGroupComponent>>;\r\n    isError: boolean;\r\n    errorMessage: string;\r\n    copyFromGroupIds: Array<string>;\r\n\r\n    constructor(\r\n        private repository: DataImportRepository,\r\n        private groupService: GroupApiService,\r\n        private inventoryService: InventoryApiService\r\n    ) {}\r\n\r\n    getDataTargets(): Observable<ImportTemplateDto[]> {\r\n        return this.repository.getDataTargets();\r\n    }\r\n\r\n    public copyGroups(request: CopyGroupsDto): Observable<string> {\r\n        return this.groupService.copyGroups(request, true);\r\n    }\r\n\r\n    public getAssetCount(groupId: string, dataTarget: number, handleLocalError): Observable<number> {\r\n        return this.inventoryService.getAssetCountByGroup(groupId, dataTarget, handleLocalError);\r\n    }\r\n}","import { AlertService } from '../../_core/services/alert.service';\r\nimport { of, Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { DataImport } from '../../_models/data-import.model';\r\nimport { ImportResultDto } from '../../_api/dtos/import-result.dto';\r\nimport { DataImportRepository } from '../../_api/services/data-import/data-import-repository.service';\r\nimport { UploadSpreadsheetDto } from '../../_api/dtos/upload-spreadsheet.dto';\r\nimport { ColumnMap } from '../../_models/column-map.model';\r\nimport { ExcelSummaryDto } from '../../_api/dtos/excel-summary.dto';\r\nimport { DataTargetDescription } from '../../_models/data-target-description.model';\r\nimport { SpreadsheetColumnDto } from '../../_api/dtos/spreadsheet-column.dto';\r\nimport { ImportSpreadsheetDto } from '../../_api/dtos/import-spreadsheet.dto';\r\nimport { ImportTemplateDto } from '../../_api/dtos/data-import/import-template.dto';\r\nimport { SupportedCustomColumnDataTypeDto } from '../../_api/dtos/shared/supported-custom-column-datatype.dto';\r\nimport { Locale } from '../../_models/locale.model';\r\nimport { HeaderRow } from '../../_models/header-row.model';\r\nimport { DataTargetField } from '../../_models/data-target-field.model';\r\nimport { InventoryApiService } from '../../_api/_runtime/services/inventory-api.service';\r\nimport { InsuranceApiService } from '../../_api/_runtime/services/insurance-api.service';\r\nimport { DataTargetName } from '../../_enums/data-target-name';\r\n\r\n@Injectable()\r\nexport class DataImportService {\r\n  runtimeEndpoint: string;\r\n  configurationEndpoint: string;\r\n  importAfterReconciliation: boolean;\r\n  reconciliationStarted: boolean;\r\n  reconciliationCompleted: boolean;\r\n  dataImportHistory: boolean;\r\n  activeReplace: boolean;\r\n  activeDataImport: DataImport = new DataImport();\r\n  currentDataTargetId: string;\r\n  currentImportTemplate: ImportTemplateDto = <ImportTemplateDto>{};\r\n  currentKeyFieldId: string;\r\n  importResult: ImportResultDto = new ImportResultDto();\r\n\r\n  constructor(\r\n    private repository: DataImportRepository,\r\n    private alertService: AlertService,\r\n    private inventoryApiService: InventoryApiService\r\n  ) {}\r\n\r\n  initDataImport(result: any, spreadsheetUpload: UploadSpreadsheetDto, groupDataCustomColumns: Array<ColumnMap>) {\r\n    const excelSummary = new ExcelSummaryDto(\r\n      result.id,\r\n      this.mapSpreadsheetColumns(result.spreadsheetColumns),\r\n      result.spreadsheetFilename,\r\n      this.mapHeaderRow(result.headerRow),\r\n      this.mapTargetDescription(result.dataTargetDescription),\r\n      []\r\n    );\r\n\r\n    this.activeDataImport.excelSummary = excelSummary;\r\n    this.activeDataImport.spreadsheetUpload = spreadsheetUpload;\r\n\r\n    this.activeDataImport.mapping = this.getMappedColumns(\r\n      <DataTargetDescription>result.dataTargetDescription,\r\n      <Array<SpreadsheetColumnDto>>result.spreadsheetColumns\r\n    );\r\n    groupDataCustomColumns.forEach(colMap => {\r\n      this.activeDataImport.mapping.push(colMap);\r\n    });\r\n  }\r\n\r\n  getReviewData(dto: ImportSpreadsheetDto): Observable<any> {\r\n    return this.repository.getReviewData(dto);\r\n  }\r\n\r\n  getDataTargets(): Observable<ImportTemplateDto[]> {\r\n    return this.repository.getDataTargets();\r\n  }\r\n\r\n  getDataTargetsForGroup(groupId: string): Observable<ImportTemplateDto[]> {\r\n    return this.repository.getDataTargetsForGroup(groupId);\r\n  }\r\n\r\n  getCustomColumnDataTypes(): Observable<SupportedCustomColumnDataTypeDto[]> {\r\n    return this.repository.getCustomColumnDataTypes();\r\n  }\r\n\r\n  uploadSpreadsheet(dto: UploadSpreadsheetDto, importTemplateId: string): Observable<number | ExcelSummaryDto> {\r\n    this.resetPublicProperties();\r\n    return this.repository.uploadSpreadsheet(dto, importTemplateId);\r\n  }\r\n\r\n  getExistingCustomColumns(groupId: string, dataTargetName: string): Observable<Array<ColumnMap>> {\r\n    return this.repository.getCustomColumns(groupId, dataTargetName);\r\n  }\r\n\r\n  importSpreadsheet(dto: ImportSpreadsheetDto): Observable<ImportResultDto> {\r\n    return this.repository.importSpreadsheet(dto);\r\n  }\r\n\r\n  private getMappedColumns(\r\n    dataTargetDescription: DataTargetDescription,\r\n    spreadsheetColumns: Array<SpreadsheetColumnDto>\r\n  ): Array<ColumnMap> {\r\n    const mappedColumns = new Array<ColumnMap>();\r\n\r\n    spreadsheetColumns.forEach(col => {\r\n      col.title = col.title.toLowerCase();\r\n    });\r\n\r\n    dataTargetDescription.columns.forEach(dataTargetCol => {\r\n      const mappedSpreadsheetCol = spreadsheetColumns.find\r\n        (c => c.title.replace(/\\s+/g, '') === dataTargetCol.name.toLowerCase().replace(/\\s+/g, '')\r\n      );\r\n\r\n      if (mappedSpreadsheetCol) {\r\n        mappedColumns.push(<ColumnMap>{\r\n          spreadsheetColumn: <SpreadsheetColumnDto>{\r\n            name: mappedSpreadsheetCol.name,\r\n            title: mappedSpreadsheetCol.title,\r\n            sampleData: mappedSpreadsheetCol.sampleData\r\n          },\r\n          importTemplateColumnId: dataTargetCol.id,\r\n          dataTargetField: dataTargetCol.name,\r\n          isAutoMapped: true,\r\n          columnDataType: dataTargetCol.type,\r\n          colLength:dataTargetCol.collen\r\n          });\r\n      } else {\r\n        mappedColumns.push(<ColumnMap>{\r\n          spreadsheetColumn: <SpreadsheetColumnDto>{},\r\n          importTemplateColumnId: dataTargetCol.id,\r\n          dataTargetField: dataTargetCol.name,\r\n          isAutoMapped: false,\r\n          columnDataType: dataTargetCol.type,\r\n          colLength: dataTargetCol.collen\r\n        });\r\n      }\r\n    });\r\n\r\n    return mappedColumns;\r\n  }\r\n\r\n  isAutoMappedColumn(headingName: string) {\r\n    this.activeDataImport.excelSummary.dataTargetDescription.columns.forEach(column => {\r\n      if (column.name === headingName) {\r\n        return true;\r\n      }\r\n    });\r\n\r\n    return false;\r\n  }\r\n\r\n  setMapping(mapping: Array<ColumnMap>) {\r\n    // console.log(mapping);\r\n    this.activeDataImport.mapping = mapping;\r\n  }\r\n\r\n  getLocales(): Observable<Locale[]> {\r\n    return of([\r\n      new Locale('1', 'United States - English'),\r\n      new Locale('2', 'Mexico - Spanish'),\r\n      new Locale('3', 'Canada - French')\r\n    ]);\r\n  }\r\n\r\n  resetPublicProperties() {\r\n    this.importAfterReconciliation = false;\r\n    this.activeReplace = true;\r\n    this.activeDataImport = new DataImport();\r\n    this.importResult = new ImportResultDto();\r\n  }\r\n\r\n  private mapSpreadsheetColumns(spreadsheetColumns: any): Array<SpreadsheetColumnDto> {\r\n    const columns = new Array<SpreadsheetColumnDto>();\r\n\r\n    spreadsheetColumns.forEach(col => {\r\n\r\n      if (col.title.toLowerCase() === 'latitude') {\r\n        col.sampleData = parseFloat(col.sampleData).toFixed(8).toString();\r\n        if (!col.sampleData.match(/^(-?[1-8]?\\d(?:\\.\\d{6,8})|90(?:\\.0{6,8})?)$/)) {\r\n          this.alertService.error('Latitude value out of valid range (-90.000000 : 90.000000)');\r\n          this.importResult.errors = ['error'];\r\n        }\r\n      }\r\n\r\n      if (col.title.toLowerCase() === 'longitude') {\r\n        col.sampleData = parseFloat(col.sampleData).toFixed(8).toString();\r\n        if (!col.sampleData.match(/^(-?(?:1[0-7]|[1-9])?\\d(?:\\.\\d{6,8})|180(?:\\.0{6,8})?)$/)) {\r\n          this.alertService.error('Longitude value out of valid range (-180.000000 : 180.000000)');\r\n          this.importResult.errors = ['error'];\r\n        }\r\n      }\r\n\r\n      columns.push(new SpreadsheetColumnDto(col.name, col.title, col.sampleData));\r\n    });\r\n\r\n    return columns;\r\n  }\r\n\r\n  private mapHeaderRow(headerRow: any): HeaderRow {\r\n    return new HeaderRow(headerRow.isCalculated, headerRow.confidence, headerRow.row, this.mapColumnMapping(headerRow.columnMapping));\r\n  }\r\n\r\n  private mapColumnMapping(columnMapping: any): Array<ColumnMap> {\r\n    const mappings = new Array<ColumnMap>();\r\n\r\n    columnMapping.forEach(element => {\r\n      mappings.push(<ColumnMap>{\r\n        spreadsheetColumn: element.spreadsheetColumn,\r\n        dataTargetFieldId: element.dataTargetField,\r\n        importTemplateColumnId: element.importTemplateColumnId,\r\n      });\r\n    });\r\n\r\n    return mappings;\r\n  }\r\n\r\n  private mapTargetDescription(dataTargetDescription: any): DataTargetDescription {\r\n    return {\r\n      name: dataTargetDescription.name,\r\n      columns: this.mapDataTargetColumns(dataTargetDescription.columns)\r\n    };\r\n  }\r\n\r\n  private mapDataTargetColumns(dataTargetColumns: any): Array<DataTargetField> {\r\n    const columns = new Array<DataTargetField>();\r\n    dataTargetColumns.forEach(element => {\r\n      columns.push({ name: element.name, type: element.type, id: element.id, isCustom: false });\r\n    });\r\n\r\n    return columns;\r\n  }\r\n\r\n  public getDataCountByGroup(dto: UploadSpreadsheetDto) {\r\n    return this.inventoryApiService.getDataCountByGroup(dto.groupId, dto.dataTargetId);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'access-denied',\r\n  templateUrl: './access-denied.component.html'\r\n})\r\nexport class AccessDeniedComponent implements OnInit {\r\n\r\n  errorMessage: string;\r\n    constructor(private route: ActivatedRoute, private router: Router) { }\r\n\r\n    ngOnInit() {\r\n      this.errorMessage = this.route.snapshot.paramMap.get('errorMessage')\r\n    }\r\n}","import { Location } from '@angular/common';\r\nimport { TranslatedComponent } from '../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'conflict-transaction-error',\r\n  templateUrl: './conflict-transaction-error.component.html'\r\n})\r\nexport class ConflictServerErrorComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  constructor(\r\n    private location: Location\r\n  ) { }\r\n\r\n  ngOnInit() {}\r\n\r\n  backToPrevious() {\r\n    this.location.back();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'internal-server-error',\r\n  templateUrl: './internal-server-error.component.html'\r\n})\r\nexport class InternalServerErrorComponent implements  OnInit {\r\n  errorMessage: string | undefined = undefined;\r\n  constructor(private route: ActivatedRoute, private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.errorMessage = this.route.snapshot.paramMap.get('errorMessage');\r\n  }\r\n\r\n  reload(event: any): void {\r\n    event.preventDefault();\r\n    window.location.href = '/';\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'not-found',\r\n  templateUrl: './not-found.component.html'\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  errorMessage: string;\r\n    constructor(private route: ActivatedRoute, private router: Router) { }\r\n\r\n    ngOnInit() {\r\n      this.errorMessage = this.route.snapshot.paramMap.get('errorMessage')\r\n    }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  templateUrl: './unauthorized.component.html'\r\n})\r\nexport class UnauthorizedComponent implements OnInit {\r\n  errorMessage: string;\r\n    constructor(private route: ActivatedRoute, private router: Router) { }\r\n\r\n    ngOnInit() {\r\n      this.errorMessage = this.route.snapshot.paramMap.get('errorMessage')\r\n    }\r\n}\r\n","import { FieldType } from '../../../_enums/field-type';\r\n\r\nexport const FileHeaders = [\r\n  {\r\n      name: 'fileName',\r\n      displayName: 'File Name',\r\n      fieldType: FieldType.String,\r\n      isCustom: false,\r\n      isFacetable: false,\r\n      isKey: false,\r\n      isSearchable: true,\r\n      isFilterable: true,\r\n      isSortable: true,\r\n      isEditable: false\r\n  },\r\n  {\r\n      name: 'fileSize',\r\n      displayName: 'Size',\r\n      fieldType: FieldType.String,\r\n      isCustom: false,\r\n      isFacetable: false,\r\n      isKey: false,\r\n      isSearchable: true,\r\n      isFilterable: true,\r\n      isSortable: true,\r\n      isEditable: false\r\n  },\r\n  {\r\n      name: 'userName',\r\n      displayName: 'User Id',\r\n      fieldType: FieldType.String,\r\n      isCustom: false,\r\n      isFacetable: false,\r\n      isKey: false,\r\n      isSearchable: true,\r\n      isFilterable: true,\r\n      isSortable: true,\r\n      isEditable: false\r\n  },\r\n  {\r\n      name: 'uploadDate',\r\n      displayName: 'Upload Date',\r\n      fieldType: FieldType.DateTime,\r\n      isCustom: false,\r\n      isFacetable: false,\r\n      isKey: false,\r\n      isSearchable: true,\r\n      isFilterable: true,\r\n      isSortable: true,\r\n      isEditable: false\r\n  },\r\n  {\r\n      name: 'isPortalDocument',\r\n      displayName: 'Is Portal Document',\r\n      fieldType: FieldType.String,\r\n      isCustom: false,\r\n      isFacetable: false,\r\n      isKey: false,\r\n      isSearchable: true,\r\n      isFilterable: true,\r\n      isSortable: true,\r\n      isEditable: false,\r\n  },\r\n  {\r\n      name: 'uploadTypeName',\r\n      displayName: 'Upload Target',\r\n      fieldType: FieldType.String,\r\n      isCustom: false,\r\n      isFacetable: false,\r\n      isKey: false,\r\n      isSearchable: true,\r\n      isFilterable: true,\r\n      isSortable: true,\r\n      isEditable: false\r\n  }\r\n];\r\n","import {ClientFile} from '../../models/client-file';\r\nimport { WindowRef } from '@agm/core/utils/browser-globals';\r\nimport { TranslateService } from '../../../../../node_modules/@ngx-translate/core';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { FamisGridService } from '../../../_core/services/famis-grid.service';\r\nimport { FileHeaders } from './default-files-header';\r\nimport { AlertService } from '../../../_core/services/alert.service';\r\nimport { UploadFileType } from '../../../_api/_runtime/enums/upload-type-enum';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FamisGrid, FamisGridFeature } from '../../../_models/shared/famis-grid-state.model';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { ClientFileApiService } from '../../../_api/_runtime/services/client-files-api.service';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FamisGridActionEvent } from '../../../_models/shared/famis-grid-action-event.model';\r\nimport { SortDescriptor } from '@progress/kendo-data-query/dist/npm/sort-descriptor';\r\nimport { FamisGridCacheResult } from '../../../_models/shared/famis-grid-cache-result.model';\r\nimport { AssetSortTermDto } from '../../../_api/dtos/inventory/asset-search.dto';\r\nimport { State } from '@progress/kendo-data-query';\r\n\r\n@Component({\r\n  selector: 'file-upload',\r\n  templateUrl: './file-upload.component.html'\r\n})\r\nexport class FileUploadComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  private defaultColumns = [\r\n    'fileName',\r\n    'fileSize',\r\n    'uploadDate',\r\n    'isPortalDocument',\r\n    'uploadTypeName'\r\n  ];\r\n  public clientFilesGrid: FamisGrid;\r\n  public finalizedDocumentsGrid: FamisGrid;\r\n\r\n  private destroyed$ = new Subject();\r\n\r\n  public acceptedFileTypes: Array<String> = this.configService.getSettings('acceptedFileTypes');\r\n  public isLoading: boolean;\r\n  public isUploading: boolean;\r\n  private groupId: string;\r\n  public isInternalDocument: boolean;\r\n  public state: State;\r\n\r\n  constructor (\r\n    private clientFileService: ClientFileApiService,\r\n    private windowRef: WindowRef, private configService: ConfigService,\r\n    private translate: TranslateService,\r\n    private route: ActivatedRoute,\r\n    private famisGridService: FamisGridService,\r\n    private alertService: AlertService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.state = {\r\n      skip: 0,\r\n      take: 84\r\n    };\r\n    this.groupId = this.route.parent.snapshot.paramMap.get('groupId');\r\n    this.isLoading = true;\r\n    this.finalizedDocumentsGrid = <FamisGrid>{\r\n      height: 500,\r\n      gridId: this.famisGridService.createGrid(),\r\n      windowSize: 500,\r\n      totalRecordCount: 0,\r\n      name: '',\r\n      supportedOperators: [FamisGridFeature.Sort],\r\n      actions: ['Download', 'Remove'],\r\n      columnHeaders: FileHeaders,\r\n      selectedHeaders: this.defaultColumns,\r\n      translationBaseKey: this.i18n.fileUpload\r\n    };\r\n    this.refreshFinalizedDocumentsGrid();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  handleFinalizedFilesActionEvent(event: FamisGridActionEvent) {\r\n    this.handleGridEvent(event);\r\n  }\r\n\r\n  private handleGridEvent(event: FamisGridActionEvent) {\r\n    const item = event.item as ClientFile;\r\n    if (event.action === 'Download') {\r\n      this.downloadFile(item.id);\r\n    }\r\n    if (event.action === 'Remove') {\r\n      this.deleteFile(item.id);\r\n    }\r\n  }\r\n\r\n  private getUploadTypeName(type: UploadFileType) {\r\n    switch (type) {\r\n      case (UploadFileType.ClientUpload) : {\r\n        return this.translate.instant(this.i18n.fileUpload + 'Client Upload');\r\n      }\r\n      case (UploadFileType.FinalizedDocument) : {\r\n        return this.translate.instant(this.i18n.fileUpload + 'Finalized Document');\r\n      }\r\n      case (UploadFileType.ValuationReport) : {\r\n        return this.translate.instant(this.i18n.fileUpload + 'Valuation Report');\r\n      }\r\n      case (UploadFileType.FloodPlainReport): {\r\n        return this.translate.instant(this.i18n.fileUpload + 'Flood Plain Report');\r\n      }\r\n      default: return 'Unknown';\r\n    }\r\n  }\r\n\r\n  private refreshFinalizedDocumentsGrid() {\r\n    this.finalizedDocumentsGrid.loading = this.clientFileService.getGroupUplodFiles(this.groupId)\r\n    .pipe(takeUntil(this.destroyed$))\r\n    .subscribe(res => {\r\n      res.forEach(document => {\r\n        document.uploadTypeName = this.getUploadTypeName(document.uploadType);\r\n      });\r\n      this.finalizedDocumentsGrid.columnHeaders = FileHeaders,\r\n      this.finalizedDocumentsGrid.selectedHeaders = this.defaultColumns;\r\n      this.famisGridService.setCacheRecords(res, this.finalizedDocumentsGrid.gridId,\r\n      this.famisGridService.defaultSkip,\r\n      res.length,\r\n      this.famisGridService.defaultTake);\r\n      this.isInternalDocument = false;\r\n    });\r\n  }\r\n\r\n  public uploadFile(file: File) {\r\n    this.isUploading = true;\r\n    this.clientFileService.uploadGroupFile(this.groupId, file, this.isInternalDocument, null, null).subscribe(res => {\r\n      this.isUploading = false;\r\n      if (!res.isPortalDocument) {\r\n        this.alertService.warn(this.translate.instant('Document not linked to portal'));\r\n        // 'No portal exists for this group. This document will not be associated to a portal.'\r\n      }\r\n      this.refreshFinalizedDocumentsGrid();\r\n    });\r\n  }\r\n\r\n  public deleteFile(id: string) {\r\n    this.isLoading = true;\r\n    this.clientFileService.deleteFile(id).subscribe(res => {\r\n      this.isLoading = false;\r\n       this.refreshFinalizedDocumentsGrid();\r\n\r\n    });\r\n  }\r\n\r\n  public downloadFile(id: string) {\r\n    this.isLoading = true;\r\n    this.clientFileService.getClientFile(id).subscribe(url => {\r\n      this.isLoading = false;\r\n      this.windowRef.getNativeWindow().open(url, '_blank');\r\n    });\r\n  }\r\n\r\n  handleSortChanged(sort: SortDescriptor[]) {\r\n    const s = this;\r\n    const sortTerms = new Array<AssetSortTermDto>();\r\n    const orderCount = 0;\r\n    sort.forEach(c => {\r\n      const sortTerm = <AssetSortTermDto>{\r\n        termOrder: orderCount,\r\n        sortDirection: c.dir === 'asc' ? 0 : 1,\r\n        field: c.field\r\n      };\r\n\r\n      sortTerms.push(sortTerm);\r\n    });\r\n\r\n    this.famisGridService.currentSort[this.finalizedDocumentsGrid.gridId] = sortTerms;\r\n\r\n    s.famisGridService\r\n      .update(\r\n        s.finalizedDocumentsGrid.gridId,\r\n        s.state.skip,\r\n        s.state.take,\r\n        s.finalizedDocumentsGrid.totalRecordCount,\r\n        s.famisGridService.currentSort[s.finalizedDocumentsGrid.gridId],\r\n        true\r\n      )\r\n      .pipe(takeUntil(s.destroyed$))\r\n      .subscribe(result => {\r\n        s.updateCache(result);\r\n      });\r\n  }\r\n\r\n  updateCache(request?: FamisGridCacheResult) {\r\n    const s = this;\r\n\r\n    const successCacheLoading = new Subscription();\r\n    const errorCacheLoading = new Subscription();\r\n\r\n    this.finalizedDocumentsGrid.cacheLoading = s.processCacheUpdate(request);\r\n  }\r\n\r\n  private processCacheUpdate(cacheUpdateRequest?: FamisGridCacheResult): Subscription {\r\n    const s = this;\r\n\r\n    return this.clientFileService.updateGridData(s.groupId,\r\n      cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.skip : s.famisGridService.defaultSkip,\r\n      cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.take : s.famisGridService.defaultTake,\r\n      cacheUpdateRequest ? cacheUpdateRequest.sortTerms : null,\r\n      cacheUpdateRequest ? cacheUpdateRequest.filters : null)\r\n    .pipe(takeUntil(this.destroyed$))\r\n    .subscribe(res => {\r\n      res.forEach(document => {\r\n        document.uploadTypeName = this.getUploadTypeName(document.uploadType);\r\n      });\r\n      this.finalizedDocumentsGrid.columnHeaders = FileHeaders,\r\n      this.finalizedDocumentsGrid.selectedHeaders = this.defaultColumns;\r\n      this.famisGridService.setCacheRecords(res, this.finalizedDocumentsGrid.gridId,\r\n      this.famisGridService.defaultSkip,\r\n      res.length,\r\n      this.famisGridService.defaultTake);\r\n      this.isInternalDocument = false;\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FileUploadComponent } from './components/file-upload/file-upload.component';\r\nimport { CoreModule } from '../_core/core.module';\r\nimport { SharedModule } from '../_shared/shared.module';\r\nimport { GridModule } from '@progress/kendo-angular-grid';\r\nimport { ClientFileApiService } from '../_api/_runtime/services/client-files-api.service';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    GridModule,\r\n    SharedModule,\r\n    CoreModule,\r\n  ],\r\n  declarations: [\r\n    FileUploadComponent\r\n  ],\r\n  providers: [\r\n    ClientFileApiService\r\n  ]\r\n})\r\nexport class FileUploadModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { GroupsService } from '../services/groups.service';\r\n\r\n@Component({\r\n  selector: 'edit-group-template',\r\n  templateUrl: './edit-group-template.component.html'\r\n})\r\nexport class EditGroupTemplateComponent implements OnInit {\r\n\r\n  templateId:string;\r\n  groupId:string;\r\n\r\n  constructor(private groupsService: GroupsService) {}\r\n\r\n  ngOnInit() {\r\n\r\n    this.groupId = this.groupsService.groupId;\r\n\r\n    this.groupsService.getTemplateForGroup(this.groupsService.groupId).subscribe(dto => {\r\n\r\n      if (dto) {\r\n        this.templateId = dto.id;\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n}\r\n","import { GroupsService } from '../services/groups.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'group-management-form',\r\n  templateUrl: './group-management-form.component.html'\r\n})\r\nexport class GroupManagementFormComponent implements OnInit {\r\n  constructor(private route: ActivatedRoute, private groupsService: GroupsService) {}\r\n\r\n  ngOnInit() {\r\n    this.groupsService.groupId = this.route.parent.snapshot.paramMap.get('groupId');\r\n  }\r\n}\r\n","import { NgbTypeaheadSelectItemEvent } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { TranslationManager } from '../../_core/i18n/translation-manager';\r\nimport { WindowManager } from '../../_core/services/window-manager.service';\r\nimport { debounceTime, distinctUntilChanged, tap, catchError, switchMap, merge } from 'rxjs/operators';\r\nimport { of, Observable } from 'rxjs';\r\nimport { WindowOption } from '../../_models/window-option';\r\nimport { GroupTemplateDto } from '../../_api/_runtime/dtos/group-template.dto';\r\nimport { TemplatesApiService } from '../../_api/_configuration/services/templates-api.service';\r\nimport { GroupApiService } from '../../_api/_runtime/services/group-api.service';\r\nimport { ViewContainerRef, ViewChild, Output, Input, EventEmitter, OnInit, Component } from '@angular/core';\r\nimport { TemplateDto } from '../../_api/_configuration/dtos/template.dto';\r\nimport { GroupTemplateRequestDto } from '../../_api/_runtime/dtos/group-template-request.dto';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'group-management-modal',\r\n  templateUrl: './group-management-modal.component.html'\r\n})\r\nexport class GroupManagementModalComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  @Input() contractId: string;\r\n  @Input() groupNames: Array<string>;\r\n  @Output() onAddorUpdateGroup = new EventEmitter<any>(); // Intentional -- following previous example\r\n  @Output() onAction = new EventEmitter<string>();\r\n  @ViewChild('content', { static: false }) private content: any; // Intentional -- following previous example\r\n\r\n  uniqueNameError = false;\r\n  selectedGroupName: string;\r\n  originalGroupName: string;\r\n  isLoading = false;\r\n  request = <GroupTemplateRequestDto>{};\r\n  action: string;\r\n  model: TemplateDto;\r\n  searching = false;\r\n  searchFailed = false;\r\n  item: NgbTypeaheadSelectItemEvent = null;\r\n  hideSearchingWhenUnsubscribed = new Observable(() => () => (this.searching = false));\r\n  currentGroupId = null;\r\n\r\n  constructor(\r\n    private windowManager: WindowManager,\r\n    public container: ViewContainerRef,\r\n    private groupApiService: GroupApiService,\r\n    private templateService: TemplatesApiService,\r\n    private translateService: TranslationManager,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.currentGroupId = this.route.parent.parent.snapshot.paramMap.get('groupId');\r\n  }\r\n\r\n  open(item?: GroupTemplateDto) {\r\n    this.selectedGroupName = '';\r\n    this.originalGroupName = '';\r\n    this.uniqueNameError = false;\r\n\r\n    if (item) {\r\n      this.isLoading = true;\r\n      this.action = 'Edit';\r\n      this.request.groupName = item.groupName;\r\n      this.originalGroupName = item.groupName;\r\n      this.request.groupId = item.groupId;\r\n\r\n      this.templateService.getTemplateById(item.templateId).subscribe(\r\n        result => {\r\n          this.model = result;\r\n          this.request.templateId = result.id;\r\n        },\r\n        error => {},\r\n        () => {\r\n          this.isLoading = false;\r\n        }\r\n      );\r\n    } else {\r\n      this.action = 'Add';\r\n      this.request.groupName = '';\r\n      this.request.contractId = this.contractId;\r\n      this.model = null;\r\n      this.request.groupId = null;\r\n      this.request.templateId = null;\r\n    }\r\n\r\n    this.windowManager.open(this.content, this.action, <WindowOption>{\r\n      isModal: true\r\n    });\r\n  }\r\n\r\n  onSubmit(form) {\r\n    if (form.valid && !!this.request.templateId) {\r\n      if (!(this.groupNames.some(x => x === this.request.groupName) && this.request.groupName !== this.originalGroupName)) {\r\n        this.uniqueNameError = false;\r\n        this.isLoading = true;\r\n        if (!this.request.groupId) {\r\n          this.request.groupId = this.currentGroupId;\r\n        }\r\n        if (this.action === 'Add') {\r\n          this.groupApiService.createGroup(this.request).subscribe(\r\n            result => {\r\n              this.windowManager.close();\r\n              this.onAction.emit(this.action);\r\n              this.onAddorUpdateGroup.emit(result);\r\n            },\r\n            error => {},\r\n            () => {\r\n              this.isLoading = false;\r\n            }\r\n          );\r\n        }\r\n\r\n        if (this.action === 'Edit') {\r\n          this.groupApiService.updateGroup(this.request).subscribe(\r\n            result => {\r\n              this.windowManager.close();\r\n              this.onAction.emit(this.action);\r\n              this.onAddorUpdateGroup.emit(result);\r\n            },\r\n            error => {},\r\n            () => {\r\n              this.isLoading = false;\r\n            }\r\n          );\r\n        }\r\n      } else {\r\n        this.uniqueNameError = true;\r\n        this.selectedGroupName = this.request.groupName;\r\n      }\r\n    }\r\n  }\r\n\r\n  /*** Typeahead  ***/\r\n  // TODO -- update typeahead when api available\r\n  onSelectItem(selected: NgbTypeaheadSelectItemEvent): void {\r\n    this.request.templateId = selected.item.id;\r\n  }\r\n\r\n  public getResultFormatter(result) {\r\n    return result.name;\r\n  }\r\n\r\n  public getInputFormatter(result) {\r\n    return result.name;\r\n  }\r\n\r\n  search = (text$: Observable<string>) =>\r\n    text$\r\n      .pipe(debounceTime(300))\r\n      .pipe(distinctUntilChanged())\r\n      .pipe(tap(() => (this.searching = true)))\r\n      .pipe(switchMap(term =>\r\n        this.templateService\r\n          .searchTemplate(term)\r\n          .pipe(tap(() => {\r\n            this.searchFailed = false;\r\n          }))\r\n          .pipe(catchError(() => {\r\n            this.searchFailed = true;\r\n            return of([]);\r\n          }))\r\n      ))\r\n      .pipe(tap(() => {\r\n        this.searching = false;\r\n      }))\r\n      .pipe(merge(this.hideSearchingWhenUnsubscribed))\r\n}\r\n","import { ConfirmModalComponent } from '../../_shared/components/confirm-modal.component';\r\nimport { GroupManagementModalComponent } from './group-management-modal.component';\r\nimport { FamisGridService } from '../../_core/services/famis-grid.service';\r\nimport { AlertService } from '../../_core/services/alert.service';\r\nimport { GroupsService } from '../services/groups.service';\r\nimport { forkJoin, Subject } from 'rxjs';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { UserGridService } from '../../_core/services/user-grid.service';\r\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { NgbModalRef, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FamisGrid } from '../../_models/shared/famis-grid-state.model';\r\nimport { SortDescriptor, State, CompositeFilterDescriptor, process } from '@progress/kendo-data-query';\r\nimport { GridDataResult, DataStateChangeEvent } from '@progress/kendo-angular-grid';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { GroupApiService } from '../../_api/_runtime/services/group-api.service';\r\nimport { GroupTemplateDto } from '../../_api/_runtime/dtos/group-template.dto';\r\nimport { ModalProperties } from '../../_models/modal-properties.model';\r\n\r\n@Component({\r\n  selector: 'group-management',\r\n  templateUrl: './group-management.component.html'\r\n})\r\nexport class GroupManagementComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  @ViewChild(GroupManagementModalComponent, { static: false })\r\n  groupManagementModalComponent: GroupManagementModalComponent;\r\n  private modalRef: NgbModalRef;\r\n  private windowSize = 500;\r\n  public groupGrid: FamisGrid;\r\n  public groupId: string;\r\n  public contractId: string;\r\n  public action: string;\r\n  public groupNames: Array<string>;\r\n  public sort: SortDescriptor[];\r\n  public state: State = {\r\n    skip: 0,\r\n    take: 25\r\n  };\r\n\r\n  public userGridSettingName = this.userGridService.createUserGridId(\r\n    null,\r\n    this.router.url.toString().split('?')[0],\r\n    'Group Management Grid'\r\n  );\r\n\r\n  public filterRoot = { logic: 'and', filters: [] } as CompositeFilterDescriptor;\r\n\r\n  private destroyed$ = new Subject<any>();\r\n  private localGroupManagementData = new Array<any>();\r\n\r\n  gridData: GridDataResult = process(this.localGroupManagementData, this.state);\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private modalService: NgbModal,\r\n    private famisGridService: FamisGridService,\r\n    private groupsService: GroupsService,\r\n    private alertService: AlertService,\r\n    private groupApiService: GroupApiService,\r\n    private userGridService: UserGridService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.famisGridService.setUserId();\r\n\r\n    this.groupId = this.groupsService.groupId;\r\n    this.groupApiService.getContractGroup(this.groupId, false).subscribe(result => {\r\n      this.contractId = result.contractId;\r\n    });\r\n\r\n    this.loadGridData();\r\n  }\r\n\r\n  private loadGridData(): void {\r\n    const getGroupRecords = this.groupsService.updateGroupTemplateResults(this.groupId);\r\n\r\n    const loading = forkJoin(getGroupRecords).subscribe(([groupResults]) => {\r\n      this.userGridService.getSettings(this.famisGridService.userId, this.userGridSettingName, null)\r\n          .subscribe(gridSettings => {\r\n              if (gridSettings.filters && gridSettings.filters.filters && gridSettings.filters.filters.length > 0) {\r\n                this.filterRoot = gridSettings.filters;\r\n                this.state.filter = this.filterRoot;\r\n                this.refreshGridData();\r\n              } else {\r\n                this.refreshGridData();\r\n              }\r\n            });\r\n      groupResults.contractGroupTemplateInfo = groupResults.contractGroupTemplateInfo.filter(x => x.isPortal === false);\r\n      this.groupNames = groupResults.contractGroupTemplateInfo.map(y => y.groupName);\r\n      this.groupsService.setGroupTemplateDataSource(groupResults.contractGroupTemplateInfo);\r\n\r\n      this.localGroupManagementData = groupResults.contractGroupTemplateInfo;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  handleAction(response: string) {\r\n    this.action = response;\r\n  }\r\n\r\n  handleCreateorModifiedGroup(response: GroupTemplateDto) {\r\n    this.alertService.success('Group {{groupName}} has been ' + (this.action === 'Edit' ? 'updated.' : 'created.'), null, {\r\n      groupName: response.groupName\r\n    });\r\n    this.localGroupManagementData.push(response);\r\n    this.refreshGridData();\r\n    this.loadGridData();\r\n  }\r\n\r\n  delete(item: GroupTemplateDto) {\r\n    const modal = this.modalService.open(ConfirmModalComponent);\r\n    const modalOptions = <ModalProperties>{\r\n      heading: {\r\n        key: 'Delete Group'\r\n      },\r\n      body: {\r\n        key: '{{groupName}} cannot be deleted. Records are currently associated with this group.',\r\n        params: {groupName: item.groupName}\r\n      },\r\n      dismissText: {\r\n        key: 'Close'\r\n      },\r\n      translateBaseKey: this.i18n.dashboard\r\n    };\r\n\r\n    const sameGroup = item.groupId === this.groupId;\r\n\r\n    if (sameGroup) {\r\n      modalOptions.body = {\r\n        key: 'Cannot delete group you are currently active in, please select a different group.'\r\n      };\r\n    }\r\n\r\n    if (item.canDelete && !sameGroup) {\r\n      modalOptions.successText = {\r\n        key: 'Delete'\r\n      };\r\n      modalOptions.body = {\r\n        key: 'Are you sure you wish to delete {{groupname}}',\r\n        params: {groupname: item.groupName}\r\n      };\r\n    }\r\n\r\n    modal.componentInstance.options = modalOptions;\r\n\r\n    modal.result.then(\r\n      confirm => {\r\n        this.groupApiService.deleteGroup(item.groupId).subscribe(result => {\r\n          this.localGroupManagementData = this.localGroupManagementData.filter(g => g.groupId !== item.groupId);\r\n          this.refreshGridData();\r\n          this.alertService.success(item.groupName + ' has been deleted.');\r\n        });\r\n      },\r\n      cancel => {}\r\n    );\r\n  }\r\n\r\n  handleActionEvent(dataItem: GroupTemplateDto, actionEvent: string) {\r\n    if (actionEvent === 'Delete') {\r\n      this.delete(dataItem);\r\n    }\r\n\r\n    if (actionEvent === 'Edit') {\r\n      this.groupManagementModalComponent.groupNames = this.groupNames;\r\n      this.groupManagementModalComponent.open(dataItem);\r\n    }\r\n  }\r\n\r\n  dataStateChange(state: DataStateChangeEvent): void {\r\n    this.state = state;\r\n    this.gridData = process(this.localGroupManagementData, this.state);\r\n  }\r\n\r\n  private refreshGridData() {\r\n    this.gridData = process(this.localGroupManagementData, this.state);\r\n  }\r\n\r\n  back() {\r\n    window.location.href = `/project-profile/${this.groupsService.groupId}/MainProfile`;\r\n  }\r\n\r\n  public handleFilterChange(filter: any): void {\r\n    // save the filter\r\n    this.filterRoot = filter;\r\n    this.userGridService.saveSettings(this.userGridSettingName, null,\r\n    null, this.famisGridService.userId, null, this.filterRoot).subscribe();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '../_shared/shared.module';\r\n\r\nimport { GroupManagementComponent } from './components/group-management.component';\r\nimport { GroupManagementModalComponent } from './components/group-management-modal.component';\r\n\r\nimport { GroupsService } from './services/groups.service';\r\nimport { EditGroupTemplateComponent } from './components/edit-group-template.component';\r\nimport { AdminModule } from '../admin/admin.module';\r\nimport { GroupManagementFormComponent } from './components/group-management-form.component';\r\nimport { CoreModule } from '../_core/core.module';\r\nimport { GridModule } from '@progress/kendo-angular-grid';\r\nimport { DateInputsModule } from '@progress/kendo-angular-dateinputs';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { OrderModule } from 'ngx-order-pipe';\r\nimport { GroupApiService } from '../_api/_runtime/services/group-api.service';\r\nimport { TemplatesApiService } from '../_api/_configuration/services/templates-api.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    GridModule,\r\n    DateInputsModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    OrderModule,\r\n    SharedModule,\r\n    AdminModule,\r\n    CoreModule\r\n  ],\r\n  declarations: [\r\n    GroupManagementComponent,\r\n    GroupManagementModalComponent,\r\n    EditGroupTemplateComponent,\r\n    GroupManagementFormComponent\r\n  ],\r\n  entryComponents: [\r\n    GroupManagementModalComponent\r\n  ],\r\n  providers: [\r\n    GroupsService,\r\n    GroupApiService,\r\n    TemplatesApiService\r\n  ]\r\n})\r\nexport class GroupsModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { GroupTemplateDto } from '../../_api/_runtime/dtos/group-template.dto';\r\nimport { TemplatesApiService } from '../../_api/_configuration/services/templates-api.service';\r\nimport { GroupApiService } from '../../_api/_runtime/services/group-api.service';\r\nimport { ContractGroupsTemplateDto } from '../../_api/_runtime/dtos/contract-groups-template.dto';\r\n\r\n@Injectable()\r\nexport class GroupsService {\r\n\r\n  private groupTemplateGridDataSource =\r\n    new BehaviorSubject<Array<GroupTemplateDto>>(new Array<GroupTemplateDto>());\r\n\r\n  public groupTemplateGridData$ = this.groupTemplateGridDataSource.asObservable();\r\n\r\n  constructor(\r\n    private templateApiService: TemplatesApiService,\r\n    private groupApiService: GroupApiService\r\n  ) {}\r\n\r\n  public groupId: string;\r\n\r\n  getTemplateForGroup(groupId: string) {\r\n    return this.templateApiService.GetTemplateForGroup(groupId);\r\n  }\r\n\r\n  updateGroupTemplateResults(groupId: string): Observable<ContractGroupsTemplateDto> {\r\n    return this.groupApiService.getContractGroupTemplate(groupId);\r\n  }\r\n\r\n  setGroupTemplateDataSource(data: Array<GroupTemplateDto>): void {\r\n    this.groupTemplateGridDataSource.next(data);\r\n  }\r\n}\r\n","import { HeaderManagementService } from '../../services/header-management.service';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { WindowManager } from '../../../_core/services/window-manager.service';\r\nimport { Component, OnInit, ViewChild, Output, EventEmitter, ViewContainerRef } from '@angular/core';\r\nimport { AccountDto } from '../../../_api/_runtime/dtos/account.dto';\r\nimport { WindowOption } from '../../../_models/window-option';\r\n\r\n@Component({\r\n  selector: 'account-upsert',\r\n  templateUrl: './account-upsert.component.html'\r\n})\r\nexport class AccountUpsertComponent implements OnInit, TranslatedComponent {\r\n    i18n = TranslationBaseKeys;\r\n\r\n    public request = <AccountDto>{};\r\n    public action: string;\r\n    public isLoading = false;\r\n\r\n    @ViewChild('content', { static: false }) private content: any; // Intentional -- following previous example\r\n\r\n    @Output() onAddorUpdate = new EventEmitter<AccountDto>();\r\n    @Output() onAction = new EventEmitter<string>();\r\n\r\n    constructor(\r\n        private headerManagementService: HeaderManagementService,\r\n        public windowManager: WindowManager,\r\n        private container: ViewContainerRef\r\n    ) {}\r\n\r\n    ngOnInit() {}\r\n\r\n    open(item?: AccountDto) {\r\n        let modalTitle = '';\r\n\r\n        if (item) {\r\n            this.action = 'Edit';\r\n            Object.assign(this.request, item);\r\n            modalTitle = 'Edit Account';\r\n        }else {\r\n            this.action = 'Add';\r\n            this.request = <AccountDto>{};\r\n            modalTitle = 'Add Account';\r\n        }\r\n\r\n        this.windowManager.open(this.content, modalTitle, <WindowOption>{\r\n            isModal: true\r\n\r\n        });\r\n    }\r\n\r\n    onSubmit(form) {\r\n        if (form.valid) {\r\n            if (this.action === 'Add') {\r\n                this.headerManagementService.upsertAccount(this.request, true).subscribe(result => {\r\n                    this.onAction.emit(this.action);\r\n                    this.onAddorUpdate.emit(result);\r\n                    this.windowManager.close();\r\n                });\r\n            }\r\n\r\n            if (this.action === 'Edit') {\r\n                this.headerManagementService.upsertAccount(this.request, false).subscribe(result => {\r\n                    this.onAction.emit(this.action);\r\n                    this.onAddorUpdate.emit(result);\r\n                    this.windowManager.close();\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n","import { HeaderManagementService } from '../../services/header-management.service';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { WindowManager } from '../../../_core/services/window-manager.service';\r\nimport { Component, OnInit, ViewChild, Output, EventEmitter, ViewContainerRef } from '@angular/core';\r\nimport { DepartmentDto } from '../../../_api/_runtime/dtos/department.dto';\r\nimport { WindowOption } from '../../../_models/window-option';\r\n\r\n@Component({\r\n  selector: 'department-upsert',\r\n  templateUrl: './department-upsert.component.html'\r\n})\r\nexport class DepartmentUpsertComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  public request = <DepartmentDto>{};\r\n  public action: string;\r\n  public isLoading = false;\r\n\r\n  @ViewChild('content', { static: false }) private content: any; // Intentional -- following previous example\r\n\r\n  @Output() onAddorUpdate = new EventEmitter<DepartmentDto>();\r\n  @Output() onAction = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    private headerManagementService: HeaderManagementService,\r\n    public windowManager: WindowManager,\r\n    private container: ViewContainerRef\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  open(item?: DepartmentDto) {\r\n    let modalTitle = '';\r\n\r\n    if (item) {\r\n      this.action = 'Edit';\r\n      Object.assign(this.request, item);\r\n      modalTitle = 'Edit Department';\r\n    } else {\r\n      this.action = 'Add';\r\n      this.request = <DepartmentDto>{};\r\n      modalTitle = 'Add Department';\r\n    }\r\n    this.windowManager.open(this.content, modalTitle, <WindowOption>{\r\n      isModal: true\r\n    });\r\n  }\r\n\r\n  onSubmit(form) {\r\n    if (form.valid) {\r\n      if (this.action === 'Add') {\r\n        this.headerManagementService.upsertDepartment(this.request, true).subscribe(result => {\r\n          this.onAction.emit(this.action);\r\n          this.onAddorUpdate.emit(result);\r\n          this.windowManager.close();\r\n        });\r\n      }\r\n\r\n      if (this.action === 'Edit') {\r\n        this.headerManagementService.upsertDepartment(this.request, false).subscribe(result => {\r\n          this.onAction.emit(this.action);\r\n          this.onAddorUpdate.emit(result);\r\n          this.windowManager.close();\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { HeaderManagementService } from '../../services/header-management.service';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { WindowManager } from '../../../_core/services/window-manager.service';\r\nimport { Component, OnInit, ViewChild, Output, EventEmitter, ViewContainerRef } from '@angular/core';\r\nimport { MemberDto } from '../../../_api/_runtime/dtos/member.dto';\r\nimport { WindowOption } from '../../../_models/window-option';\r\n\r\n@Component({\r\n  selector: 'member-upsert',\r\n  templateUrl: './member-upsert.component.html'\r\n})\r\nexport class MemberUpsertComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  public request = <MemberDto>{};\r\n  public action: string;\r\n  public isLoading = false;\r\n  public isNameTaken = false;\r\n\r\n  @ViewChild('content', { static: false })\r\n  private content: any; // Intentional -- following previous example\r\n\r\n  @Output()\r\n  onAddorUpdate = new EventEmitter<MemberDto>();\r\n  @Output()\r\n  onAction = new EventEmitter<string>();\r\n\r\n  constructor(\r\n      private headerManagementService: HeaderManagementService,\r\n      public windowManager: WindowManager,\r\n      private container: ViewContainerRef\r\n    ) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  open(item?: MemberDto) {\r\n    let modalTitle = '';\r\n    this.isNameTaken = false;\r\n\r\n    if (item) {\r\n      this.action = 'Edit';\r\n      Object.assign(this.request, item);\r\n      modalTitle = 'Edit Member';\r\n    } else {\r\n      this.action = 'Add';\r\n      this.request = <MemberDto>{};\r\n      modalTitle = 'Add Member';\r\n    }\r\n\r\n    this.windowManager.open(this.content, modalTitle, <WindowOption>{\r\n      isModal: true\r\n\r\n    });\r\n  }\r\n\r\n  onSubmit(form) {\r\n    this.isNameTaken = false;\r\n    if (form.valid) {\r\n      if (this.action === 'Add') {\r\n        this.headerManagementService.upsertMember(this.request, true).subscribe(\r\n          result => {\r\n            this.onAction.emit(this.action);\r\n            this.onAddorUpdate.emit(result);\r\n            this.windowManager.close();\r\n          },\r\n          error => {\r\n            if (error.status === 409) {\r\n              this.handleError();\r\n            }\r\n          }\r\n        );\r\n      }\r\n\r\n      if (this.action === 'Edit') {\r\n        this.headerManagementService.upsertMember(this.request, false).subscribe(\r\n          result => {\r\n            this.onAction.emit(this.action);\r\n            this.onAddorUpdate.emit(result);\r\n            this.windowManager.close();\r\n          },\r\n          error => {\r\n            if (error.status === 409) {\r\n              this.handleError();\r\n            }\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  handleError() {\r\n    this.isNameTaken = true;\r\n  }\r\n}\r\n","import { HeaderManagementService } from '../../services/header-management.service';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { WindowManager } from '../../../_core/services/window-manager.service';\r\nimport { Component, OnInit, OnDestroy, ViewChild, Output, EventEmitter, ViewContainerRef } from '@angular/core';\r\nimport { SiteDto } from '../../../_api/_runtime/dtos/site.dto';\r\nimport { MemberDto } from '../../../_api/_runtime/dtos/member.dto';\r\nimport { Subscription } from 'rxjs';\r\nimport { InsuranceApiService } from '../../../_api/_runtime/services/insurance-api.service';\r\nimport { WindowOption } from '../../../_models/window-option';\r\n\r\n@Component({\r\n  selector: 'site-upsert',\r\n  templateUrl: './site-upsert.component.html'\r\n})\r\nexport class SiteUpsertComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  public request = <SiteDto>{};\r\n  public action: string;\r\n  public isLoading = false;\r\n  public members: Array<MemberDto>;\r\n  public isNameTaken = false;\r\n  public isNumberTaken = false;\r\n\r\n  private destory: Subscription;\r\n\r\n  @ViewChild('content', { static: false }) private content: any; // Intentional -- following previous example\r\n\r\n  @Output() onAddorUpdate = new EventEmitter<SiteDto>(); // Intentional -- following previous example\r\n  @Output() onAction = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    private insuranceApiService: InsuranceApiService,\r\n    private headerManagementService: HeaderManagementService,\r\n    public windowManager: WindowManager,\r\n    private container: ViewContainerRef\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    // Pull list of available members\r\n    this.destory = this.insuranceApiService.getMembersByGroupId(this.headerManagementService.groupId).subscribe(response => {\r\n      this.members = response;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.destory) {\r\n      this.destory.unsubscribe();\r\n    }\r\n  }\r\n\r\n  open(item?: SiteDto) {\r\n    let modalTitle = '';\r\n    this.isNameTaken = false;\r\n    this.isNumberTaken = false;\r\n\r\n    if (item) {\r\n      this.action = 'Edit';\r\n      Object.assign(this.request, item);\r\n      modalTitle = 'Edit Site';\r\n    } else {\r\n      this.action = 'Add';\r\n      this.request = <SiteDto>{};\r\n      modalTitle = 'Add Site';\r\n    }\r\n\r\n    this.windowManager.open(this.content, modalTitle, <WindowOption>{\r\n      isModal: true\r\n    });\r\n  }\r\n\r\n  onSubmit(form) {\r\n    this.isNameTaken = false;\r\n    this.isNumberTaken = false;\r\n    if (form.valid) {\r\n      if (this.action === 'Add') {\r\n        this.headerManagementService.upsertSite(this.request, true).subscribe(\r\n          result => {\r\n            this.onAction.emit(this.action);\r\n            this.onAddorUpdate.emit(result);\r\n            this.windowManager.close();\r\n          },\r\n          error => {\r\n            if (error.error === 'Non-unique name') {\r\n              this.isNameTaken = true;\r\n            }\r\n            if (error.error === 'Non-unique site number') {\r\n              this.isNumberTaken = true;\r\n            }\r\n          }\r\n        );\r\n      }\r\n\r\n      if (this.action === 'Edit') {\r\n        this.headerManagementService.upsertSite(this.request, false).subscribe(\r\n          result => {\r\n            this.onAction.emit(this.action);\r\n            this.onAddorUpdate.emit(result);\r\n            this.windowManager.close();\r\n          },\r\n          error => {\r\n            if (error.error === 'Non-unique name') {\r\n              this.isNameTaken = true;\r\n            }\r\n            if (error.error === 'Non-unique site number') {\r\n              this.isNumberTaken = true;\r\n            }\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { ConfirmModalComponent } from '../../_shared/components/confirm-modal.component';\r\nimport { FamisGridService } from '../../_core/services/famis-grid.service';\r\nimport { HeaderManagementService } from '../services/header-management.service';\r\nimport { AlertService } from '../../_core/services/alert.service';\r\nimport { HelperService } from '../../_core/services/helper.service';\r\nimport { AccountUpsertComponent } from './actions/account-upsert.component';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { FamisGrid, FamisGridFeature } from '../../_models/shared/famis-grid-state.model';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FamisGridActionEvent } from '../../_models/shared/famis-grid-action-event.model';\r\nimport { AccountDto } from '../../_api/_runtime/dtos/account.dto';\r\nimport { ModalProperties } from '../../_models/modal-properties.model';\r\nimport { FamisGridCacheResult } from '../../_models/shared/famis-grid-cache-result.model';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'header-management-account',\r\n  templateUrl: './header-management-account.component.html'\r\n})\r\nexport class HeaderManagementAccountComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  public dataGrid: FamisGrid;\r\n  public isLoading = false;\r\n  public action: string;\r\n\r\n  private windowSize = 500;\r\n  private handleLocalError = true;\r\n\r\n  @ViewChild(AccountUpsertComponent, { static: false })\r\n  accountUpsertComponent: AccountUpsertComponent;\r\n\r\n  constructor(\r\n    private famisGridService: FamisGridService,\r\n    private headerManagementService: HeaderManagementService,\r\n    private modalService: NgbModal,\r\n    private alertService: AlertService,\r\n    private helperService: HelperService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n\r\n    this.dataGrid = <FamisGrid>{\r\n      height: 330,\r\n      gridId: this.famisGridService.createGrid(),\r\n      windowSize: this.windowSize,\r\n      totalRecordCount: 0,\r\n      supportedOperators: [FamisGridFeature.Sort, FamisGridFeature.Filter],\r\n      actions: ['Edit', 'Delete'],\r\n      translationBaseKey: this.i18n.projectProfile,\r\n      name: 'account-tab',\r\n      hideTitle: true\r\n    };\r\n\r\n    this.dataGrid.loading = this.headerManagementService.getAccountMetadata().subscribe(metaData => {\r\n      console.dir(metaData);\r\n\r\n    this.dataGrid.columnHeaders = this.helperService.mapHeaders(metaData.fields, []);\r\n    this.dataGrid.selectedHeaders = ['accountDescription', 'accountNumber'];\r\n   \r\n  });\r\n  }\r\n  ngOnDestroy() {}\r\n\r\n  handleActionEvent(actionEvent: FamisGridActionEvent) {\r\n    if (actionEvent.action === 'Delete') {\r\n      this.delete(actionEvent.item);\r\n    }\r\n\r\n    if (actionEvent.action === 'Edit') {\r\n      this.accountUpsertComponent.open(actionEvent.item);\r\n    }\r\n  }\r\n\r\n  handleAction(response: string) {\r\n    this.action = response;\r\n  }\r\n\r\n  handleCreateorModified(response: AccountDto) {\r\n    this.alertService.success('Account {{description}} has been ' + (this.action === 'Edit' ? 'updated.' : 'created.'), null, {\r\n      description: response.accountDescription\r\n    });\r\n\r\n    // Call to update grid\r\n    this.updateCache();\r\n  }\r\n\r\n  delete(item: AccountDto) {\r\n    const modal = this.modalService.open(ConfirmModalComponent);\r\n    const modalOptions = <ModalProperties>{\r\n      heading: {\r\n        key: 'Delete Account'\r\n      },\r\n      body: {\r\n        key: 'Are you sure you wish to delete {{itemDescription}}?',\r\n        params: { itemDescription: item.accountDescription }\r\n      },\r\n      dismissText: {\r\n        key: 'Close'\r\n      },\r\n      successText: {\r\n        key: 'Delete'\r\n      },\r\n      translateBaseKey: this.i18n.common\r\n    };\r\n\r\n\r\n    modal.componentInstance.options = modalOptions;\r\n\r\n    modal.result.then(\r\n      confirm => {\r\n        this.headerManagementService.deleteAccount(item.id, this.handleLocalError).subscribe(result => {\r\n          if (result) {\r\n            this.alertService.success(item.accountDescription + ' has been deleted.');\r\n            this.dataGrid.loading = this.processCacheUpdate();\r\n          } else {\r\n            this.alertService.warn(item.accountDescription + ' cannot be deleted.');\r\n          }\r\n        });\r\n      },\r\n      cancel => {}\r\n    );\r\n  }\r\n\r\n  updateCache(request?: FamisGridCacheResult) {\r\n    const s = this;\r\n\r\n    const successCacheLoading = new Subscription();\r\n    const errorCacheLoading = new Subscription();\r\n\r\n    this.dataGrid.cacheLoading = s.processCacheUpdate(request);\r\n  }\r\n\r\n  private processCacheUpdate(cacheUpdateRequest?: FamisGridCacheResult): Subscription {\r\n    const s = this;\r\n\r\n         return this.headerManagementService.updateAccountData(s.headerManagementService.groupId,\r\n        cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.skip : s.famisGridService.defaultSkip,\r\n        cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.take : s.famisGridService.defaultTake,\r\n        cacheUpdateRequest ? cacheUpdateRequest.sortTerms : null,\r\n        cacheUpdateRequest ? cacheUpdateRequest.filters : null)\r\n        .subscribe(dto => {\r\n          this.dataGrid.totalRecordCount = dto.totalInRecordSet;\r\n\r\n          s.famisGridService.setCacheRecords(\r\n            dto.accounts,\r\n            s.dataGrid.gridId,\r\n            cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.skip : s.famisGridService.defaultSkip,\r\n            dto.numberInThisPayload,\r\n            this.dataGrid.windowSize\r\n          );\r\n    });\r\n  }\r\n}\r\n","import { ConfirmModalComponent } from '../../_shared/components/confirm-modal.component';\r\nimport { FamisGridService } from '../../_core/services/famis-grid.service';\r\nimport { HeaderManagementService } from '../services/header-management.service';\r\nimport { AlertService } from '../../_core/services/alert.service';\r\nimport { HelperService } from '../../_core/services/helper.service';\r\nimport { DepartmentUpsertComponent } from './actions/department-upsert.component';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { FamisGrid, FamisGridFeature } from '../../_models/shared/famis-grid-state.model';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FamisGridActionEvent } from '../../_models/shared/famis-grid-action-event.model';\r\nimport { DepartmentDto } from '../../_api/_runtime/dtos/department.dto';\r\nimport { ModalProperties } from '../../_models/modal-properties.model';\r\nimport { FamisGridCacheResult } from '../../_models/shared/famis-grid-cache-result.model';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'header-management-department',\r\n  templateUrl: './header-management-department.component.html'\r\n})\r\nexport class HeaderManagementDepartmentComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  public dataGrid: FamisGrid;\r\n  public isLoading = false;\r\n  public action: string;\r\n\r\n  private windowSize = 500;\r\n  private handleLocalError = true;\r\n\r\n  @ViewChild(DepartmentUpsertComponent, { static: false })\r\n  departmentUpsertComponent: DepartmentUpsertComponent;\r\n\r\n  constructor(\r\n    private famisGridService: FamisGridService,\r\n    private headerManagementService: HeaderManagementService,\r\n    private modalService: NgbModal,\r\n    private helperService: HelperService,\r\n    private alertService: AlertService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n\r\n    this.dataGrid = <FamisGrid>{\r\n      height: 330,\r\n      gridId: this.famisGridService.createGrid(),\r\n      name: 'department-tab',\r\n      windowSize: this.windowSize,\r\n      totalRecordCount: 0,\r\n      supportedOperators: [FamisGridFeature.Sort, FamisGridFeature.Filter],\r\n      actions: ['Edit', 'Delete'],\r\n      translationBaseKey: this.i18n.dataImport,\r\n      hideTitle: true\r\n    };\r\n\r\n    this.dataGrid.loading = this.headerManagementService.getDepartmentMetadata().subscribe(metaData => {\r\n      console.dir(metaData);\r\n\r\n    this.dataGrid.columnHeaders = this.helperService.mapHeaders(metaData.fields, []);\r\n    this.dataGrid.selectedHeaders = ['description', 'departmentNumber'];\r\n    \r\n  });\r\n}\r\n\r\n  ngOnDestroy() {}\r\n\r\n  handleActionEvent(actionEvent: FamisGridActionEvent) {\r\n    if (actionEvent.action === 'Delete') {\r\n      this.delete(actionEvent.item);\r\n    }\r\n    if (actionEvent.action === 'Edit') {\r\n      this.departmentUpsertComponent.open(actionEvent.item);\r\n    }\r\n  }\r\n\r\n  handleAction(response: string) {\r\n    this.action = response;\r\n  }\r\n\r\n  handleCreateorModified(response: DepartmentDto) {\r\n    this.alertService.success('Department {{description}} has been ' + (this.action === 'Edit' ? 'updated.' : 'created.'), null, {\r\n      description: response.description\r\n    });\r\n\r\n\r\n    // Call to update grid\r\n    this.updateCache();\r\n  }\r\n\r\n  delete(item: DepartmentDto) {\r\n    const modal = this.modalService.open(ConfirmModalComponent);\r\n    const modalOptions = <ModalProperties> {\r\n      heading: {\r\n        key: 'Delete Department'\r\n      },\r\n      body: {\r\n        key: 'Are you sure you wish to delete {{itemDescription}}?',\r\n        params: {itemDescription: item.description}\r\n      },\r\n      dismissText: {\r\n        key: 'Close'\r\n      },\r\n      successText: {\r\n        key: 'Delete'\r\n      },\r\n      translateBaseKey: this.i18n.common\r\n    };\r\n\r\n    modal.componentInstance.options = modalOptions;\r\n\r\n    modal.result.then(\r\n      confirm => {\r\n        this.headerManagementService.deleteDepartment(item.id, this.handleLocalError).subscribe(result => {\r\n          if (result) {\r\n            this.alertService.success('{{description}} has been deleted.', null, { description: item.description });\r\n\r\n            this.dataGrid.loading = this.processCacheUpdate();\r\n          } else {\r\n            this.alertService.warn('{{description}} cannot be deleted.', null, { description: item.description });\r\n          }\r\n        });\r\n      },\r\n      cancel => {}\r\n    );\r\n  }\r\n\r\n  updateCache(request?: FamisGridCacheResult) {\r\n    const s = this;\r\n\r\n    const successCacheLoading = new Subscription();\r\n    const errorCacheLoading = new Subscription();\r\n\r\n    this.dataGrid.cacheLoading = s.processCacheUpdate(request);\r\n  }\r\n\r\n  private processCacheUpdate(cacheUpdateRequest?: FamisGridCacheResult): Subscription {\r\n    const s = this;\r\n\r\n    return this.headerManagementService.updateDepartmentData(s.headerManagementService.groupId,\r\n      cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.skip : s.famisGridService.defaultSkip,\r\n      cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.take : s.famisGridService.defaultTake,\r\n      cacheUpdateRequest ? cacheUpdateRequest.sortTerms : null,\r\n      cacheUpdateRequest ? cacheUpdateRequest.filters : null)\r\n      .subscribe(dto => {\r\n        this.dataGrid.totalRecordCount = dto.totalInRecordSet;\r\n\r\n        s.famisGridService.setCacheRecords(\r\n          dto.departments,\r\n          s.dataGrid.gridId,\r\n          cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.skip : s.famisGridService.defaultSkip,\r\n          dto.numberInThisPayload,\r\n          this.dataGrid.windowSize\r\n        );\r\n  });\r\n  }\r\n}\r\n","import { ConfirmModalComponent } from '../../_shared/components/confirm-modal.component';\r\nimport { FamisGridService } from '../../_core/services/famis-grid.service';\r\nimport { HeaderManagementService } from '../services/header-management.service';\r\nimport { AlertService } from '../../_core/services/alert.service';\r\nimport { HelperService } from '../../_core/services/helper.service';\r\nimport { MemberUpsertComponent } from './actions/member-upsert.component';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { FamisGrid, FamisGridFeature } from '../../_models/shared/famis-grid-state.model';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router } from '@angular/router';\r\nimport { FamisGridActionEvent } from '../../_models/shared/famis-grid-action-event.model';\r\nimport { MemberDto } from '../../_api/_runtime/dtos/member.dto';\r\nimport { ModalProperties } from '../../_models/modal-properties.model';\r\nimport { FamisGridCacheResult } from '../../_models/shared/famis-grid-cache-result.model';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'header-management-member',\r\n  templateUrl: './header-management-member.component.html'\r\n})\r\nexport class HeaderManagementMemberComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  public dataGrid: FamisGrid;\r\n  public isLoading = false;\r\n  public action: string;\r\n\r\n  private windowSize = 500;\r\n  private handleLocalError = true;\r\n\r\n  @ViewChild(MemberUpsertComponent, { static: false })\r\n  memberUpsertComponent: MemberUpsertComponent;\r\n\r\n  constructor(\r\n    private famisGridService: FamisGridService,\r\n    private headerManagementService: HeaderManagementService,\r\n    private modalService: NgbModal,\r\n    private alertService: AlertService,\r\n    private helperService: HelperService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n\r\n    this.dataGrid = <FamisGrid>{\r\n      height: 330,\r\n      gridId: this.famisGridService.createGrid(),\r\n      name: 'member-tab',\r\n      windowSize: this.windowSize,\r\n      totalRecordCount: 0,\r\n      supportedOperators: [FamisGridFeature.Sort, FamisGridFeature.Filter],\r\n      actions: ['Edit', 'Delete'],\r\n      translationBaseKey: this.i18n.asset,\r\n      hideTitle: true\r\n    };\r\n\r\n    this.dataGrid.loading = this.headerManagementService.getMemberMetadata().subscribe(metaData => {\r\n\r\n      this.dataGrid.columnHeaders = this.helperService.mapHeaders(metaData.fields, []);\r\n      this.dataGrid.selectedHeaders = ['memberName', 'memberNumber'];\r\n    });\r\n\r\n    this.famisGridService.setUserId();\r\n\r\n    // filter grid settings loader\r\n  \r\n  }\r\n\r\n  ngOnDestroy() {}\r\n\r\n  handleActionEvent(actionEvent: FamisGridActionEvent) {\r\n    if (actionEvent.action === 'Delete') {\r\n      this.delete(actionEvent.item);\r\n    }\r\n\r\n    if (actionEvent.action === 'Edit') {\r\n      this.memberUpsertComponent.open(actionEvent.item);\r\n    }\r\n  }\r\n\r\n  handleAction(response: string) {\r\n    this.action = response;\r\n  }\r\n\r\n  handleCreateorModified(response: MemberDto) {\r\n    this.alertService.success('Member {{memberName}} has been '\r\n     + (this.action === 'Edit' ? 'updated.' : 'created.'), null, {memberName: response.memberName});\r\n\r\n    // Call to update grid\r\n    this.updateCache();\r\n  }\r\n\r\n  delete(item: MemberDto) {\r\n    const modal = this.modalService.open(ConfirmModalComponent);\r\n    const modalOptions = <ModalProperties>{\r\n        heading: {\r\n          key: 'Delete Member'\r\n        },\r\n        body: {\r\n          key: `Are you sure you wish to delete '{{itemMemberName}}'`,\r\n          params: {itemMemberName: item.memberName}\r\n        },\r\n        dismissText: {\r\n          key: 'Close',\r\n        },\r\n        successText: {\r\n          key: 'Delete'\r\n        },\r\n        translateBaseKey: this.i18n.common\r\n    };\r\n\r\n    modal.componentInstance.options = modalOptions;\r\n\r\n    modal.result.then(confirm => {\r\n        this.headerManagementService.deleteMember(item.id, this.handleLocalError).subscribe(result => {\r\n          if (result) {\r\n            this.updateCache();\r\n            this.alertService.success('{{description}} has been deleted.', null, { description: item.memberName });\r\n            this.dataGrid.loading = this.processCacheUpdate();\r\n          }\r\n        }, error => {\r\n          switch (error.status) {\r\n            case 409:\r\n              this.alertService.warn('{{description}} cannot be deleted without first removing related sites.',\r\n                null, { description: item.memberName });\r\n              break;\r\n            default:\r\n              this.alertService.error('An unexpected error has occurred.');\r\n          }\r\n        });\r\n    }, cancel => {\r\n    });\r\n  }\r\n\r\n  updateCache(request?: FamisGridCacheResult) {\r\n    const s = this;\r\n\r\n    const successCacheLoading = new Subscription();\r\n    const errorCacheLoading = new Subscription();\r\n\r\n    this.dataGrid.cacheLoading = s.processCacheUpdate(request);\r\n  }\r\n\r\n  private processCacheUpdate(cacheUpdateRequest?: FamisGridCacheResult): Subscription {\r\n    const s = this;\r\n\r\n    return this.headerManagementService\r\n      .updateMemberData(\r\n        s.headerManagementService.groupId,\r\n        cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.skip : s.famisGridService.defaultSkip,\r\n        cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.take : s.famisGridService.defaultTake,\r\n        cacheUpdateRequest ? cacheUpdateRequest.sortTerms : null,\r\n        cacheUpdateRequest ? cacheUpdateRequest.filters : null\r\n      )\r\n      .subscribe(dto => {\r\n        this.dataGrid.totalRecordCount = dto.totalInRecordSet;\r\n\r\n        s.famisGridService.setCacheRecords(\r\n          dto.members,\r\n          s.dataGrid.gridId,\r\n          cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.skip : s.famisGridService.defaultSkip,\r\n          dto.numberInThisPayload,\r\n          this.dataGrid.windowSize\r\n        );\r\n      });\r\n  }\r\n}\r\n","import { ConfirmModalComponent } from '../../_shared/components/confirm-modal.component';\r\nimport { FamisGridService } from '../../_core/services/famis-grid.service';\r\nimport { HeaderManagementService } from '../services/header-management.service';\r\nimport { AlertService } from '../../_core/services/alert.service';\r\nimport { HelperService } from '../../_core/services/helper.service';\r\nimport { SiteUpsertComponent } from './actions/site-upsert.component';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { TranslationManager } from '../../_core/i18n/translation-manager';\r\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { FamisGrid, FamisGridFeature } from '../../_models/shared/famis-grid-state.model';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FamisGridActionEvent } from '../../_models/shared/famis-grid-action-event.model';\r\nimport { SiteDto } from '../../_api/_runtime/dtos/site.dto';\r\nimport { ModalProperties } from '../../_models/modal-properties.model';\r\nimport { FamisGridCacheResult } from '../../_models/shared/famis-grid-cache-result.model';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'header-management-site',\r\n  templateUrl: './header-management-site.component.html'\r\n})\r\nexport class HeaderManagementSiteComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  public dataGrid: FamisGrid;\r\n  public isLoading = false;\r\n  public action: string;\r\n\r\n  private windowSize = 500;\r\n  private handleLocalError = true;\r\n\r\n  @ViewChild(SiteUpsertComponent, { static: false })\r\n  siteUpsertComponent: SiteUpsertComponent;\r\n\r\n  constructor(\r\n    private famisGridService: FamisGridService,\r\n    private headerManagementService: HeaderManagementService,\r\n    private modalService: NgbModal,\r\n    private alertService: AlertService,\r\n    private helperService: HelperService,\r\n    private translationService: TranslationManager\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n\r\n    this.dataGrid = <FamisGrid>{\r\n      height: 330,\r\n      gridId: this.famisGridService.createGrid(),\r\n      name: 'site-tab',\r\n      windowSize: this.windowSize,\r\n      totalRecordCount: 0,\r\n      supportedOperators:  [FamisGridFeature.Sort, FamisGridFeature.Filter],\r\n      actions: ['Edit', 'Delete'],\r\n      translationBaseKey: this.i18n.dataImport,\r\n      hideTitle: true\r\n    };\r\n\r\n    this.dataGrid.loading = this.headerManagementService.getSiteMetadata().subscribe(metaData => {\r\n      console.dir(metaData);\r\n\r\n    this.dataGrid.columnHeaders = this.helperService.mapHeaders(metaData.fields, []);\r\n       this.dataGrid.selectedHeaders = ['siteName', 'siteNumber', 'memberName'];\r\n  \r\n });\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n\r\n  handleActionEvent(actionEvent: FamisGridActionEvent) {\r\n    if (actionEvent.action === 'Delete') {\r\n      this.delete(actionEvent.item);\r\n    }\r\n\r\n    if (actionEvent.action === 'Edit') {\r\n      this.siteUpsertComponent.open(actionEvent.item);\r\n    }\r\n  }\r\n\r\n  handleAction(response: string) {\r\n    this.action = response;\r\n  }\r\n\r\n  handleCreateorModified(response: SiteDto) {\r\n    this.alertService.success('Site {{siteName}} has been '\r\n     + (this.action === 'Edit' ? 'updated.' : 'created.'), null, {siteName: response.siteName});\r\n\r\n    // Call to update grid\r\n    this.updateCache();\r\n  }\r\n\r\n  delete(item: SiteDto) {\r\n    const modal = this.modalService.open(ConfirmModalComponent);\r\n    const modalOptions = <ModalProperties>{\r\n        heading: {\r\n          key: 'Delete Site',\r\n        },\r\n        body: {\r\n          key: `Are you sure you wish to delete '{{itemSiteName}}'?`,\r\n          params: {itemSiteName: item.siteName},\r\n        },\r\n        dismissText: {\r\n          key: 'Close'\r\n        },\r\n        successText: {\r\n          key: 'Delete'\r\n        },\r\n        translateBaseKey: this.i18n.common\r\n    };\r\n\r\n    modal.componentInstance.options = modalOptions;\r\n\r\n    modal.result.then(confirm => {\r\n      this.headerManagementService.deleteSite(item.id, this.handleLocalError).subscribe(result => {\r\n        if (result) {\r\n          this.updateCache();\r\n          this.alertService.success('{{description}} has been deleted.', null, { description: item.siteName });\r\n          this.dataGrid.loading = this.processCacheUpdate();\r\n        }\r\n      },\r\n        error => {\r\n          switch (error.status) {\r\n            case 409:\r\n              this.alertService.warn('{{siteName}} cannot be deleted without first removing related buildings.',\r\n                null, { siteName: item.siteName });\r\n              break;\r\n            default:\r\n              this.alertService.error('An unexpected error has occurred.');\r\n          }\r\n        });\r\n    }, cancel => {\r\n    });\r\n  }\r\n\r\n  updateCache(request?: FamisGridCacheResult) {\r\n    const s = this;\r\n\r\n    const successCacheLoading = new Subscription();\r\n    const errorCacheLoading = new Subscription();\r\n\r\n    this.dataGrid.cacheLoading = s.processCacheUpdate(request);\r\n  }\r\n\r\n  private processCacheUpdate(cacheUpdateRequest?: FamisGridCacheResult): Subscription {\r\n    const s = this;\r\n\r\n    return this.headerManagementService.updateSiteData(s.headerManagementService.groupId,\r\n      cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.skip : s.famisGridService.defaultSkip,\r\n      cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.take : s.famisGridService.defaultTake,\r\n      cacheUpdateRequest ? cacheUpdateRequest.sortTerms : null,\r\n      cacheUpdateRequest ? cacheUpdateRequest.filters : null)\r\n      .subscribe(dto => {\r\n        this.dataGrid.totalRecordCount = dto.totalInRecordSet;\r\n\r\n        s.famisGridService.setCacheRecords(\r\n          dto.sites,\r\n          s.dataGrid.gridId,\r\n          cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.skip : s.famisGridService.defaultSkip,\r\n          dto.numberInThisPayload,\r\n          this.dataGrid.windowSize\r\n        );\r\n      });\r\n  }\r\n}\r\n","import { HeaderManagementService } from '../services/header-management.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DataTargetName } from '../../_enums/data-target-name';\r\n\r\n@Component({\r\n  selector: 'header-management',\r\n  templateUrl: './header-management.component.html'\r\n})\r\nexport class HeaderManagementComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  public isLoading = false;\r\n\r\n  constructor(\r\n    private headerManagementService: HeaderManagementService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.headerManagementService.groupId = this.route.parent.snapshot.paramMap.get('groupId');\r\n    this.headerManagementService.dataTarget = DataTargetName.client;\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '../_shared/shared.module';\r\n\r\nimport { HeaderManagementComponent } from './components/header-management.component';\r\nimport { HeaderManagementMemberComponent } from './components/header-management-member.component';\r\nimport { MemberUpsertComponent } from './components/actions/member-upsert.component';\r\nimport { HeaderManagementSiteComponent } from './components/header-management-site.component';\r\nimport { SiteUpsertComponent } from './components/actions/site-upsert.component';\r\nimport { HeaderManagementAccountComponent } from './components/header-management-account.component';\r\nimport { AccountUpsertComponent } from './components/actions/account-upsert.component';\r\nimport { HeaderManagementDepartmentComponent } from './components/header-management-department.component';\r\nimport { DepartmentUpsertComponent } from './components/actions/department-upsert.component';\r\nimport { HeaderManagementService } from './services/header-management.service';\r\nimport { CoreModule } from '../_core/core.module';\r\nimport { DateInputsModule } from '@progress/kendo-angular-dateinputs';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { OrderModule } from 'ngx-order-pipe';\r\nimport { LaddaModule } from 'angular2-ladda';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CoreModule,\r\n    CommonModule,\r\n    DateInputsModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    OrderModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    SharedModule,\r\n    LaddaModule,\r\n    NgbModule,\r\n    CoreModule\r\n  ],\r\n  declarations: [\r\n    HeaderManagementComponent,\r\n    HeaderManagementMemberComponent,\r\n    MemberUpsertComponent,\r\n    HeaderManagementSiteComponent,\r\n    SiteUpsertComponent,\r\n    HeaderManagementAccountComponent,\r\n    AccountUpsertComponent,\r\n    HeaderManagementDepartmentComponent,\r\n    DepartmentUpsertComponent\r\n  ],\r\n  entryComponents: [\r\n    MemberUpsertComponent,\r\n    SiteUpsertComponent,\r\n    AccountUpsertComponent,\r\n    DepartmentUpsertComponent\r\n  ],\r\n  providers: [\r\n    HeaderManagementService\r\n  ]\r\n})\r\nexport class HeaderManagementModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { AssetSortTermDto } from '../../_api/_runtime/dtos/asset-sort-term.dto';\r\nimport { InventoryApiService } from '../../_api/_runtime/services/inventory-api.service';\r\nimport { InsuranceApiService } from '../../_api/_runtime/services/insurance-api.service';\r\nimport { AssetFilterTermDto } from '../../_api/_runtime/dtos/asset-filter-term.dto';\r\nimport { MemberResponseDto, MemberDto } from '../../_api/_runtime/dtos/member.dto';\r\nimport { Observable } from 'rxjs';\r\nimport { BuildingSearchDto } from '../../_api/_runtime/dtos/building-search.dto';\r\nimport { AccountResponseDto, AccountDto } from '../../_api/_runtime/dtos/account.dto';\r\nimport { DepartmentResponseDto, DepartmentDto } from '../../_api/_runtime/dtos/department.dto';\r\nimport { SiteResponseDto, SiteDto } from '../../_api/_runtime/dtos/site.dto';\r\nimport { AssetFileSummaryDto } from '../../_api/_runtime/dtos/asset-file-summary.dto';\r\n\r\n@Injectable()\r\nexport class HeaderManagementService {\r\n  public groupId: string;\r\n  public dataTarget: number;\r\n\r\n  public defaultSortTerms = [\r\n    <AssetSortTermDto>{\r\n      termOrder: 0,\r\n      sortDirection: 1,\r\n      field: ''\r\n    }\r\n  ];\r\n\r\n  constructor(\r\n    private inventoryApiService: InventoryApiService,\r\n    private insuranceApiService: InsuranceApiService\r\n  ) {}\r\n\r\n  public updateMemberData(\r\n    groupId: string,\r\n    skip: number,\r\n    take: number,\r\n    sortTerms: Array<AssetSortTermDto> = new Array<\r\n      AssetSortTermDto\r\n    >(),\r\n    filterTerms: Array<AssetFilterTermDto> = new Array<\r\n      AssetFilterTermDto\r\n    >()\r\n  ): Observable<MemberResponseDto> {\r\n    const defaultFilter = [];\r\n\r\n    const searchRequest = <BuildingSearchDto>{\r\n      filterTerms:\r\n        !!filterTerms && filterTerms.length > 0 ? filterTerms : defaultFilter,\r\n      filterConjunction: 'and',\r\n      excludeMatchedRecords: false,\r\n      sortTerms:\r\n        !!sortTerms && sortTerms.length > 0 ? sortTerms : this.defaultSortTerms,\r\n      skip: skip,\r\n      take: take\r\n    };\r\n\r\n    return this.insuranceApiService.searchMemberssByGroup(this.groupId, searchRequest);\r\n  }\r\n\r\n  public updateAccountData(\r\n    groupId: string,\r\n    skip: number,\r\n    take: number,\r\n    sortTerms: Array<AssetSortTermDto> = new Array<\r\n      AssetSortTermDto\r\n    >(),\r\n    filterTerms: Array<AssetFilterTermDto> = new Array<\r\n      AssetFilterTermDto\r\n    >()\r\n  ): Observable<AccountResponseDto> {\r\n    const defaultFilter = [];\r\n\r\n    const searchRequest = <BuildingSearchDto>{\r\n      filterTerms:\r\n        !!filterTerms && filterTerms.length > 0 ? filterTerms : defaultFilter,\r\n      filterConjunction: 'and',\r\n      excludeMatchedRecords: false,\r\n      sortTerms:\r\n        !!sortTerms && sortTerms.length > 0 ? sortTerms : this.defaultSortTerms,\r\n      skip: skip,\r\n      take: take\r\n    };\r\n\r\n    return this.inventoryApiService.searchAccountByGroup(this.groupId, searchRequest);\r\n  }\r\n\r\n  public updateDepartmentData(\r\n    groupId: string,\r\n    skip: number,\r\n    take: number,\r\n    sortTerms: Array<AssetSortTermDto> = new Array<\r\n      AssetSortTermDto\r\n    >(),\r\n    filterTerms: Array<AssetFilterTermDto> = new Array<\r\n      AssetFilterTermDto\r\n    >()\r\n  ): Observable<DepartmentResponseDto> {\r\n    const defaultFilter = [];\r\n\r\n    const searchRequest = <BuildingSearchDto>{\r\n      filterTerms:\r\n        !!filterTerms && filterTerms.length > 0 ? filterTerms : defaultFilter,\r\n      filterConjunction: 'and',\r\n      excludeMatchedRecords: false,\r\n      sortTerms:\r\n        !!sortTerms && sortTerms.length > 0 ? sortTerms : this.defaultSortTerms,\r\n      skip: skip,\r\n      take: take\r\n    };\r\n\r\n    return this.inventoryApiService.searchDepartmentByGroup(this.groupId, searchRequest);\r\n  }\r\n\r\n  public updateSiteData(\r\n    groupId: string,\r\n    skip: number,\r\n    take: number,\r\n    sortTerms: Array<AssetSortTermDto> = new Array<\r\n      AssetSortTermDto\r\n    >(),\r\n    filterTerms: Array<AssetFilterTermDto> = new Array<\r\n      AssetFilterTermDto\r\n    >()\r\n  ): Observable<SiteResponseDto> {\r\n\r\n    const siteSortTerms = [\r\n      <AssetSortTermDto>{\r\n        termOrder: 0,\r\n        sortDirection: 1,\r\n        field: 'siteName'\r\n      }\r\n    ];\r\n\r\n    const defaultFilter = [];\r\n\r\n    const searchRequest = <BuildingSearchDto>{\r\n      filterTerms:\r\n        !!filterTerms && filterTerms.length > 0 ? filterTerms : defaultFilter,\r\n      filterConjunction: 'and',\r\n      excludeMatchedRecords: false,\r\n      sortTerms:\r\n        !!sortTerms && sortTerms.length > 0 ? sortTerms : siteSortTerms,\r\n      skip: skip,\r\n      take: take\r\n    };\r\n\r\n    return this.insuranceApiService.searchSitesByGroup(this.groupId, searchRequest);\r\n  }\r\n\r\n\r\n  public getMemberMetadata(): Observable<AssetFileSummaryDto> {\r\n    return this.insuranceApiService.getMembersSearchMetadata();\r\n  }\r\n\r\n  public getSiteMetadata(): Observable<AssetFileSummaryDto> {\r\n    return this.insuranceApiService.getSiteSearchMetadata();\r\n  }\r\n\r\n  public getAccountMetadata(): Observable<AssetFileSummaryDto> {\r\n    return this.inventoryApiService.getAccountSearchMetadata();\r\n  }\r\n\r\n  public getDepartmentMetadata(): Observable<AssetFileSummaryDto> {\r\n    return this.inventoryApiService.getDepartmentSearchMetadata();\r\n  }\r\n\r\n  public getSiteData(groupId: string): Observable<Array<SiteDto>> {\r\n    return this.insuranceApiService.getSitesByGroup(groupId);\r\n  }\r\n\r\n  public getAccountData(groupId: string): Observable<Array<AccountDto>> {\r\n    return this.inventoryApiService.getAccountsByGroupId(groupId);\r\n  }\r\n\r\n  public getDeparmentsData(groupId: string): Observable<Array<DepartmentDto>> {\r\n    return this.inventoryApiService.getDepartmentsByGroupId(groupId);\r\n  }\r\n\r\n  /*** Upsert Methods ***/\r\n\r\n  public upsertMember(member: MemberDto, isNew: boolean): Observable<MemberDto> {\r\n    if (isNew) {\r\n      return this.insuranceApiService.createMemberByGroupId(this.groupId, member, true);\r\n    } else {\r\n      return this.insuranceApiService.updateMemberByMemberId(member, true);\r\n    }\r\n  }\r\n\r\n  public upsertSite(site: SiteDto, isNew: boolean): Observable<SiteDto> {\r\n    if (isNew) {\r\n      return this.insuranceApiService.createSiteByGroupId(this.groupId, site, true);\r\n    } else {\r\n      return this.insuranceApiService.updateSiteBySiteId(site, true);\r\n    }\r\n  }\r\n\r\n  public upsertAccount(account: AccountDto, isNew: boolean): Observable<AccountDto> {\r\n    if (isNew) {\r\n      return this.inventoryApiService.createAccountByGroupId(this.groupId, account);\r\n    } else {\r\n      return this.inventoryApiService.updateAccountByAccountId(account);\r\n    }\r\n  }\r\n\r\n  public upsertDepartment(department: DepartmentDto, isNew: boolean): Observable<DepartmentDto> {\r\n    if (isNew) {\r\n      return this.inventoryApiService.createDepartmentByGroupId(this.groupId, department);\r\n    } else {\r\n      return this.inventoryApiService.updateDepartmentByDepartmentId(department);\r\n    }\r\n  }\r\n\r\n  /*** Delete Methods ***/\r\n  public deleteMember(memberId: string, handleLocalError?: boolean): Observable<boolean> {\r\n    return this.insuranceApiService.deleteMemberByMemberId(memberId, handleLocalError);\r\n  }\r\n\r\n  public deleteSite(siteId: string, handleLocalError?: boolean): Observable<boolean> {\r\n    return this.insuranceApiService.deleteSiteBySiteId(siteId, handleLocalError);\r\n  }\r\n\r\n  public deleteAccount(accountId: string, handleLocalError?: boolean): Observable<boolean> {\r\n    return this.inventoryApiService.deleteAccountByAccountId(accountId, handleLocalError);\r\n  }\r\n\r\n  public deleteDepartment(departmentId: string, handleLocalError?: boolean): Observable<boolean> {\r\n    return this.inventoryApiService.deleteDepartmentByDepartmentId(departmentId, handleLocalError);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserStore } from './_core/user/user.store';\r\nimport { SystemPermissionsEnum } from './_core/user/permissions';\r\nimport { CldrIntlService, IntlService } from '@progress/kendo-angular-intl';\r\nimport { TranslatedComponent } from './_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from './_core/i18n/translation-base-keys';\r\n\r\nimport * as moment from 'moment';\r\nimport { TranslationManager } from './_core/i18n/translation-manager';\r\nimport { LeftNavService } from './_core/services/left-nav-service';\r\nimport { CountriesApiService } from './_api/_configuration/services/countries-api.service';\r\n\r\n@Component({\r\n  templateUrl: './home.component.html'\r\n})\r\nexport class HomeComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  translationsLoaded = false;\r\n\r\n  userName: string;\r\n\r\n  permissions = SystemPermissionsEnum;\r\n\r\n  userHasPermissions = false;\r\n\r\n  isBusy = false;\r\n\r\n  options = {\r\n    position: ['bottom', 'right'],\r\n    showProgressBar: true,\r\n    pauseOnHover: true,\r\n    clickToClose: true,\r\n\r\n    timeOut: 5000,\r\n    lastOnBottom: true\r\n  };\r\n\r\n  collapsed = false;\r\n\r\n  constructor(\r\n    private userStore: UserStore,\r\n    private translate: TranslationManager,\r\n    private intlService: IntlService,\r\n    private countryService: CountriesApiService,\r\n    private leftNavService: LeftNavService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.userStore.user.subscribe(user => {\r\n      if (user && user.profile) {\r\n        this.userHasPermissions = user.permissions.permissionsGranted.length > 0;\r\n        this.userName = user.getName();\r\n\r\n        this.countryService.getCountryLanguage(user.profile.CountryCode).subscribe(countryLanguage => {\r\n          if (countryLanguage) {\r\n            (<CldrIntlService>this.intlService).localeId = countryLanguage.locale;\r\n            moment.locale(countryLanguage.locale);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  logout(): void {\r\n    this.userStore.logoutUser();\r\n  }\r\n\r\n  public toggleNavClicked() {\r\n    this.collapsed = !this.collapsed;\r\n    this.leftNavService.toggleCollapsed(this.collapsed);\r\n  }\r\n}\r\n","import { AlertService } from '../../../_core/services/alert.service';\r\nimport { PortalManagementService } from '../../services/portal-management.service';\r\nimport { NgbActiveModal, NgbTypeaheadSelectItemEvent } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormGroupDirective, NgForm } from '@angular/forms';\r\nimport { WindowManager } from '../../../_core/services/window-manager.service';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { of, Observable } from 'rxjs';\r\nimport { catchError, tap, merge, switchMap, distinctUntilChanged, debounceTime } from 'rxjs/operators';\r\nimport { Component, ViewChild, Input, OnInit } from '@angular/core';\r\nimport { ModalFormEvent } from '../../../_enums/modal-form-event';\r\nimport { ContractSearchResultDto } from '../../../_api/_runtime/dtos/contract-search-result.dto';\r\nimport { GroupDto } from '../../../_api/_runtime/dtos/group.dto';\r\n\r\n@Component({\r\n  selector: 'add-portal-access-modal',\r\n  templateUrl: './add-portal-access-modal.component.html'\r\n})\r\nexport class AddPortalAccessComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  @ViewChild('portalGroupForm', { static: true }) formGroup: FormGroupDirective;\r\n  @Input() modalTitle: string;\r\n\r\n  public selectedContractId: string;\r\n  public displayErrors = false;\r\n  public contractExists = false;\r\n  public apiError = '';\r\n  public submitResponse: ModalFormEvent;\r\n  public accounts: GroupDto[] = [];\r\n  public selectedAccountId: string;\r\n\r\n  model: ContractSearchResultDto;\r\n  searching = false;\r\n  searchFailed = false;\r\n  item: NgbTypeaheadSelectItemEvent = null;\r\n  hideSearchingWhenUnsubscribed = new Observable(() => () => (this.searching = false));\r\n\r\n  constructor(private portalService: PortalManagementService, private windowManager: WindowManager, private alertService: AlertService) {}\r\n\r\n  ngOnInit() {  }\r\n\r\n  handleModalEvent(modalEvent: ModalFormEvent) {\r\n    if (modalEvent === ModalFormEvent.Save) {\r\n      this.formGroup.ngSubmit.emit();\r\n    }\r\n\r\n    if (modalEvent === ModalFormEvent.Dismiss) {\r\n      this.dismiss();\r\n    }\r\n  }\r\n\r\n  dismiss() {\r\n    this.windowManager.close();\r\n  }\r\n\r\n  addPortalGroup(form: NgForm) {\r\n    this.displayErrors = false;\r\n    if (form.valid) {\r\n      //appending '-Portal' to portal groupname, refer BUG-18546\r\n      let account = this.accounts.find(acc => acc.id === this.selectedAccountId);\r\n      this.portalService.createPortalGroup(this.selectedContractId, account.groupName + '-Portal', account.id).subscribe(result => {\r\n        if (result) {\r\n          this.submitResponse = ModalFormEvent.Success;\r\n          this.windowManager.close();\r\n        } else {\r\n          this.submitResponse = ModalFormEvent.Failed;\r\n          this.alertService.error('Failed to create portal account.');\r\n          this.windowManager.close();\r\n        }\r\n      },\r\n      error => {\r\n        this.apiError = !!error.error ? error.error : 'An unknown error has occurred';\r\n        this.contractExists = true;\r\n      }\r\n      );\r\n    } else {\r\n      this.displayErrors = true;\r\n    }\r\n  }\r\n\r\n  public getResultFormatter(result) {\r\n    return result.projectCode + ' (' + result.contractName + ')';\r\n  }\r\n\r\n  public getInputFormatter(result) {\r\n    return result.projectCode + ' (' + result.contractName + ')';\r\n  }\r\n\r\n  onSelectItem(selected: NgbTypeaheadSelectItemEvent): void {\r\n    this.selectedContractId = selected.item.id;\r\n    this.portalService.getContractGroups(this.selectedContractId).subscribe(result => {\r\n      if(result && result.length > 0) {\r\n        this.accounts = result;\r\n      } else {\r\n        this.accounts = [];\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  search = (text$: Observable<string>) =>\r\n    text$\r\n      .pipe(debounceTime(300))\r\n      .pipe(distinctUntilChanged())\r\n      .pipe(tap(() => (this.searching = true)))\r\n      .pipe(switchMap(term =>\r\n        this.portalService\r\n          .searchPortalContracts(term)\r\n          .pipe(tap(() => {\r\n            this.searchFailed = false;\r\n          }))\r\n          .pipe(catchError(() => {\r\n            this.searchFailed = true;\r\n            return of([]);\r\n          }))\r\n      ))\r\n      .pipe(tap(() => {\r\n        this.searching = false;\r\n      }))\r\n      .pipe(merge(this.hideSearchingWhenUnsubscribed))\r\n}\r\n","import { PortalManagementService } from '../services/portal-management.service';\r\nimport { of, Observable } from 'rxjs';\r\nimport { catchError, tap, switchMap, distinctUntilChanged, debounceTime, merge } from 'rxjs/operators';\r\nimport { Component, Output, Input, OnInit, EventEmitter } from '@angular/core';\r\nimport { ContractSearchResultDto } from '../../_api/_runtime/dtos/contract-search-result.dto';\r\nimport { NgbTypeaheadSelectItemEvent } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'contract-search',\r\n  templateUrl: './contract-search.component.html'\r\n})\r\nexport class ContractSearchComponent implements OnInit {\r\n\r\n  @Output() selectContract = new EventEmitter<ContractSearchResultDto>();\r\n  @Input() model: any;\r\n\r\n  searching: Boolean = false;\r\n  searchFailed = false;\r\n  item: NgbTypeaheadSelectItemEvent;\r\n  hideSearchingWhenUnsubscribed = new Observable(() => () =>\r\n    (this.searching = false)\r\n  );\r\n\r\n  constructor(private portalService: PortalManagementService) {}\r\n\r\n  ngOnInit() { }\r\n\r\n  onSelectItem(event: NgbTypeaheadSelectItemEvent): void {\r\n    const contract: ContractSearchResultDto = event.item;\r\n    this.selectContract.emit(contract);\r\n  }\r\n\r\n  public getResultFormatter(result: ContractSearchResultDto) {\r\n    return result.projectCode + ' (' + result.contractName + ')';\r\n  }\r\n\r\n  public getInputFormatter(result: ContractSearchResultDto) {\r\n    return result.projectCode + ' (' + result.contractName + ')';\r\n  }\r\n\r\n  search = (text$: Observable<string>) =>\r\n    text$\r\n      .pipe(debounceTime(300))\r\n      .pipe(distinctUntilChanged())\r\n      .pipe(tap(() => (this.searching = true)))\r\n      .pipe(switchMap(term =>\r\n        this.portalService\r\n          .searchContracts(term)\r\n          .pipe(tap(() => {\r\n            this.searchFailed = false;\r\n          }))\r\n          .pipe(catchError(() => {\r\n            this.searchFailed = true;\r\n            return of([]);\r\n          }))\r\n      ))\r\n      .pipe(tap(() => {\r\n        this.searching = false;\r\n      }))\r\n      .pipe(merge(this.hideSearchingWhenUnsubscribed))\r\n}\r\n","import { PortalManagementService } from '../services/portal-management.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, OnDestroy, ComponentRef, Output, EventEmitter } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { ContractSearchResultDto } from '../../_api/_runtime/dtos/contract-search-result.dto';\r\nimport { GroupHierarchyDto } from '../../_api/_runtime/dtos/client-hierarchy.dto';\r\nimport { GroupSummaryDto } from '../../_api/dtos/group-summary.dto';\r\nimport { HierarchyMemberDto, HierarchySiteDto } from '../../_api/_runtime/dtos/building-hierarchy.dto';\r\n\r\n@Component({\r\n  selector: 'copy-group',\r\n  templateUrl: './copy-group.component.html'\r\n})\r\nexport class CopyGroupComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  ref: ComponentRef<CopyGroupComponent>;\r\n  toGroupId: string;\r\n  instanceId: string;\r\n  @Output() componentRemoved = new EventEmitter<string>();\r\n\r\n  public loading: Subscription;\r\n\r\n  public selectedContract: ContractSearchResultDto;\r\n  public selectedGroupHierarchy: GroupHierarchyDto;\r\n  public selectedGroup: GroupSummaryDto;\r\n  public groups: GroupSummaryDto[];\r\n  public selectedMember: HierarchyMemberDto;\r\n  public members: HierarchyMemberDto[];\r\n  public selectedSite: HierarchySiteDto;\r\n  public sites: HierarchySiteDto[];\r\n\r\n  constructor(private portalService: PortalManagementService) { }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  contractChanged(selectedContract: ContractSearchResultDto): void {\r\n    this.selectedContract = selectedContract;\r\n    this.resetGroups();\r\n    this.groups = this.selectedContract.groups\r\n        .filter(g => g.id !== this.toGroupId);\r\n    this.resetMembers();\r\n    this.resetSites();\r\n  }\r\n\r\n  groupChanged(selectedGroup: GroupSummaryDto): void {\r\n    this.resetMembers();\r\n    this.loading = this.portalService.getGroupHierarchy(selectedGroup.id).subscribe((res: GroupHierarchyDto) => {\r\n      this.selectedGroupHierarchy = res;\r\n      this.members = res.members;\r\n    });\r\n    this.resetSites();\r\n  }\r\n\r\n  memberChanged(selectedMember: HierarchyMemberDto): void {\r\n    this.resetSites();\r\n    this.sites = this.selectedMember.sites;\r\n  }\r\n\r\n  remove(): void {\r\n    this.ref.destroy();\r\n    this.componentRemoved.emit(this.instanceId);\r\n  }\r\n\r\n  private resetContracts(): void {\r\n    this.selectedContract = null;\r\n  }\r\n\r\n  private resetGroups(): void {\r\n    this.selectedGroup = null;\r\n    this.groups = [];\r\n  }\r\n\r\n  private resetMembers(): void {\r\n    this.selectedMember = null;\r\n    this.members = [];\r\n  }\r\n\r\n  private resetSites(): void {\r\n    this.selectedSite = null;\r\n    this.sites = [];\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.loading) {\r\n      this.loading.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { PortalManagementService } from '../services/portal-management.service';\r\nimport { AddPortalAccessComponent } from './Actions/add-portal-access-modal.component';\r\nimport {AlertService} from '../../_core/services/alert.service';\r\nimport { WindowManager } from '../../_core/services/window-manager.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, OnDestroy, ViewContainerRef } from '@angular/core';\r\nimport { ContractSummaryDto } from '../../_api/dtos/contract-summary.dto';\r\nimport { GroupDto } from '../../_api/_runtime/dtos/group.dto';\r\nimport { WindowOption } from '../../_models/window-option';\r\nimport { ModalFormEvent } from '../../_enums/modal-form-event';\r\n\r\n@Component({\r\n  selector: 'portal-management',\r\n  templateUrl: './portal-management.component.html'\r\n})\r\nexport class PortalManagementComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  public portalContracts: Array<ContractSummaryDto>;\r\n  public selectedContractId: string;\r\n  public selectedGroup: GroupDto;\r\n  constructor(\r\n    private portalService: PortalManagementService,\r\n    private windowManager: WindowManager,\r\n    public container: ViewContainerRef,    private alertService: AlertService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.refreshData();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\r\n  }\r\n\r\n  launchAddPortalModal() {\r\n    const windowRef = this.windowManager.open(AddPortalAccessComponent, 'Add Portal Access', <WindowOption>{\r\n      isModal: true\r\n    });\r\n\r\n    windowRef.result.subscribe(() => {\r\n      if (windowRef.content.instance.submitResponse === ModalFormEvent.Success) {\r\n        this.refreshData();\r\n        this.alertService.success('Portal Account Created');\r\n      }\r\n    });\r\n  }\r\n\r\n  private refreshData() {\r\n    this.portalService.getPortalContracts().subscribe(res => {\r\n      this.portalContracts = res;\r\n    });\r\n  }\r\n\r\n  setSelectedGroup() {\r\n    if (this.selectedContractId) {\r\n      const c = this.portalContracts.find(f => f.id === this.selectedContractId);\r\n      const groupId = c.groupIds[0];\r\n\r\n      this.portalService.getGroup(groupId).subscribe(res => {\r\n        this.selectedGroup = res;\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { PortalManagementService } from '../services/portal-management.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { GroupDto } from '../../_api/_runtime/dtos/group.dto';\r\n\r\n@Component({\r\n  selector: 'setup-access',\r\n  templateUrl: './setup-access.component.html'\r\n})\r\nexport class SetupAccessComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  @Input() group: GroupDto;\r\n\r\n  constructor(private portalService: PortalManagementService) {}\r\n\r\n  ngOnInit() {\r\n    console.log(this.group);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\r\n  }\r\n\r\n  toggleStatus() {\r\n\r\n    this.group.isDisabled = !this.group.isDisabled;\r\n    this.portalService.updateGroup(this.group).subscribe(res => {\r\n\r\n    });\r\n  }\r\n}\r\n","import { CopyGroupComponent } from './copy-group.component';\r\nimport { PortalManagementService } from '../services/portal-management.service';\r\nimport { HelperService } from '../../_core/services/helper.service';\r\nimport { AlertService } from '../../_core/services/alert.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, OnDestroy, Input, ViewChild, ViewContainerRef, ComponentRef, ComponentFactoryResolver } from '@angular/core';\r\nimport { GroupDto } from '../../_api/_runtime/dtos/group.dto';\r\nimport { Subscription } from 'rxjs';\r\nimport { CopyGroupsDto } from '../../_api/_runtime/dtos/copy-groups.dto';\r\n\r\n@Component({\r\n  selector: 'setup-data',\r\n  templateUrl: './setup-data.component.html'\r\n})\r\nexport class SetupDataComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  @Input() group: GroupDto;\r\n  @ViewChild('selections', { read: ViewContainerRef, static: true })\r\n  selectionsContainer: ViewContainerRef;\r\n\r\n  public selections: Array<ComponentRef<CopyGroupComponent>> = new Array<ComponentRef<CopyGroupComponent>>();\r\n  public selectionErrors = false;\r\n  public replace = true;\r\n  public waiting: Subscription;\r\n\r\n  constructor(\r\n    private componentResolver: ComponentFactoryResolver,\r\n    private portalService: PortalManagementService,\r\n    private helperService: HelperService,\r\n    private alertService: AlertService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.addSelection();\r\n  }\r\n\r\n  copyGroups(): void {\r\n    this.selectionErrors = this.hasErrors();\r\n    if (!this.selectionErrors) {\r\n      const dto: CopyGroupsDto = this.buildRequestDto();\r\n      this.waiting = this.portalService.copyGroups(dto).subscribe(res => {\r\n        this.alertService.success('Group Copy successfully completed.');\r\n        this.selections = [];\r\n        this.selectionsContainer.clear();\r\n      },\r\n      error => {\r\n        this.alertService.error('An error has occurred during the Group Copy.');\r\n      });\r\n    }\r\n  }\r\n\r\n  buildRequestDto(): CopyGroupsDto {\r\n    const request = <CopyGroupsDto>{\r\n      fromGroupIds: new Array<string>(),\r\n      toGroupId: this.group.id,\r\n      toGroupName: this.group.groupName,\r\n      memberIds: new Array<string>(),\r\n      siteIds: new Array<string>(),\r\n      replace: this.replace\r\n    };\r\n\r\n    this.selections.forEach((selection: ComponentRef<CopyGroupComponent>) => {\r\n      const refInstance = selection.instance.ref.instance;\r\n\r\n      // Add Groups\r\n      if (refInstance.selectedGroup != null && !request.fromGroupIds.includes(refInstance.selectedGroup.id)) {\r\n        request.fromGroupIds.push(refInstance.selectedGroupHierarchy.id);\r\n      }\r\n\r\n      // Add Members\r\n      if (refInstance.selectedMember != null && !request.memberIds.includes(refInstance.selectedMember.id)) {\r\n        request.memberIds.push(refInstance.selectedMember.id);\r\n      }\r\n\r\n      // Add Sites\r\n      if (refInstance.selectedSite != null && !request.siteIds.includes(refInstance.selectedSite.id)) {\r\n        request.siteIds.push(refInstance.selectedSite.id);\r\n      }\r\n\r\n    });\r\n\r\n    return request;\r\n  }\r\n\r\n  addSelection(): void  {\r\n    const comp = this.componentResolver.resolveComponentFactory(CopyGroupComponent);\r\n    const selection = this.selectionsContainer.createComponent(comp);\r\n\r\n    // Input References\r\n    selection.instance.instanceId = this.helperService.generateGuid();\r\n    selection.instance.toGroupId = this.group.id;\r\n    selection.instance.ref = selection;\r\n\r\n    selection.instance.componentRemoved.subscribe((instanceId: string) => {\r\n      this.removeComponent(instanceId);\r\n    });\r\n\r\n    this.selections.push(selection);\r\n  }\r\n\r\n  removeComponent(instanceId: string): void {\r\n    this.selections.forEach((selection: ComponentRef<CopyGroupComponent>, index: number) => {\r\n      if (selection.instance.instanceId === instanceId) {\r\n        this.selections.splice(index, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  hasErrors(): boolean {\r\n    for (let i = 0; i < this.selections.length; i++) {\r\n        const selection: ComponentRef<CopyGroupComponent> = this.selections[i];\r\n        const refInstance = selection.instance.ref.instance;\r\n        if (refInstance.selectedContract == null || refInstance.selectedGroup == null) {\r\n          return true;\r\n        }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  hasSelections(): boolean {\r\n    return this.selections.length > 0;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.waiting) {\r\n      this.waiting.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { CopyGroupComponent } from './copy-group.component';\r\nimport { PortalManagementService } from '../services/portal-management.service';\r\nimport { HelperService } from '../../_core/services/helper.service';\r\nimport { AlertService } from '../../_core/services/alert.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { GroupDto } from '../../_api/_runtime/dtos/group.dto';\r\nimport { ImageDto } from '../../_api/_runtime/dtos/image.dto';\r\n\r\n@Component({\r\n  selector: 'setup-image',\r\n  templateUrl: './setup-image.component.html'\r\n})\r\nexport class SetupImageComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  public imageUrl = '';\r\n  public acceptedFileTypes = ['.png', '.jpeg', '.gif', '.jpg', '.bmp', '.svg', '.apng'];\r\n  public isUploading = false;\r\n  public canRemove = false;\r\n  @Input() group: GroupDto;\r\n\r\n  private currentImage: ImageDto;\r\n\r\n  constructor(\r\n    private alertService: AlertService,\r\n    private portalManagementService: PortalManagementService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.portalManagementService.getPortalImage(this.group.id).subscribe(\r\n      result => {\r\n        this.currentImage = result;\r\n        this.imageUrl = this.currentImage.url;\r\n        this.canRemove = true;\r\n      },\r\n      error => {\r\n        // do nothing\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n\r\n  }\r\n\r\n  public uploadFile(file: File) {\r\n    this.isUploading = true;\r\n    this.portalManagementService.upsertPortalImage(this.group.id, file.name, file).subscribe(\r\n      res => {\r\n        this.isUploading = false;\r\n        this.canRemove = true;\r\n        this.currentImage = res;\r\n        this.imageUrl = res.url;\r\n      }\r\n    );\r\n  }\r\n\r\n  public removeImage() {\r\n    if (this.canRemove) {\r\n      this.portalManagementService.removePortalImage(this.currentImage.id).subscribe(\r\n        res => {\r\n          this.canRemove = false;\r\n          this.currentImage = null;\r\n          this.imageUrl = '';\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { SortDescriptor, orderBy, State, process } from '@progress/kendo-data-query/dist/es/main';\r\nimport { RowClassArgs, SelectionEvent, GridDataResult, PageChangeEvent, DataStateChangeEvent,\r\n  SelectableSettings } from '@progress/kendo-angular-grid';\r\nimport { AlertService } from '../../_core/services/alert.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, ViewChild, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Observable, pipe } from 'rxjs';\r\nimport { MetadataDto } from '../../_api/_runtime/dtos/reporting/report-metadata.dto';\r\nimport { ReportsService } from '../../reports/services/reports.service';\r\nimport { GroupDto } from '../../_api/_runtime/dtos/group.dto';\r\nimport {map, tap} from 'rxjs/operators';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'setup-metadata',\r\n  templateUrl: './setup-metadata.component.html'\r\n})\r\n\r\nexport class SetupMetadataComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  metadataGridBusy = true;\r\n\r\n  @Input() group: GroupDto;\r\n  selectedMetadataIds: Array<any>;\r\n  metadata$: Observable<MetadataDto[]>;\r\n  metadata: MetadataDto[] = new Array<MetadataDto>();\r\n\r\n  public selectableSettings = <SelectableSettings> {\r\n    checkboxOnly: true,\r\n    mode: 'multiple'\r\n  };\r\n\r\n  state: State = {\r\n   sort: <SortDescriptor[]>[{\r\n      dir: 'asc',\r\n      field: 'tagName'\r\n    }]\r\n\r\n  };\r\n\r\n  public sortSelectedAsc = false;\r\n  public sortSelectedDesc = false;\r\n\r\n  gridData: GridDataResult = process(this.metadata, this.state);\r\n  //gridData : any[]\r\n\r\n  constructor(private reportsService: ReportsService, private alertService: AlertService) { }\r\n\r\n  dataStateChange(state: DataStateChangeEvent): void {\r\n    this.state = state;\r\n    this.gridData = process(this.metadata, this.state);\r\n  }\r\n\r\n  ngOnInit() {\r\n   this.reportsService.getReportMetadata(this.group.id).subscribe(\r\n      data => {\r\n        this.metadata = data; \r\n        this.gridData = process(this.metadata, this.state);\r\n      },\r\n      error => {},\r\n      () => this.metadataGridBusy = false);\r\n\r\n      this.reportsService.getGropuMetadataByGroupId(this.group.id)\r\n      .subscribe(data => {\r\n        if (data != null) {\r\n          console.log(data);\r\n          data.forEach(groupMetadata => {\r\n             this.selectedMetadataIds.push(groupMetadata.metadataId);\r\n            });\r\n        }\r\n      });\r\n\r\n   if (!this.selectedMetadataIds) {\r\n     this.selectedMetadataIds = new Array<any>();\r\n   }\r\n  }\r\n\r\n  onSelectionChanged(args?: SelectionEvent) {\r\n    setTimeout(() => {\r\n      this.onDeselectedRows(args.deselectedRows);\r\n      if (args.selectedRows != null && args.selectedRows.length > 0) {\r\n        this.UpdateSelectedRows(args.selectedRows);\r\n      }\r\n    \r\n    });\r\n  }\r\n\r\n  private onDeselectedRows(deselectedRows: Array<any>){\r\n    if (deselectedRows == null || deselectedRows.length === 0) {\r\n      return;\r\n    }\r\n    const deselectedMetadata = new Array<MetadataDto>();\r\n    deselectedRows.forEach(value => {\r\n      const metadataa = this.metadata.find(c => c.id === value.dataItem.id);\r\n      deselectedMetadata.push(metadataa);\r\n    });\r\n    this.reportsService.deleteGroupMetadata(this.group.id,deselectedMetadata);\r\n    \r\n  }\r\n\r\n  private validateSelectedRows(selectedRows: Array<any>) {\r\n    selectedRows.forEach(value => {\r\n      const metadata = this.metadata.find(c => c.id === value.dataItem.id);\r\n    });\r\n  }\r\n\r\n  private UpdateSelectedRows(selectedRows: Array<any>) {\r\n    const selectedMetadata = new Array<MetadataDto>();\r\n    selectedRows.forEach(value => {\r\n      const metadataa = this.metadata.find(c => c.id === value.dataItem.id);\r\n     selectedMetadata.push(metadataa);\r\n    });\r\n    this.reportsService.createGroupMetadata(this.group.id,selectedMetadata);\r\n\r\n}\r\n\r\n}\r\n\r\n","import { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { GroupDto } from '../../_api/_runtime/dtos/group.dto';\r\nimport { PortalSetupMode } from '../../_enums/portal-setup-mode';\r\n\r\n@Component({\r\n  selector: 'setup-portal',\r\n  templateUrl: './setup-portal.component.html'\r\n})\r\nexport class SetupPortalComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  @Input() group: GroupDto;\r\n\r\n  public portalLabel: string;\r\n  public setupModes = PortalSetupMode;\r\n  public setupMode: PortalSetupMode = PortalSetupMode.SetupAccess;\r\n\r\n  constructor() {}\r\n  ngOnInit() {\r\n    this.portalLabel = this.group.groupName;\r\n  }\r\n  ngOnDestroy() {}\r\n\r\n  toggleSetupMode(mode: PortalSetupMode) {\r\n    this.setupMode = mode;\r\n  }\r\n}\r\n","import { SharedModule } from '../_shared/shared.module';\r\nimport { PortalManagementComponent } from './components/portal-management.component';\r\nimport { SetupPortalComponent } from './components/setup-portal.component';\r\nimport { SetupDataComponent } from './components/setup-data.component';\r\nimport { SetupAccessComponent } from './components/setup-access.compontent';\r\nimport { AddPortalAccessComponent } from './components/Actions/add-portal-access-modal.component';\r\nimport { PortalManagementService } from './services/portal-management.service';\r\nimport { AlertService } from '../_core/services/alert.service';\r\nimport { CopyGroupComponent } from './components/copy-group.component';\r\nimport { ContractSearchComponent } from './components/contract-search.component';\r\nimport { SetupImageComponent } from './components/setup-image.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { OrderModule } from 'ngx-order-pipe';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ClientApiService } from '../_api/_runtime/services/client-api.service';\r\nimport { SetupMetadataComponent } from './components/setup-metadata.component';\r\nimport { ReportsService } from '../reports/services/reports.service';\r\nimport { ReportsModule } from '../reports/reports.module';\r\nimport { GridModule } from '@progress/kendo-angular-grid';\r\nimport { DropDownsModule } from '@progress/kendo-angular-dropdowns';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    OrderModule,\r\n    SharedModule,\r\n    ReportsModule,\r\n    GridModule,\r\n    DropDownsModule\r\n  ],\r\n  declarations: [\r\n    PortalManagementComponent,\r\n    SetupPortalComponent,\r\n    SetupDataComponent,\r\n    SetupAccessComponent,\r\n    AddPortalAccessComponent,\r\n    CopyGroupComponent,\r\n    ContractSearchComponent,\r\n    SetupImageComponent,\r\n    SetupMetadataComponent\r\n  ],\r\n  entryComponents: [\r\n    PortalManagementComponent,\r\n    AddPortalAccessComponent,\r\n    CopyGroupComponent\r\n  ],\r\n  providers: [\r\n    PortalManagementService,\r\n    NgbModal,\r\n    AlertService,\r\n    ClientApiService,\r\n    ReportsService\r\n  ]\r\n})\r\nexport class PortalManagementModule {}\r\n","\r\nimport {map} from 'rxjs/operators';\r\nimport { ContractSearchResultDto } from '../../_api/_runtime/dtos/contract-search-result.dto';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { Injectable } from '@angular/core';\r\nimport { ContractApiService } from '../../_api/_runtime/services/contract-api.service';\r\nimport { GroupApiService } from '../../_api/_runtime/services/group-api.service';\r\nimport { ClientApiService } from '../../_api/_runtime/services/client-api.service';\r\nimport { InsuranceApiService } from '../../_api/_runtime/services/insurance-api.service';\r\nimport { ImageApiService } from '../../_api/_runtime/services/image-api.service';\r\nimport { Observable } from 'rxjs';\r\nimport { ContractSummaryDto } from '../../_api/dtos/contract-summary.dto';\r\nimport { GroupTemplateDto } from '../../_api/_runtime/dtos/group-template.dto';\r\nimport { GroupTemplateRequestDto } from '../../_api/_runtime/dtos/group-template-request.dto';\r\nimport { GroupDto } from '../../_api/_runtime/dtos/group.dto';\r\nimport { UpdateGroupDto } from '../../_api/_runtime/dtos/update-group.dto';\r\nimport { ClientDto } from '../../_api/_runtime/dtos/client.dto';\r\nimport { ClientHierarchyDto, GroupHierarchyDto } from '../../_api/_runtime/dtos/client-hierarchy.dto';\r\nimport { CopyGroupsDto } from '../../_api/_runtime/dtos/copy-groups.dto';\r\nimport { ImageDto } from '../../_api/_runtime/dtos/image.dto';\r\nimport {ContractGroupSummaryDto} from '../../_api/_runtime/dtos/contract-group-summary.dto';\r\n\r\n@Injectable()\r\nexport class PortalManagementService {\r\n\r\n  private masterTemplateId = this.configService.getSettings('masterTemplateId');\r\n\r\n  constructor(\r\n    private contractService: ContractApiService,\r\n    private groupService: GroupApiService,\r\n    private clientService: ClientApiService,\r\n    private insuranceService: InsuranceApiService,\r\n    private imageService: ImageApiService,\r\n    private configService: ConfigService\r\n  ) {}\r\n\r\n  public getPortalContracts(): Observable<ContractSummaryDto[]> {\r\n    return this.contractService.getContracts(true).pipe(map(res => {\r\n      this.sortContracts(res);\r\n      return res.filter(contractSummary => contractSummary.groupIds.length > 0);\r\n    }));\r\n  }\r\n\r\n  public getNonPortalContracts(query: string): Observable<ContractSearchResultDto[]> {\r\n    return this.contractService.searchContracts(query, true).pipe(map(res => {\r\n      return res.filter(contractSummary => contractSummary.groups.filter(a => a.id.length === 0));\r\n    }));\r\n  }\r\n\r\n\r\n  public searchPortalContracts(query: string): Observable<ContractSearchResultDto[]> {\r\n    return this.contractService.searchContracts(query).pipe(map(res => {\r\n      return res.filter(contractSummary => contractSummary.groups.filter(a => a.id.length === 0));\r\n    }));\r\n  }\r\n\r\n  public getContractGroups(query: string): Observable<GroupDto[]> {\r\n    return this.contractService.getContractsGroups(query, true).pipe(map(res => res.map(group => ({id: group.id, groupName: group.groupName}))));\r\n  }\r\n\r\n  public createPortalGroup(selectedContractId: string, accountName: string, selectedAccountId: string): Observable<GroupTemplateDto> {\r\n    const dto: GroupTemplateRequestDto = {\r\n      contractId : selectedContractId,\r\n      groupName: accountName,\r\n      templateId: this.masterTemplateId,\r\n      isPortal: true,\r\n      groupId: selectedAccountId\r\n    };\r\n    return this.groupService.createGroup(dto);\r\n  }\r\n\r\n  public getGroup(groupId: string): Observable<GroupDto> {\r\n    return this.groupService.getGroup(groupId);\r\n  }\r\n\r\n  public updateGroup(group: GroupDto): Observable<GroupDto> {\r\n    const dto: UpdateGroupDto = {\r\n      groupId: group.id,\r\n      groupName: group.groupName,\r\n      isDisabled: group.isDisabled,\r\n      isPortal: true,\r\n      templateId: this.masterTemplateId\r\n    };\r\n    return this.groupService.updateGroup(dto);\r\n  }\r\n\r\n  public getClients(): Observable<ClientDto[]> {\r\n    return this.clientService.getClients();\r\n  }\r\n\r\n  public getClientHierarchy(clientId: string): Observable<ClientHierarchyDto> {\r\n    return this.clientService.getHierarchyByClient(clientId);\r\n  }\r\n\r\n  public copyGroups(request: CopyGroupsDto): Observable<string> {\r\n    return this.groupService.copyGroups(request);\r\n  }\r\n\r\n  public searchContracts(query: string): Observable<ContractSearchResultDto[]> {\r\n    return this.contractService.searchContracts(query);\r\n  }\r\n\r\n  public getGroupHierarchy(groupId: string): Observable<GroupHierarchyDto> {\r\n    return this.insuranceService.getGroupHierarchy(groupId);\r\n  }\r\n\r\n  private sortContracts(contracts: ContractSummaryDto[]) {\r\n    contracts.sort((left, right): number => {\r\n      if (left.client < right.client) { return -1; }\r\n      if (left.client > right.client) { return 1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  public removePortalImage(imageId: string): Observable<boolean> {\r\n    return this.imageService.deleteImage(imageId);\r\n  }\r\n\r\n  public upsertPortalImage(groupId: string, imageName: string, image: File): Observable<ImageDto> {\r\n    return this.imageService.upsertPortalImage(groupId, imageName, image);\r\n  }\r\n\r\n  public getPortalImage(groupId: string): Observable<ImageDto> {\r\n     return this.imageService.getPortalImage(groupId);\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ProcessingService } from '../services/processing.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { ProcessingSummary } from '../../_models/processing/processing-summary.model';\r\n\r\n@Component({\r\n  selector: 'processing-summary',\r\n  templateUrl: './processing-summary.component.html',\r\n})\r\nexport class ProcessingSummaryComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  @Input() processingSummary: ProcessingSummary;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n   // console.log(this.processingSummary.successfulRecords, this.processingSummary.errorRecords);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { GridColumnHeader } from '../../_models/grid-column-header.model';\r\nimport { FieldType } from '../../_enums/field-type';\r\n\r\nexport const customAdditionsHeaders: Array<GridColumnHeader> = [\r\n  {\r\n    name: 'description',\r\n    order: 1,\r\n    displayName: 'Description',\r\n    fieldType: FieldType.String,\r\n    isSearchable: false,\r\n    isFilterable: false,\r\n    isSortable: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false,\r\n  },\r\n  {\r\n    name: 'cost',\r\n    order: 2,\r\n    displayName: 'Cost',\r\n    fieldType: FieldType.String,\r\n    isSearchable: false,\r\n    isFilterable: false,\r\n    isSortable: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false,\r\n  }\r\n];\r\n","import { GridColumnHeader } from '../../_models/grid-column-header.model';\r\nimport { FieldType } from '../../_enums/field-type';\r\n\r\nexport const defaultDepreciationHeaders = [\r\n  'displayId',\r\n  'description',\r\n  'historicalCost',\r\n  'DepreciationBasis',\r\n  'DepreciationConvention',\r\n  'DepreciationAsOfDate',\r\n  'acquisitionDate',\r\n  'AccumulatedDepreciation',\r\n  'PeriodDepreciation',\r\n  'LifeMonths'\r\n];\r\n\r\nexport const defaultTrendingHeaders = [\r\n  'displayId',\r\n  'description',\r\n  'acquisitionDate',\r\n  'assetClass',\r\n  'sourceField',\r\n  'sourceFieldValue',\r\n  'trendIndex',\r\n  'destinationField',\r\n  'originalValue',\r\n  'newValue',\r\n  'percentChange'\r\n];\r\n\r\nexport const errorColumn = [\r\n  <GridColumnHeader>{\r\n    name: 'ValidationErrors',\r\n    order: 0,\r\n    displayName: 'Error',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  }\r\n];\r\n\r\nexport const trendingErrorColumn = [\r\n  <GridColumnHeader>{\r\n    name: 'processingErrorDescription',\r\n    order: 0,\r\n    displayName: 'Error',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  }\r\n];\r\n\r\nexport const depreciationHeaders = [\r\n  {\r\n    name: 'displayId',\r\n    displayName: 'Display Id',\r\n    fieldType: FieldType.Double,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'description',\r\n    displayName: 'Description',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'historicalCost',\r\n    displayName: 'Historical Cost',\r\n    fieldType: FieldType.Double,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'DepreciationBasis',\r\n    displayName: 'Basis',\r\n    fieldType: FieldType.Double,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'DepreciationConvention',\r\n    displayName: 'Convention',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'DepreciationAsOfDate',\r\n    displayName: 'As of Date',\r\n    fieldType: FieldType.DateTime,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'DepreciationMethod',\r\n    displayName: 'Method',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n\r\n  {\r\n    name: 'AccumulatedDepreciation',\r\n    displayName: 'Accumulated Depreciation',\r\n    fieldType: FieldType.Double,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n\r\n  {\r\n    name: 'PeriodDepreciation',\r\n    displayName: 'Period Depreciation',\r\n    fieldType: FieldType.Double,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n\r\n  {\r\n    name: 'LifeMonths',\r\n    displayName: 'Life Months',\r\n    fieldType: FieldType.Double,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  }\r\n];\r\n\r\nexport const trendingHeaders = [\r\n  {\r\n    name: 'displayId',\r\n    displayName: 'Display Id',\r\n    fieldType: FieldType.Double,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'description',\r\n    displayName: 'Description',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'acquisitionDate',\r\n    displayName: 'Acquisition Date',\r\n    fieldType: FieldType.DateTime,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'trendIndex',\r\n    displayName: 'Trend Index',\r\n    fieldType: FieldType.Double,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'sourceField',\r\n    displayName: 'Start Field',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'sourceFieldValue',\r\n    displayName: 'Start Field Value',\r\n    fieldType: FieldType.Double,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'destinationField',\r\n    displayName: 'Ending Field',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'originalValue',\r\n    displayName: 'Current Ending Value',\r\n    fieldType: FieldType.Double,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'newValue',\r\n    displayName: 'New Ending Value',\r\n    fieldType: FieldType.Double,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'percentChange',\r\n    displayName: 'Percentage of Change',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  }\r\n];\r\n\r\nexport const assetFileRecordHeaders = [\r\n  {\r\n    name: 'assetTagNumber',\r\n    displayName: 'Asset Tag Number',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'oldTagNumber',\r\n    displayName: 'Old Tag Number',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'activityCode',\r\n    displayName: 'Activity Code',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'property',\r\n    displayName: 'Property',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'floor',\r\n    displayName: 'Floor',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'room',\r\n    displayName: 'Room',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'locationInPlant',\r\n    displayName: 'Location In Plant',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'department',\r\n    displayName: 'Department Name',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'classCode',\r\n    displayName: 'Class Code',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'assetClass',\r\n    displayName: 'Asset Classification',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'gLAssetAccount',\r\n    displayName: 'GL Asset Account',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'gLAccumAccount',\r\n    displayName: 'GL Accum Account',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'fundingSource',\r\n    displayName: 'Funding Source',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'quantity',\r\n    displayName: 'Quantity',\r\n    fieldType: FieldType.Double,\r\n\r\n    isSearchable: false,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'description2',\r\n    displayName: 'Description 2',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'description3',\r\n    displayName: 'Description 3',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'manufacturer',\r\n    displayName: 'Manufacturer',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'modelNumber',\r\n    displayName: 'Model Number',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'faceDescription',\r\n    displayName: 'Face Description',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'serialNumber',\r\n    displayName: 'Serial Number',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'acquisitionDate',\r\n    displayName: 'Acquisition Date',\r\n    fieldType: FieldType.DateTime,\r\n\r\n    isSearchable: false,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'functionActivity',\r\n    displayName: 'Function Activity',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'plant',\r\n    displayName: 'Plant',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'city',\r\n    displayName: 'City',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'purchaseOrder',\r\n    displayName: 'Purchase Order',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'invoiceNumber',\r\n    displayName: 'Invoice Number',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'vendor',\r\n    displayName: 'Vendor',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'propertyType',\r\n    displayName: 'Property Type',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'projectNumber',\r\n    displayName: 'Project Number',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'businessUnit',\r\n    displayName: 'Business Unit',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'lastInventoryDate',\r\n    displayName: 'Last Inventory Date',\r\n    fieldType: FieldType.DateTime,\r\n\r\n    isSearchable: false,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'account',\r\n    displayName: 'Account',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'insuranceAccount',\r\n    displayName: 'Insurance Account',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'accountClass',\r\n    displayName: 'Account Class',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'division',\r\n    displayName: 'Division',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'gLAccount',\r\n    displayName: 'GL Account',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'costReplacementNew',\r\n    displayName: 'Cost Replacement New',\r\n    fieldType: FieldType.Double,\r\n\r\n    isSearchable: false,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'netProceeds',\r\n    displayName: 'Net Proceeds',\r\n    fieldType: FieldType.Double,\r\n\r\n    isSearchable: false,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'salvageValue',\r\n    displayName: 'Salvage Value',\r\n    fieldType: FieldType.Double,\r\n\r\n    isSearchable: false,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'fundContribution',\r\n    displayName: 'Fund Contribution',\r\n    fieldType: FieldType.Double,\r\n\r\n    isSearchable: false,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'disposalCode',\r\n    displayName: 'Disposal Code',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'disposalDate',\r\n    displayName: 'Disposal Date',\r\n    fieldType: FieldType.DateTime,\r\n\r\n    isSearchable: false,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'sourceCode',\r\n    displayName: 'Source Code',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'assetFileId',\r\n    displayName: 'Asset File Id',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'sourceRecordId',\r\n    displayName: 'Source Record Id',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'inventoryImageUrl1',\r\n    displayName: 'Inventory Image Url 1',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'inventoryImageUrl2',\r\n    displayName: 'Inventory Image Url 2',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'inventoryImageUrl3',\r\n    displayName: 'Inventory Image Url 3',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'inventoryImageUrl4',\r\n    displayName: 'Inventory Image Url 4',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'inventoryImageUrl5',\r\n    displayName: 'Inventory Image Url 5',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'inventoryImageUrl6',\r\n    displayName: 'Inventory Image Url 6',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'inventoryImageUrl7',\r\n    displayName: 'Inventory Image Url 7',\r\n    fieldType: FieldType.String,\r\n\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false\r\n  }\r\n];\r\n","import { FieldType } from '../../_enums/field-type';\r\n\r\nexport const recipientHeaders = [\r\n  {\r\n    name: 'recipientName',\r\n    displayName: 'Recipient Name',\r\n    fieldType: FieldType.String,\r\n\r\n    isCustom: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'address',\r\n    displayName: 'Address',\r\n    fieldType: FieldType.String,\r\n\r\n    isCustom: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'address2',\r\n    displayName: 'Address2',\r\n    fieldType: FieldType.String,\r\n\r\n    isCustom: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'city',\r\n    displayName: 'City',\r\n    fieldType: FieldType.String,\r\n\r\n    isCustom: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'state',\r\n    displayName: 'State',\r\n    fieldType: FieldType.String,\r\n\r\n    isCustom: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'zip',\r\n    displayName: 'Zip',\r\n    fieldType: FieldType.String,\r\n\r\n    isCustom: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'email',\r\n    displayName: 'Email',\r\n    fieldType: FieldType.String,\r\n\r\n    isCustom: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'phoneNumber',\r\n    displayName: 'Phone Number',\r\n    fieldType: FieldType.String,\r\n\r\n    isCustom: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'deliverables',\r\n    displayName: 'Deliverables',\r\n    fieldType: FieldType.String,\r\n\r\n    isCustom: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isEditable: false\r\n  }\r\n];\r\n","import { FieldType } from '../../_enums/field-type';\r\n\r\nexport const transactionHeaders = [\r\n  {\r\n    name: 'displayId',\r\n    displayName: 'Display Id',\r\n    fieldType: FieldType.String,\r\n    isCustom: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'assetTagNumber',\r\n    displayName: 'Asset Tag Number',\r\n    fieldType: FieldType.String,\r\n\r\n    isCustom: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'activity',\r\n    displayName: 'Activity',\r\n    fieldType: FieldType.String,\r\n\r\n    isCustom: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'fieldName',\r\n    displayName: 'Field Name',\r\n    fieldType: FieldType.String,\r\n    isCustom: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'oldValue',\r\n    displayName: 'Old Value',\r\n    fieldType: FieldType.String,\r\n    isCustom: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'newValue',\r\n    displayName: 'New Value',\r\n    fieldType: FieldType.String,\r\n\r\n    isCustom: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'transactionDate',\r\n    displayName: 'Transaction Date',\r\n    fieldType: FieldType.DateTime,\r\n    isCustom: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'user',\r\n    displayName: 'Edited By',\r\n    fieldType: FieldType.String,\r\n    isCustom: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isEditable: false\r\n  }\r\n];\r\n","import { GridColumnHeader } from '../../_models/grid-column-header.model';\r\nimport { FieldType } from '../../_enums/field-type';\r\n\r\nexport const futureYearsMetaData: Array<GridColumnHeader> = [\r\n  {\r\n    name: 'depreciationBasis',\r\n    order: 1,\r\n    displayName: 'Depreciation Basis',\r\n    fieldType: FieldType.Double,\r\n    isSearchable: false,\r\n    isFilterable: false,\r\n    isSortable: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false,\r\n  },\r\n  {\r\n    name: 'depreciationAsOfDate',\r\n    order: 2,\r\n    displayName: 'Depreciation As Of Date',\r\n    fieldType: FieldType.DateTime,\r\n    isSearchable: false,\r\n    isFilterable: false,\r\n    isSortable: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false,\r\n  },\r\n  {\r\n    name: 'accumulatedDepreciation',\r\n    order: 3,\r\n    displayName: 'Accumulated Depreciation',\r\n    fieldType: FieldType.Double,\r\n    isSearchable: false,\r\n    isFilterable: false,\r\n    isSortable: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false,\r\n  },\r\n  {\r\n    name: 'periodDepreciation',\r\n    order: 4,\r\n    displayName: 'Period Depreciation',\r\n    fieldType: FieldType.Double,\r\n    isSearchable: false,\r\n    isFilterable: false,\r\n    isSortable: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false,\r\n  }\r\n];\r\n","import { GridColumnHeader } from '../../_models/grid-column-header.model';\r\nimport { FieldType } from '../../_enums/field-type';\r\n\r\nexport const userFactorHeaders: Array<GridColumnHeader> = [\r\n  {\r\n    name: 'description',\r\n    order: 1,\r\n    displayName: 'Description',\r\n    fieldType: FieldType.String,\r\n    isSearchable: false,\r\n    isFilterable: false,\r\n    isSortable: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false,\r\n  },\r\n  {\r\n    name: 'factor',\r\n    order: 2,\r\n    displayName: 'Factor',\r\n    fieldType: FieldType.Double,\r\n    isSearchable: false,\r\n    isFilterable: false,\r\n    isSortable: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isCustom: false,\r\n    isEditable: false,\r\n  }\r\n];\r\n","import { ProcessingService } from '../../services/processing.service';\r\nimport { DepreciationService } from '../services/depreciation.service';\r\nimport { DepreciationFormService } from '../services/depreciation-form.service';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { forkJoin, Subject } from 'rxjs';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { BreadCrumb } from '../../../_models/breadcrumbs.model';\r\n\r\n@Component({\r\n  selector: 'depreciation-form',\r\n  templateUrl: './depreciation-form.component.html'\r\n})\r\nexport class DepreciationFormComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  isReadyForProcessing = false;\r\n  target: number;\r\n  isLoading = true;\r\n  errorMessage = 'Unable to process data.';\r\n\r\n  breadCrumbs = [\r\n    <BreadCrumb>{ name: 'Setup Rules', routerLink: 'Setup' },\r\n    <BreadCrumb>{ name: 'Summary', routerLink: 'Summary', isDisabled: true }\r\n  ];\r\n\r\n  /* A Subject for monitoring the destruction of the component. */\r\n  private destroyed$ = new Subject<any>();\r\n\r\n  constructor(\r\n    private processingService: ProcessingService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private depreciationFormService: DepreciationFormService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.processingService.groupId = this.route.parent.snapshot.paramMap.get('groupId');\r\n\r\n    const getProcessingStatus = this.processingService.getProcessingStatus(this.processingService.groupId);\r\n    const getDepreciationMethods = this.depreciationFormService.getDepreciationMethods();\r\n    const getDepreciationConventions = this.depreciationFormService.getDepreciationConventions();\r\n\r\n    forkJoin(getProcessingStatus, getDepreciationMethods, getDepreciationConventions)\r\n      .pipe(takeUntil(this.destroyed$))\r\n      .subscribe(([processingStatus, depreciationMethods, depreciationConventions]) => {\r\n        this.processingService.updateReferenceData(depreciationMethods.result.enumOptions, 'DepreciationMethod');\r\n        this.processingService.updateReferenceData(depreciationConventions.result.enumOptions, 'DepreciationConvention');\r\n\r\n        this.isReadyForProcessing = processingStatus.isReadyForProcessing;\r\n        this.processingService.dataTarget = processingStatus.target;\r\n\r\n        if (!this.isReadyForProcessing) {\r\n          this.errorMessage = this.processingService.getProcessingErrorMessage(processingStatus);\r\n        }\r\n\r\n        this.isLoading = false;\r\n      },\r\n      error => {},\r\n      () => {\r\n        this.isLoading = false;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  navigateToImportData(event: any): void {\r\n    event.preventDefault();\r\n    this.router.navigate([`project-profile/${this.processingService.groupId}/DataImport`]);\r\n  }\r\n}\r\n","import { ProcessingService } from '../../services/processing.service';\r\nimport { FilterCriteriaBuilderComponent } from '../../../_shared/components/filter-criteria-builder.component';\r\nimport { DepreciationService } from '../services/depreciation.service';\r\n\r\nimport { DepreciationFormService } from '../services/depreciation-form.service';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Component, OnInit, OnDestroy, ViewChild, ViewContainerRef, ComponentFactoryResolver } from '@angular/core';\r\nimport { DepreciationSubmissionRequestDto } from '../../../_api/_runtime/dtos/depreciation-request.dto';\r\nimport { Subject, forkJoin } from 'rxjs';\r\nimport { FieldMetaDataDto } from '../../../_api/dtos/inventory/field-meta-data.dto';\r\nimport { EnumOptionDto } from '../../../_api/_configuration/dtos/enum-option.dto';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FamisViewModelDto } from '../../../_api/_runtime/dtos/famis-view-model.dto';\r\nimport { FilterDto } from '../../../_api/dtos/inventory/filter.dto';\r\n\r\n@Component({\r\n  selector: 'depreciation-component',\r\n  templateUrl: './depreciation-setup.component.html'\r\n})\r\nexport class DepreciationSetupComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  depreciationRequest = <DepreciationSubmissionRequestDto>{};\r\n\r\n  /* A Subject for monitoring the destruction of the component. */\r\n  private destroyed$ = new Subject<any>();\r\n\r\n  @ViewChild('filterCriteria', { read: ViewContainerRef, static: false })\r\n  filterCriteriaContainer: ViewContainerRef;\r\n\r\n  inventoryMetadata = new Array<FieldMetaDataDto>();\r\n\r\n  depreciationMethods = new Array<EnumOptionDto>();\r\n  conventions = new Array<EnumOptionDto>();\r\n\r\n  subProfile: FamisViewModelDto;\r\n  mainProfile: FamisViewModelDto;\r\n  PropertyRecordsOutsourcingServiceId = '940d7763-a908-4509-aaf9-daa136863979';\r\n  isProcessing = false;\r\n\r\n  private hiddenFields = [\r\n    'id',\r\n    'assetFileId',\r\n    'sourceRecordId',\r\n    'groupId',\r\n  ];\r\n\r\n  constructor(\r\n    private processingService: ProcessingService,\r\n    private depreciationFormService: DepreciationFormService,\r\n    private depreciationService: DepreciationService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private componentResolver: ComponentFactoryResolver\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.depreciationService.depreciationRequest$.\r\n    pipe(takeUntil(this.destroyed$)).subscribe(requestInProgress => {\r\n      this.depreciationRequest = requestInProgress;\r\n    });\r\n\r\n    // Init form fields\r\n    const getDepreciationMethods = this.depreciationFormService.getDepreciationMethods();\r\n    const getDepreciationConventions = this.depreciationFormService.getDepreciationConventions();\r\n    const getSubProfileFields = this.depreciationFormService.getSubProfileFields(this.processingService.groupId);\r\n    const getFilterDataSource = this.processingService.GetSearchMetadataByGroupId(\r\n      this.processingService.groupId,\r\n      this.processingService.dataTarget\r\n    );\r\n    const getMainProfileService = this.depreciationFormService.getMainProfileFields(this.processingService.groupId);\r\n\r\n\r\n      forkJoin(getDepreciationMethods, getDepreciationConventions, getSubProfileFields, getFilterDataSource, getMainProfileService)\r\n      .pipe(takeUntil(this.destroyed$))\r\n      .subscribe(([methods, conventions, subProfile, filterDataSource, mainProfile]) => {\r\n        this.depreciationMethods = methods.result.enumOptions;\r\n        this.conventions = conventions.result.enumOptions;\r\n        this.subProfile = subProfile;\r\n        this.inventoryMetadata = filterDataSource.fields.filter(x => !(this.hiddenFields.indexOf(x.name) > -1));\r\n        this.mainProfile = mainProfile;\r\n\r\n        if (this.inventoryMetadata.length > 0) {\r\n          if (this.depreciationRequest.filterTerms.length === 0) {\r\n            this.addFilter();\r\n          }\r\n\r\n          // Set existing filters on page load if present\r\n          this.depreciationRequest.filterTerms.forEach(filter => {\r\n            if (filter.operation !== 'noop') {\r\n              this.addFilter(filter);\r\n            }\r\n          });\r\n        }\r\n        const serviceField = this.mainProfile.fields.find(c => c.fieldName === 'Service');\r\n          if (serviceField.value && serviceField.value.value === this.PropertyRecordsOutsourcingServiceId) {\r\n            this.depreciationRequest.futureYears = 1;\r\n          } else {\r\n            this.depreciationRequest.futureYears = 0;\r\n          }\r\n        },\r\n      error => {},\r\n      () => {});\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  addFilter(filter?: FilterDto) {\r\n    const comp = this.componentResolver.resolveComponentFactory(FilterCriteriaBuilderComponent);\r\n    const filterCriteria = this.filterCriteriaContainer.createComponent(comp);\r\n\r\n    // Setting reference to close/remove\r\n    filterCriteria.instance.ref = filterCriteria;\r\n\r\n    filterCriteria.instance.translationKeyBase = this.i18n.asset;\r\n\r\n    filterCriteria.instance.filterMetadata = this.inventoryMetadata;\r\n    filterCriteria.instance.criteriaChangedEvent.subscribe(e => {\r\n      const changeFilter = <FilterDto>e;\r\n\r\n      changeFilter.term.dataTarget = this.processingService.dataTarget;\r\n      this.depreciationService.addOrUpdateFilter(changeFilter);\r\n    });\r\n\r\n    filterCriteria.instance.filterRemovedEvent.subscribe(e => {\r\n      const removedFilter = <FilterDto>e;\r\n\r\n      this.depreciationService.removeFilter(removedFilter.id);\r\n    });\r\n\r\n    if (filter) {\r\n      filterCriteria.instance.filter = filter;\r\n    }\r\n  }\r\n\r\n  getSubProfileFieldValue(fieldName: string) {\r\n    if (this.subProfile && this.subProfile.fields) {\r\n      const field = this.subProfile.fields.find(c => c.fieldName === fieldName);\r\n\r\n      return field ? field.value : '';\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  onSubmit(form: any) {\r\n    if (form.valid) {\r\n      this.depreciationService.setDepreciationRequest(this.depreciationRequest);\r\n      this.isProcessing = true;\r\n      this.depreciationService.executeDepreciation(this.processingService.groupId).subscribe(result => {\r\n        this.isProcessing = false;\r\n\r\n        this.router.navigate([`/project-profile/${this.processingService.groupId}/Depreciation/Summary`]);\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { DepreciationService } from '../services/depreciation.service';\r\n\r\nimport { forkJoin, Subject, Subscription } from 'rxjs';\r\nimport { AlertService } from '../../../_core/services/alert.service';\r\nimport { FamisGridService } from '../../../_core/services/famis-grid.service';\r\nimport { depreciationHeaders, defaultDepreciationHeaders, assetFileRecordHeaders, errorColumn } from '../../default-values/default-headers';\r\nimport { ProcessingService } from '../../services/processing.service';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { futureYearsMetaData } from '../../default-values/future-years-headers';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { GridColumnHeader } from '../../../_models/grid-column-header.model';\r\nimport { FamisGrid, FamisGridFeature } from '../../../_models/shared/famis-grid-state.model';\r\nimport { ProcessingSummary } from '../../../_models/processing/processing-summary.model';\r\nimport { Router } from '@angular/router';\r\nimport { FamisGridCacheResult } from '../../../_models/shared/famis-grid-cache-result.model';\r\n\r\n@Component({\r\n  selector: 'depreciation-summary',\r\n  templateUrl: './depreciation-summary.component.html'\r\n})\r\nexport class DepreciationSummaryComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  /* A Subject for monitoring the destruction of the component. */\r\n  private destroyed$ = new Subject<any>();\r\n\r\n  // TODO: Pull in header info from runtime API metadata route\r\n\r\n  private windowSize = 500;\r\n  private initWindowSize = 84;\r\n  private subGridMetaData: Array<GridColumnHeader> = futureYearsMetaData;\r\n\r\n  public successGrid: FamisGrid;\r\n  public errorGrid: FamisGrid;\r\n\r\n  processingSummary = <ProcessingSummary>{\r\n    successCount: 0,\r\n    errorCount: 0,\r\n    processingVerb: 'Depreciated'\r\n  };\r\n\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private depreciationService: DepreciationService,\r\n    private alertService: AlertService,\r\n    private famisGridService: FamisGridService,\r\n    private processingService: ProcessingService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    const s = this;\r\n\r\n    this.famisGridService.resetCache();\r\n    this.depreciationService.clearDepreciation();\r\n\r\n    this.successGrid = <FamisGrid>{\r\n      gridData: this.depreciationService.successGridData$,\r\n      gridSubGridData: {\r\n        subGridData: [],\r\n        subGridHeaders: this.subGridMetaData\r\n      },\r\n      gridId: this.famisGridService.createGrid(),\r\n      columnHeaders: depreciationHeaders.concat(assetFileRecordHeaders),\r\n      selectedHeaders: defaultDepreciationHeaders,\r\n      windowSize: this.windowSize,\r\n      totalRecordCount: 0,\r\n      name: 'Summary',\r\n      dataSource: this.processingService.dataTarget,\r\n      supportedOperators: [FamisGridFeature.Sort, FamisGridFeature.Filter, FamisGridFeature.ColumnSelection],\r\n      translationBaseKey: this.i18n.asset,\r\n      \r\n    };\r\n\r\n    this.errorGrid = <FamisGrid>{\r\n      gridData: this.depreciationService.errorGridData$,\r\n      gridId: this.famisGridService.createGrid(),\r\n      columnHeaders: errorColumn.concat(depreciationHeaders).concat(assetFileRecordHeaders),\r\n      selectedHeaders: ['ValidationErrors'].concat(defaultDepreciationHeaders),\r\n      windowSize: this.windowSize,\r\n      totalRecordCount: 0,\r\n      name: 'Errors',\r\n      dataSource: this.processingService.dataTarget,\r\n      supportedOperators: [FamisGridFeature.Sort, FamisGridFeature.Filter, FamisGridFeature.ColumnSelection],\r\n      translationBaseKey: this.i18n.asset\r\n    };\r\n\r\n    const getSuccessfulRecords = s.depreciationService.updateDepreciationResults(\r\n      s.processingService.groupId,\r\n      s.famisGridService.defaultSkip,\r\n      s.famisGridService.defaultTake,\r\n      true\r\n    );\r\n    const getErrorRecords = s.depreciationService.updateDepreciationResults(\r\n      s.processingService.groupId,\r\n      s.famisGridService.defaultSkip,\r\n      s.famisGridService.defaultTake,\r\n      false\r\n    );\r\n    const getActivityCodes = this.depreciationService.getActivityCodes();\r\n\r\n    const loading = forkJoin(getSuccessfulRecords, getErrorRecords, getActivityCodes).subscribe(([\r\n      successfulRecords,\r\n      errorRecords,\r\n      activityCodes\r\n    ]) => {\r\n      s.processingService.updateReferenceData(activityCodes.result.enumOptions, 'ActivityCodes');\r\n\r\n      if (successfulRecords) {\r\n        s.successGrid.totalRecordCount = successfulRecords.totalInRecordSet;\r\n        s.processingSummary.successCount = successfulRecords.totalInRecordSet;\r\n        s.depreciationService.setSuccessGridDataSource(successfulRecords.assets);\r\n\r\n        if (successfulRecords.assets.length > 0) {\r\n          s.successGrid.gridSubGridData.subGridData = Array.isArray(successfulRecords.futureYears) ? successfulRecords.futureYears : [];\r\n          s.famisGridService.setCacheRecords(\r\n            this.processingService.mapEnums(successfulRecords.assets),\r\n            s.successGrid.gridId,\r\n            0,\r\n            successfulRecords.totalInRecordSet,\r\n            s.initWindowSize\r\n          );\r\n        }\r\n      }\r\n\r\n      if (errorRecords) {\r\n        s.errorGrid.totalRecordCount = errorRecords.totalInRecordSet;\r\n        s.processingSummary.errorCount = errorRecords.totalInRecordSet;\r\n\r\n        s.depreciationService.setErrorGridDataSource(this.processingService.mapEnums(errorRecords.assets));\r\n\r\n        s.famisGridService.setCacheRecords(errorRecords.assets, this.errorGrid.gridId, 0, errorRecords.totalInRecordSet, s.initWindowSize);\r\n        }\r\n    });\r\n\r\n    s.successGrid.loading = loading;\r\n    s.errorGrid.loading = loading;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  updateCache(request: FamisGridCacheResult) {\r\n    const s = this;\r\n\r\n    if (request.gridId === s.successGrid.gridId) {\r\n      this.successGrid.cacheLoading = s.processCacheUpdate(request, true);\r\n    }\r\n\r\n    if (request.gridId === s.errorGrid.gridId) {\r\n      this.errorGrid.cacheLoading = s.processCacheUpdate(request, false);\r\n    }\r\n  }\r\n\r\n  back() {\r\n    this.router.navigate([`/project-profile/${this.processingService.groupId}/Depreciation/Setup`]);\r\n  }\r\n\r\n  commit() {\r\n    this.depreciationService.commitDepreciation(this.processingService.groupId).subscribe(result => {\r\n      if (result.success) {\r\n        this.alertService.success(`Depreciation Successful: {{recordsProcessed}} Records Processed`,\r\n         null, {recordsProcessed: result.recordsProcessed});\r\n        this.router.navigate([`/project-profile/${this.processingService.groupId}/Depreciation/Setup`]);\r\n      } else {\r\n        this.alertService.error(`An error has occurred while commiting the Depreciation`);\r\n      }\r\n    });\r\n  }\r\n\r\n  private processCacheUpdate(cacheUpdateRequest: FamisGridCacheResult, returnSuccessful: boolean = true): Subscription {\r\n    const s = this;\r\n\r\n    if (cacheUpdateRequest.filters) {\r\n      cacheUpdateRequest.filters.forEach(filter => {\r\n        filter.term.dataTarget = s.processingService.dataTarget;\r\n      });\r\n    }\r\n\r\n    return this.depreciationService\r\n      .updateDepreciationResults(\r\n        s.processingService.groupId,\r\n        cacheUpdateRequest.cacheWindow.skip,\r\n        cacheUpdateRequest.cacheWindow.take,\r\n        returnSuccessful,\r\n        cacheUpdateRequest.sortTerms,\r\n        cacheUpdateRequest.filters\r\n      )\r\n      .subscribe(dto => {\r\n        if (cacheUpdateRequest.gridId === s.successGrid.gridId) {\r\n          this.successGrid.totalRecordCount = dto.totalInRecordSet;\r\n          this.successGrid.gridSubGridData.subGridData = Array.isArray(dto.futureYears) ? dto.futureYears : [];\r\n          s.famisGridService.setCacheRecords(\r\n            this.processingService.mapEnums(dto.assets),\r\n            cacheUpdateRequest.gridId,\r\n            cacheUpdateRequest.cacheWindow.skip,\r\n            dto.numberInThisPayload,\r\n            this.successGrid.windowSize\r\n          );\r\n        }\r\n\r\n        if (cacheUpdateRequest.gridId === s.errorGrid.gridId) {\r\n          this.errorGrid.totalRecordCount = dto.totalInRecordSet;\r\n\r\n          s.famisGridService.setCacheRecords(\r\n            this.processingService.mapEnums(dto.assets),\r\n            cacheUpdateRequest.gridId,\r\n            cacheUpdateRequest.cacheWindow.skip,\r\n            dto.numberInThisPayload,\r\n            this.errorGrid.windowSize\r\n          );\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { ProcessingService } from '../../services/processing.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { ReferenceDataApiService } from '../../../_api/_configuration/services/reference-data-api.service';\r\nimport { ViewModelsApiService } from '../../../_api/_runtime/services/view-models-api.service';\r\nimport { ApiServiceResult } from '../../../_api/dtos/api-service-result.dto';\r\nimport { Observable } from 'rxjs';\r\nimport { EnumDto } from '../../../_api/_configuration/dtos/enum.dto';\r\n\r\n@Injectable()\r\nexport class DepreciationFormService {\r\n  constructor(\r\n    private referenceDataApiService: ReferenceDataApiService,\r\n    private viewModelsApiService: ViewModelsApiService\r\n  ) {}\r\n\r\n  public getDepreciationMethods(): Observable<ApiServiceResult<EnumDto>> {\r\n    return this.referenceDataApiService.getDepreciationMethods();\r\n  }\r\n\r\n  public getDepreciationConventions(): Observable<ApiServiceResult<EnumDto>> {\r\n    return this.referenceDataApiService.getDepreciationConventions();\r\n  }\r\n\r\n  public getSubProfileFields(groupId: string) {\r\n    return this.viewModelsApiService.getSubProfileForGroup(groupId);\r\n  }\r\n\r\n  public getMainProfileFields(groupId: string) {\r\n    return this.viewModelsApiService.getMainProfileForGroup(groupId);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ProcessingService } from '../../services/processing.service';\r\nimport { ReferenceDataApiService } from '../../../_api/_configuration/services/reference-data-api.service';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { AssetDto } from '../../../_api/_runtime/dtos/asset.dto';\r\nimport { AssetSortTermDto, AssetFilterTermDto } from '../../../_api/dtos/inventory/asset-search.dto';\r\nimport { DepreciationSubmissionRequestDto } from '../../../_api/_runtime/dtos/depreciation-request.dto';\r\nimport { FilterDto } from '../../../_api/dtos/inventory/filter.dto';\r\nimport { ProcessingApiService } from '../../../_api/_runtime/services/processing-api.service';\r\nimport { ProcessingExecutionResult } from '../../../_api/_runtime/dtos/processing-execution-result.dto';\r\nimport { ProcessingDetailResponseDto } from '../../../_api/_runtime/dtos/processing-detail-response.dto';\r\nimport { Term, ProcessingDetailRequestDto } from '../../../_api/_runtime/dtos/processing-detail-request.dto';\r\nimport { ProcessingSubmissionResponseDto } from '../../../_api/_runtime/dtos/processing-submission-response.dto';\r\nimport { ApiServiceResult } from '../../../_api/dtos/api-service-result.dto';\r\nimport { EnumDto } from '../../../_api/_configuration/dtos/enum.dto';\r\n\r\n@Injectable()\r\nexport class DepreciationService {\r\n  private successGridDataSource = new BehaviorSubject<Array<AssetDto>>(new Array<AssetDto>());\r\n  private errorGridDataSource = new BehaviorSubject<Array<AssetDto>>(new Array<AssetDto>());\r\n  public successGridData$ = this.successGridDataSource.asObservable();\r\n  public errorGridData$ = this.errorGridDataSource.asObservable();\r\n  public defaultSortTerms = [<AssetSortTermDto>{ termOrder: 0, sortDirection: 0, field: 'id' }];\r\n\r\n  termOrder: number;\r\n  sortDirection: number;\r\n  field: string;\r\n\r\n  private depreciationRequestSource = new BehaviorSubject<DepreciationSubmissionRequestDto>(\r\n    <DepreciationSubmissionRequestDto>{\r\n      method: 0,\r\n      convention: 0,\r\n      dayOneCalc: false,\r\n      futureYears: 0,\r\n      filterTerms: new Array<FilterDto>()\r\n    }\r\n  );\r\n\r\n  public depreciationRequest$ = this.depreciationRequestSource.asObservable();\r\n\r\n  public clearDepreciation() {\r\n    this.successGridDataSource.next(new Array<AssetDto>());\r\n    this.errorGridDataSource.next(new Array<AssetDto>());\r\n  }\r\n\r\n  constructor(private processingApiService: ProcessingApiService,\r\n              private processingService: ProcessingService,\r\n              private referenceDataApiService: ReferenceDataApiService) {}\r\n\r\n  public executeDepreciation(groupId: string): Observable<ProcessingExecutionResult> {\r\n    const request = this.depreciationRequestSource.getValue();\r\n\r\n    const defaultFilter = <FilterDto>{\r\n      term: <Term>{ dataTarget: this.processingService.dataTarget, field: '', value: '' },\r\n      operation: 'noop'\r\n    };\r\n\r\n    const executeRequest = Object.assign({}, request);\r\n\r\n    executeRequest.filterTerms = request.filterTerms.length > 0 ? request.filterTerms : [defaultFilter];\r\n\r\n    return this.processingApiService.executeDepreciation(groupId, executeRequest);\r\n  }\r\n\r\n  public updateDepreciationResults(\r\n    groupId: string,\r\n    skip: number,\r\n    take: number,\r\n    returnSuccessful: boolean,\r\n    sortTerms: Array<AssetSortTermDto> = new Array<AssetSortTermDto>(),\r\n    filterTerms: Array<AssetFilterTermDto> = new Array<AssetFilterTermDto>()\r\n  ): Observable<ProcessingDetailResponseDto> {\r\n    this.depreciationRequestSource.getValue();\r\n\r\n    const defaultFilter = <FilterDto>{\r\n      term: <Term> { dataTarget: this.processingService.dataTarget, field: '', value: '' },\r\n      operation: 'noop'\r\n    };\r\n\r\n    const request = <ProcessingDetailRequestDto>{\r\n      sortTerms: !!sortTerms && sortTerms.length > 0 ? sortTerms : this.defaultSortTerms,\r\n      skip: skip,\r\n      take: take,\r\n      filterTerms: !!filterTerms && filterTerms.length > 0 ? filterTerms : [defaultFilter],\r\n      filterConjunction: 'and',\r\n      recordsRequested: returnSuccessful ? 'SuccessfulRecords' : 'FailedRecords'\r\n    };\r\n\r\n    return this.processingApiService.getDepreciationResults(groupId, request);\r\n  }\r\n\r\n  public commitDepreciation(groupId: string): Observable<ProcessingSubmissionResponseDto> {\r\n    return this.processingApiService.commitDepreciation(groupId);\r\n  }\r\n  /* End Depreciation Actions */\r\n\r\n  // Updates the request in progress\r\n  public setDepreciationRequest(dto: DepreciationSubmissionRequestDto): void {\r\n    const current = this.depreciationRequestSource.getValue();\r\n\r\n    current.convention = dto.convention;\r\n    current.dayOneCalc = dto.dayOneCalc;\r\n    current.futureYears = dto.futureYears;\r\n    current.method = dto.method;\r\n    this.depreciationRequestSource.next(current);\r\n  }\r\n  // Updates the filter on the request in progress\r\n  public addOrUpdateFilter(filterModified: FilterDto): void {\r\n    const currentDepreciation = this.depreciationRequestSource.getValue();\r\n    currentDepreciation.filterTerms = this.processingService.addOrUpdateFilter(filterModified, currentDepreciation.filterTerms);\r\n    this.depreciationRequestSource.next(currentDepreciation);\r\n  }\r\n\r\n  // Removes filter from the request in progress\r\n  public removeFilter(id: string): void {\r\n    const currentDepreciation = this.depreciationRequestSource.getValue();\r\n    currentDepreciation.filterTerms = this.processingService.removeFilter(id, currentDepreciation.filterTerms);\r\n    this.depreciationRequestSource.next(currentDepreciation);\r\n  }\r\n\r\n  public setSuccessGridDataSource(data: Array<AssetDto>): void {\r\n    this.successGridDataSource.next(data);\r\n  }\r\n\r\n  public setErrorGridDataSource(data: Array<AssetDto>): void {\r\n    this.errorGridDataSource.next(data);\r\n  }\r\n\r\n  public getActivityCodes(): Observable<ApiServiceResult<EnumDto>> {\r\n    return this.referenceDataApiService.getActivityCodes();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '../_shared/shared.module';\r\n\r\nimport { TrendingSummaryComponent } from './trending/components/trending-summary.component';\r\nimport { TrendingSetupComponent } from './trending/components/trending-setup.component';\r\nimport { TrendingFormComponent } from './trending/components/trending-form.component';\r\n\r\nimport { ProcessingService } from './services/processing.service';\r\nimport { TrendingService } from './trending/services/trending.service';\r\nimport { DepreciationService } from './depreciation/services/depreciation.service';\r\nimport { DepreciationSummaryComponent } from './depreciation/components/depreciation-summary.component';\r\nimport { DepreciationFormComponent } from './depreciation/components/depreciation-form.component';\r\nimport { DepreciationSetupComponent } from './depreciation/components/depreciation-setup.component';\r\nimport { ProcessingSummaryComponent } from './components/processing-summary.component';\r\nimport { DepreciationFormService } from './depreciation/services/depreciation-form.service';\r\nimport { CoreModule } from '../_core/core.module';\r\nimport { DateInputsModule } from '@progress/kendo-angular-dateinputs';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { OrderModule } from 'ngx-order-pipe';\r\nimport { LaddaModule } from 'angular2-ladda';\r\nimport { ReferenceDataApiService } from '../_api/_configuration/services/reference-data-api.service';\r\nimport { DataProcessingApiService } from '../_api/_configuration/services/data-processing-api.service';\r\nimport { ProcessingApiService } from '../_api/_runtime/services/processing-api.service';\r\nimport { InventoryApiService } from '../_api/_runtime/services/inventory-api.service';\r\nimport { ViewModelsApiService } from '../_api/_runtime/services/view-models-api.service';\r\nimport { InsuranceApiService } from '../_api/_runtime/services/insurance-api.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CoreModule,\r\n    CommonModule,\r\n    DateInputsModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    OrderModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    SharedModule,\r\n    LaddaModule\r\n  ],\r\n  declarations: [\r\n    TrendingSummaryComponent,\r\n    TrendingSetupComponent,\r\n    TrendingFormComponent,\r\n    DepreciationSetupComponent,\r\n    ProcessingSummaryComponent,\r\n    DepreciationSummaryComponent,\r\n    DepreciationFormComponent\r\n  ],\r\n  entryComponents: [],\r\n  providers: [\r\n    ProcessingService,\r\n    TrendingService,\r\n    DepreciationService,\r\n    DepreciationFormService,\r\n    ReferenceDataApiService,\r\n    DataProcessingApiService,\r\n    ProcessingApiService,\r\n    InventoryApiService,\r\n    ViewModelsApiService,\r\n    InsuranceApiService\r\n  ]\r\n})\r\nexport class ProcessingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { ProcessingApiService } from '../../_api/_runtime/services/processing-api.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { TranslationManager } from '../../_core/i18n/translation-manager';\r\nimport { InventoryApiService } from '../../_api/_runtime/services/inventory-api.service';\r\nimport { ReferenceDataApiService } from '../../_api/_configuration/services/reference-data-api.service';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { EnumOptionDto } from '../../_api/_configuration/dtos/enum-option.dto';\r\nimport { AssetDto } from '../../_api/_runtime/dtos/asset.dto';\r\nimport { AssetFileSummaryDto } from '../../_api/_runtime/dtos/asset-file-summary.dto';\r\nimport { AssetSearchResponseDto } from '../../_api/_runtime/dtos/asset-search-response.dto';\r\nimport { AssetSearchDto } from '../../_api/_runtime/dtos/asset-search.dto';\r\nimport { ProcessingStatusDto } from '../../_api/_runtime/dtos/processing-status.dto';\r\nimport { FilterDto } from '../../_api/dtos/inventory/filter.dto';\r\nimport { DataTargetName } from '../../_enums/data-target-name';\r\n\r\n@Injectable()\r\nexport class ProcessingService implements TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  constructor(\r\n    private inventoryApiService: InventoryApiService,\r\n    private processingApiService: ProcessingApiService,\r\n    private translateService: TranslationManager,\r\n    private referenceDataApiService: ReferenceDataApiService\r\n  ) {}\r\n\r\n  public dataTarget: number;\r\n  public groupId: string;\r\n\r\n  public referenceData = new BehaviorSubject<Array<Array<EnumOptionDto>>>(new Array<Array<EnumOptionDto>>());\r\n  private errorGridDataSource = new BehaviorSubject<Array<AssetDto>>(new Array<AssetDto>());\r\n\r\n  public GetSearchMetadataByGroupId(groupId: string, fileType): Observable<AssetFileSummaryDto> {\r\n    return this.inventoryApiService.getSearchMetadataByGroupId(groupId, fileType);\r\n  }\r\n\r\n  public searchInventory(groupId: string, searchFilter: AssetSearchDto): Observable<AssetSearchResponseDto> {\r\n    return this.inventoryApiService.search(groupId, searchFilter);\r\n  }\r\n\r\n  public getProcessingStatus(groupId: string): Observable<ProcessingStatusDto> {\r\n    return this.processingApiService.getProcessingStatus(groupId);\r\n  }\r\n\r\n  public addOrUpdateFilter(filterModified: FilterDto, currentFilters: Array<FilterDto>): Array<FilterDto> {\r\n    const index = currentFilters.findIndex(d => d.id === filterModified.id);\r\n    if (index === -1) {\r\n      currentFilters.push(filterModified);\r\n    } else if (index >= 0) {\r\n      currentFilters[index] = filterModified;\r\n    }\r\n\r\n    return currentFilters;\r\n  }\r\n\r\n  public removeFilter(id: string, currentFilters: Array<FilterDto>): Array<FilterDto> {\r\n    const index = currentFilters.findIndex(d => d.id === id);\r\n    if (index >= 0) {\r\n      currentFilters.splice(index, 1);\r\n    }\r\n    return currentFilters;\r\n  }\r\n\r\n  public getProcessingErrorMessage(dto: ProcessingStatusDto): string {\r\n    // If ConsolidatedFile is created, but in preview:\r\n    if (dto.isReadyForProcessing === false && dto.target === DataTargetName.consolidated) {\r\n      return 'Unable to process data. Consolidated file is in preview status.';\r\n    }\r\n\r\n    if (dto.isReadyForProcessing === false && dto.target === DataTargetName.consolidated) {\r\n      return 'Unable to process data. Consolidated file has not been created.';\r\n    }\r\n\r\n    return 'Unable to process data.';\r\n  }\r\n\r\n  public mapEnums(results: Array<AssetDto>): AssetDto[] {\r\n\r\n    const referenceData = this.referenceData.getValue();\r\n\r\n    results.forEach(result => {\r\n      const convention = referenceData['DepreciationConvention'].find(c => c.value === result['DepreciationConvention']);\r\n      result['DepreciationConvention'] = convention ? this.translateService.instant(this.i18n.processing + convention.displayName) : 'n/a';\r\n\r\n      const basis = referenceData['DepreciationMethod'].find(c => c.value === result['DepreciationMethod']);\r\n      result['DepreciationMethod'] = basis ? this.translateService.instant(this.i18n.processing + basis.displayName) : 'n/a';\r\n\r\n      const activityCode = referenceData['ActivityCodes'].find(c => c.value === result['activityCode']);\r\n      result['activityCode'] = activityCode ? this.translateService.instant(this.i18n.asset + activityCode.displayName) : 'n/a';\r\n    });\r\n\r\n    return results;\r\n  }\r\n\r\n  public updateReferenceData(data: Array<EnumOptionDto>, key: string) {\r\n    const current = this.referenceData.getValue();\r\n    current[key] = data;\r\n\r\n    this.referenceData.next(current);\r\n  }\r\n\r\n  public mapTrending(results: Array<AssetDto>): AssetDto[] {\r\n\r\n    const referenceData = this.referenceData.getValue();\r\n\r\n    results.forEach(result => {\r\n      result['percentChange'] = result['percentChange'] ? result['percentChange'] : 'n/a';\r\n\r\n      const activityCode = referenceData['ActivityCodes'].find(c => c.value === result['activityCode']);\r\n      result['activityCode'] = activityCode ? this.translateService.instant(this.i18n.asset + activityCode.displayName) : 'n/a';\r\n\r\n    });\r\n\r\n    return results;\r\n  }\r\n}\r\n","import { ProcessingService } from '../../services/processing.service';\r\nimport { TrendingService } from '../services/trending.service';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { BreadCrumb } from '../../../_models/breadcrumbs.model';\r\n\r\n@Component({\r\n  selector: 'trending-form',\r\n  templateUrl: './trending-form.component.html'\r\n})\r\nexport class TrendingFormComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  isReadyForProcessing = false;\r\n  target: number;\r\n  isLoading = true;\r\n  errorMessage = 'Unable to process data.';\r\n  groupId: string;\r\n\r\n  breadCrumbs = [\r\n    <BreadCrumb>{ name: 'Setup Rules', routerLink: 'Setup' },\r\n    <BreadCrumb>{ name: 'Preview Results', routerLink: 'Summary' }\r\n  ];\r\n\r\n  /* A Subject for monitoring the destruction of the component. */\r\n  private destroyed$ = new Subject<any>();\r\n\r\n  constructor(\r\n    private processingService: ProcessingService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private trendingService: TrendingService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.processingService.groupId = this.route.parent.snapshot.paramMap.get('groupId');\r\n\r\n    this.processingService\r\n      .getProcessingStatus(this.processingService.groupId)\r\n      .pipe(takeUntil(this.destroyed$))\r\n      .subscribe(\r\n        result => {\r\n          this.isReadyForProcessing = result.isReadyForProcessing;\r\n          this.processingService.dataTarget = result.target;\r\n\r\n          if (!this.isReadyForProcessing) {\r\n            this.errorMessage = this.processingService.getProcessingErrorMessage(result);\r\n          }\r\n        },\r\n        error => {},\r\n        () => {\r\n          this.isLoading = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  navigateToImportData(event: any): void {\r\n    event.preventDefault();\r\n    this.router.navigate([`project-profile/${this.processingService.groupId}/DataImport`]);\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, ViewChild, ViewContainerRef, ComponentFactoryResolver } from '@angular/core';\r\nimport { ProcessingService } from '../../services/processing.service';\r\nimport { TrendingService } from '../services/trending.service';\r\nimport { FilterCriteriaBuilderComponent } from '../../../_shared/components/filter-criteria-builder.component';\r\nimport { forkJoin, of, Subject, Observable } from 'rxjs';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { takeUntil, catchError, tap, switchMap, distinctUntilChanged, debounceTime, merge } from 'rxjs/operators';\r\nimport { TrendingRequestDto } from '../../../_api/_runtime/dtos/trending-request.dto';\r\nimport { FieldMetaDataDto } from '../../../_api/_configuration/dtos/field-metadata.dto';\r\nimport { EnumOptionDto } from '../../../_api/_configuration/dtos/enum-option.dto';\r\nimport { NgbTypeaheadSelectItemEvent } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ReferenceDataApiService } from '../../../_api/_configuration/services/reference-data-api.service';\r\nimport { ProcessingApiService } from '../../../_api/_runtime/services/processing-api.service';\r\nimport { DataProcessingApiService } from '../../../_api/_configuration/services/data-processing-api.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FieldType } from '../../../_enums/field-type';\r\nimport { FilterDto } from '../../../_api/dtos/inventory/filter.dto';\r\n\r\n@Component({\r\n  selector: 'trending-setup',\r\n  templateUrl: './trending-setup.component.html'\r\n})\r\nexport class TrendingSetupComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  trendingRequest = <TrendingRequestDto>{};\r\n\r\n  @ViewChild('filterCriteria', { read: ViewContainerRef, static: false })\r\n  filterCriteriaContainer: ViewContainerRef;\r\n\r\n  /* A Subject for monitoring the destruction of the component. */\r\n  private destroyed$ = new Subject<any>();\r\n\r\n  inventoryMetadata = new Array<FieldMetaDataDto>();\r\n  startingValueOptions: FieldMetaDataDto[];\r\n  endingValueOptions: FieldMetaDataDto[];\r\n  roundingTypeOptions = new Array<EnumOptionDto>();\r\n\r\n  model: any; // This is intentional now that typeahead is shared\r\n  searching = false;\r\n  searchFailed = false;\r\n  item: NgbTypeaheadSelectItemEvent = null;\r\n  hideSearchingWhenUnsubscribed = new Observable(() => () => (this.searching = false));\r\n\r\n  isProcessing = false;\r\n\r\n  private hiddenFields = [\r\n    'id',\r\n    'assetFileId',\r\n    'sourceRecordId',\r\n    'groupId',\r\n  ];\r\n\r\n  constructor(\r\n    private referenceDataService: ReferenceDataApiService,\r\n    private processingApiService: ProcessingApiService,\r\n    private processingService: ProcessingService,\r\n    private dataProcessingService: DataProcessingApiService,\r\n    private componentResolver: ComponentFactoryResolver,\r\n    private trendingService: TrendingService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.trendingService.trendingRequest$.subscribe(request => {\r\n      this.trendingRequest = request;\r\n    });\r\n\r\n    const getRoundingTypeDataSource = this.referenceDataService.GetRoundingTypes();\r\n    const getFilterDataSource = this.processingService.GetSearchMetadataByGroupId(\r\n      this.processingService.groupId,\r\n      this.processingService.dataTarget\r\n    );\r\n\r\n    forkJoin(getRoundingTypeDataSource, getFilterDataSource)\r\n      .pipe(takeUntil(this.destroyed$))\r\n      .subscribe(\r\n        ([roundingTypeDataSource, filterDataSource]) => {\r\n          this.roundingTypeOptions = roundingTypeDataSource.result.enumOptions;\r\n          this.inventoryMetadata = filterDataSource.fields.filter(x => !(this.hiddenFields.indexOf(x.name) > -1));\r\n\r\n          this.startingValueOptions = filterDataSource.fields.filter(\r\n            e => e.fieldType === FieldType.Double || e.fieldType === FieldType.Integer);\r\n\r\n          this.endingValueOptions = filterDataSource.fields.filter(\r\n            e => e.fieldType === FieldType.Double || e.fieldType === FieldType.Integer\r\n          );\r\n        },\r\n        error => {},\r\n        () => {\r\n          if (this.trendingRequest.filterTerms.length === 0) {\r\n            this.addFilter();\r\n          }\r\n\r\n          // Set existing filters on page load if present\r\n          this.trendingRequest.filterTerms.forEach(filter => {\r\n            if (filter.operation !== 'noop') {\r\n              this.addFilter(filter);\r\n            }\r\n          });\r\n\r\n          // Set existing trend table on page load if present\r\n          if (this.trendingRequest.trendingTableId) {\r\n            this.dataProcessingService.getTrendingById(this.trendingRequest.trendingTableId).subscribe(result => {\r\n              this.model = result;\r\n            });\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  onSubmit(form: any) {\r\n    if (form.valid && !!this.trendingRequest.trendingTableId) {\r\n      this.trendingService.setTrendingRequest(this.trendingRequest);\r\n      this.isProcessing = true;\r\n      this.trendingService.executeTrending(this.processingService.groupId).subscribe(result => {\r\n        if (result) {\r\n          this.isProcessing = false;\r\n          if (result.success) {\r\n            this.router.navigate([`/project-profile/${this.processingService.groupId}/Trending/Summary`]);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  addFilter(filter?: FilterDto) {\r\n    const comp = this.componentResolver.resolveComponentFactory(FilterCriteriaBuilderComponent);\r\n    const filterCriteria = this.filterCriteriaContainer.createComponent(comp);\r\n\r\n    // Setting reference to close/remove\r\n    filterCriteria.instance.ref = filterCriteria;\r\n    filterCriteria.instance.filterMetadata = this.inventoryMetadata;\r\n    filterCriteria.instance.translationKeyBase = this.i18n.asset;\r\n\r\n    filterCriteria.instance.criteriaChangedEvent.subscribe(e => {\r\n      const addedFilter = <FilterDto>e;\r\n\r\n      addedFilter.term.dataTarget = this.processingService.dataTarget;\r\n\r\n      this.trendingService.addOrUpdateFilter(addedFilter);\r\n    });\r\n\r\n    filterCriteria.instance.filterRemovedEvent.subscribe(e => {\r\n      const removedFilter = <FilterDto>e;\r\n\r\n      this.trendingService.removeFilter(removedFilter.id);\r\n    });\r\n\r\n    if (filter) {\r\n      filterCriteria.instance.filter = filter;\r\n    }\r\n  }\r\n\r\n  /*** Typeahead  ***/\r\n  onSelectItem(selected: NgbTypeaheadSelectItemEvent): void {\r\n    this.trendingRequest.trendingTableId = selected.item.id;\r\n  }\r\n\r\n  public getResultFormatter(result) {\r\n    return result.name;\r\n  }\r\n\r\n  public getInputFormatter(result) {\r\n    return result.name;\r\n  }\r\n\r\n  search = (text$: Observable<string>) =>\r\n    text$\r\n      .pipe(debounceTime(300))\r\n      .pipe(distinctUntilChanged())\r\n      .pipe(tap(() => (this.searching = true)))\r\n      .pipe(switchMap(term =>\r\n        this.dataProcessingService\r\n          .searchTrending(term)\r\n          .pipe(tap(() => {\r\n            this.searchFailed = false;\r\n          }))\r\n          .pipe(catchError(() => {\r\n            this.searchFailed = true;\r\n            return of([]);\r\n          }))\r\n      ))\r\n      .pipe(tap(() => {\r\n        this.searching = false;\r\n      }))\r\n      .pipe(merge(this.hideSearchingWhenUnsubscribed))\r\n}\r\n","import { TrendingService } from '../services/trending.service';\r\nimport { forkJoin, Subject, Subscription } from 'rxjs';\r\nimport { AlertService } from '../../../_core/services/alert.service';\r\nimport { FamisGridService } from '../../../_core/services/famis-grid.service';\r\n\r\nimport {\r\n  trendingHeaders,\r\n  defaultTrendingHeaders,\r\n  trendingErrorColumn,\r\n  assetFileRecordHeaders\r\n} from '../../default-values/default-headers';\r\n\r\nimport { ProcessingService } from '../../services/processing.service';\r\nimport { HelperService } from '../../../_core/services/helper.service';\r\nimport { AssetFileInfoService } from '../../../_core/services/asset-file-info-service';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { FamisGrid, FamisGridFeature } from '../../../_models/shared/famis-grid-state.model';\r\nimport { TrendingRequestDto } from '../../../_api/_runtime/dtos/trending-request.dto';\r\nimport { ProcessingSummary } from '../../../_models/processing/processing-summary.model';\r\nimport { GridColumnHeader } from '../../../_models/grid-column-header.model';\r\nimport { AssetDto } from '../../../_api/_runtime/dtos/asset.dto';\r\nimport { Router } from '@angular/router';\r\nimport { FamisGridCacheResult } from '../../../_models/shared/famis-grid-cache-result.model';\r\n\r\n@Component({\r\n  selector: 'trending-summary',\r\n  templateUrl: './trending-summary.component.html'\r\n})\r\nexport class TrendingSummaryComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  /* A Subject for monitoring the destruction of the component. */\r\n  private destroyed$ = new Subject<any>();\r\n\r\n  public loading: Subscription;\r\n\r\n  private windowSize = 250;\r\n  private initWindowSize = 84;\r\n\r\n  public successGrid: FamisGrid;\r\n  public errorGrid: FamisGrid;\r\n  public trendingRequest: TrendingRequestDto;\r\n\r\n  @Input()\r\n  processingSummary = <ProcessingSummary>{\r\n    selectedHeaders: new Array<GridColumnHeader>(),\r\n    successfulRecords: new Array<AssetDto>(),\r\n    errorRecords: new Array<AssetDto>(),\r\n    successCount: 0,\r\n    errorCount: 0,\r\n    processingVerb: 'Trended'\r\n  };\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private alertService: AlertService,\r\n    private famisGridService: FamisGridService,\r\n    private processingService: ProcessingService,\r\n    private trendingService: TrendingService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    const s = this;\r\n\r\n    this.famisGridService.resetCache();\r\n    this.trendingService.clearTrending();\r\n\r\n    this.trendingService.trendingRequest$.subscribe(request => {\r\n      this.trendingRequest = request;\r\n    });\r\n\r\n    this.successGrid = <FamisGrid>{\r\n      gridData: this.trendingService.successGridData$,\r\n      columnHeaders: trendingHeaders.concat(assetFileRecordHeaders),\r\n      selectedHeaders: defaultTrendingHeaders,\r\n      gridId: this.famisGridService.createGrid(),\r\n      windowSize: this.windowSize,\r\n      totalRecordCount: 0,\r\n      name: 'Summary',\r\n      supportedOperators: [FamisGridFeature.Sort, FamisGridFeature.Filter, FamisGridFeature.ColumnSelection],\r\n      translationBaseKey: this.i18n.trending\r\n    };\r\n\r\n    this.errorGrid = <FamisGrid>{\r\n      gridData: this.trendingService.errorGridData$,\r\n      selectedHeaders: ['processingErrorDescription'].concat(defaultTrendingHeaders),\r\n      gridId: this.famisGridService.createGrid(),\r\n      columnHeaders: trendingErrorColumn.concat(trendingHeaders).concat(assetFileRecordHeaders),\r\n      windowSize: this.windowSize,\r\n      totalRecordCount: 0,\r\n      name: 'Errors',\r\n      supportedOperators: [FamisGridFeature.Sort, FamisGridFeature.Filter, FamisGridFeature.ColumnSelection],\r\n      translationBaseKey: this.i18n.trending\r\n    };\r\n\r\n    const getSuccessfulRecords =\r\n      this.trendingService.updateTrendingResults(this.processingService.groupId, 0, s.famisGridService.defaultTake, true);\r\n    const getErrorRecords =\r\n      this.trendingService.updateTrendingResults(this.processingService.groupId, 0, s.famisGridService.defaultTake, false);\r\n\r\n    const getActivityCodes = this.trendingService.getActivityCodes();\r\n\r\n    const loading = forkJoin(getSuccessfulRecords, getErrorRecords, getActivityCodes)\r\n    .subscribe(([sucessfulRecords, errorRecords, activityCodes]) => {\r\n      s.processingService.updateReferenceData(activityCodes.result.enumOptions, 'ActivityCodes');\r\n      if (sucessfulRecords) {\r\n        s.successGrid.totalRecordCount = sucessfulRecords.totalInRecordSet;\r\n        s.processingSummary.successCount = sucessfulRecords.totalInRecordSet;\r\n        s.trendingService.setSuccessGridDataSource(sucessfulRecords.assets);\r\n\r\n        if (sucessfulRecords.assets.length > 0) {\r\n          s.famisGridService.setCacheRecords(\r\n            this.processingService.mapTrending(sucessfulRecords.assets),\r\n            s.successGrid.gridId,\r\n            0,\r\n            sucessfulRecords.totalInRecordSet,\r\n            s.initWindowSize\r\n          );\r\n        }\r\n      }\r\n\r\n      if (errorRecords) {\r\n        s.errorGrid.totalRecordCount = errorRecords.totalInRecordSet;\r\n        s.processingSummary.errorCount = errorRecords.totalInRecordSet;\r\n        s.trendingService.setErrorGridDataSource(this.processingService.mapTrending(errorRecords.assets));\r\n\r\n        if (errorRecords.assets.length > 0) {\r\n          s.famisGridService.setCacheRecords(\r\n            errorRecords.assets,\r\n            this.errorGrid.gridId,\r\n            0,\r\n            errorRecords.totalInRecordSet,\r\n            s.initWindowSize);\r\n        }\r\n      }\r\n    });\r\n\r\n    s.successGrid.loading = loading;\r\n    s.errorGrid.loading = loading;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  updateCache(request: FamisGridCacheResult) {\r\n    const s = this;\r\n\r\n    if (request.gridId === s.successGrid.gridId) {\r\n      this.successGrid.cacheLoading = s.processCacheUpdate(request, true);\r\n    }\r\n\r\n    if (request.gridId === s.errorGrid.gridId) {\r\n      this.errorGrid.cacheLoading = s.processCacheUpdate(request, false);\r\n    }\r\n  }\r\n\r\n  back() {\r\n    this.router.navigate([`/project-profile/${this.processingService.groupId}/Trending/Setup`]);\r\n  }\r\n\r\n  commit() {\r\n    this.trendingService.commitTrending(this.processingService.groupId).subscribe(result => {\r\n      if (result.success) {\r\n        this.alertService.success(`Trending Successful: {{recordsProcessed}} Records Processed`,\r\n         null, {recordsProcessed: result.recordsProcessed});\r\n\r\n        this.router.navigate([`/project-profile/${this.processingService.groupId}/Trending/Setup`]);\r\n      } else {\r\n        this.alertService.error(`An error has occurred while commiting the Trending`);\r\n      }\r\n    });\r\n  }\r\n\r\n  private processCacheUpdate(cacheUpdateRequest: FamisGridCacheResult, returnSuccessful: boolean = true): Subscription {\r\n    const s = this;\r\n\r\n    if (cacheUpdateRequest.filters) {\r\n      cacheUpdateRequest.filters.forEach(filter => {\r\n        filter.term.dataTarget = s.processingService.dataTarget;\r\n      });\r\n    }\r\n\r\n    return this.trendingService\r\n      .updateTrendingResults(\r\n        s.processingService.groupId,\r\n        cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.skip : s.famisGridService.defaultSkip,\r\n        cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.take : s.famisGridService.defaultTake,\r\n        returnSuccessful,\r\n        cacheUpdateRequest.sortTerms,\r\n        cacheUpdateRequest.filters\r\n      )\r\n      .pipe(takeUntil(this.destroyed$))\r\n      .subscribe(dto => {\r\n        if (cacheUpdateRequest.gridId === s.successGrid.gridId) {\r\n          this.successGrid.totalRecordCount = dto.totalInRecordSet;\r\n\r\n          s.famisGridService.setCacheRecords(\r\n            this.processingService.mapTrending(dto.assets),\r\n            cacheUpdateRequest.gridId,\r\n            cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.skip : s.famisGridService.defaultSkip,\r\n            dto.numberInThisPayload,\r\n            this.successGrid.windowSize\r\n          );\r\n        }\r\n\r\n        if (cacheUpdateRequest.gridId === s.errorGrid.gridId) {\r\n          this.errorGrid.totalRecordCount = dto.totalInRecordSet;\r\n\r\n          s.famisGridService.setCacheRecords(\r\n            this.processingService.mapTrending(dto.assets),\r\n            cacheUpdateRequest.gridId,\r\n            cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.skip : s.famisGridService.defaultSkip,\r\n            dto.numberInThisPayload,\r\n            this.errorGrid.windowSize\r\n          );\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ProcessingService } from '../../services/processing.service';\r\nimport { depreciationHeaders } from '../../default-values/default-headers';\r\nimport { ReferenceDataApiService } from '../../../_api/_configuration/services/reference-data-api.service';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { AssetDto } from '../../../_api/_runtime/dtos/asset.dto';\r\nimport { AssetSortTermDto } from '../../../_api/_runtime/dtos/asset-sort-term.dto';\r\nimport { TrendingRequestDto } from '../../../_api/_runtime/dtos/trending-request.dto';\r\nimport { FilterDto } from '../../../_api/dtos/inventory/filter.dto';\r\nimport { ProcessingSubmissionResponseDto } from '../../../_api/_runtime/dtos/processing-submission-response.dto';\r\nimport { ProcessingApiService } from '../../../_api/_runtime/services/processing-api.service';\r\nimport { Term, ProcessingDetailRequestDto } from '../../../_api/_runtime/dtos/processing-detail-request.dto';\r\nimport { AssetFilterTermDto } from '../../../_api/_runtime/dtos/asset-filter-term.dto';\r\nimport { ProcessingDetailResponseDto } from '../../../_api/_runtime/dtos/processing-detail-response.dto';\r\nimport { ApiServiceResult } from '../../../_api/dtos/api-service-result.dto';\r\nimport { EnumDto } from '../../../_api/_configuration/dtos/enum.dto';\r\n\r\n@Injectable()\r\nexport class TrendingService {\r\n  private successGridDataSource = new BehaviorSubject<Array<AssetDto>>(new Array<AssetDto>());\r\n  private errorGridDataSource = new BehaviorSubject<Array<AssetDto>>(new Array<AssetDto>());\r\n\r\n  public successGridData$ = this.successGridDataSource.asObservable();\r\n  public errorGridData$ = this.errorGridDataSource.asObservable();\r\n\r\n  public defaultSortTerms = [<AssetSortTermDto>{ termOrder: 0, sortDirection: 0, field: 'id' }];\r\n\r\n  private trendingRequestSource = new BehaviorSubject<TrendingRequestDto>(<TrendingRequestDto>{\r\n    sourceField: null,\r\n    destinationField: null,\r\n    rounding: null,\r\n    trendingTableId: '',\r\n    filterTerms: new Array<FilterDto>(),\r\n    filterConjunction: 'and'\r\n  });\r\n  public trendingRequest$ = this.trendingRequestSource.asObservable();\r\n\r\n  constructor(private processingApiService: ProcessingApiService,\r\n    private processingService: ProcessingService,\r\n    private referenceDataApiService: ReferenceDataApiService) {}\r\n\r\n  public clearTrending() {\r\n    this.successGridDataSource.next(new Array<AssetDto>());\r\n    this.errorGridDataSource.next(new Array<AssetDto>());\r\n  }\r\n\r\n  public executeTrending(groupId: string): Observable<ProcessingSubmissionResponseDto> {\r\n    const request = this.trendingRequestSource.getValue();\r\n\r\n    const executeRequest = Object.assign({}, request);\r\n\r\n    const defaultFilter = [\r\n      <FilterDto>{\r\n        term: <Term>{ dataTarget: this.processingService.dataTarget, field: '', value: '' },\r\n        operation: 'noop'\r\n      }\r\n    ];\r\n\r\n    executeRequest.filterTerms = request.filterTerms.length > 0 ? request.filterTerms : defaultFilter;\r\n\r\n    return this.processingApiService.executeTrending(groupId, request);\r\n  }\r\n\r\n  public updateTrendingResults(\r\n    groupId: string,\r\n    skip: number,\r\n    take: number,\r\n    returnSuccessful: boolean,\r\n    sortTerms: Array<AssetSortTermDto> = new Array<AssetSortTermDto>(),\r\n    filterTerms: Array<AssetFilterTermDto> = new Array<AssetFilterTermDto>()\r\n  ): Observable<ProcessingDetailResponseDto> {\r\n    const defaultFilter = [\r\n      <FilterDto>{\r\n        term: <Term>{ dataTarget: this.processingService.dataTarget, field: '', value: '' },\r\n        operation: 'noop'\r\n      }\r\n    ];\r\n\r\n    const request = <ProcessingDetailRequestDto>{\r\n      sortTerms: !!sortTerms && sortTerms.length > 0 ? sortTerms : this.defaultSortTerms,\r\n      filterTerms: !!filterTerms && filterTerms.length > 0 ? filterTerms : defaultFilter,\r\n      filterConjunction: 'and',\r\n      skip: skip,\r\n      take: take,\r\n      recordsRequested: returnSuccessful ? 'SuccessfulRecords' : 'FailedRecords'\r\n    };\r\n\r\n    return this.processingApiService.getTrendingResults(groupId, request);\r\n  }\r\n\r\n  public commitTrending(groupId: string): Observable<ProcessingSubmissionResponseDto> {\r\n    return this.processingApiService.commitTrending(groupId);\r\n  }\r\n\r\n  public setTrendingRequest(dto: TrendingRequestDto): void {\r\n    this.trendingRequestSource.next(dto);\r\n  }\r\n\r\n  public addOrUpdateFilter(filterModified: FilterDto): void {\r\n    const currentTrending = this.trendingRequestSource.getValue();\r\n    currentTrending.filterTerms = this.processingService.addOrUpdateFilter(filterModified, currentTrending.filterTerms);\r\n    this.trendingRequestSource.next(currentTrending);\r\n  }\r\n\r\n  public removeFilter(id: string): void {\r\n    const currentTrending = this.trendingRequestSource.getValue();\r\n    currentTrending.filterTerms = this.processingService.removeFilter(id, currentTrending.filterTerms);\r\n    this.trendingRequestSource.next(currentTrending);\r\n  }\r\n\r\n  public setSuccessGridDataSource(data: Array<AssetDto>): void {\r\n    this.successGridDataSource.next(data);\r\n  }\r\n\r\n  public setErrorGridDataSource(data: Array<AssetDto>): void {\r\n    this.errorGridDataSource.next(data);\r\n  }\r\n\r\n  public getActivityCodes(): Observable<ApiServiceResult<EnumDto>> {\r\n    return this.referenceDataApiService.getActivityCodes();\r\n  }\r\n}\r\n","import { AdministrationService } from '../../services/administration.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'administration-form',\r\n  templateUrl: './administration-form.component.html'\r\n})\r\n\r\nexport class AdministrationFormComponent implements OnInit {\r\n\r\n  constructor(\r\n    private administrationService: AdministrationService,\r\n    private route: ActivatedRoute) {}\r\n\r\n  ngOnInit() {\r\n    this.administrationService.groupId = this.route.parent.snapshot.paramMap.get('groupId');\r\n    // console.log(this.administrationService.groupId);\r\n\r\n    this.administrationService.updateGroupIdContext(this.administrationService.groupId);\r\n  }\r\n\r\n}\r\n","import { ConfirmModalComponent } from '../../../_shared/components/confirm-modal.component';\r\nimport { AlertService } from '../../../_core/services/alert.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AdministrationService } from '../../services/administration.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ContractsGroupSummaryDto } from '../../../_api/dtos/shared/contracts-groups-summary.dto';\r\nimport { DataTargetName } from '../../../_enums/data-target-name';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ContractService } from '../../../_api/services/dashboard/contract.service';\r\nimport { GroupSearchService } from '../../../_api/services/group-search.service';\r\nimport { ReconciliationMatchService } from '../../../_api/services/reconciliation/reconcilation-match.service';\r\nimport { ModalProperties } from '../../../_models/modal-properties.model';\r\nimport { InventoryService } from '../../../_api/services/reconciliation/inventory.service';\r\n\r\n@Component({\r\n  selector: 'administration',\r\n  templateUrl: './administration.component.html'\r\n})\r\nexport class AdministrationComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  selectedAction: string;\r\n  assetRecord: ContractsGroupSummaryDto;\r\n  consolidatedCount: Number;\r\n  contractId: string;\r\n  groupId: string;\r\n  dataTarget: DataTargetName = DataTargetName.consolidated;\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private route: ActivatedRoute,\r\n    private contractService: ContractService,\r\n    private inventoryService: InventoryService,\r\n    private groupService: GroupSearchService,\r\n    private alertService: AlertService,\r\n    private administrationService: AdministrationService,\r\n    private router: Router,\r\n    private translateService: TranslateService,\r\n    private reconciliationMatchService: ReconciliationMatchService,\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n   // console.log(this.administrationService.groupId);\r\n    this.groupId = this.administrationService.groupId;\r\n\r\n    this.groupService.getContractGroup(this.groupId).subscribe(\r\n      result => {\r\n        this.contractId = result.contractId;\r\n      },\r\n      error => {\r\n        // TODO: Something more meaningful than nothing to handle the error\r\n      });\r\n\r\n  }\r\n\r\n  onSubmit(form) {\r\n\r\n    if (form.valid) {\r\n      switch (this.selectedAction) {\r\n        case 'DeleteReconciledData':\r\n          this.contractService.getContractGroupsByGroupId(this.contractId, this.groupId).subscribe(result => {\r\n            this.assetRecord = result;\r\n            const hasMatchData = result[0].reconciliationProgress.toLowerCase() !== 'notstarted';\r\n            this.deleteReconciledData(form, hasMatchData);\r\n          });\r\n\r\n          break;\r\n        case 'RollbackConsolidatedFile':\r\n          this.contractService.getContractGroupsByGroupId(this.contractId, this.groupId).subscribe(result => {\r\n            this.assetRecord = result;\r\n            this.rollbackConsolidatedFile(form);\r\n          });\r\n          break;\r\n        case 'RollbackTransactionData':\r\n          this.navigateToTransaction();\r\n          break;\r\n        case 'GroupSave' :\r\n        // console.log('groupsave');\r\n          this.navigateToGroupSaves();\r\n          break;\r\n          case 'DeactivateItems' :\r\n        // console.log('groupsave');\r\n          this.navigateToRemoveDeactivated();\r\n          break;\r\n        default:\r\n          // Logically we should never get here thanks to error handling on the submit\r\n          this.alertService.error('Please select an admin action.');\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  private deleteReconciledData(form: NgForm, hasMatchData: boolean) {\r\n    this.consolidatedCount = this.assetRecord[0].recordCounts.filter(r => r.type === DataTargetName.consolidated)[0].count;\r\n\r\n    if (hasMatchData) {\r\n\r\n      // Open modal\r\n      const modal = this.modalService.open(ConfirmModalComponent);\r\n      modal.componentInstance.options = <ModalProperties> {\r\n        heading: {\r\n          key: 'Delete Reconciled Data'\r\n        },\r\n        body: {\r\n          key: 'Are you sure you wish to remove all record matches and delete {{consolidatedCount}} consolidated records?',\r\n          params: {consolidatedCount: this.consolidatedCount},\r\n        },\r\n        dismissText: {\r\n          key: 'Cancel'\r\n        },\r\n        successText: {\r\n          key: 'Continue'\r\n        },\r\n        translateBaseKey: this.i18n.common\r\n      };\r\n\r\n      // Check modal result\r\n      modal.result.then(\r\n        result => {\r\n          this.reconciliationMatchService.deleteGroupReconciliationData(this.groupId).subscribe(() => {\r\n            this.alertService.success('Reconciled data successfully deleted.');\r\n            this.resetForm(form);\r\n          }, error => {\r\n            this.alertService.error('Error deleting reconciled data, please try again.');\r\n            this.resetForm(form);\r\n          });\r\n        },\r\n        error => {\r\n          // Cancel/dismiss -- not nothing? Close modal, reset select?\r\n         // console.log(error);\r\n          this.resetForm(form);\r\n        });\r\n    } else {\r\n      this.alertService.info('No reconciliation matches have been found.');\r\n      this.resetForm(form);\r\n    }\r\n\r\n  }\r\n\r\n  private rollbackConsolidatedFile(form: NgForm) {\r\n    this.consolidatedCount = this.assetRecord[0].recordCounts.filter(r => r.type === DataTargetName.consolidated)[0].count;\r\n\r\n    if (this.consolidatedCount > 0) {\r\n      // Open modal\r\n      const modal = this.modalService.open(ConfirmModalComponent);\r\n      modal.componentInstance.options = <ModalProperties> {\r\n        heading: {\r\n          key: 'Delete Consolidated Data'\r\n        },\r\n        body: {\r\n          key: 'Are you sure you wish to delete {{consolidatedCount}} records?',\r\n          params: {consolidatedCount: this.consolidatedCount},\r\n        },\r\n        dismissText: {\r\n          key: 'Cancel'\r\n        },\r\n        successText: {\r\n          key: 'Continue'\r\n        },\r\n        translateBaseKey: this.i18n.common\r\n      };\r\n\r\n      // Check modal result\r\n      modal.result.then(\r\n        result => {\r\n          this.inventoryService.deleteAssetFileForGroup(this.groupId, this.dataTarget).subscribe(() => {\r\n            this.alertService.success('Reconciled data successfully deleted.');\r\n            this.resetForm(form);\r\n          }, error => {\r\n            this.alertService.error('Error deleting reconciled data, please try again.');\r\n            this.resetForm(form);\r\n          });\r\n        },\r\n        error => {\r\n          // Cancel/dismiss -- not nothing? Close modal, reset select?\r\n         // console.log(error);\r\n          this.resetForm(form);\r\n        });\r\n    } else {\r\n      this.alertService.info('No reconciled data present to delete.');\r\n      this.resetForm(form);\r\n    }\r\n  }\r\n\r\n  private navigateToTransaction() {\r\n    this.router.navigate([`/project-profile/${this.groupId}/Administration/Transactions`]);\r\n  }\r\n\r\n  private navigateToGroupSaves() {\r\n    this.router.navigate([`/project-profile/${this.groupId}/group-save`]);\r\n  }\r\n   private navigateToRemoveDeactivated() {\r\n    this.router.navigate([`/project-profile/${this.groupId}/remove-deactivated`]);\r\n  }\r\n  private resetForm(form: NgForm) {\r\n\r\n    this.selectedAction = '';\r\n    form.resetForm();\r\n\r\n  }\r\n\r\n}\r\n","import { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { of, Observable } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, tap, switchMap, merge, catchError } from 'rxjs/operators';\r\nimport { PeoplePickerSearchResultDto } from '../../_api/dtos/project-profile/people-picker-search-result.dto';\r\nimport { NgbTypeaheadSelectItemEvent } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PeoplePickerField } from '../../_models/field-types/people-picker-field.model';\r\nimport { ProjectProfileControlService } from '../../_api/services/project-profile/project-profile-control.service';\r\nimport { NgForm, FormGroup } from '@angular/forms';\r\nimport { ViewChild, Input, OnInit, Component } from '@angular/core';\r\nimport { BaseField } from '../../_models/field-types/base-field.model';\r\n\r\n@Component({\r\n  selector: 'profile-dynamic-field',\r\n  templateUrl: './dynamic-field.component.html'\r\n})\r\nexport class ProjectProfileDynamicFieldComponent implements TranslatedComponent, OnInit {\r\n\r\n  i18n = TranslationBaseKeys;\r\n  @Input()\r\n  field = new BaseField<any>();\r\n  @Input()\r\n  form: FormGroup;\r\n\r\n  @ViewChild('ngForm', {static: false})\r\n  ngForm: NgForm;\r\n\r\n  public searching = false;\r\n  public searchFailed = false;\r\n  public employeeSelected = false;\r\n  public selectedEmployee: PeoplePickerSearchResultDto | undefined;\r\n  hideSearchingWhenUnsubscribed = new Observable(() => () =>\r\n    (this.searching = false)\r\n  );\r\n  public fieldValueString = '';\r\n\r\n  constructor(\r\n    private controlService: ProjectProfileControlService) {}\r\n\r\n  ngOnInit(): void {\r\n    if (this.field.value && this.field.controlType === 'peoplePicker') {\r\n      const ppField = this.field as PeoplePickerField;\r\n      this.selectedEmployee = <PeoplePickerSearchResultDto> {\r\n        id : ppField.value,\r\n        nameFormatted: ppField.displayValue\r\n      };\r\n      this.fieldValueString = ppField.displayValue;\r\n    }\r\n  }\r\n\r\n  get isValid(): boolean {\r\n    return this.form.controls[this.field.key] ? this.form.controls[this.field.key].valid : false;\r\n  }\r\n\r\n  public getResultFormatter(result: PeoplePickerSearchResultDto) {\r\n    return result.nameFormatted;\r\n  }\r\n\r\n  public getInputFormatter(result: PeoplePickerSearchResultDto) {\r\n    return result.nameFormatted;\r\n  }\r\n\r\n  public onSelectItem(event: NgbTypeaheadSelectItemEvent): void {\r\n    this.employeeSelected = false;\r\n    const employee: PeoplePickerSearchResultDto = event.item;\r\n    this.selectedEmployee = employee;\r\n    this.employeeSelected = true;\r\n    this.fieldValueString = employee.nameFormatted;\r\n    this.field['value'] = employee.id;\r\n  }\r\n\r\n  public search = (text$: Observable<string>) => (\r\n    text$\r\n    .pipe(debounceTime(300))\r\n        .pipe(distinctUntilChanged())\r\n        .pipe(tap(() => (this.searching = true)))\r\n        .pipe(switchMap(term =>\r\n            this.controlService\r\n            .searchEmployee(term)\r\n            .pipe(tap(() => {\r\n                this.searchFailed = false;\r\n            }))\r\n            .pipe(catchError(() => {\r\n                this.searchFailed = true;\r\n                return of([]);\r\n            })))\r\n        )\r\n        .pipe(tap(() => {\r\n            this.searching = false;\r\n        }))\r\n        .pipe(merge(this.hideSearchingWhenUnsubscribed))\r\n  )\r\n}\r\n","import { ProjectProfileService } from '../services/project-profile.service';\r\nimport { SystemPermissionsEnum } from '../../_core/user/permissions';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { LeftNavService } from '../../_core/services/left-nav-service';\r\nimport { inOutFromLeftSideAnimation } from '../../_core/animations/in-out-from-left-side.animation';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { forkJoin, Subject } from 'rxjs';\r\nimport { ProjectProfile } from '../../_models/project-profile.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ContractGroupSummaryDto } from '../../_api/_runtime/dtos/contract-group-summary.dto';\r\nimport { ProjectModuleDto } from '../../_api/dtos/project-module.dto';\r\nimport { ViewContainerRef, ViewChild, OnInit, OnDestroy, Component } from '@angular/core';\r\n//import { AlertService } from 'client-src/app/_core/services/alert.service';\r\nimport { AlertService } from '../../_core/services/alert.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-project-profile',\r\n  templateUrl: './project-profile.component.html',\r\n  animations: [inOutFromLeftSideAnimation]\r\n})\r\nexport class ProjectProfileComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  private destroyed$ = new Subject<any>();\r\n\r\n  public selectedModule: any;\r\n  public groupName: string;\r\n  public accountName: string;\r\n\r\n  public permissions = SystemPermissionsEnum;\r\n\r\n  public projectProfile = <ProjectProfile>{};\r\n\r\n  @ViewChild('famisModuleContainer', { read: ViewContainerRef, static: false })\r\n  public famisModuleContainer: ViewContainerRef;\r\n  public enabledModules: Array<ProjectModuleDto>;\r\n  public currentGroupId = '';\r\n\r\n  public groups = new Array<ContractGroupSummaryDto>();\r\n  public isCollapsed = false;\r\n\r\n  /* A Subject for monitoring the destruction of the component. */\r\n  constructor(\r\n    private projectProfileService: ProjectProfileService,\r\n    private route: ActivatedRoute,\r\n    private leftNavService: LeftNavService,\r\n    private alertService: AlertService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    const s = this;\r\n\r\n    this.leftNavService.navCollapsed$.subscribe(val => {\r\n      this.isCollapsed = val;\r\n    });\r\n\r\n    this.currentGroupId = this.route.snapshot.paramMap.get('groupId');\r\n    const selectedModuleId = this.route.firstChild.snapshot.paramMap.get('moduleId');\r\n\r\n    const getModules = this.projectProfileService.getModules();\r\n    const getTemplateForGroup = this.projectProfileService.getTemplateForGroup(this.currentGroupId);\r\n    const getContract = this.projectProfileService.getContractGroup(this.currentGroupId);\r\n    const CheckOtherUserExists = this.projectProfileService.logGroupandCheckOtherUser(this.currentGroupId);\r\n\r\n      forkJoin(getModules, getTemplateForGroup, getContract, CheckOtherUserExists)\r\n      .pipe(takeUntil(s.destroyed$))\r\n      .subscribe(([modules, template, contract,otherUserExists]) => {\r\n\r\n        if (contract) {\r\n          s.groupName = contract.groupName;\r\n          s.accountName = contract.contractName;\r\n\r\n          s.projectProfileService.getContractGroups(contract.contractId).subscribe(groups => {\r\n            this.groups = groups;\r\n          });\r\n        }\r\n\r\n        if (modules && template) {\r\n          const updated = <ProjectProfile>{\r\n            template: template,\r\n            selectedGroupId: this.currentGroupId,\r\n            selectedModule: selectedModuleId,\r\n            modules: modules\r\n          };\r\n\r\n          this.projectProfileService.updateProjectProfile(updated);\r\n\r\n          s.enabledModules = this.projectProfileService.mapSelectedModules(template, modules);\r\n\r\n        }\r\n        if(otherUserExists){\r\n          this.alertService.info(\"other user exists\");\r\n        }\r\n      });\r\n  }\r\n\r\n  isEnabled(famisModuleId: string): boolean {\r\n\r\n    if (this.enabledModules) {\r\n      return this.enabledModules.findIndex(c => c.name === famisModuleId) !== -1;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  onGroupSelected(selectedGroupId: string) {\r\n    window.location.href = `/project-profile/${selectedGroupId}/MainProfile`;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n    this.projectProfileService.clearProjectProfile();\r\n  }\r\n}\r\n","import { TasksService } from '../../services/tasks.service';\r\nimport { Component, OnInit, ViewChild, Output, EventEmitter } from '@angular/core';\r\nimport { NgbModalRef, NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Task } from '../../../_models/task.model';\r\nimport { AssignWorkflowTaskDto } from '../../../_api/dtos/assignWorkflowTask.dto';\r\n\r\n\r\n@Component({\r\n  selector: 'edit-task',\r\n  templateUrl: './edit-task.component.html'\r\n})\r\nexport class EditTaskComponent implements OnInit {\r\n  @ViewChild('modalContent', {static: false}) modalContent;\r\n  private modalRef: NgbModalRef;\r\n\r\n  @Output() onTaskModified = new EventEmitter<Task>();\r\n\r\n  dto: AssignWorkflowTaskDto;\r\n  currentTask: Task;\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private taskService: TasksService\r\n  ) {}\r\n\r\n  users = [\r\n    { id: '9f19f4ca-4dc4-4296-97a9-3f83b720e5fc', name: 'Cynthia Wagner' },\r\n    { id: 'd4252141-3c93-4105-a83e-4bb497186bb7', name: 'Jacob Gilbert' },\r\n    { id: '11d219e1-8004-4dec-877c-bbbf0e8efa16', name: 'Jose Herrera' },\r\n    { id: 'bc6c50dc-7289-46db-8cb3-cf89556177ca', name: 'Dorothy Graham' },\r\n    { id: '5d929ce8-0145-4541-8071-36d5666141a4', name: 'Diane Valdez' }\r\n  ];\r\n\r\n  open(currentTask: Task, e: any) {\r\n    e.preventDefault();\r\n\r\n    this.currentTask = currentTask;\r\n\r\n    this.dto = new AssignWorkflowTaskDto(\r\n      currentTask.id,\r\n      currentTask.assignedUserId,\r\n      currentTask.assignedTeamId,\r\n      currentTask.escalationDays,\r\n      currentTask.escalationuserId,\r\n      currentTask.escalationTeamId\r\n    );\r\n\r\n    this.dto.workflowTaskId = currentTask.id;\r\n    this.dto.assignedUserId = currentTask.assignedUserId;\r\n    this.modalRef = this.modalService.open(this.modalContent);\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n  onSubmit(form): void {\r\n    if (form.valid) {\r\n      this.taskService.updateTasks(this.dto).subscribe(result => {\r\n        // console.log(\"Task saved successfully\");\r\n\r\n        const modifiedTask = new Task(\r\n          result.Id,\r\n          result.WorkflowId,\r\n          this.taskService.getTypeName(result.TaskType),\r\n          result.Description,\r\n          this.taskService.getStatusName(result.Status),\r\n          result.LastExecutionTime,\r\n          result.IsActive,\r\n          result.AssignedUserId,\r\n          result.AssignedTeamId,\r\n          result.AssignedToName,\r\n          result.EscalationDays,\r\n          result.EscalationUserId,\r\n          result.EscalationTeamId,\r\n          result.EscalatedToName,\r\n          result.PreceedingTasks,\r\n          result.SubsequantTasks\r\n        );\r\n\r\n        this.onTaskModified.emit(modifiedTask);\r\n\r\n        this.modalRef.dismiss();\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { RowClassArgs } from '@progress/kendo-angular-grid';\r\nimport { TasksService } from '../../services/tasks.service';\r\nimport { ProjectProfileService } from '../../services/project-profile.service';\r\nimport { Task } from '../../../_models/task.model';\r\nimport { GroupWorkflowTaskDto } from '../../../_api/dtos/group-workflow-task.dto';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'task-management',\r\n  templateUrl: './task-management.component.html'\r\n})\r\nexport class TaskManagementComponent implements OnInit {\r\n  public tasksGridBusy = true;\r\n\r\n  @ViewChild('editModel', {static: false}) editModal;\r\n\r\n  public tasks: Array<Task> = new Array<Task>();\r\n\r\n  constructor(\r\n    private taskService: TasksService, private projectProfileService: ProjectProfileService,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  isDisabled(context: RowClassArgs) {\r\n    return !context.dataItem.isActive ? 'disabled-row' : 'enabled-row';\r\n  }\r\n\r\n  toggle(id: string, e: any) {\r\n    e.preventDefault();\r\n    const index = this.tasks.findIndex(c => c.id === id);\r\n\r\n    let isActive = false;\r\n\r\n    if (this.tasks[index].isActive) {\r\n      isActive = false;\r\n    } else {\r\n      isActive = true;\r\n    }\r\n\r\n    this.taskService.toggle(id, isActive).subscribe(success => {\r\n      this.tasks[index].isActive = isActive;\r\n    });\r\n  }\r\n\r\n  canBeDisabled(type: string): boolean {\r\n    // Cannot disable tasks named \"Create Profile\" or \"Final Approval\"\r\n    return !(type === 'Create Profile' || type === 'Final');\r\n\r\n    // Todo: Should this just be property on the Task returned from the API i.e. canBeDisabled???\r\n  }\r\n\r\n  handleTaskModified(task: Task) {\r\n    // Todo: Map back to UI Task model\r\n    const index = this.tasks.findIndex(c => c.id === task.id);\r\n\r\n    this.tasks[index] = task;\r\n\r\n    // console.log(event);\r\n  }\r\n\r\n  setTasks(tasks: Array<GroupWorkflowTaskDto>) {\r\n    if (tasks == null || tasks.length === 0) {\r\n      return;\r\n    }\r\n\r\n    tasks\r\n      .sort(function (task1, task2) {\r\n        if (task1.order < task2.order) {\r\n          return -1;\r\n        } else if (task1.order > task2.order) {\r\n          return 1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      })\r\n      .forEach(t => {\r\n        this.tasks.push(\r\n          new Task(\r\n            t.id,\r\n            t.workflowId,\r\n            this.taskService.getTypeName(t.taskType),\r\n            t.description,\r\n            this.taskService.getStatusName(t.status),\r\n            t.lastExecutionTime,\r\n            t.isActive,\r\n            t.assignedUserId,\r\n            t.assignedTeamId,\r\n            t.assignedToName,\r\n            t.escalationDays,\r\n            t.escalationUserId,\r\n            t.escalationTeamId,\r\n            t.escalatedToName,\r\n            t.preceedingTasks,\r\n            t.subsequentTasks\r\n          )\r\n        );\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.taskService.groupId = this.route.parent.snapshot.paramMap.get('groupId');\r\n    this.taskService.getTasksByGroupId(this.taskService.groupId)\r\n      .subscribe(\r\n      results => this.setTasks(results),\r\n      error => { },\r\n      () => this.tasksGridBusy = false);\r\n  }\r\n}\r\n","import { AlertService } from '../../_core/services/alert.service';\r\nimport { ProjectProfileService } from '../services/project-profile.service';\r\nimport { HelperService } from '../../_core/services/helper.service';\r\nimport { ComponentCanDeactivate } from '../../_core/guards/component-can-deactivate';\r\nimport { CanDeactivateService } from '../../_core/guards/can-deactivate.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { UserStore } from '../../_core/user/user.store';\r\nimport { SystemPermissionsEnum } from '../../_core/user/permissions';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { FormView } from '../../_models/form-view';\r\nimport { BaseField } from '../../_models/field-types/base-field.model';\r\nimport { ProjectModuleDto } from '../../_api/dtos/project-module.dto';\r\nimport { ProjectProfile } from '../../_models/project-profile.model';\r\nimport { ProjectProfileAPIService } from '../../_api/services/project-profile/project-profile-api.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ProjectProfileControlService } from '../../_api/services/project-profile/project-profile-control.service';\r\nimport { IntlService } from '@progress/kendo-angular-intl';\r\nimport { ModuleFieldDropdownDto, ModuleFieldDropdownItemDto } from '../../_api/dtos/project-profile/module-field-dropdown.dto';\r\nimport { DropDownField } from '../../_models/field-types/drop-down-field.model';\r\nimport { ModuleFieldTextDto } from '../../_api/dtos/project-profile/module-field-text.dto';\r\nimport { MultiLineTextField } from '../../_models/field-types/multi-line-text-field.model';\r\nimport { TextField } from '../../_models/field-types/text-field.model';\r\nimport { ModuleFieldDateDto } from '../../_api/dtos/project-profile/module-field-date.dto';\r\nimport { DateField } from '../../_models/field-types/date-field.model';\r\nimport { ModuleFieldDecimalNumberDto } from '../../_api/dtos/project-profile/module-field-decimal-number.dto';\r\nimport { DecimalField } from '../../_models/field-types/decimal-field.model';\r\nimport { ModuleFieldWholeNumberDto } from '../../_api/dtos/project-profile/module-field-whole-number.dto';\r\nimport { ModuleFieldBooleanDto } from '../../_api/dtos/project-profile/module-field-boolean.dto';\r\nimport { BooleanField } from '../../_models/field-types/boolean-field.model';\r\nimport { WholeNumberField } from '../../_models/field-types/whole-number-field.model';\r\nimport { ModuleFieldPeoplePickerDto } from '../../_api/dtos/project-profile/module-field-people-picker.dto';\r\nimport { PeoplePickerField } from '../../_models/field-types/people-picker-field.model';\r\nimport { ModuleFieldBaseDto } from '../../_api/dtos/project-profile/module-field-base.dto';\r\nimport { PeoplePickerSearchResultDto } from '../../_api/dtos/project-profile/people-picker-search-result.dto';\r\nimport { FamisViewModelDto } from '../../_api/dtos/project-profile/famis-view-model.dto';\r\n\r\n@Component({\r\n  selector: 'template-form',\r\n  templateUrl: './template-form.component.html'\r\n})\r\nexport class TemplateFormComponent extends ComponentCanDeactivate implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  @ViewChild('currentForm', {static: true})\r\n  currentForm: NgForm;\r\n  view: FormView = {\r\n    id: '',\r\n    groupId: '',\r\n    name: '',\r\n    evenFields: new Array<BaseField<any>>(),\r\n    oddFields: new Array<BaseField<any>>()\r\n  };\r\n  forms: FormView[] = new Array<FormView>();\r\n\r\n  public moduleName: string;\r\n  public moduleRouteName: string;\r\n  public canManageTemplates = false;\r\n  private moduleDto: FamisViewModelDto;\r\n  private moduleId: string;\r\n  private selectedModule: ProjectModuleDto;\r\n\r\n  private projectProfile: ProjectProfile;\r\n\r\n  constructor(\r\n    private apiService: ProjectProfileAPIService,\r\n    private projectProfileService: ProjectProfileService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private projectProfileControlService: ProjectProfileControlService,\r\n    private alertService: AlertService,\r\n    private helperService: HelperService,\r\n    private intl: IntlService,\r\n    private canDeactivateService: CanDeactivateService,\r\n    private userStore: UserStore\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userStore.user.subscribe(user => {\r\n      this.canManageTemplates = user.permissions.permissionsGranted.indexOf(SystemPermissionsEnum.canManageTemplates) > -1;\r\n    });\r\n    this.projectProfileService.projectProfile$.subscribe(projectProfile => {\r\n      this.projectProfile = projectProfile;\r\n\r\n      this.moduleName = projectProfile.selectedModule === 'MainProfile' ? 'Main Profile' : 'Sub-Profile';\r\n\r\n      this.renderProjectProfile(this.projectProfile.selectedModule);\r\n    });\r\n\r\n    this.route.params.subscribe(params => {\r\n      const moduleId = params['moduleId'];\r\n\r\n      const projectProfile = <ProjectProfile>{\r\n        selectedGroupId: this.projectProfile.selectedGroupId,\r\n        selectedModule: moduleId,\r\n        template: this.projectProfile.template\r\n      };\r\n\r\n      this.projectProfileService.updateProjectProfile(projectProfile);\r\n    });\r\n  }\r\n\r\n  renderProjectProfile(moduleId: string) {\r\n    if (this.projectProfile.selectedGroupId && this.projectProfile.selectedModule) {\r\n      this.apiService.get(moduleId, this.projectProfile.selectedGroupId).subscribe(data => {\r\n        if (data == null) {\r\n          return;\r\n        }\r\n\r\n        this.initForm(data, moduleId);\r\n      });\r\n    }\r\n  }\r\n\r\n  canDeactivate(): boolean {\r\n    return this.canDeactivateService.canDeactivateForm(this.currentForm);\r\n  }\r\n\r\n  public initForm(data: FamisViewModelDto, moduleId: string) {\r\n    const fields = new Array<BaseField<any>>();\r\n    data.fields.forEach(field => {\r\n      switch (field.type) {\r\n        case 'DropDown':\r\n          const dropdownFieldDto = field as ModuleFieldDropdownDto;\r\n          fields.push(\r\n            new DropDownField({\r\n              key: dropdownFieldDto.templateFieldId,\r\n              controlType: dropdownFieldDto.type,\r\n              templateFieldId: dropdownFieldDto.templateFieldId,\r\n              fieldName: dropdownFieldDto.fieldName,\r\n              moduleId: dropdownFieldDto.moduleId,\r\n              label: dropdownFieldDto.fieldLabel,\r\n              order: dropdownFieldDto.order + 1,\r\n              isCustomField: dropdownFieldDto.isCustomField,\r\n              dropDownOptions: this.getOptions(dropdownFieldDto.values),\r\n              value: dropdownFieldDto.value != null ? dropdownFieldDto.value.value : ''\r\n            })\r\n          );\r\n          if (!this.moduleId) {\r\n            this.moduleId = field.moduleId;\r\n          }\r\n          break;\r\n        case 'TextField':\r\n          const textFieldDto = field as ModuleFieldTextDto;\r\n          if (textFieldDto.isMultiline) {\r\n            fields.push(\r\n              new MultiLineTextField({\r\n                key: textFieldDto.templateFieldId,\r\n                templateFieldId: textFieldDto.templateFieldId,\r\n                fieldName: textFieldDto.fieldName,\r\n                moduleId: textFieldDto.moduleId,\r\n                label: textFieldDto.fieldLabel,\r\n                isCustomField: textFieldDto.isCustomField,\r\n                order: textFieldDto.order + 1,\r\n                value: textFieldDto.value\r\n              })\r\n            );\r\n          } else {\r\n            fields.push(\r\n              new TextField({\r\n                key: textFieldDto.templateFieldId,\r\n                controlType: textFieldDto.type,\r\n                templateFieldId: textFieldDto.templateFieldId,\r\n                fieldName: textFieldDto.fieldName,\r\n                moduleId: textFieldDto.moduleId,\r\n                isCustomField: textFieldDto.isCustomField,\r\n                label: textFieldDto.fieldLabel,\r\n                order: textFieldDto.order + 1,\r\n                value: textFieldDto.value\r\n              })\r\n            );\r\n          }\r\n          if (!this.moduleId) {\r\n            this.moduleId = field.moduleId;\r\n          }\r\n          break;\r\n        case 'Date':\r\n          const dateFieldDto = field as ModuleFieldDateDto;  \r\n          fields.push(\r\n            new DateField({\r\n              key: dateFieldDto.templateFieldId,\r\n              controlType: dateFieldDto.type,\r\n              templateFieldId: dateFieldDto.templateFieldId,\r\n              fieldName: dateFieldDto.fieldName,\r\n              moduleId: dateFieldDto.moduleId,\r\n              label: dateFieldDto.fieldLabel,\r\n              isCustomField: dateFieldDto.isCustomField,\r\n              order: dateFieldDto.order + 1,\r\n              value: Date.parse(dateFieldDto.value) > Date.parse('1/1/1') ?  new Date(this.intl.parseDate(dateFieldDto.value).setHours(0,0,0,0)): null\r\n            })\r\n          );        \r\n       if (!this.moduleId) {\r\n            this.moduleId = field.moduleId;\r\n          }\r\n          break;\r\n        case 'DecimalNumber':\r\n          const decimalFieldDto = field as ModuleFieldDecimalNumberDto;\r\n          fields.push(\r\n            new DecimalField({\r\n              controlType: decimalFieldDto.type,\r\n              templateFieldId: decimalFieldDto.templateFieldId,\r\n              fieldName: decimalFieldDto.fieldName,\r\n              moduleId: decimalFieldDto.moduleId,\r\n              label: decimalFieldDto.fieldLabel,\r\n              isCustomField: decimalFieldDto.isCustomField,\r\n              order: decimalFieldDto.order + 1,\r\n              value: decimalFieldDto.value,\r\n              key: decimalFieldDto.templateFieldId\r\n            })\r\n          );\r\n          if (!this.moduleId) {\r\n            this.moduleId = field.moduleId;\r\n          }\r\n          break;\r\n        case 'WholeNumber':\r\n          const wholeNumberFieldDto = field as ModuleFieldWholeNumberDto;\r\n          fields.push(\r\n            new WholeNumberField({\r\n              controlType: wholeNumberFieldDto.type,\r\n              templateFieldId: wholeNumberFieldDto.templateFieldId,\r\n              fieldName: wholeNumberFieldDto.fieldName,\r\n              moduleId: wholeNumberFieldDto.moduleId,\r\n              label: wholeNumberFieldDto.fieldLabel,\r\n              isCustomField: wholeNumberFieldDto.isCustomField,\r\n              order: wholeNumberFieldDto.order + 1,\r\n              value: wholeNumberFieldDto.value,\r\n              key: wholeNumberFieldDto.templateFieldId,\r\n            })\r\n          );\r\n          if (!this.moduleId) {\r\n            this.moduleId = field.moduleId;\r\n          }\r\n          break;\r\n        case 'Boolean':\r\n          const booleanFieldDto = field as ModuleFieldBooleanDto;\r\n          fields.push(\r\n            new BooleanField({\r\n              controlType: booleanFieldDto.type,\r\n              templateFieldId: booleanFieldDto.templateFieldId,\r\n              fieldName: booleanFieldDto.fieldName,\r\n              moduleId: booleanFieldDto.moduleId,\r\n              label: booleanFieldDto.fieldLabel,\r\n              isCustomField: booleanFieldDto.isCustomField,\r\n              order: booleanFieldDto.order + 1,\r\n              value: booleanFieldDto.value,\r\n              key: booleanFieldDto.templateFieldId\r\n            })\r\n          );\r\n          if (!this.moduleId) {\r\n            this.moduleId = field.moduleId;\r\n          }\r\n          break;\r\n        case 'PeoplePicker':\r\n          const peoplePickerFieldDto = field as ModuleFieldPeoplePickerDto;\r\n          fields.push(\r\n            new PeoplePickerField({\r\n              controlType: peoplePickerFieldDto.type,\r\n              templateFieldId: peoplePickerFieldDto.templateFieldId,\r\n              fieldName: peoplePickerFieldDto.fieldName,\r\n              moduleId: peoplePickerFieldDto.moduleId,\r\n              label: peoplePickerFieldDto.fieldLabel,\r\n              order: peoplePickerFieldDto.order + 1,\r\n              value: peoplePickerFieldDto.key,\r\n              displayValue: peoplePickerFieldDto.value,\r\n              key: peoplePickerFieldDto.templateFieldId\r\n            })\r\n          );\r\n          if (!this.moduleId) {\r\n            this.moduleId = field.moduleId;\r\n          }\r\n          break;\r\n        default:\r\n          const defaultField = field as ModuleFieldTextDto;\r\n          fields.push(\r\n            new TextField({\r\n              key: defaultField.templateFieldId,\r\n              controlType: defaultField.type,\r\n              templateFieldId: defaultField.templateFieldId,\r\n              fieldName: defaultField.fieldName,\r\n              isCustomField: defaultField.isCustomField,\r\n              moduleId: defaultField.moduleId,\r\n              label: defaultField.fieldLabel,\r\n              order: defaultField.order + 1,\r\n              value: defaultField.value\r\n            })\r\n          );\r\n          if (!this.moduleId) {\r\n            this.moduleId = field.moduleId;\r\n          }\r\n      }\r\n    });\r\n\r\n    this.view = {\r\n      id: moduleId,\r\n      groupId: data.groupId,\r\n      name: data.viewName,\r\n      evenFields: fields.filter(i => i.order % 2 === 0).sort(function(a, b) {\r\n        return a.order - b.order;\r\n      }),\r\n      oddFields: fields.filter(i => i.order % 2 > 0).sort(function(a, b) {\r\n        return a.order - b.order;\r\n      })\r\n    };\r\n\r\n    this.moduleDto = <FamisViewModelDto>{};\r\n    this.moduleDto.groupId = data.groupId;\r\n    this.moduleDto.viewName = data.viewName;\r\n    if (this.view.evenFields.length > 0 && !this.forms.find(c => c.id === this.view.id)) {\r\n      this.forms.push(<FormView>{\r\n        id: this.view.id,\r\n        form: this.projectProfileControlService.toFormGroup(this.view.evenFields.concat(this.view.oddFields)),\r\n        evenfields: this.view.evenFields,\r\n        oddFields: this.view.oddFields\r\n      });\r\n    }\r\n  }\r\n\r\n  groupManagement() {\r\n    this.router.navigate([`/project-profile/${this.projectProfile.selectedGroupId}/Groups/Management`]);\r\n  }\r\n\r\n  editForms() {\r\n    this.router.navigate([`/project-profile/${this.projectProfile.selectedGroupId}/Groups/EditForms`]);\r\n  }\r\n\r\n  getOptions(values: any): Array<any> {\r\n    const dropDownOptions: { key: string; value: string }[] = [];\r\n\r\n    values.forEach(option => {\r\n      dropDownOptions.push({ key: option.value, value: option.text });\r\n    });\r\n\r\n    return dropDownOptions;\r\n  }\r\n\r\n  onSubmit(event: any) {\r\n    const currentFormView = this.forms.find(c => c.id === this.view.id);\r\n\r\n    if (currentFormView && currentFormView.form && currentFormView.form.controls) {\r\n      const fieldsToUpdate = [];\r\n      const fieldsAsDto = new Array<ModuleFieldBaseDto>();\r\n      \r\n      Object.keys(currentFormView.form.controls).forEach(key => {\r\n        let field = this.view.evenFields.find(i => i.key === key);\r\n        if (!field) {\r\n          field = this.view.oddFields.find(i => i.key === key);\r\n        }\r\n        switch (field.controlType) {\r\n          case 'boolean':\r\n            fieldsAsDto.push(this.mapBooleanField(field as BooleanField, key, currentFormView.form.controls[key].value));\r\n            break;\r\n          case 'date':\r\n            fieldsAsDto.push(this.mapDateField(field as DateField, key, currentFormView.form.controls[key].value));\r\n            break;\r\n          case 'decimalnumber':\r\n            fieldsAsDto.push(this.mapDecimalNumberField(field as DecimalField, key, currentFormView.form.controls[key].value));\r\n            break;\r\n          case 'dropdown':\r\n            fieldsAsDto.push(this.mapDropDownField(field as DropDownField, key, currentFormView.form.controls[key].value));\r\n            break;\r\n          case 'text':\r\n            fieldsAsDto.push(this.mapTextField(field as TextField, key, currentFormView.form.controls[key].value));\r\n            break;\r\n          case 'wholenumber':\r\n            fieldsAsDto.push(this.mapWholeNumberField(field as WholeNumberField, key, currentFormView.form.controls[key].value));\r\n            break;\r\n          case 'peoplePicker':\r\n            fieldsAsDto.push(this.mapPeoplePickerField(field as PeoplePickerField, key, currentFormView.form.controls[key].value));\r\n            break;\r\n          default:\r\n            fieldsAsDto.push(this.mapTextField(field as TextField, key, currentFormView.form.controls[key].value));\r\n            break;\r\n        }\r\n      });\r\n\r\n      // console.log(fieldsToUpdate);\r\n      // console.log(fieldsAsDto);\r\n       \r\n      this.moduleDto.fields = fieldsAsDto;\r\n\r\n      this.apiService.update(this.projectProfile.selectedModule, this.view.groupId, this.moduleDto).subscribe(res => {\r\n        this.moduleDto = res;\r\n        this.alertService.success('Changes Saved.');\r\n        this.initForm(res, this.projectProfile.selectedModule);\r\n      });\r\n    }\r\n  }\r\n\r\n  /* translate(key: string, label: string, i18n = this.i18n, locali18n?: string) {\r\n    return this.translationHelper.translate(key, i18n, label, locali18n);\r\n  }*/\r\n\r\n  private mapBooleanField(bf: BooleanField, key: string, value: boolean): ModuleFieldBooleanDto {\r\n    const res = <ModuleFieldBooleanDto>{\r\n      fieldLabel: bf.label,\r\n      fieldName: bf.fieldName,\r\n      templateFieldId: key,\r\n      moduleId: this.moduleId,\r\n      value: value,\r\n      type: 'Boolean'\r\n    };\r\n    return res;\r\n  }\r\n\r\n  private mapDateField(df: DateField, key: string, value: string): ModuleFieldDateDto {\r\n    const res = <ModuleFieldDateDto>{\r\n      fieldLabel: df.label,\r\n      fieldName: df.fieldName,\r\n      templateFieldId: key,\r\n      moduleId: this.moduleId,\r\n      value:  Date.parse(value) > Date.parse('1/1/1') ?  new Date(this.intl.parseDate(value).setHours(0,0,0,0)).toDateString(): null,\r\n      type: 'Date'\r\n    };\r\n    return res;\r\n  }\r\n\r\n  private mapDecimalNumberField(df: DecimalField, key: string, value: number): ModuleFieldDecimalNumberDto {\r\n    const res = <ModuleFieldDecimalNumberDto>{\r\n      fieldLabel: df.label,\r\n      fieldName: df.fieldName,\r\n      templateFieldId: key,\r\n      moduleId: this.moduleId,\r\n      value: value,\r\n      type: 'DecimalNumber'\r\n    };\r\n    return res;\r\n  }\r\n\r\n  private mapDropDownField(dd: DropDownField, key: string, value: string): ModuleFieldDropdownDto {\r\n    const ddValue = dd.dropDownOptions.find(x => x.key === value);\r\n    const ddValues = new Array<ModuleFieldDropdownItemDto>();\r\n    dd.dropDownOptions.forEach(val => {\r\n      ddValues.push(<ModuleFieldDropdownItemDto>{\r\n        value: val.key,\r\n        text: val.value\r\n      });\r\n    });\r\n\r\n    const res = <ModuleFieldDropdownDto>{\r\n      fieldName: dd.fieldName,\r\n      values: ddValues,\r\n      templateFieldId: dd.key,\r\n      moduleId: this.moduleId,\r\n      value: ddValue\r\n        ? <ModuleFieldDropdownItemDto>{\r\n            value: ddValue.key,\r\n            text: ddValue.value\r\n          }\r\n        : null,\r\n      type: 'DropDown'\r\n    };\r\n    return res;\r\n  }\r\n\r\n  private mapTextField(tf: TextField, key: string, value: string): ModuleFieldTextDto {\r\n    const res = <ModuleFieldTextDto>{\r\n      fieldLabel: tf.label,\r\n      fieldName: tf.fieldName,\r\n      templateFieldId: tf.key,\r\n      moduleId: this.moduleId,\r\n      value: value,\r\n      type: 'TextField'\r\n    };\r\n    return res;\r\n  }\r\n\r\n  private mapWholeNumberField(wf: WholeNumberField, key: string, value: number): ModuleFieldWholeNumberDto {\r\n    const res = <ModuleFieldWholeNumberDto>{\r\n      fieldLabel: wf.label,\r\n      fieldName: wf.fieldName,\r\n      templateFieldId: key,\r\n      moduleId: this.moduleId,\r\n      value: value,\r\n      type: 'WholeNumber'\r\n    };\r\n    return res;\r\n  }\r\n\r\n  private mapPeoplePickerField(ppf: PeoplePickerField, key: string, value: PeoplePickerSearchResultDto):\r\n  ModuleFieldPeoplePickerDto {\r\n    const res = <ModuleFieldPeoplePickerDto> {\r\n      fieldLabel: ppf.label,\r\n      fieldName: ppf.fieldName,\r\n      templateFieldId: ppf.key,\r\n      moduleId: this.moduleId,\r\n      value: null,\r\n      key: null,\r\n      type: 'PeoplePicker'\r\n    };\r\n    if (value) {\r\n      res.value = value.id;\r\n      res.key = value.id;\r\n    }\r\n    return res;\r\n  }\r\n}\r\n","// Components\r\nimport { ProjectProfileComponent } from './components/project-profile.component';\r\nimport { ProjectProfileDynamicFieldComponent } from './components/dynamic-field.component';\r\nimport { TemplateFormComponent } from './components/template-form.component';\r\nimport { CostFieldsService } from '../_api/services/reconciliation/cost-fields.service';\r\nimport { MatchCodesService } from '../_api/services/reconciliation/match-codes.service';\r\nimport { SharedModule } from '../_shared/shared.module';\r\nimport { MatchCodesComponent } from '../reconciliation/components/match-codes.component';\r\nimport { CreateMatchCodeComponent } from '../reconciliation/components/create-match-code.component';\r\nimport { SetupComponent } from '../reconciliation/components/setup.component';\r\nimport { CopyInventoryComponent } from '../reconciliation/components/copy-inventory.component';\r\nimport { TaskManagementComponent } from './components/tasks/task-management.component';\r\nimport { TasksService } from './services/tasks.service';\r\nimport { EditTaskComponent } from './components/tasks/edit-task.component';\r\nimport { AdministrationComponent } from './components/administration/administration.component';\r\nimport { AdministrationFormComponent } from './components/administration/administration-form.component';\r\n\r\nimport { DatePickerModule } from '@progress/kendo-angular-dateinputs';\r\nimport { AlertService } from '../_core/services/alert.service';\r\nimport { ProjectProfileService } from './services/project-profile.service';\r\nimport { AdministrationService } from './services/administration.service';\r\nimport { CoreModule } from '../_core/core.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { LaddaModule } from 'angular2-ladda';\r\nimport { OrderModule } from 'ngx-order-pipe';\r\nimport { GridModule } from '@progress/kendo-angular-grid';\r\nimport { RouterModule } from '@angular/router';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { IsMatchedPipe } from '../_shared/pipes/is-matched.pipe';\r\nimport { ProjectProfileAPIService } from '../_api/services/project-profile/project-profile-api.service';\r\nimport { ProjectProfileControlService } from '../_api/services/project-profile/project-profile-control.service';\r\nimport { ApiService } from '../_api/services/api.service';\r\nimport { ReconciliationMatchService } from '../_api/services/reconciliation/reconcilation-match.service';\r\nimport { GroupApiService } from '../_api/_runtime/services/group-api.service';\r\nimport { ContractApiService } from '../_api/_runtime/services/contract-api.service';\r\nimport { ModulesApiService } from '../_api/_configuration/services/modules-api.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CoreModule,\r\n    NgbModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    LaddaModule,\r\n    SharedModule,\r\n    OrderModule,\r\n    GridModule,\r\n    RouterModule,\r\n    DatePickerModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  declarations: [\r\n    ProjectProfileComponent,\r\n    ProjectProfileDynamicFieldComponent,\r\n    TaskManagementComponent,\r\n    EditTaskComponent,\r\n    IsMatchedPipe,\r\n    TemplateFormComponent,\r\n    AdministrationComponent,\r\n    AdministrationFormComponent\r\n  ],\r\n\r\n  providers: [\r\n    ProjectProfileAPIService,\r\n    ProjectProfileControlService,\r\n    ApiService,\r\n    ReconciliationMatchService,\r\n    TasksService,\r\n    AlertService,\r\n    ProjectProfileService,\r\n    GroupApiService,\r\n    ContractApiService,\r\n    ModulesApiService,\r\n    AdministrationService\r\n  ]\r\n})\r\nexport class ProjectProfileModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AdministrationService {\r\n\r\n  private groupIdSource = new BehaviorSubject<any>(<any>{});\r\n  public groupIdContext$ = this.groupIdSource.asObservable();\r\n\r\n  public groupId: string;\r\n\r\n  constructor() {}\r\n\r\n  public updateGroupIdContext(groupId: string) {\r\n    const current = this.groupIdSource.getValue();\r\n\r\n    current.groupId = groupId;\r\n    this.groupIdSource.next(current);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Subject, Observable } from 'rxjs';\r\nimport { ProjectProfile } from '../../_models/project-profile.model';\r\nimport { FormView } from '../../_models/form-view';\r\nimport { ContractApiService } from '../../_api/_runtime/services/contract-api.service';\r\nimport { TemplatesApiService } from '../../_api/_configuration/services/templates-api.service';\r\nimport { ModulesApiService } from '../../_api/_configuration/services/modules-api.service';\r\nimport { ContractGroupDto } from '../../_api/dtos/contract-group.dto';\r\nimport { ContractGroupSummaryDto } from '../../_api/_runtime/dtos/contract-group-summary.dto';\r\nimport { TemplateBaseDto } from '../../_api/_configuration/dtos/template-base.dto';\r\nimport { ModuleDto } from '../../_api/_configuration/dtos/module.dto';\r\n\r\n@Injectable()\r\nexport class ProjectProfileService {\r\n  private projectProfileSource = new BehaviorSubject<ProjectProfile>(<ProjectProfile>{ selectedGroupId: null });\r\n  public projectProfile$ = this.projectProfileSource.asObservable();\r\n\r\n  // public modules: ModuleDto[];\r\n\r\n  public selectedModuleId: string;\r\n\r\n  // Observable string sources\r\n  private selectedModuleSource = new Subject<FormView>();\r\n\r\n  // Observable string streams\r\n  selectedModule$ = this.selectedModuleSource.asObservable();\r\n\r\n  constructor(\r\n    private contractApiService: ContractApiService,\r\n    private templateApiService: TemplatesApiService,\r\n    private moduleApiService: ModulesApiService\r\n  ) {}\r\n\r\n  setSelectedModule(module: FormView) {\r\n    this.selectedModuleSource.next(module);\r\n  }\r\n\r\n  public getContractGroup(id: string): Observable<ContractGroupDto> {\r\n    return this.contractApiService.getContractGroup(id);\r\n  }\r\n\r\n  public getContractGroups(id: string): Observable<ContractGroupSummaryDto[]> {\r\n    return this.contractApiService.getContractsGroups(id);\r\n  }\r\n\r\n  public updateProjectProfile(updated: ProjectProfile): void {\r\n    this.projectProfileSource.next(updated);\r\n  }\r\n\r\n  public clearProjectProfile(): void {\r\n    this.projectProfileSource.next(<ProjectProfile>{ selectedGroupId: null });\r\n  }\r\n\r\n  public getTemplateForGroup(groupId: string): Observable<TemplateBaseDto> {\r\n    return this.templateApiService.GetTemplateForGroup(groupId);\r\n  }\r\n\r\n  public mapSelectedModules(template: TemplateBaseDto, modules: Array<ModuleDto>): Array<ModuleDto> {\r\n    const s = this;\r\n\r\n    const projectProfile = this.projectProfileSource.getValue();\r\n\r\n    let enabledModules = new Array<ModuleDto>();\r\n\r\n    if (projectProfile.modules) {\r\n      const mappedSelectedModules = new Array<ModuleDto>();\r\n\r\n      if (template.templateFields.length > 0) {\r\n        const enabledModuleIds = template.templateFields.map(c => c.moduleId).filter(function(elem, i, array) {\r\n          return array.indexOf(elem) === i;\r\n        });\r\n\r\n        const templateEnabledModules = <ModuleDto[]>projectProfile.modules.filter(function(x) {\r\n          return enabledModuleIds.find(c => c === x.id);\r\n        });\r\n\r\n        const defaultModules = [\r\n          <ModuleDto>{ name: 'Main Profile' },\r\n          <ModuleDto>{ name: 'Administration' },\r\n          <ModuleDto>{ name: 'Data Import' },\r\n          <ModuleDto>{ name: 'Quality Control'},\r\n          <ModuleDto>{ name: 'Header Management' },\r\n        ];\r\n\r\n        enabledModules = templateEnabledModules.concat(defaultModules);\r\n\r\n        enabledModules.forEach(module => {\r\n          const index = enabledModules.indexOf(module);\r\n\r\n          if (index !== -1) {\r\n            enabledModules[index] = s.mapModuleToComponent(enabledModules[index]);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    return enabledModules;\r\n  }\r\n\r\n  public getModules(): Observable<ModuleDto[]> {\r\n    return this.moduleApiService.getAll();\r\n  }\r\n\r\n  private mapModuleToComponent(module: ModuleDto): ModuleDto {\r\n    switch (module.name) {\r\n      case 'Main Profile':\r\n        module.componentName = 'MainProfile';\r\n        module.menuOrder = 0;\r\n        return module;\r\n\r\n      case 'Sub-Profile':\r\n        module.componentName = 'SubProfile';\r\n        module.menuOrder = 1;\r\n        return module;\r\n\r\n      case 'Data Import':\r\n        module.componentName = 'DataImport';\r\n        module.menuOrder = 2;\r\n        return module;\r\n\r\n      case 'Reconciliation':\r\n        module.componentName = 'Reconciliation';\r\n        module.menuOrder = 3;\r\n        return module;\r\n\r\n      case 'Trending':\r\n        module.componentName = 'Trending';\r\n        module.menuOrder = 4;\r\n        return module;\r\n\r\n      case 'Depreciation':\r\n        module.componentName = 'Depreciation';\r\n        module.menuOrder = 5;\r\n        return module;\r\n\r\n      case 'Task Management':\r\n        module.componentName = 'TaskManagement';\r\n        module.menuOrder = 6;\r\n        return module;\r\n\r\n      case 'Quality Control':\r\n        module.componentName = 'QualityControl';\r\n        module.menuOrder = 7;\r\n        return module;\r\n\r\n      case 'Administration':\r\n        module.componentName = 'Administration';\r\n        module.menuOrder = 8;\r\n        return module;\r\n\r\n      case 'Header Management':\r\n        module.componentName = 'HeaderManagement';\r\n        module.menuOrder = 9;\r\n        return module;\r\n      case 'Recipients':\r\n        module.componentName = 'Recipients',\r\n        module.menuOrder = 10;\r\n        return module;\r\n      default:\r\n      module.componentName = null;\r\n      module.menuOrder = 0;\r\n      return module;\r\n    }\r\n  }\r\n\r\n  public logGroupandCheckOtherUser(id: string): Observable<boolean> {\r\n    return this.contractApiService.logGroupandCheckOtherUser(id);\r\n  }\r\n}\r\n","import { map } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { ApiService } from '../../_api/services/api.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { GroupWorkflowTaskDto } from '../../_api/dtos/group-workflow-task.dto';\r\nimport { AssignWorkflowTaskDto } from '../../_api/dtos/assignWorkflowTask.dto';\r\n\r\n@Injectable()\r\nexport class TasksService {\r\n  runtimeEndpoint: string;\r\n\r\n  groupId: string;\r\n\r\n  constructor(private configService: ConfigService, private apiService: ApiService, private http: HttpClient) {\r\n    this.runtimeEndpoint = this.configService.getSettings('runtimeApiEndpoint');\r\n  }\r\n\r\n  getTasks(id: string): Observable<any> {\r\n    const url = `${this.runtimeEndpoint}/Workflows/${id}`;\r\n    return this.apiService.get(url).pipe(map(data => data.tasks));\r\n  }\r\n\r\n  getTasksByGroupId(groupId: string): Observable<GroupWorkflowTaskDto[]> {\r\n    const url = `${this.runtimeEndpoint}/Workflows/Group/${groupId}`;\r\n    return this.apiService.get(url).pipe(map(data => (data != null) ? data.tasks : []));\r\n  }\r\n\r\n  updateTasks(dto: AssignWorkflowTaskDto): Observable<any> {\r\n    const url = `${this.runtimeEndpoint}/Workflows/Task/Assign`;\r\n    return this.apiService.put(url, dto);\r\n  }\r\n\r\n  toggle(taskId, isActive): Observable<any> {\r\n    const url = `${this.runtimeEndpoint}/Workflows/Task/${taskId}/Toggle?isActive=${isActive}`;\r\n    return this.apiService.put(url);\r\n  }\r\n\r\n  getTypeName(typeId: number): string {\r\n    let name = '';\r\n\r\n    switch (typeId) {\r\n      case 1:\r\n        name = 'Setup';\r\n        break;\r\n      case 2:\r\n        name = 'To do';\r\n        break;\r\n      case 3:\r\n        name = 'Approval';\r\n        break;\r\n      case 4:\r\n        name = 'Final Approval';\r\n        break;\r\n      default:\r\n        name = '';\r\n    }\r\n\r\n    return name;\r\n  }\r\n\r\n  getStatusName(typeId: number): string {\r\n    let name = '';\r\n\r\n    switch (typeId) {\r\n      case 1:\r\n        name = 'Create';\r\n        break;\r\n      case 2:\r\n        name = 'Active';\r\n        break;\r\n      case 3:\r\n        name = 'Escalate';\r\n        break;\r\n      case 4:\r\n        name = 'Complete';\r\n        break;\r\n      case 5:\r\n        name = 'Approved';\r\n        break;\r\n      default:\r\n        name = '';\r\n    }\r\n\r\n    return name;\r\n  }\r\n}\r\n","import { FormGroupDirective, NgForm } from '@angular/forms';\r\n\r\nimport { QualityControlActionsService } from '../../services/actions/quality-control-actions.service';\r\nimport { QualityControlService } from '../../services/quality-control.service';\r\nimport { AlertService } from '../../../_core/services/alert.service';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { WindowManager } from '../../../_core/services/window-manager.service';\r\nimport { Component, OnInit, ViewChild, Input, ViewContainerRef } from '@angular/core';\r\nimport { Asset } from '../../../_models/asset.model';\r\nimport { DisposalCode } from '../../../_api/_runtime/enums/disposal-code';\r\nimport { TransactionApplicability } from '../../../_api/_runtime/enums/transaction-applicability';\r\nimport { TransactionRequestDto } from '../../../_api/_runtime/dtos/transaction-request.dto';\r\nimport { ModalFormEvent } from '../../../_enums/modal-form-event';\r\nimport { TransactionType } from '../../../_api/_runtime/enums/transaction-type';\r\n\r\n@Component({\r\n  selector: 'asset-retirement',\r\n  templateUrl: './asset-retirement.component.html'\r\n})\r\nexport class AssetRetirementComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  @ViewChild('assetRetirementForm', {static: true}) form: FormGroupDirective;\r\n  @Input() modalTitle: string;\r\n  @Input() assetsCollection: Array<Asset>;\r\n\r\n  public disposalCodes = DisposalCode;\r\n  public applicability = TransactionApplicability;\r\n\r\n  assetRetirement = <TransactionRequestDto>{};\r\n  submitted = false;\r\n  disablePartial = false;\r\n  formHasErrors = false;\r\n  formErrorText = '';\r\n\r\n  public status: ModalFormEvent;\r\n\r\n  constructor(\r\n    public actionsService: QualityControlActionsService,\r\n    public qualityControlService: QualityControlService,\r\n    public alertService: AlertService,\r\n    private windowManager: WindowManager,\r\n    public container: ViewContainerRef\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.assetRetirement.assets = this.assetsCollection.map(c => c['id']);\r\n    this.assetRetirement.transactionType = TransactionType.Retirement;\r\n\r\n    if (this.assetsCollection.length > 1) {\r\n      this.disablePartial = true;\r\n      this.assetRetirement.transactionApplicability = TransactionApplicability.Full;\r\n    }\r\n  }\r\n\r\n  handleModalEvent(modalEvent: ModalFormEvent) {\r\n    if (modalEvent === ModalFormEvent.Save) {\r\n      this.form.ngSubmit.emit();\r\n    }\r\n\r\n    if (modalEvent === ModalFormEvent.Dismiss) {\r\n      this.dismiss();\r\n    }\r\n  }\r\n\r\n  retireAssets(form: NgForm) {\r\n    this.submitted = true;\r\n\r\n    if (!this.errorCheck() && form.valid && this.assetRetirement.asOf && this.assetRetirement.disposalCode) {\r\n      // For partial retirement, check if cost equals historial cost, if so set to full retirement\r\n      if (\r\n        this.assetRetirement.transactionApplicability === TransactionApplicability.Partial &&\r\n        this.assetRetirement.costChange &&\r\n        this.assetRetirement.costChange === this.assetsCollection[0].historicalCost\r\n      ) {\r\n        this.assetRetirement.transactionApplicability = TransactionApplicability.Full;\r\n      }\r\n\r\n      // For partial retirement, check if quantity equals original quantity, if so set to full retirement\r\n      if (\r\n        this.assetRetirement.transactionApplicability === TransactionApplicability.Partial &&\r\n        this.assetRetirement.quantityChange &&\r\n        // tslint:disable-next-line:no-bitwise\r\n        this.assetRetirement.quantityChange === ~~this.assetsCollection[0]['quantity']\r\n      ) {\r\n        this.assetRetirement.transactionApplicability = TransactionApplicability.Full;\r\n      }\r\n      this.actionsService.processTransaction(this.assetRetirement).subscribe(\r\n        result => {\r\n          this.status = ModalFormEvent.Success;\r\n\r\n          this.windowManager.close();\r\n\r\n          this.alertService.success('Asset(s) retired successfully');\r\n        },\r\n        error => {\r\n          this.status = ModalFormEvent.Failed;\r\n\r\n          this.windowManager.close();\r\n\r\n          if (error.status === 400) {\r\n            this.alertService.error('Asset(s) have already been retired or lacks a building ID.');\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  dismiss() {\r\n    this.windowManager.close();\r\n  }\r\n\r\n  equalityCheck(newValue: number, oldValue: number): boolean {\r\n    let retValue = false;\r\n    if (oldValue !== null) {\r\n      retValue = this.assetsCollection.length === 1 && !!newValue && newValue === parseFloat(oldValue.toString());\r\n    }\r\n    return retValue;\r\n  }\r\n\r\n  errorCheck() {\r\n    this.formHasErrors = false;\r\n\r\n    if (this.assetRetirement.transactionApplicability === TransactionApplicability.Partial) {\r\n      const asset = this.assetsCollection[0];\r\n\r\n      // If cost entered\r\n      if (!isNaN(this.assetRetirement.costChange)) {\r\n        // If cost > historial cost\r\n        if (this.assetRetirement.costChange > asset.historicalCost) {\r\n          this.formHasErrors = true;\r\n          this.formErrorText = 'Retirement cost is greater than historial cost (' + asset.historicalCost + '), please review cost entry.';\r\n        } else if (this.assetRetirement.costChange <= 0) {\r\n          this.formHasErrors = true;\r\n          this.formErrorText = 'Retirement cost should be greater than 0.';\r\n        }\r\n      }\r\n\r\n      // If quantity entered\r\n      if (!isNaN(this.assetRetirement.quantityChange)) {\r\n        // If cost > historial cost\r\n        if (this.assetRetirement.quantityChange > asset['quantity']) {\r\n          this.formHasErrors = true;\r\n          this.formErrorText =\r\n            'Retirement quantity is greater than original quantity (' + asset['quantity'] + '), please review quantity entry.';\r\n        } else if (this.assetRetirement.quantityChange <= 0) {\r\n          this.formHasErrors = true;\r\n          this.formErrorText = 'Retirement quantity should be greater than 0.';\r\n        }\r\n      }\r\n    }\r\n\r\n    return this.formHasErrors;\r\n  }\r\n\r\n  checkForTypeUndefined(variable: any) {\r\n    if (typeof variable === 'undefined') {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","import { FormGroupDirective, NgForm, FormGroup } from '@angular/forms';\r\nimport { QualityControlActionsService } from '../../services/actions/quality-control-actions.service';\r\nimport { QualityControlService } from '../../services/quality-control.service';\r\nimport { BuildingInfoService } from '../../../_core/services/building-info-service';\r\nimport { AlertService } from '../../../_core/services/alert.service';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { WindowManager } from '../../../_core/services/window-manager.service';\r\nimport { Component, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { Asset } from '../../../_models/asset.model';\r\nimport { CascadedSelectOption } from '../../../_models/cascaded-select-option.model';\r\nimport { CascadedSelectValue } from '../../../_models/cascaded-select-value.model';\r\nimport { TransactionRequestDto, TransferFieldDto } from '../../../_api/_runtime/dtos/transaction-request.dto';\r\nimport { DepartmentDto } from '../../../_api/_runtime/dtos/department.dto';\r\nimport { AccountDto } from '../../../_api/_runtime/dtos/account.dto';\r\nimport { ModalFormEvent } from '../../../_enums/modal-form-event';\r\nimport { TransactionApplicability } from '../../../_api/_runtime/enums/transaction-applicability';\r\nimport { TransactionType } from '../../../_api/_runtime/enums/transaction-type';\r\n\r\n@Component({\r\n  selector: 'asset-transfer',\r\n  templateUrl: './asset-transfer.component.html'\r\n})\r\nexport class AssetTransferComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  @ViewChild('assetTransferForm', {static: true}) formGroup: FormGroupDirective;\r\n  @Input() modalTitle: string;\r\n  @Input() assetsCollection: Array<Asset>;\r\n\r\n  public groupHierarchy: Array<CascadedSelectOption>;\r\n  public groupHierarchySelectValues: Array<CascadedSelectValue>;\r\n  assetTransfer = <TransactionRequestDto>{};\r\n  submitted = false;\r\n  disablePartial = false;\r\n  hidePartialFields = true;\r\n\r\n  public departmentOptions: Array<DepartmentDto>;\r\n  public accountOptions: Array<AccountDto>;\r\n  public errorMessage = '';\r\n  public memberSiteBuilding = '';\r\n  public status: ModalFormEvent;\r\n\r\n  // Form Fields\r\n  public selectedAccountId: string;\r\n  public selectedDepartmentId: string;\r\n  public applicability = TransactionApplicability;\r\n  public floorValue: string;\r\n  public roomValue: string;\r\n  public siteId: string;\r\n  public buildingId: string;\r\n  public costChange: number;\r\n  public quantityChange: number;\r\n  private partialAsset: Asset;\r\n  public isFiscalYearEndValid: boolean;\r\n\r\n  constructor(\r\n    public actionsService: QualityControlActionsService,\r\n    public qualityControlService: QualityControlService,\r\n    public buildingInfoService: BuildingInfoService,\r\n    public alertService: AlertService,\r\n    private windowManager: WindowManager\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.assetTransfer.transactionType = TransactionType.Transfer;\r\n    this.assetTransfer.assets = this.assetsCollection.map(c => c['id']);\r\n\r\n    if (this.assetsCollection.length > 1) {\r\n      this.disablePartial = true;\r\n      this.assetTransfer.transactionApplicability = this.applicability.Full;\r\n    }\r\n    this.partialAsset = this.assetsCollection[0];\r\n\r\n    this.groupHierarchySelectValues = [\r\n      <CascadedSelectValue>{ displayName: 'Member', name: 'member' },\r\n      <CascadedSelectValue>{ displayName: 'Site', name: 'siteId' },\r\n      <CascadedSelectValue>{ displayName: 'Building', name: 'buildingId' }\r\n    ];\r\n    this.buildingInfoService.getBuildingHierarchyByGroupId(this.qualityControlService.groupId).subscribe(hierachy => {\r\n      this.groupHierarchy = this.buildingInfoService.mapSitesToSelectOptions(hierachy);\r\n    });\r\n    this.qualityControlService.getDepartmentData(this.qualityControlService.groupId).subscribe(result => {\r\n      this.departmentOptions = result;\r\n    });\r\n    this.qualityControlService.getAccountData(this.qualityControlService.groupId).subscribe(result => {\r\n      this.accountOptions = result;\r\n    });\r\n    this.qualityControlService.hasFiscalYearEnd().subscribe(res => {\r\n      this.isFiscalYearEndValid = res;\r\n    });\r\n  }\r\n\r\n  handleModalEvent(modalEvent: ModalFormEvent) {\r\n    if (modalEvent === ModalFormEvent.Save) {\r\n      this.formGroup.ngSubmit.emit();\r\n    }\r\n\r\n    if (modalEvent === ModalFormEvent.Dismiss) {\r\n      this.dismiss();\r\n    }\r\n  }\r\n\r\n  transferAssets(form: NgForm) {\r\n    this.submitted = true;\r\n\r\n    if (this.formGroup.value.memberSiteBuilding) {\r\n      this.siteId = this.formGroup.value.memberSiteBuilding.split(',')[1];\r\n      this.buildingId = this.formGroup.value.memberSiteBuilding.split(',')[2];\r\n    }\r\n\r\n    if (form.valid && !this.hasErrors()) {\r\n      this.assetTransfer.transferFields = new Array<TransferFieldDto>();\r\n\r\n      const transferFieldArr: Array<TransferFieldDto> = [\r\n        { destinationField: 'accountId', destinationValue: this.selectedAccountId },\r\n        { destinationField: 'departmentId', destinationValue: this.selectedDepartmentId },\r\n        { destinationField: 'siteId', destinationValue: this.siteId },\r\n        { destinationField: 'buildingId', destinationValue: this.buildingId },\r\n        { destinationField: 'floor', destinationValue: this.floorValue },\r\n        { destinationField: 'room', destinationValue: this.roomValue }\r\n      ];\r\n\r\n      transferFieldArr.forEach(obj => {\r\n        if (obj.destinationValue) {\r\n          this.assetTransfer.transferFields.push(obj);\r\n        }\r\n      });\r\n\r\n      this.actionsService.processTransaction(this.assetTransfer).subscribe(\r\n        result => {\r\n          if (result.impactedAssets) {\r\n            this.status = ModalFormEvent.Success;\r\n            this.windowManager.close();\r\n          } else {\r\n            this.alertService.error(result.status);\r\n\r\n            this.status = ModalFormEvent.Failed;\r\n\r\n            this.windowManager.close();\r\n          }\r\n        },\r\n        error => {\r\n          this.status = ModalFormEvent.Failed;\r\n\r\n          this.alertService.error('An error has occurred while processing the transfer');\r\n\r\n\r\n          this.windowManager.close();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  dismiss() {\r\n    this.windowManager.close();\r\n  }\r\n\r\n  checkDisablePartial(event: any) {\r\n    if (this.assetTransfer.transactionApplicability === this.applicability.Full) {\r\n      this.hidePartialFields = true;\r\n    } else {\r\n      this.hidePartialFields = false;\r\n    }\r\n  }\r\n\r\n  // TODO Tech Debt: Refactor at a later time\r\n  hasErrors(): boolean {\r\n    const form: FormGroup = this.formGroup.form;\r\n\r\n    if (!this.isFiscalYearEndValid) {\r\n      this.errorMessage = 'Cannot complete transfer. Fiscal Year End is not set.';\r\n      return true;\r\n    }\r\n\r\n    if (form.value.type !== 0 && form.value.type !== 1) {\r\n      this.errorMessage = 'Please select transfer type (Full or Partial).';\r\n      return true;\r\n    }\r\n\r\n    if (this.assetTransfer.transactionApplicability === 1) {\r\n      if (this.assetTransfer.costChange) {\r\n        if (\r\n          this.assetTransfer.costChange === 0 ||\r\n          Math.abs(this.assetTransfer.costChange) > this.partialAsset.historicalCost ||\r\n          this.assetTransfer.costChange > 0\r\n        ) {\r\n          this.errorMessage = 'Cost change must be between 0 and -' + this.partialAsset.historicalCost;\r\n          return true;\r\n        }\r\n      }\r\n      if (this.assetTransfer.quantityChange) {\r\n        if (!this.partialAsset.quantity) {\r\n          this.errorMessage\r\n          = 'Cannot transfer asset without quantity. please enter correct quantity for the asset and reapply the transfer.';\r\n          return true;\r\n        }\r\n        if (\r\n          this.assetTransfer.quantityChange === 0 ||\r\n          Math.abs(this.assetTransfer.quantityChange) > this.partialAsset.quantity ||\r\n          this.assetTransfer.quantityChange > 0\r\n        ) {\r\n          this.errorMessage = 'Quantity transfer must be between 0 and -' + this.partialAsset.quantity;\r\n          return true;\r\n        }\r\n      }\r\n      if (this.assetTransfer.costChange && this.assetTransfer.quantityChange) {\r\n        this.errorMessage = 'Cannot transfer both Cost and Quanity, please specifiy either Cost or Quantity for partial transfer.';\r\n        return true;\r\n      }\r\n      if (!this.assetTransfer.costChange && !this.assetTransfer.quantityChange) {\r\n        this.errorMessage = 'Please specify either Cost or Quantity for partial transfer.';\r\n        return true;\r\n      }\r\n    }\r\n\r\n    let validValues = 0;\r\n\r\n    Object.values(form.value).forEach(element => {\r\n      if (element) {\r\n        validValues++;\r\n      }\r\n    });\r\n\r\n    if ((validValues >= 2 && form.value.type === 1) || (validValues >= 1 && form.value.type === 0)) {\r\n      return false;\r\n    } else {\r\n      this.errorMessage = 'Please enter a value in one of fields for the transfer to be completed.';\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","import { FormGroupDirective, NgForm } from '@angular/forms';\r\n\r\nimport { QualityControlActionsService } from '../../services/actions/quality-control-actions.service';\r\nimport { QualityControlService } from '../../services/quality-control.service';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { WindowManager } from '../../../_core/services/window-manager.service';\r\nimport { Component, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { TransactionRequestDto } from '../../../_api/_runtime/dtos/transaction-request.dto';\r\nimport { AssetDto } from '../../../_api/_runtime/dtos/asset.dto';\r\nimport { ModalFormEvent } from '../../../_enums/modal-form-event';\r\nimport { CalculationApiService } from '../../../_api/_runtime/services/calculation-api.service';\r\nimport { TransactionType } from '../../../_api/_runtime/enums/transaction-type';\r\nimport { TransactionValidationStatus } from '../../../_api/_runtime/enums/transaction-validation-status';\r\nimport { AdvancedMathOperator } from '../../../_api/_runtime/enums/advanced-math-operator';\r\n\r\n@Component({\r\n  selector: 'cost-adjustment',\r\n  templateUrl: './cost-adjustment.component.html'\r\n})\r\nexport class CostAdjustmentComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  @ViewChild('costAdjustmentForm', {static: true}) formGroup: FormGroupDirective;\r\n  @Input() modalTitle: string;\r\n  @Input() selectedAsset: AssetDto;\r\n  costAdjustmentDto = <TransactionRequestDto>{};\r\n\r\n  newHistorialCost: number;\r\n  newAccumulatedDepreciation: number;\r\n\r\n  submitted = false;\r\n\r\n  public missingRequiredField: boolean;\r\n  public apiErrorMessage: string;\r\n  public isApiError: boolean;\r\n  public isFiscalYearEndValid: boolean;\r\n\r\n  public status: ModalFormEvent;\r\n\r\n  constructor(\r\n    public actionsService: QualityControlActionsService,\r\n    public qualityControlService: QualityControlService,\r\n    public calculationService: CalculationApiService,\r\n    public windowManager: WindowManager\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.costAdjustmentDto.assets = [this.selectedAsset.id];\r\n    this.costAdjustmentDto.transactionType = TransactionType.Adjustment;\r\n    this.isApiError = false;\r\n    this.qualityControlService.hasFiscalYearEnd().subscribe(res => (this.isFiscalYearEndValid = res));\r\n  }\r\n\r\n  handleModalEvent(modalEvent: ModalFormEvent) {\r\n    if (modalEvent === ModalFormEvent.Save) {\r\n      this.formGroup.ngSubmit.emit();\r\n    }\r\n\r\n    if (modalEvent === ModalFormEvent.Dismiss) {\r\n      this.dismiss();\r\n    }\r\n  }\r\n\r\n  costAdjustment(form: NgForm) {\r\n    this.submitted = true;\r\n    this.isApiError = false;\r\n\r\n    if (!this.hasErrors() && form.valid) {\r\n      this.actionsService.processTransaction(this.costAdjustmentDto).subscribe(result => {\r\n        // Get Validation message\r\n        if (result.validationStatus === TransactionValidationStatus.NoErrors) {\r\n          this.isApiError = false;\r\n\r\n          this.status = ModalFormEvent.Success;\r\n\r\n          this.windowManager.close();\r\n        } else {\r\n          switch (+result.validationStatus) {\r\n            case TransactionValidationStatus.DepGtCost: {\r\n              this.apiErrorMessage = 'Depreciation cannot be greater than adjusted cost.';\r\n              break;\r\n            }\r\n            case TransactionValidationStatus.NegativeCostOrAccumulation: {\r\n              this.apiErrorMessage = 'Cannot create adjustment resulting in negative cost or accumulated depreciation.';\r\n              break;\r\n            }\r\n            case TransactionValidationStatus.HistCostOrAccumDeprCannotBeZero: {\r\n              this.apiErrorMessage = 'Historical Cost or Accumulated Depreciation cannot be zero when Prorate Values is checked.'\r\n              break;\r\n            }\r\n          }\r\n          this.isApiError = true;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  calcCostChange() {\r\n    if (this.newHistorialCost) {\r\n      this.calculationService\r\n        .Calculate(+this.newHistorialCost, +this.selectedAsset.historicalCost, AdvancedMathOperator.Subtract)\r\n        .subscribe(result => {\r\n          this.costAdjustmentDto.costChange = parseFloat(result);\r\n        });\r\n    }\r\n  }\r\n\r\n  calcAccumChange() {\r\n    if (this.newAccumulatedDepreciation) {\r\n      this.calculationService\r\n        .Calculate(+this.newAccumulatedDepreciation, +this.selectedAsset.accumulatedDepreciation, AdvancedMathOperator.Subtract)\r\n        .subscribe(result => {\r\n          this.costAdjustmentDto.accumChange = parseFloat(result);\r\n        });\r\n    }\r\n  }\r\n\r\n  calcHistoricalCost() {\r\n    this.calculationService\r\n      .Calculate(+this.selectedAsset.historicalCost, +this.costAdjustmentDto.costChange, AdvancedMathOperator.Add)\r\n      .subscribe(result => {\r\n        this.newHistorialCost = parseFloat(result);\r\n      });\r\n  }\r\n\r\n  calcNewAccumulatedDepreciation() {\r\n    this.calculationService\r\n      .Calculate(+this.selectedAsset.accumulatedDepreciation, +this.costAdjustmentDto.accumChange, AdvancedMathOperator.Add)\r\n      .subscribe(result => {\r\n        this.newAccumulatedDepreciation = parseFloat(result);\r\n      });\r\n  }\r\n\r\n  dismiss() {\r\n    this.windowManager.close();\r\n  }\r\n\r\n  hasErrors(): boolean {\r\n    this.missingRequiredField = !this.costAdjustmentDto.costChange && !this.costAdjustmentDto.accumChange;\r\n    return this.missingRequiredField || this.isApiError || !this.isFiscalYearEndValid;\r\n  }\r\n}\r\n","import { ValuationService } from '../../../services/valuation-service';\r\nimport { TranslatedComponent } from '../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../_core/i18n/translation-base-keys';\r\nimport { WindowManager } from '../../../../_core/services/window-manager.service';\r\nimport { Component, OnInit, OnDestroy, EventEmitter, ViewChild, Output, ViewContainerRef } from '@angular/core';\r\nimport { Building } from '../../../../_models/building.model';\r\nimport { ValuationResponseDto } from '../../../../_api/_runtime/dtos/building.dto';\r\nimport { EnumDto } from '../../../../_api/_configuration/dtos/enum.dto';\r\nimport { ApiServiceResult } from '../../../../_api/dtos/api-service-result.dto';\r\nimport { WindowRef } from '@progress/kendo-angular-dialog';\r\nimport { WindowOption } from '../../../../_models/window-option';\r\n\r\n@Component({\r\n  selector: 'building-valuation',\r\n  templateUrl: './building-valuation.component.html'\r\n})\r\nexport class BuildingValuationComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  public selectedBuildings = new Array<Building>();\r\n  public valuationRequestSubmitted = false;\r\n  public dynamicActionButtonText = 'Cancel';\r\n  public dynamicModalHeaderText = 'CoreLogic Submission';\r\n  public apiErrorResponse: Array<ValuationResponseDto>;\r\n  public responseArrived = false;\r\n  public errorMappings: ApiServiceResult<EnumDto>;\r\n  public hasValuationErrors = false;\r\n  public totalRecordCount = 0;\r\n  public errorRecordCount = 0;\r\n\r\n  @ViewChild('content', {static: false}) private content: any; // intentional, following previous examples\r\n  @Output() onAction = new EventEmitter<boolean>();\r\n\r\n  private windowRef: WindowRef;\r\n\r\n  constructor(\r\n    public windowManager: WindowManager,\r\n    private valuationService: ValuationService,\r\n    public container: ViewContainerRef\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.valuationService.getBuildingValuationErrorMappings();\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n\r\n  handleAction() {}\r\n\r\n  open(fromValuationErrorButton: boolean, items?: Array<Building>) {\r\n    this.totalRecordCount = items.length;\r\n    if (fromValuationErrorButton) {\r\n      this.valuationRequestSubmitted = true;\r\n      this.dynamicActionButtonText = 'Close';\r\n      this.dynamicModalHeaderText = 'Submission Summary';\r\n      this.responseArrived = true;\r\n    } else {\r\n      this.valuationRequestSubmitted = false;\r\n      this.dynamicActionButtonText = 'Cancel';\r\n      this.dynamicModalHeaderText = 'CoreLogic Submission';\r\n      this.responseArrived = false;\r\n    }\r\n    this.selectedBuildings = items;\r\n    this.windowRef = this.windowManager.open(this.content, this.dynamicModalHeaderText, <WindowOption>{\r\n      isModal: true\r\n    });\r\n  }\r\n\r\n  // Retire Asset(s)\r\n\r\n  cancel() {\r\n    this.dynamicModalHeaderText = 'CoreLogic Submission';\r\n    this.dynamicActionButtonText = 'Cancel';\r\n    this.valuationRequestSubmitted = false;\r\n    this.responseArrived = false;\r\n    this.windowRef.close();\r\n  }\r\n\r\n  confirm() {\r\n    this.valuationRequestSubmitted = true;\r\n    this.dynamicActionButtonText = 'Close';\r\n    this.dynamicModalHeaderText = 'Submission Summary';\r\n    this.hasValuationErrors = false;\r\n    this.onAction.emit(this.hasValuationErrors);\r\n    const buildingIds: string[] = [];\r\n    this.selectedBuildings.forEach(building => {\r\n      buildingIds.push(building.id);\r\n    });\r\n\r\n    this.valuationService.submitBuildingValuation(buildingIds).subscribe(response => {\r\n      this.apiErrorResponse = response.filter(bv => bv.success === false);\r\n      this.hasValuationErrors = response.findIndex(bv => !bv.success) !== -1;\r\n      this.responseArrived = true;\r\n      this.errorMappings = this.valuationService.buildingValuationErrors;\r\n    });\r\n  }\r\n\r\n  getEnumDisplayName(id: number): string {\r\n    this.hasValuationErrors = true;\r\n    this.onAction.emit(this.hasValuationErrors);\r\n    return this.errorMappings.result.enumOptions[id].displayName;\r\n  }\r\n}\r\n","import { ValuationService } from '../../../services/valuation-service';\r\nimport { TranslatedComponent } from '../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../_core/i18n/translation-base-keys';\r\nimport { WindowManager } from '../../../../_core/services/window-manager.service';\r\nimport { Component, OnInit, OnDestroy, EventEmitter, ViewChild, Output, ViewContainerRef } from '@angular/core';\r\nimport { Building } from '../../../../_models/building.model';\r\nimport { ValuationResponseDto } from '../../../../_api/_runtime/dtos/building.dto';\r\nimport { EnumDto } from '../../../../_api/_configuration/dtos/enum.dto';\r\nimport { ApiServiceResult } from '../../../../_api/dtos/api-service-result.dto';\r\nimport { WindowRef } from '@progress/kendo-angular-dialog';\r\nimport { WindowOption } from '../../../../_models/window-option';\r\n\r\n@Component({\r\n  selector: 'floodplain-valuation',\r\n  templateUrl: './floodplain-valuation.component.html'\r\n})\r\nexport class FloodPlainValuationComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  public selectedBuildings = new Array<Building>();\r\n  public valuationRequestSubmitted = false;\r\n  public dynamicActionButtonText = 'Cancel';\r\n  public dynamicModalHeaderText = 'CoreLogic Submission';\r\n  public apiErrorResponse: Array<ValuationResponseDto>;\r\n  public responseArrived = false;\r\n  public errorMappings: ApiServiceResult<EnumDto>;\r\n  public hasValuationErrors = false;\r\n  public totalRecordCount = 0;\r\n  public errorRecordCount = 0;\r\n\r\n  @ViewChild('content', {static: false}) private content: any; // intentional, following previous examples\r\n  @Output() onAction = new EventEmitter<boolean>();\r\n\r\n  private windowRef: WindowRef;\r\n\r\n  constructor(private valuationService: ValuationService, public windowManager: WindowManager, public container: ViewContainerRef) {}\r\n\r\n  ngOnInit() {\r\n    this.valuationService.getFloodPlainValuationErrorMappings();\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n\r\n  handleAction() {}\r\n\r\n  open(fromValuationErrorButton: boolean, items?: Array<Building>) {\r\n    this.totalRecordCount = items.length;\r\n    if (fromValuationErrorButton) {\r\n      this.valuationRequestSubmitted = true;\r\n      this.dynamicActionButtonText = 'Close';\r\n      this.dynamicModalHeaderText = 'Flood Plain Submission Summary';\r\n      this.responseArrived = true;\r\n    } else {\r\n      this.valuationRequestSubmitted = false;\r\n      this.dynamicActionButtonText = 'Cancel';\r\n      this.dynamicModalHeaderText = 'Flood Zone Request';\r\n      this.responseArrived = false;\r\n    }\r\n    this.selectedBuildings = items;\r\n    this.windowRef = this.windowManager.open(this.content, this.dynamicModalHeaderText, <WindowOption>{\r\n      isModal: true\r\n    });\r\n  }\r\n\r\n  cancel() {\r\n    this.dynamicModalHeaderText = 'CoreLogic Submission';\r\n    this.dynamicActionButtonText = 'Cancel';\r\n    this.valuationRequestSubmitted = false;\r\n    this.responseArrived = false;\r\n    this.windowRef.close();\r\n  }\r\n\r\n  confirm() {\r\n    this.valuationRequestSubmitted = true;\r\n    this.dynamicActionButtonText = 'Close';\r\n    this.dynamicModalHeaderText = 'Submission Summary';\r\n    this.hasValuationErrors = false;\r\n    this.onAction.emit(this.hasValuationErrors);\r\n    const buildingIds: string[] = [];\r\n    this.selectedBuildings.forEach(building => {\r\n      buildingIds.push(building.id);\r\n    });\r\n\r\n    this.valuationService.submitFloodPlainValuation(buildingIds).subscribe(response => {\r\n      this.apiErrorResponse = response.filter(bfv => bfv.success === false);\r\n      this.hasValuationErrors = response.findIndex(bfv => !bfv.success) !== -1;\r\n      this.responseArrived = true;\r\n      this.errorMappings = this.valuationService.buildingValuationErrors;\r\n    });\r\n  }\r\n\r\n  getEnumDisplayName(id: number): string {\r\n    this.hasValuationErrors = true;\r\n    this.onAction.emit(this.hasValuationErrors);\r\n    return this.errorMappings.result.enumOptions[id].displayName;\r\n  }\r\n}\r\n","import { QualityControlModes } from '../../../enums/quality-control-modes';\r\nimport { QualityControlService } from '../../../services/quality-control.service';\r\nimport { OnDestroy, OnInit, Component } from '@angular/core';\r\nimport { TranslatedComponent } from '../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../_core/i18n/translation-base-keys';\r\nimport { BuildingInfoService } from '../../../../_core/services/building-info-service';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FilterDto } from '../../../../_api/_runtime/dtos/filter.dto';\r\nimport { FieldMetaDataDto } from '../../../../_api/_runtime/dtos/field-meta-data.dto';\r\nimport { BreadCrumb } from '../../../../_models/breadcrumbs.model';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'mass-update-building',\r\n  templateUrl: './mass-update-building.component.html'\r\n})\r\n\r\nexport class MassUpdateBuildingComponent implements OnDestroy, OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  defaultFilterTerm: Array<FilterDto> = [];\r\n  filterMetaData: Array<FieldMetaDataDto>;\r\n  replaceMetaData: Array<FieldMetaDataDto>;\r\n\r\n  mode: QualityControlModes = QualityControlModes.Buildings;\r\n\r\n  breadCrumbs = [\r\n    <BreadCrumb>{ name: 'Quality Control', routerLink: '../../', queryParams: { mode: this.mode} },\r\n    <BreadCrumb>{ name: 'Mass Update Criteria', routerLink: '../../MassUpdate/Building', queryParams: { mode: this.mode } },\r\n    <BreadCrumb>{ name: 'View Results', routerLink: '../../MassUpdate/Results', queryParams: { mode: this.mode } }\r\n  ];\r\n\r\n  private destroyed$ = new Subject<any>();\r\n\r\n\r\n  constructor(\r\n    private qualityControlService: QualityControlService,\r\n    private buildingInfoService: BuildingInfoService\r\n  ) { }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    this.qualityControlService.getBuildingSearchMetadataByGroupId(this.qualityControlService.groupId)\r\n      .pipe(takeUntil(this.destroyed$))\r\n      .subscribe(buildingMetadata => {\r\n\r\n        const buildingFields = buildingMetadata.fields;\r\n\r\n        this.filterMetaData = this.GetFilteredFieldData(buildingFields, this.buildingInfoService.GetInternalColumns());\r\n        this.replaceMetaData = this.GetFilteredFieldData(buildingFields, this.buildingInfoService.GetReadonlyAndHiddenFields());\r\n    });\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  private GetFilteredFieldData(fields: Array<FieldMetaDataDto>, excluded: string[]): Array<FieldMetaDataDto> {\r\n    let res = fields;\r\n    res = res.filter(field => {\r\n      return !excluded.includes(field.name);\r\n    });\r\n    res = res.sort(function(a, b){\r\n      if (a.displayName < b.displayName) { return -1; }\r\n      if (a.displayName > b.displayName) { return 1; }\r\n      return 0;\r\n    });\r\n\r\n    res.forEach(field => {\r\n      if (field.name === 'inspectionDate') {\r\n        field.displayName = 'Date of Inspection';\r\n      }\r\n    });\r\n    return res;\r\n  }\r\n\r\n}\r\n","import { TranslatedComponent } from '../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../_core/i18n/translation-base-keys';\r\nimport { ImageEntityType } from '../../../../_api/_runtime/enums/image-entity-type';\r\nimport { Input, OnInit, Component, Output, EventEmitter } from '@angular/core';\r\nimport { FieldType } from '../../../../_enums/field-type';\r\nimport { formLayout } from '../../../../_models/form-layout.model';\r\nimport { FieldMetaDataDto } from '../../../../_api/dtos/inventory/field-meta-data.dto';\r\n\r\n@Component({\r\n  selector: 'building-form-group',\r\n  templateUrl: './building-form-group.component.html'\r\n})\r\nexport class BuildingFormGroupComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  fieldTypes = FieldType;\r\n\r\n  fieldsLeft = [];\r\n  fieldsRight = [];\r\n\r\n  @Input() formControls: any;\r\n  @Input() formGroup: any;\r\n  @Input() formLayout: formLayout;\r\n  @Input() buildingId: string;\r\n  @Output() customFieldLabelChange: EventEmitter<FieldMetaDataDto> = new EventEmitter();\r\n  imageEntityTypes = ImageEntityType;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    if (this.formLayout) {\r\n      let s = this;\r\n      this.fieldsLeft = this.mapOrder(\r\n        this.formControls.filter(function(x: { id: string }) {\r\n          return s.formLayout.left.findIndex(c => c === x.id) !== -1;\r\n        }),\r\n        this.formLayout.left,\r\n        'id'\r\n      );\r\n      this.fieldsRight = this.mapOrder(\r\n        this.formControls.filter(function(x: { id: string }) {\r\n          return s.formLayout.right.findIndex(c => c === x.id) !== -1;\r\n        }),\r\n        this.formLayout.right,\r\n        'id'\r\n      );\r\n    }\r\n  }\r\n\r\n  private mapOrder(array, order, key) {\r\n    array.sort(function(a, b) {\r\n      const A = a[key],\r\n        B = b[key];\r\n\r\n      if (order.indexOf(A) > order.indexOf(B)) {\r\n        return 1;\r\n      } else {\r\n        return -1;\r\n      }\r\n    });\r\n\r\n    return array;\r\n  }\r\n\r\n  public handleCustomFieldLabelChange(field: FieldMetaDataDto) {\r\n    this.customFieldLabelChange.emit(field);\r\n  }\r\n}\r\n","import { TranslationBaseKeys } from '../../../../_core/i18n/translation-base-keys';\r\nimport { BuildingAttributes, OccupancyCodeBuildingAttributeTypeId } from './form-models/building-attributes-model';\r\nimport { BuildingsService } from '../../../services/buildings.service';\r\nimport { QualityControlService } from '../../../services/quality-control.service';\r\nimport { AlertService } from '../../../../_core/services/alert.service';\r\nimport { BuildingInfoService } from '../../../../_core/services/building-info-service';\r\nimport { HelperService } from '../../../../_core/services/helper.service';\r\nimport {\r\n  PrimaryInfoFields, BuildingLocationFields, FormModelEnum, BuildingValuationFields, BuildingSubStructureFields,\r\n  BuildingSuperstructureFields, BuildingSystemFields, BuildingSiteAttributeFields, AdditionalDataFields,\r\n  CoreLogicFields, buildingImages, PrimaryInfoFieldLayout, BuildingLocationFieldLayout, BuildingValuationFieldLayout,\r\n  BuildingSuperstructureFieldLayout, BuildingSubStructureFieldLayout, BuildingSystemFieldLayout,\r\n  BuildingSiteAttributeFieldLayout, AdditionalDataFieldLayout, CoreLogicFieldLayout\r\n} from './form-models/primary-info/primaryinfo-model';\r\nimport {\r\n  BuildingFloodPlainModel, InitialFloodPlainFields, BuildingFloodPlainFieldLayout,\r\n  InitialFloodPlainFieldLayout } from './form-models/building-flood-plain-model';\r\nimport { PrimaryInfoDropDownModel } from './form-models/primary-info/primaryinfo-dropdown-model';\r\nimport { BuildingAttributeFields } from './form-models/primary-info/building-attributes-model';\r\nimport { Component, OnInit, OnChanges, Input, ViewChild, ElementRef, SimpleChanges } from '@angular/core';\r\nimport * as MenuSpy from 'menuspy';\r\nimport {\r\n  CopedataWindFields,\r\n  CopeDataEarthquakeFields,\r\n  CopeDataEarthquakeFieldLayout,\r\n  CopedataWindFieldLayout } from './form-models/copedata-model';\r\nimport { formLayout as FormLayout } from '../../../../_models/form-layout.model';\r\nimport { of, Subject, forkJoin } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { CascadedSelectOption } from '../../../../_models/cascaded-select-option.model';\r\nimport { BuildingDto } from '../../../../_api/_runtime/dtos/building.dto';\r\nimport { ImageEntityType } from '../../../../_api/_runtime/enums/image-entity-type';\r\nimport { AttributeTypeOption,\r\n  AttributeTypesAndCodesResult } from '../../../../_api/_configuration/dtos/attribute-types-and-codes-result.dto';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ImageApiService } from '../../../../_api/_runtime/services/image-api.service';\r\nimport { IntlService, parseNumber } from '@progress/kendo-angular-intl';\r\nimport { BreadCrumb } from '../../../../_models/breadcrumbs.model';\r\nimport { AssetFileSummaryDto } from '../../../../_api/dtos/asset-file-summary.dto';\r\nimport { FormField } from '../../../../_models/form-field.model';\r\nimport { ContentCode } from '../../../../_api/_configuration/dtos/content-code.dto';\r\nimport { BuildingHierarchyDto } from '../../../../_api/_runtime/dtos/building-hierarchy.dto';\r\nimport { FieldOption } from '../../../../_models/field-option.model';\r\nimport { FieldType } from '../../../../_enums/field-type';\r\nimport { Building } from '../../../../_models/building.model';\r\nimport { BuildingValuationComponent } from '../actions/building-valuation.component';\r\nimport { PerimeterAdjustmentMethod } from '../../../../_api/_runtime/enums/perimeter-adjustment-method';\r\nimport { FieldCategory } from '../../../../_enums/field-category';\r\nimport { FieldMetaDataDto } from '../../../../_api/dtos/inventory/field-meta-data.dto';\r\n\r\n@Component({\r\n  selector: 'building-form',\r\n  templateUrl: './building-form.component.html'\r\n})\r\nexport class UpsertBuildingComponent implements OnInit, OnChanges {\r\n  @Input()\r\n  savingForm: boolean;\r\n  public formModelEnum = FormModelEnum;\r\n  public isSaving = false;\r\n\r\n  isReadOnly = false;\r\n\r\n  i18n = TranslationBaseKeys;\r\n\r\n  formModels = [];\r\n  buildingAttributes = BuildingAttributes;\r\n  formGroup: FormGroup;\r\n  cascadedSelectOptions = new Array<Array<CascadedSelectOption>>();\r\n  buildingFormGroup: FormGroup;\r\n\r\n  closeForm: boolean;\r\n  buildingId: string;\r\n\r\n  formLayouts: Array<FormLayout> = [];\r\n\r\n  buildingDto = <BuildingDto>{\r\n    id: '',\r\n    buildingSelectedAdditions: [],\r\n    buildingSelectedAdjustments: [],\r\n    occupancyCodes: [],\r\n    buildingAttributes: [],\r\n    userFactors: [],\r\n    customAdditions: []\r\n  };\r\n\r\n  imageEntityTypes = ImageEntityType;\r\n\r\n  breadCrumbs = [];\r\n\r\n  isEditing = false;\r\n\r\n  occupancyCodeOptions: AttributeTypeOption[];\r\n\r\n  private customFields = new Array<string>();\r\n\r\n  @ViewChild('formNavigation', {static: true}) formNavigation: ElementRef;\r\n\r\n  /* A Subject for monitoring the destruction of the component. */\r\n  private destroyed$ = new Subject<any>();\r\n\r\n  private isEditBuilding = false;\r\n\r\n  @ViewChild(BuildingValuationComponent, {static: true})\r\n  buildingValuationComponent: BuildingValuationComponent;\r\n\r\n  private selectedBuildings = new Array<Building>();\r\n\r\n  showValuationErrorsButton = false;\r\n\r\n  private editedCustomFields: Array<FieldMetaDataDto> = [];\r\n\r\n  constructor(\r\n    private buildingService: BuildingsService,\r\n    private qualityControlService: QualityControlService,\r\n    private alertService: AlertService,\r\n    private buildingInfoService: BuildingInfoService,\r\n    private router: Router,\r\n    private intl: IntlService,\r\n    private helperService: HelperService,\r\n    private route: ActivatedRoute,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buildingId = this.route.snapshot.paramMap.get('buildingId');\r\n\r\n    this.isEditBuilding = this.buildingId ? true : false;\r\n\r\n    this.isEditing = !!this.buildingId;\r\n\r\n    this.buildingDto = <BuildingDto>{};\r\n\r\n    this.formLayouts[FormModelEnum.PrimaryInfoFields] = PrimaryInfoFieldLayout;\r\n    this.formLayouts[FormModelEnum.BuildingLocationFields] = BuildingLocationFieldLayout;\r\n    this.formLayouts[FormModelEnum.BuildingValuationFields] = BuildingValuationFieldLayout;\r\n    this.formLayouts[FormModelEnum.BuildingSuperstructureFields] = BuildingSuperstructureFieldLayout;\r\n    this.formLayouts[FormModelEnum.BuildingSubstructureFields] = BuildingSubStructureFieldLayout;\r\n    this.formLayouts[FormModelEnum.BuildingSystemsFields] = BuildingSystemFieldLayout;\r\n    this.formLayouts[FormModelEnum.BuildingSiteAttributeFields] = BuildingSiteAttributeFieldLayout;\r\n    this.formLayouts[FormModelEnum.AdditionalDataFields] = AdditionalDataFieldLayout;\r\n    this.formLayouts[FormModelEnum.CoreLogicFields] = CoreLogicFieldLayout;\r\n    this.formLayouts[FormModelEnum.CopeDataEarthquakeFields] = CopeDataEarthquakeFieldLayout;\r\n    this.formLayouts[FormModelEnum.CopedataWindFields] = CopedataWindFieldLayout;\r\n    this.formLayouts[FormModelEnum.InitialFloodPlainFields] = InitialFloodPlainFieldLayout;\r\n    this.formLayouts[FormModelEnum.BuildingFloodPlainModelFields] = BuildingFloodPlainFieldLayout;\r\n\r\n    this.formModels[FormModelEnum.PrimaryInfoFields] = JSON.parse(JSON.stringify(PrimaryInfoFields));\r\n    this.formModels[FormModelEnum.BuildingFloodPlainModelFields] = JSON.parse(JSON.stringify(BuildingFloodPlainModel));\r\n    this.formModels[FormModelEnum.InitialFloodPlainFields] = JSON.parse(JSON.stringify(InitialFloodPlainFields));\r\n    this.formModels[FormModelEnum.BuildingLocationFields] = JSON.parse(JSON.stringify(BuildingLocationFields));\r\n    this.formModels[FormModelEnum.BuildingValuationFields] = JSON.parse(JSON.stringify(BuildingValuationFields));\r\n    this.formModels[FormModelEnum.BuildingSubstructureFields] = JSON.parse(JSON.stringify(BuildingSubStructureFields));\r\n    this.formModels[FormModelEnum.BuildingSuperstructureFields] = JSON.parse(JSON.stringify(BuildingSuperstructureFields));\r\n    this.formModels[FormModelEnum.BuildingSystemsFields] = JSON.parse(JSON.stringify(BuildingSystemFields));\r\n    this.formModels[FormModelEnum.BuildingSiteAttributeFields] = JSON.parse(JSON.stringify(BuildingSiteAttributeFields));\r\n    this.formModels[FormModelEnum.AdditionalDataFields] = JSON.parse(JSON.stringify(AdditionalDataFields));\r\n    this.formModels[FormModelEnum.CoreLogicFields] = JSON.parse(JSON.stringify(CoreLogicFields));\r\n    this.formModels[FormModelEnum.BuildingAttributeFields] = JSON.parse(JSON.stringify(BuildingAttributeFields));\r\n    this.formModels[FormModelEnum.CopedataWindFields] = JSON.parse(JSON.stringify(CopedataWindFields));\r\n    this.formModels[FormModelEnum.CopeDataEarthquakeFields] = JSON.parse(JSON.stringify(CopeDataEarthquakeFields));\r\n    this.formModels[FormModelEnum.BuildingImages] = JSON.parse(JSON.stringify(buildingImages));\r\n    this.breadCrumbs = [\r\n      <BreadCrumb>{\r\n        name: 'Quality Control Overview',\r\n        routerLink: `/project-profile/${this.qualityControlService.groupId}/QualityControl`\r\n      },\r\n      <BreadCrumb>{\r\n        name: this.buildingId ? 'Edit Building' : 'Add Building',\r\n        routerLink: 'AddBuilding',\r\n        isDisabled: true\r\n      }\r\n    ];\r\n\r\n    const getBuilding = this.buildingId\r\n      ? this.buildingService.getBuilding(this.buildingId)\r\n      : of(<BuildingDto>{\r\n          id: '',\r\n          buildingSelectedAdditions: [],\r\n          occupancyCodes: [],\r\n          buildingAttributes: [],\r\n          userFactors: [],\r\n          customAdditions: []\r\n        });\r\n    const getAttributeTypesAndCodes = this.buildingInfoService.getAttributeTypesAndCodes();\r\n    const getBuildingHierarchyByGroupId = this.buildingInfoService.getBuildingHierarchyByGroupId(this.qualityControlService.groupId);\r\n    const getContentCodes = this.buildingInfoService.getContentCodes();\r\n    const getBuildingConditions = this.buildingInfoService.getBuildingConditions();\r\n    const getBuildingPerimeterAdjustmentMethod = this.buildingInfoService.getBuildingPerimeterAdjustmentMethod();\r\n    const getUnitsOfMeasure = this.buildingInfoService.getUnitsOfMEasure();\r\n    const getEntryAlarmOptions = this.buildingInfoService.getEntryAlarmOptions();\r\n    const getBuildingCustomColumns = this.qualityControlService.getBuildingSearchMetadataByGroupId(this.qualityControlService.groupId);\r\n\r\n    forkJoin(\r\n      getBuilding,\r\n      getAttributeTypesAndCodes,\r\n      getBuildingHierarchyByGroupId,\r\n      getContentCodes,\r\n      getBuildingConditions,\r\n      getUnitsOfMeasure,\r\n      getEntryAlarmOptions,\r\n      getBuildingCustomColumns,\r\n      getBuildingPerimeterAdjustmentMethod\r\n    )\r\n      .pipe(takeUntil(this.destroyed$))\r\n      .subscribe(\r\n        ([\r\n          building,\r\n          attributeTypesAndCodes,\r\n          buildingHierarchyByGroupId,\r\n          contentCodes,\r\n          buildingConditions,\r\n          unitsOfMeasure,\r\n          entryAlarmOptions,\r\n          buildingCustomColumns,\r\n          buildingPerimeterAdjustmentMethods\r\n        ]) => {\r\n          if (attributeTypesAndCodes) {\r\n            this.buildingDto = building;\r\n            this.selectedBuildings = new Array<any>(this.buildingDto);\r\n            this.buildingService.setBuildingRequestSource(building);\r\n            this.mapCustomColumns(buildingCustomColumns);\r\n            this.mapAttributeTypesAndCodes(attributeTypesAndCodes);\r\n\r\n            this.mapSiteId(this.buildingDto, buildingHierarchyByGroupId);\r\n\r\n            this.mapContentCodes(contentCodes);\r\n\r\n            this.formGroup = this.helperService.toFormGroup(this.mapValues(this.combineForms()));\r\n\r\n            const contentCodeControl = this.formGroup.get('contentCode');\r\n            const contentQualityControl = this.formGroup.get('contentQuality');\r\n            const floorAreaControl = this.formGroup.get('floorArea');\r\n            const basementUnfinishedAreaControl = this.formGroup.get('basementUnfinishedArea');\r\n            const basementFinishedAreaControl = this.formGroup.get('basementFinishedArea');\r\n            const basementFloorAreaControl = this.formGroup.get('basementFloorArea');\r\n            const depreciationPercent = this.formGroup.get('depreciationPercent');\r\n            const costReproductionNew = this.formGroup.get('costReproductionNew');\r\n\r\n            if (depreciationPercent) {\r\n              depreciationPercent.valueChanges.subscribe(() => {\r\n                this.calculateCostReproductionNewLessDepreciation();\r\n              });\r\n            }\r\n\r\n            if (costReproductionNew) {\r\n              costReproductionNew.valueChanges.subscribe(() => {\r\n                this.calculateCostReproductionNewLessDepreciation();\r\n              });\r\n            }\r\n\r\n            if (basementUnfinishedAreaControl) {\r\n              basementUnfinishedAreaControl.valueChanges.subscribe(() => {\r\n                this.basementFloorAreaFactorsChanged();\r\n              });\r\n            }\r\n\r\n            if (basementFinishedAreaControl) {\r\n              basementFinishedAreaControl.valueChanges.subscribe(() => {\r\n                this.basementFloorAreaFactorsChanged();\r\n              });\r\n            }\r\n\r\n            if (basementFloorAreaControl) {\r\n              basementFloorAreaControl.setValue(this.basementFloorAreaFactorsChanged());\r\n            }\r\n\r\n            if (contentCodeControl) {\r\n              contentCodeControl.valueChanges.subscribe((contentCode: string) => {\r\n                this.contentCodeChanged(contentCode);\r\n              });\r\n            }\r\n\r\n            if (contentQualityControl) {\r\n              contentQualityControl.valueChanges.subscribe(() => {\r\n                if (contentCodeControl && !!contentCodeControl.value) {\r\n                  this.contentCodeChanged(contentCodeControl.value);\r\n                }\r\n              });\r\n            }\r\n\r\n            if (floorAreaControl) {\r\n              floorAreaControl.valueChanges.subscribe(() => {\r\n                if (contentCodeControl && !!contentCodeControl.value) {\r\n                  this.contentCodeChanged(contentCodeControl.value);\r\n                }\r\n              });\r\n            }\r\n\r\n            setTimeout(() => {\r\n              if (this.formNavigation) {\r\n                const ms = new MenuSpy(this.formNavigation.nativeElement, { activeClass: 'current-item'\r\n                , enableLocationHash: false});\r\n              }\r\n            }, 2000);\r\n          }\r\n          if (buildingPerimeterAdjustmentMethods) {\r\n            const perimeterAdjustmentMethodControl = this.formGroup.get('buildingPerimeterAdjustmentMethod');\r\n            if(perimeterAdjustmentMethodControl){\r\n              if (perimeterAdjustmentMethodControl.value === '') {\r\n              perimeterAdjustmentMethodControl.setValue(PerimeterAdjustmentMethod.Calculated);\r\n              }\r\n              perimeterAdjustmentMethodControl.valueChanges.subscribe(() => {\r\n                this.PerimeterAdjustmentMethodChanged();\r\n            });\r\n          }\r\n          }\r\n        }\r\n      );\r\n\r\n    this.buildingService.buildingRequest$.subscribe(buildingDto => {\r\n      this.buildingDto = buildingDto;\r\n      if (!this.buildingDto.id) {\r\n        // set new building default fields\r\n        this.buildingDto.activityCode = '0';\r\n        this.buildingDto.overheadPercent = '20';\r\n        this.buildingDto.architectPercent = '7';\r\n      }\r\n    });\r\n  }\r\n\r\n  mapCustomColumns(buildingCustomColumns: AssetFileSummaryDto) {\r\n    const customFields = buildingCustomColumns.fields.filter(bf => bf.isCustom);\r\n    let left = true;\r\n    customFields.forEach(bf => {\r\n      this.customFields.push(bf.name);\r\n      const customField = <FormField> {\r\n        name: bf.name,\r\n        displayName: bf.displayName.replace(/_|-|\\./g, ' '),\r\n        type: bf.fieldType,\r\n        id: bf.name,\r\n        required: false,\r\n        fieldCategory: FieldCategory.CustomFields\r\n      };\r\n      this.formModels[FormModelEnum.AdditionalDataFields].push(customField);\r\n      if (left) {\r\n        this.formLayouts[FormModelEnum.AdditionalDataFields].left.push(customField.name);\r\n      } else {\r\n        this.formLayouts[FormModelEnum.AdditionalDataFields].right.push(customField.name);\r\n      }\r\n      left = !left;\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.savingForm = changes.savingForm.currentValue;\r\n  }\r\n\r\n  save(buildingForm: FormGroup) {\r\n    this.closeForm = false;\r\n    this.onSubmit(buildingForm);\r\n    this.isSaving = false;\r\n  }\r\n\r\n  onSubmit(buildingForm: FormGroup) {\r\n    this.isSaving = true;\r\n    const formToSubmit = buildingForm.value;\r\n\r\n    // Setting siteId to the last most item in the cascading select list\r\n    buildingForm = this.setSiteId(buildingForm);\r\n\r\n    if (!this.checkIsValidLatLon(buildingForm)) {\r\n      return;\r\n    }\r\n\r\n    const saveDto = this.mapToBuildingDto(buildingForm.value);\r\n\r\n    saveDto.customColumns = this.editedCustomFields;\r\n\r\n    if (buildingForm.valid) {\r\n      if (this.isEditing) {\r\n        this.saveEdit(saveDto);\r\n      } else {\r\n        this.saveNewBuilding(saveDto);\r\n      }\r\n    } else {\r\n      this.alertService.error('Missing required fields');\r\n      this.isSaving = false;\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl`], { queryParams: { mode: 1 } });\r\n  }\r\n\r\n  preventDefault(event: any) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  private saveEdit(buildingDto: BuildingDto): void {\r\n    this.buildingService.updateBuilding(buildingDto.id, buildingDto).subscribe(\r\n      buildingResult => {\r\n        if (this.closeForm) {\r\n          this.formGroup = null;\r\n          this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl`], { queryParams: { mode: 1 } });\r\n        }\r\n        this.alertService.success('Building edit successful');\r\n      },\r\n      error => {\r\n        if (error.status !== 458) {\r\n          this.alertService.error(!!error.error ? error.error : 'An error has occurred saving the building');\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  private saveNewBuilding(buildingDto: BuildingDto): void {\r\n    this.buildingService.createBuilding(buildingDto, this.qualityControlService.groupId).subscribe(\r\n      result => {\r\n        this.buildingId = result.id;\r\n        if (this.closeForm) {\r\n          this.formGroup = null;\r\n          this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl`], { queryParams: { mode: 1 } });\r\n        } else {\r\n          this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl/EditBuilding/${this.buildingId}`], {\r\n            queryParams: { mode: 1 }\r\n          });\r\n        }\r\n        this.alertService.success('Building Added Successfully');\r\n      },\r\n      error => {\r\n        if (error.status !== 458) {\r\n          this.alertService.error(!!error.error ? error.error : 'An error has occurred saving the building');\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  private contentCodeChanged(contentCode: string): void {\r\n    const floorAreaValue = this.formGroup.get('floorArea').value;\r\n    const contentQuality = this.formGroup.get('contentQuality').value;\r\n    if (!floorAreaValue) {\r\n      this.formGroup.get('contentCostReproductionNew').setValue(0);\r\n      this.alertService.warn('The Content CRN could not be calculated as the Floor Area has not been provided.');\r\n    } else if (contentCode === '-') {\r\n      // Do nothing\r\n    } else if (!contentQuality) {\r\n      this.formGroup.get('contentCostReproductionNew').setValue(0);\r\n      this.alertService.warn(\r\n        'The Content CRN could not be calculated as the Content Quality has not been provided or value should be greater than zero.'\r\n      );\r\n    } else {\r\n      this.qualityControlService.calculateContentCostReproductionNew(contentCode, contentQuality, floorAreaValue).subscribe(result => {\r\n        const contentCostReproductionNew = this.intl.parseNumber(result);\r\n        this.formGroup.get('contentCostReproductionNew').setValue(contentCostReproductionNew);\r\n      });\r\n    }\r\n  }\r\n\r\n  private PerimeterAdjustmentMethodChanged(): void {\r\n    const perimeterAdjustmentMethodValue = this.formGroup.get('buildingPerimeterAdjustmentMethod').value;\r\n    const calculatedPerimeterControl = this.formGroup.get('perimeter');\r\n    if (perimeterAdjustmentMethodValue == PerimeterAdjustmentMethod.Calculated) {\r\n      calculatedPerimeterControl.enable();\r\n     } else {\r\n       calculatedPerimeterControl.disable();\r\n     }\r\n  }\r\n\r\n  private calculateCostReproductionNewLessDepreciation() {\r\n    const depreciationPercent = this.formGroup.get('depreciationPercent').value;\r\n    const costReproductionNew = this.formGroup.get('costReproductionNew').value;\r\n    const valuationActualCashValue = this.buildingDto.valuationActualCashValue;\r\n    let costReproductionNewLessDepreciation: any = '';\r\n    if (costReproductionNew && costReproductionNew > 0 && depreciationPercent && depreciationPercent !== 0) {\r\n      costReproductionNewLessDepreciation =  costReproductionNew * (1 - (depreciationPercent / 100));\r\n    } else {\r\n      costReproductionNewLessDepreciation = valuationActualCashValue ? this.intl.parseNumber(valuationActualCashValue) : '';\r\n    }\r\n    this.formGroup.get('costReproductionNewLessDepreciation').setValue(costReproductionNewLessDepreciation);\r\n  }\r\n\r\n  private basementFloorAreaFactorsChanged() {\r\n    let basementUnfinishedArea = this.formGroup.get('basementUnfinishedArea').value;\r\n    let basementFinishedArea = this.formGroup.get('basementFinishedArea').value;\r\n\r\n    if (basementFinishedArea == null || basementFinishedArea === '') {\r\n      basementFinishedArea = 0;\r\n    }\r\n    if (basementUnfinishedArea == null || basementUnfinishedArea === '') {\r\n      basementUnfinishedArea = 0;\r\n    }\r\n\r\n    this.qualityControlService.calculateBasementFloorArea(basementFinishedArea, basementUnfinishedArea).subscribe(result => {\r\n      const basementFloorAreaNew = this.intl.parseNumber(result);\r\n      this.formGroup.get('basementFloorArea').setValue(basementFloorAreaNew);\r\n    });\r\n  }\r\n\r\n  private mapToBuildingDto(formValue: any): BuildingDto {\r\n    // Deep copy of the current Building DTO\r\n    const buildingDto = <BuildingDto>JSON.parse(JSON.stringify(this.buildingDto));\r\n\r\n    // Mapping form value to building DTO\r\n    Object.keys(formValue).forEach(key => {\r\n      if (key !== 'undefined') {\r\n        buildingDto[key] = formValue[key];\r\n      }\r\n    });\r\n\r\n    buildingDto.buildingAttributes\r\n      .filter(c => !!c.isAdded)\r\n      .forEach(attribute => {\r\n        delete attribute.attributeType;\r\n        delete attribute.id;\r\n      });\r\n\r\n    buildingDto.occupancyCodes.forEach(occupancyCode => {\r\n      delete occupancyCode.description;\r\n    });\r\n\r\n    return buildingDto;\r\n  }\r\n\r\n  private setSiteId(form: FormGroup): FormGroup {\r\n    if (form.value.siteId && form.value.siteId.indexOf(',') > 0) {\r\n      form.value.siteId = form.value.siteId.split(',')[1];\r\n    }\r\n\r\n    return form;\r\n  }\r\n\r\n  private checkIsValidLatLon(form: FormGroup): boolean {\r\n    let validLatLon = true;\r\n\r\n    const formValue = form.value;\r\n\r\n    if (formValue.latitude !== '' && formValue.longitude !== '' && formValue.latitude !== null && formValue.longitude !== null) {\r\n      formValue.latitude = parseFloat(formValue.latitude).toFixed(8);\r\n      formValue.longitude = parseFloat(formValue.longitude).toFixed(8);\r\n      if (!formValue.latitude.match(/^(-?[1-8]?\\d(?:\\.\\d{6,8})|90(?:\\.0{6,8})?)$/)) {\r\n        this.alertService.error('Latitude value out of valid range (-90.000000 : 90.000000)');\r\n        validLatLon = false;\r\n      }\r\n      if (!formValue.longitude.match(/^(-?(?:1[0-7]|[1-9])?\\d(?:\\.\\d{6,8})|180(?:\\.0{6,8})?)$/)) {\r\n        this.alertService.error('Longitude value out of valid range (-180.000000 : 180.000000)');\r\n        validLatLon = false;\r\n      }\r\n    }\r\n\r\n    return validLatLon;\r\n  }\r\n\r\n  private combineForms(): any {\r\n    let combinedForms = new Array<any>();\r\n\r\n    this.formModels.forEach(model => {\r\n      combinedForms = combinedForms.concat(model);\r\n    });\r\n\r\n    return combinedForms;\r\n  }\r\n\r\n  private mapContentCodes(contentCodes: ContentCode[]): void {\r\n    const contentCodeControlIndex = this.formModels[this.formModelEnum.BuildingValuationFields].findIndex(c => c.id === 'contentCode');\r\n\r\n    if (contentCodeControlIndex) {\r\n      const options = this.buildingInfoService.mapContentCodeToFieldOptions(contentCodes);\r\n      this.formModels[this.formModelEnum.BuildingValuationFields][contentCodeControlIndex].options = options;\r\n    }\r\n  }\r\n\r\n  private mapSiteId(buildingDto: BuildingDto, buildingHierarchyByGroupId: BuildingHierarchyDto): any {\r\n    const siteIdControlIndex = this.formModels[this.formModelEnum.PrimaryInfoFields].findIndex(c => c.id === 'siteId');\r\n\r\n    if (buildingDto && siteIdControlIndex !== -1) {\r\n      this.formModels[this.formModelEnum.PrimaryInfoFields][\r\n        siteIdControlIndex\r\n      ].cascadedValueOptions = this.buildingInfoService.mapSitesToSelectOptions(buildingHierarchyByGroupId);\r\n\r\n      this.buildingDto.siteId = this.buildingInfoService.mapMemberSiteSelection(\r\n        buildingDto.siteId,\r\n        this.formModels[this.formModelEnum.PrimaryInfoFields][siteIdControlIndex].cascadedValueOptions\r\n      );\r\n    }\r\n  }\r\n  private mapAttributeTypesAndCodes(attributeTypesAndCodes: AttributeTypesAndCodesResult[]): void {\r\n    attributeTypesAndCodes.forEach(attributeType => {\r\n      for (let i = 0, len = this.formModels.length - 1; i < len; i++) {\r\n        if (this.formModels[i]) {\r\n          const index = this.formModels[i].findIndex(c => c.attributeTypeId === attributeType.value);\r\n\r\n          if (index !== -1) {\r\n            this.formModels[i][index].options = this.mapToFieldOptions(attributeType.options);\r\n          }\r\n        }\r\n      }\r\n\r\n      const index = this.formModels[FormModelEnum.BuildingAttributeFields].findIndex(c => c.attributeTypeId === attributeType.value);\r\n\r\n      if (index !== -1) {\r\n        this.formModels[FormModelEnum.BuildingAttributeFields][index].options = this.mapToFieldOptions(attributeType.options);\r\n      }\r\n\r\n      if (attributeType.value === OccupancyCodeBuildingAttributeTypeId) {\r\n        this.occupancyCodeOptions = attributeType.options;\r\n      }\r\n\r\n      const attributeIndex = this.buildingAttributes.findIndex(c => c.attributeType === attributeType.value);\r\n\r\n      if (attributeIndex !== -1) {\r\n        this.buildingAttributes[attributeIndex].attributeValueOptions = attributeType.options;\r\n      }\r\n    });\r\n  }\r\n\r\n  private mapToFieldOptions(options: AttributeTypeOption[]): FieldOption[] {\r\n    const fieldOptions = new Array<FieldOption>();\r\n\r\n    options.forEach(option => {\r\n      fieldOptions.push(<FieldOption>{\r\n        displayName: option.description,\r\n        key: option.buildingAttributeCodeId\r\n      });\r\n    });\r\n\r\n    return fieldOptions;\r\n  }\r\n\r\n  private mapValues(currentFormModel: any): any {\r\n    if (!this.buildingDto) {\r\n      return currentFormModel;\r\n    }\r\n\r\n    for (const prop of Object.keys(this.buildingDto).concat(this.customFields)) {\r\n      const formControl = currentFormModel.find(c => c.id === prop);\r\n\r\n      // If this property maps to a dropdown and the type is string, make sure its lowercase to account for GUIDs in uppercase.\r\n      if (PrimaryInfoDropDownModel.findIndex(pi => pi.name === prop) !== -1 && typeof this.buildingDto[prop] === 'string') {\r\n        this.buildingDto[prop] = (<string>this.buildingDto[prop]).toLowerCase();\r\n      }\r\n\r\n      if (formControl) {\r\n\r\n        formControl.value = this.mapValue(prop, formControl, formControl.value);\r\n\r\n        if (formControl.type === FieldType.DropDown && formControl.options.length > 0) {\r\n          formControl.options = this.helperService.sortCollection(formControl.options, 'displayName');\r\n       }\r\n\r\n      }\r\n    }\r\n\r\n    return currentFormModel;\r\n  }\r\n\r\n  private mapValidators(validators) {\r\n    const formValidators = [];\r\n\r\n    if (validators) {\r\n      for (const validation of Object.keys(validators)) {\r\n        if (validation === 'required') {\r\n          formValidators.push(Validators.required);\r\n        } else if (validation === 'min') {\r\n          formValidators.push(Validators.min(validators[validation]));\r\n        }\r\n      }\r\n    }\r\n    return formValidators;\r\n  }\r\n\r\n  private mapValue(prop: string, formControl: any, formControlValue: any) {\r\n    if (formControl) {\r\n      if (formControl.type === FieldType.DateTime) {\r\n          return this.buildingDto\r\n          ? this.intl.parseDate(this.buildingDto[prop])\r\n          : this.intl.parseDate(formControlValue);\r\n      }\r\n\r\n      if (formControl.type === FieldType.Percent) {\r\n        return this.buildingDto\r\n          ? this.intl.parseNumber(this.buildingDto[prop], 'p2', 'en')\r\n          : this.intl.parseNumber(formControlValue, 'p2', 'en');\r\n      }\r\n\r\n      if (formControl.type === FieldType.Double) {\r\n        return this.buildingDto\r\n          ? this.intl.parseNumber(this.buildingDto[prop], 'n2', 'en')\r\n          : this.intl.parseNumber(formControlValue, 'n2', 'en');\r\n      }\r\n\r\n      if (formControl.type === FieldType.Integer) {\r\n        return this.buildingDto\r\n          ? this.intl.parseNumber(this.buildingDto[prop], 'n', 'en')\r\n          : this.intl.parseNumber(formControlValue, 'n', 'en');\r\n      }\r\n    }\r\n\r\n    return this.buildingDto ? this.buildingDto[prop] : formControlValue;\r\n  }\r\n\r\n  handleAction(response: boolean) {\r\n    this.showValuationErrorsButton = response;\r\n  }\r\n\r\n  private valuateBuilding() {\r\n    this.buildingValuationComponent.open(false, this.selectedBuildings);\r\n  }\r\n\r\n  public handleCustomFieldLabelChange(field: FieldMetaDataDto) {\r\n    const existingCustomField = this.editedCustomFields.find(f => f.name === field.name);\r\n    if (existingCustomField) {\r\n      existingCustomField.displayName = field.displayName;\r\n    } else {\r\n      this.editedCustomFields.push(field);\r\n    }\r\n  }\r\n}\r\n","import { TranslatedComponent } from '../../../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../../../_core/i18n/translation-base-keys';\r\nimport { FamisGridService } from '../../../../../../_core/services/famis-grid.service';\r\nimport { AdditionalDataService } from '../../../../../services/additional-data/additional-data.service';\r\nimport { AdditionalDataGridService } from '../../../../../services/additional-data/additional-data-grid.service';\r\nimport { BuildingsService } from '../../../../../services/buildings.service';\r\nimport { UpsertBuildingAdditionComponent } from './upsert-building-addition.component';\r\nimport { WindowManager } from '../../../../../../_core/services/window-manager.service';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { BuildingDto, BuildingSelectedAddition } from '../../../../../../_api/_runtime/dtos/building.dto';\r\nimport { FamisGrid, FamisGridFeature } from '../../../../../../_models/shared/famis-grid-state.model';\r\nimport { ReferenceBuildingAdditionGroupDto } from '../../../../../../_api/_configuration/dtos/reference-building-addition-group.dto';\r\nimport { BuildingAdditionField, BuildingAdditionViewModel,\r\n  BuildingAdditionValueSummary } from '../../../../../../_models/building-addition-view.model';\r\nimport { WindowOption } from '../../../../../../_models/window-option';\r\nimport { ModalFormEvent } from '../../../../../../_enums/modal-form-event';\r\nimport { FamisGridActionEvent } from '../../../../../../_models/shared/famis-grid-action-event.model';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'additional-building-equipment-grid',\r\n  templateUrl: './additional-building-equipment-grid.component.html'\r\n})\r\nexport class AdditionalBuildingEquipmentComponent implements OnInit, TranslatedComponent {\r\n  @Input()\r\n  buildingDto: BuildingDto;\r\n\r\n  i18n = TranslationBaseKeys;\r\n\r\n  isReadOnly = false;\r\n  private windowSize = 500;\r\n\r\n  groupId: string;\r\n\r\n  selectedAdditions = new Array<BuildingSelectedAddition>();\r\n\r\n  public additionalEquipmentGrid: FamisGrid;\r\n  public groups = new Array<ReferenceBuildingAdditionGroupDto>();\r\n  public flattendGroups = new Array<BuildingAdditionField>();\r\n\r\n  constructor(\r\n    private famisGridService: FamisGridService,\r\n    private additionalDataService: AdditionalDataService,\r\n    private additionalDataGridService: AdditionalDataGridService,\r\n    public windowManager: WindowManager,\r\n    private buildingService: BuildingsService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.additionalEquipmentGrid = <FamisGrid>{\r\n      height: 300,\r\n      gridId: this.famisGridService.createGrid(),\r\n      windowSize: this.windowSize,\r\n      totalRecordCount: 0,\r\n      name: 'additionalEquipmentGrid',\r\n      hideTitle: true,\r\n      supportedOperators: [FamisGridFeature.Sort, FamisGridFeature.HideTableCounts],\r\n      actions: this.isReadOnly ? ['View'] : ['Edit', 'Delete'],\r\n      translationBaseKey: this.i18n.building,\r\n      scrollingMode: 'normal',\r\n    };\r\n\r\n    this.additionalEquipmentGrid.columnHeaders = [\r\n      {\r\n        name: 'description',\r\n        order: 0,\r\n        displayName: 'Description',\r\n        isSearchable: false,\r\n        isFilterable: false,\r\n        isSortable: true,\r\n        isFacetable: false,\r\n        isKey: false,\r\n        isCustom: false,\r\n        isEditable: false,\r\n        fieldType: 'template',\r\n        format: ''\r\n      }\r\n    ];\r\n    this.additionalEquipmentGrid.selectedHeaders = ['description'];\r\n\r\n    this.additionalDataService.initBuildingAdditionGroups();\r\n\r\n    this.additionalEquipmentGrid.loading = this.additionalDataService.buildingAdditionGroups$.subscribe(groups => {\r\n      this.groups = groups;\r\n\r\n      this.flattendGroups = this.additionalDataService.flattenedData;\r\n\r\n      if (this.buildingDto) {\r\n        this.updateAdditionsGrid();\r\n      }\r\n    });\r\n\r\n    this.buildingService.buildingRequest$.subscribe(buildingDto => {\r\n      if (buildingDto) {\r\n        this.additionalEquipmentGrid.loading = this.updateAdditionsGrid();\r\n      }\r\n    });\r\n  }\r\n\r\n  addAddition() {\r\n    const addAdditionModal = this.windowManager.open(UpsertBuildingAdditionComponent, 'Add Additional Building Equipment and Features',\r\n    <WindowOption>{ isModal: true });\r\n\r\n    addAdditionModal.content.instance.groups = this.groups;\r\n    addAdditionModal.content.instance.addition = <BuildingAdditionViewModel>{\r\n      groupDescription: '',\r\n      categoryCode: null,\r\n      categoryDescription: ''\r\n    };\r\n\r\n    addAdditionModal.content.instance.buildingDto = this.buildingDto;\r\n    addAdditionModal.content.instance.referenceData = this.flattendGroups;\r\n\r\n    addAdditionModal.result.subscribe(result => {\r\n      if (addAdditionModal.content.instance.action === ModalFormEvent.Save) {\r\n        this.mapCriterion(addAdditionModal.content.instance.result.criterion);\r\n\r\n        this.buildingService.setBuildingRequestSource(this.buildingDto);\r\n      }\r\n    });\r\n\r\n    addAdditionModal.content.instance.result.subscribe(modalResult => {\r\n      if (modalResult.action === ModalFormEvent.Save) {\r\n        this.mapCriterion(modalResult.criterion);\r\n\r\n        this.buildingService.setBuildingRequestSource(this.buildingDto);\r\n      }\r\n\r\n      this.windowManager.close();\r\n    });\r\n  }\r\n\r\n  handleActionEvent(event: FamisGridActionEvent) {\r\n    switch (event.action) {\r\n      case 'Edit':\r\n        const additionToEdit = this.buildingDto.buildingSelectedAdditions.find(c => c.id === event.item.description.id);\r\n\r\n        if (additionToEdit) {\r\n          const editAdditionModal = this.windowManager.open(\r\n            UpsertBuildingAdditionComponent,\r\n            'Edit Additional Building Equipment and Features',\r\n            <WindowOption>{ isModal: true }\r\n          );\r\n\r\n          editAdditionModal.content.instance.groups = this.groups;\r\n          editAdditionModal.content.instance.addition = additionToEdit;\r\n\r\n          editAdditionModal.content.instance.buildingDto = this.buildingDto;\r\n          editAdditionModal.content.instance.referenceData = this.flattendGroups;\r\n\r\n          editAdditionModal.content.instance.result.subscribe(modalResult => {\r\n            if (modalResult.action === ModalFormEvent.Save) {\r\n              if (modalResult.criteriaToDelete) {\r\n                this.deleteAdditions(modalResult.criteriaToDelete);\r\n              }\r\n\r\n              this.mapCriterion(modalResult.criterion);\r\n\r\n              this.buildingService.setBuildingRequestSource(this.buildingDto);\r\n            }\r\n\r\n            this.windowManager.close();\r\n          });\r\n        }\r\n\r\n        break;\r\n\r\n      case 'Delete':\r\n        this.deleteAdditions(event.item.description.criteriaSummary);\r\n\r\n        this.buildingService.setBuildingRequestSource(this.buildingDto);\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  private updateAdditionsGrid(): Subscription {\r\n    const s = this;\r\n\r\n    return this.additionalDataGridService.initBuildingAdditionGrid(this.buildingDto, this.flattendGroups).subscribe(result => {\r\n      this.additionalEquipmentGrid.totalRecordCount = result.length;\r\n\r\n      s.famisGridService.setCacheRecords(\r\n        this.mapToDescription(result),\r\n        s.additionalEquipmentGrid.gridId,\r\n        s.famisGridService.defaultSkip,\r\n        result.length,\r\n        this.additionalEquipmentGrid.windowSize\r\n      );\r\n    });\r\n  }\r\n\r\n  private mapToDescription(additions: BuildingAdditionViewModel[]): Array<any> {\r\n    const descriptions = new Array<any>();\r\n    const cost = new Array<any>();\r\n\r\n    additions.forEach(addition => {\r\n      descriptions.push({ description: addition });\r\n    });\r\n\r\n    return descriptions;\r\n  }\r\n\r\n  private mapCriterion(criterion: Array<BuildingSelectedAddition>) {\r\n    criterion.forEach((criteria, i) => {\r\n      if (i < criterion.length - 1) {\r\n        criteria.childAdditionCriterionId = criterion[i + 1] ? criterion[i + 1].id : null;\r\n      }\r\n\r\n      const index = this.buildingDto.buildingSelectedAdditions.findIndex(c => c.id === criteria.id);\r\n\r\n      if (index !== -1) {\r\n        this.buildingDto.buildingSelectedAdditions[index] = criteria;\r\n      } else {\r\n        this.buildingDto.buildingSelectedAdditions.push(criteria);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteAdditions(criteriaSummary: Array<BuildingAdditionValueSummary>) {\r\n    criteriaSummary.forEach(criteria => {\r\n      const index = this.buildingDto.buildingSelectedAdditions.findIndex(c => c.id === criteria.id);\r\n\r\n      if (index !== -1) {\r\n        this.buildingDto.buildingSelectedAdditions.splice(index, 1);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { HelperService } from '../../../../../../_core/services/helper.service';\r\nimport { TranslatedComponent } from '../../../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../../../_core/i18n/translation-base-keys';\r\nimport { AdditionalDataGridService } from '../../../../../services/additional-data/additional-data-grid.service';\r\nimport { BuildingSelectedAdjustment, BuildingDto, BuildingSelectedAddition } from '../../../../../../_api/_runtime/dtos/building.dto';\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { BuildingAdditionField, BuildingAdditionFormResult } from '../../../../../../_models/building-addition-view.model';\r\nimport { ReferenceBuildingAdditionGroupDto, ReferenceBuildingAdditionCategoryDto, ReferenceBuildingAdditionCriterionDto,\r\n  ReferenceBuildingAdjustmentDto } from '../../../../../../_api/_configuration/dtos/reference-building-addition-group.dto';\r\nimport { ModalFormEvent } from '../../../../../../_enums/modal-form-event';\r\nimport { FormGroup, NgForm } from '@angular/forms';\r\nimport { FieldType } from '../../../../../../_enums/field-type';\r\nimport { IntlService } from '@progress/kendo-angular-intl';\r\n\r\n@Component({\r\n  selector: 'upsert-building-addition',\r\n  templateUrl: './upsert-building-addition.component.html'\r\n})\r\nexport class UpsertBuildingAdditionComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  showValidationError = false;\r\n\r\n  selectedCategoryId = '';\r\n  selectedGroupId = '';\r\n  selectedQuantity;\r\n\r\n  @Input()\r\n  hideSubmit = false;\r\n  @Input()\r\n  modalTitle: string = null;\r\n  @Input()\r\n  buildingDto: BuildingDto;\r\n  @Input()\r\n  addition: BuildingSelectedAddition;\r\n  @Input()\r\n  referenceData: Array<BuildingAdditionField>;\r\n  @Input()\r\n  groups = new Array<ReferenceBuildingAdditionGroupDto>();\r\n\r\n  @Output()\r\n  modalEvent = new EventEmitter<ModalFormEvent>();\r\n\r\n  categories = new Array<ReferenceBuildingAdditionCategoryDto>();\r\n\r\n  criteriaForCategory = new Array<Array<ReferenceBuildingAdditionCriterionDto>>();\r\n  adjustmentsForCategory = new Array<ReferenceBuildingAdjustmentDto>();\r\n\r\n  criteriaFormGroup: FormGroup;\r\n\r\n  formControlTypes = FieldType;\r\n\r\n  initialCriteria = new Array<BuildingSelectedAddition>();\r\n\r\n  selectedCriteria = new Array<BuildingSelectedAddition>();\r\n  selectedAdjustments = new Array<BuildingSelectedAdjustment>();\r\n\r\n  result = new EventEmitter<BuildingAdditionFormResult>();\r\n\r\n  action: ModalFormEvent;\r\n\r\n\r\n  constructor(\r\n    private intl: IntlService,\r\n    private helperService: HelperService,\r\n    private additionalDataGridService: AdditionalDataGridService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n\r\n    let selectedCriteria = this.referenceData.find(c => c.criteria.id === this.addition.referenceBuildingAdditionCriterionId);\r\n\r\n    if (selectedCriteria) {\r\n      this.selectedGroupId = selectedCriteria.groupDto.id;\r\n      this.selectedCategoryId = selectedCriteria.categoryDto.id;\r\n\r\n      this.setCategories();\r\n      this.setCriteriaAndAdjustments();\r\n\r\n      this.setValue(this.addition, selectedCriteria);\r\n\r\n      let currentAddition = this.additionalDataGridService.getAdditionById(this.addition.childAdditionCriterionId);\r\n\r\n      while (currentAddition) {\r\n        selectedCriteria = this.referenceData.find(c => c.criteria.id === currentAddition.referenceBuildingAdditionCriterionId);\r\n\r\n        this.setValue(currentAddition, selectedCriteria);\r\n\r\n        currentAddition = this.additionalDataGridService.getAdditionById(currentAddition.childAdditionCriterionId);\r\n      }\r\n      this.initialCriteria = this.selectedCriteria;\r\n    }\r\n    if (this.selectedQuantity == null) {\r\n       this.selectedQuantity = 1;\r\n    }\r\n  }\r\n\r\n  dismiss() {\r\n    this.result.emit(<BuildingAdditionFormResult>{ action: ModalFormEvent.Dismiss });\r\n  }\r\n\r\n  save(form: NgForm) {\r\n    if (form.valid) {\r\n      const s = this;\r\n\r\n      let criteriaToDelete = new Array<BuildingSelectedAddition>();\r\n\r\n      criteriaToDelete = this.initialCriteria.filter(function(x) {\r\n        return s.selectedCriteria.findIndex(c => !!c && c.id === x.id) === -1;\r\n      });\r\n\r\n      if (this.selectedCriteria.length > 1) {\r\n        if (this.selectedCriteria[1]) {\r\n          this.selectedCriteria[1].buildingSelectedAdjustments = Object.assign([], this.selectedAdjustments);\r\n          this.selectedCriteria[1].quantity = this.selectedQuantity;\r\n        }\r\n      } else {\r\n        if (this.selectedCriteria[0]) {\r\n          this.selectedCriteria[0].buildingSelectedAdjustments = Object.assign([], this.selectedAdjustments);\r\n          this.selectedCriteria[0].quantity = this.selectedQuantity;\r\n        }\r\n      }\r\n      this.result.emit(<BuildingAdditionFormResult>{\r\n        action: ModalFormEvent.Save,\r\n        criterion: this.selectedCriteria,\r\n        criteriaToDelete: criteriaToDelete\r\n      });\r\n    } else {\r\n      this.showValidationError = true;\r\n    }\r\n  }\r\n\r\n  changeGroup() {\r\n    this.selectedCategoryId = undefined;\r\n    this.criteriaForCategory = new Array<any>();\r\n    this.selectedCriteria = new Array<BuildingSelectedAddition>();\r\n    this.adjustmentsForCategory = new Array<ReferenceBuildingAdjustmentDto>();\r\n    this.selectedAdjustments = new Array<BuildingSelectedAdjustment>();\r\n\r\n    this.setCategories();\r\n  }\r\n\r\n  setCategories() {\r\n    const group = this.groups.find(c => c.id === this.selectedGroupId);\r\n\r\n    if (group) {\r\n      this.categories = group.referenceBuildingAdditionCategoryDtos;\r\n    }\r\n  }\r\n\r\n  setCriteriaAndAdjustments() {\r\n    this.criteriaForCategory = new Array<any>();\r\n    this.selectedCriteria = new Array<BuildingSelectedAddition>();\r\n    this.adjustmentsForCategory = new Array<ReferenceBuildingAdjustmentDto>();\r\n    this.selectedAdjustments = new Array<BuildingSelectedAdjustment>();\r\n\r\n    const category = this.categories.find(c => c.id === this.selectedCategoryId);\r\n\r\n    if (category) {\r\n      this.criteriaForCategory = this.helperService.groupBy(category.referenceBuildingAdditionCriterionDtos, 'index');\r\n\r\n      this.criteriaForCategory.forEach(option => {\r\n        this.selectedCriteria[option[0].index] = {\r\n          id: this.helperService.generateGuid(),\r\n          buildingId: this.buildingDto.id,\r\n          referenceBuildingAdditionCriterionId: option[0].id,\r\n          childAdditionCriterionId: null,\r\n          buildingSelectedAdjustments: new Array<BuildingSelectedAdjustment>(),\r\n          criterionValue: null,\r\n          quantity: null,\r\n          totalCost: null\r\n        };\r\n      });\r\n\r\n      this.adjustmentsForCategory = category.referenceBuildingAdditionAdjustmentDtos.map(c => c.referenceBuildingAdjustmentDto);\r\n\r\n      category.referenceBuildingAdditionAdjustmentDtos.forEach(aa => {\r\n        this.selectedAdjustments.push(<BuildingSelectedAdjustment>{\r\n          id: this.helperService.generateGuid(),\r\n          referenceBuildingAdditionAdjustmentId: aa.id,\r\n          value: null\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  private setValue(criteria: BuildingSelectedAddition, referenceItem: BuildingAdditionField) {\r\n    if (criteria.buildingSelectedAdjustments) {\r\n      for (let i = 0; i < this.selectedAdjustments.length; i++) {\r\n        const existing = criteria.buildingSelectedAdjustments\r\n        .find(b => b.referenceBuildingAdditionAdjustmentId === this.selectedAdjustments[i].referenceBuildingAdditionAdjustmentId);\r\n        if (existing) {\r\n          this.selectedAdjustments[i] = existing;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (criteria.quantity != null) {\r\n      this.selectedQuantity = criteria.quantity;\r\n    }\r\n\r\n    this.selectedCriteria[referenceItem.criteria.index] = {\r\n      id: criteria.id,\r\n      buildingId: this.buildingDto.id,\r\n      referenceBuildingAdditionCriterionId: criteria.referenceBuildingAdditionCriterionId,\r\n      childAdditionCriterionId: criteria.childAdditionCriterionId,\r\n      buildingSelectedAdjustments: new Array<BuildingSelectedAdjustment>(),\r\n      criterionValue: null,\r\n      quantity: criteria.quantity,\r\n      totalCost: criteria.totalCost\r\n    };\r\n    if (!!criteria.criterionValue) {\r\n      this.selectedCriteria[referenceItem.criteria.index].criterionValue = this.intl.parseNumber(criteria.criterionValue, 'n', 'en');\r\n    }\r\n  }\r\n}\r\n","import { FamisGridService } from '../../../../../../_core/services/famis-grid.service';\r\nimport { TranslatedComponent } from '../../../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../../../_core/i18n/translation-base-keys';\r\nimport { BuildingsService } from '../../../../../services/buildings.service';\r\nimport { UpsertBuildingAttributeComponent } from './upsert-building-attribute.component';\r\nimport { HelperService } from '../../../../../../_core/services/helper.service';\r\nimport { WindowManager } from '../../../../../../_core/services/window-manager.service';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { FamisGrid, FamisGridFeature } from '../../../../../../_models/shared/famis-grid-state.model';\r\nimport { ReferenceBuildingAdditionGroupDto } from '../../../../../../_api/_configuration/dtos/reference-building-addition-group.dto';\r\nimport { BuildingAdditionField } from '../../../../../../_models/building-addition-view.model';\r\nimport { BuildingDto, BuildingAttributeDto } from '../../../../../../_api/_runtime/dtos/building.dto';\r\nimport { AttributeTypeOption } from '../../../../../../_api/_configuration/dtos/attribute-types-and-codes-result.dto';\r\nimport { BuildingAttributeGridItemViewModel, BuildingAttributeValueViewModel } from '../../../../../../_models/building-form.model';\r\nimport { FieldType } from '../../../../../../_enums/field-type';\r\nimport { FamisGridActionEvent } from '../../../../../../_models/shared/famis-grid-action-event.model';\r\nimport { WindowOption } from '../../../../../../_models/window-option';\r\nimport { ModalFormEvent } from '../../../../../../_enums/modal-form-event';\r\nimport { SortDescriptor } from '@progress/kendo-data-query';\r\n\r\n@Component({\r\n  selector: 'building-attributes-grid',\r\n  templateUrl: './building-attributes-grid.component.html'\r\n})\r\nexport class BuildingAttributesGridComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  isReadOnly = false;\r\n  private windowSize = 500;\r\n\r\n  public additionalEquipmentGrid: FamisGrid;\r\n  public groups = new Array<ReferenceBuildingAdditionGroupDto>();\r\n  public flattendGroups = new Array<BuildingAdditionField>();\r\n  buildingDto: BuildingDto;\r\n\r\n  flattenedBuildingAttributeTypes = new Array<AttributeTypeOption>();\r\n\r\n  @Input()\r\n  buildingAttributes = new Array<BuildingAttributeGridItemViewModel>();\r\n\r\n  constructor(\r\n    private famisGridService: FamisGridService,\r\n    private buildingService: BuildingsService,\r\n    private windowManager: WindowManager,\r\n    private helperService: HelperService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.additionalEquipmentGrid = <FamisGrid>{\r\n      height: 350,\r\n      gridId: this.famisGridService.createGrid(),\r\n      windowSize: this.windowSize,\r\n      totalRecordCount: 0,\r\n      name: 'ConstructionCodes',\r\n      hideTitle: true,\r\n      supportedOperators: [FamisGridFeature.HideTableCounts],\r\n      actions: this.isReadOnly ? ['View'] : ['Edit'],\r\n      translationBaseKey: this.i18n.building,\r\n      scrollingMode: 'normal'\r\n    };\r\n\r\n    this.additionalEquipmentGrid.columnHeaders = [\r\n      {\r\n        name: 'attributeTypeName',\r\n        order: 0,\r\n        displayName: 'Type',\r\n        isSearchable: false,\r\n        isFilterable: false,\r\n        isSortable: true,\r\n        isFacetable: false,\r\n        isKey: false,\r\n        isCustom: false,\r\n        isEditable: false,\r\n        fieldType: FieldType.String,\r\n        format: '',\r\n        width: '244',\r\n      },\r\n      {\r\n        name: 'valueSummary',\r\n        order: 0,\r\n        displayName: 'Value',\r\n        isSearchable: false,\r\n        isFilterable: false,\r\n        isSortable: true,\r\n        isFacetable: false,\r\n        isKey: false,\r\n        isCustom: false,\r\n        isEditable: false,\r\n        fieldType: 'buildingAttribute',\r\n        format: '',\r\n        width: '244'\r\n      }\r\n    ];\r\n\r\n    this.additionalEquipmentGrid.selectedHeaders = ['attributeTypeName', 'valueSummary'];\r\n\r\n    this.buildingAttributes.forEach(attribute => {\r\n      if (attribute.attributeValueOptions) {\r\n        attribute.attributeValueOptions.forEach(option => {\r\n          this.flattenedBuildingAttributeTypes.push(option);\r\n        });\r\n      }\r\n    });\r\n\r\n    this.updateGrid();\r\n\r\n    this.buildingService.buildingRequest$.subscribe(buildingDto => {\r\n      this.buildingDto = buildingDto;\r\n      this.updateGrid();\r\n    });\r\n  }\r\n \r\n  handleActionEvent(event: FamisGridActionEvent) {\r\n    switch (event.action) {\r\n      case 'Edit':\r\n        this.editAttribute(event.item);\r\n        break;\r\n\r\n      case 'Delete':\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  editAttribute(attributeToEdit: BuildingAttributeGridItemViewModel) {\r\n    const upsertBuildingAttribute = this.windowManager.open(UpsertBuildingAttributeComponent, 'Edit Building Attribute', <WindowOption>{\r\n      isModal: true\r\n    });\r\n\r\n    upsertBuildingAttribute.content.instance.attribute = attributeToEdit;\r\n    upsertBuildingAttribute.content.instance.buildingDto = this.buildingDto;\r\n\r\n    upsertBuildingAttribute.content.instance.result.subscribe(modalResult => {\r\n      if (modalResult.action === ModalFormEvent.Save) {\r\n        modalResult.selectedAttributes.forEach(attribute => {\r\n          const index = this.buildingDto.buildingAttributes.findIndex(c => c.id === attribute.id);\r\n\r\n          if (index !== -1) {\r\n            this.buildingDto.buildingAttributes[index] = attribute;\r\n          } else {\r\n            attribute.isAdded = true;\r\n            delete attribute.id;\r\n            this.buildingDto.buildingAttributes.push(attribute);\r\n          }\r\n        });\r\n\r\n        modalResult.attributesToDelete.forEach(attribute => {\r\n          const index = this.buildingDto.buildingAttributes.findIndex(c => c.id === attribute.id);\r\n\r\n          if (index !== -1) {\r\n            this.buildingDto.buildingAttributes.splice(index, 1);\r\n          }\r\n        });\r\n        this.buildingService.setBuildingRequestSource(this.buildingDto);\r\n      }\r\n\r\n      this.windowManager.close();\r\n    });\r\n  }\r\n\r\n  private updateGrid(sortDescriptor?: SortDescriptor): void {\r\n    const sortField = 'order';\r\n    const sortDir = sortDescriptor && sortDescriptor[0] ? sortDescriptor[0].dir : 'asc';\r\n\r\n    this.famisGridService.setCacheRecords(\r\n      this.helperService.sortCollection(\r\n        this.buildingDto ? this.mapValues(this.buildingAttributes) : this.buildingAttributes,\r\n        sortField,\r\n        sortDir\r\n      ),\r\n      this.additionalEquipmentGrid.gridId,\r\n      this.famisGridService.defaultSkip,\r\n      this.buildingAttributes.length,\r\n      this.additionalEquipmentGrid.windowSize\r\n    );\r\n  }\r\n\r\n  private mapValues(attributes: BuildingAttributeGridItemViewModel[]): Array<BuildingAttributeGridItemViewModel> {\r\n    const mappedValues = new Array<BuildingAttributeGridItemViewModel>();\r\n\r\n    attributes.forEach(a => {\r\n      const values = this.buildingDto.buildingAttributes.filter(c => c.attributeType === a.attributeType);\r\n      a.selectedValues = values;\r\n      a.valueSummary = this.mapSummary(values);\r\n      mappedValues.push(a);\r\n    });\r\n\r\n    return mappedValues;\r\n  }\r\n\r\n  private mapSummary(selectedAttributes: BuildingAttributeDto[]): Array<BuildingAttributeValueViewModel> {\r\n    const attributeSummary = new Array<BuildingAttributeValueViewModel>();\r\n\r\n    selectedAttributes.forEach(selectedAttribute => {\r\n      const a = this.flattenedBuildingAttributeTypes.find(c => c.buildingAttributeCodeId === selectedAttribute.buildingAttributeCodeId);\r\n\r\n      if (a) {\r\n        attributeSummary.push(<BuildingAttributeValueViewModel>{\r\n          description: a.description,\r\n          value: selectedAttribute.value\r\n        });\r\n      }\r\n    });\r\n\r\n    return attributeSummary;\r\n  }\r\n}\r\n","import { TranslatedComponent } from '../../../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../../../_core/i18n/translation-base-keys';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { HelperService } from '../../../../../../_core/services/helper.service';\r\nimport { Component, OnInit, Input, EventEmitter } from '@angular/core';\r\nimport { BuildingDto, BuildingAttributeDto } from '../../../../../../_api/_runtime/dtos/building.dto';\r\nimport { BuildingAttributeGridItemViewModel, BuildingAttributeModalResult } from '../../../../../../_models/building-form.model';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ModalFormEvent } from '../../../../../../_enums/modal-form-event';\r\n\r\n@Component({\r\n  selector: 'upsert-building-addition',\r\n  templateUrl: './upsert-building-attribute.component.html'\r\n})\r\nexport class UpsertBuildingAttributeComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  @Input()\r\n  modalTitle: string = null;\r\n  @Input()\r\n  buildingDto: BuildingDto;\r\n  @Input()\r\n  attribute: BuildingAttributeGridItemViewModel;\r\n\r\n  selectedValues = new Array<BuildingAttributeDto>();\r\n  valuesToDelete = new Array<BuildingAttributeDto>();\r\n\r\n  result = new EventEmitter<BuildingAttributeModalResult>();\r\n\r\n  showValidationError = false;\r\n\r\n  constructor(private activeModal: NgbActiveModal, private helperService: HelperService) {}\r\n\r\n  ngOnInit() {\r\n    this.selectedValues = JSON.parse(JSON.stringify(this.attribute.selectedValues));\r\n\r\n    if (this.attribute.selectedValues.length === 0) {\r\n      this.add();\r\n    }\r\n  }\r\n\r\n  save(form: NgForm) {\r\n    if (form.valid) {\r\n      this.result.emit(<BuildingAttributeModalResult>{\r\n        action: ModalFormEvent.Save,\r\n        selectedAttributes: this.selectedValues,\r\n        attributesToDelete: this.valuesToDelete\r\n      });\r\n\r\n    } else {\r\n      this.showValidationError = true;\r\n    }\r\n  }\r\n\r\n  remove(index: number) {\r\n    this.valuesToDelete.push(this.selectedValues[index]);\r\n    this.selectedValues.splice(index, 1);\r\n  }\r\n\r\n  add() {\r\n    this.selectedValues.push(<BuildingAttributeDto>{\r\n      id: this.helperService.generateGuid(),\r\n      buildingAttributeCodeId: '',\r\n      value: null,\r\n      attributeType: this.attribute.attributeType\r\n    });\r\n  }\r\n\r\n  dismiss() {\r\n    this.result.emit(<BuildingAttributeModalResult>{});\r\n  }\r\n}\r\n","import { HelperService } from '../../../../../../../_core/services/helper.service';\r\nimport { TranslatedComponent } from '../../../../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../../../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, EventEmitter } from '@angular/core';\r\nimport { CustomAddtionDto } from '../../../../../../../_api/_runtime/dtos/building.dto';\r\nimport { FieldMetaDataDto } from '../../../../../../../_api/dtos/inventory/field-meta-data.dto';\r\nimport { FormActionEvent } from '../../../../../../../_models/form-action-event.model';\r\nimport { FieldCategory } from '../../../../../../../_enums/field-category';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { FormField } from '../../../../../../../_models/form-field.model';\r\nimport { FormAction } from '../../../../../../../_enums/form-action';\r\n\r\n@Component({\r\n  selector: 'remove-customaddition',\r\n  templateUrl: 'remove-customaddition.component.html'\r\n})\r\nexport class RemoveCustomAdditionComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  customAdditionDto = <CustomAddtionDto>{};\r\n  fieldMetaData = new Array<FieldMetaDataDto>();\r\n  submitResponse = new EventEmitter<FormActionEvent>();\r\n\r\n  public isSaving = false;\r\n\r\n  public FieldCategory: FieldCategory;\r\n\r\n  form: FormGroup;\r\n  defaultFormFields = new Array<FormField>();\r\n\r\n  fields = new Array<FormField>();\r\n\r\n  constructor(private helperService: HelperService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.fieldMetaData.forEach((field, index) => {\r\n      this.defaultFormFields.push(this.mapMetaDataToField(field, index + 1));\r\n    });\r\n\r\n    this.form = this.helperService.toFormGroup(this.defaultFormFields);\r\n  }\r\n\r\n  remove(): void {\r\n    this.submitResponse.emit({ action: FormAction.Remove, formGroup: this.form, dto: '' });\r\n  }\r\n\r\n  cancel(): void {\r\n    this.submitResponse.emit({ action: FormAction.Cancel });\r\n  }\r\n\r\n  private mapMetaDataToField(field: FieldMetaDataDto, defaultOrder?: number): FormField {\r\n    return <FormField>{\r\n      id: field.name,\r\n      type: field.fieldType,\r\n      value: this.customAdditionDto ? this.customAdditionDto[field.name] : '',\r\n      displayName: field.displayName,\r\n      options: field.options,\r\n      cascadedValueOptions: field.cascadedValueOptions,\r\n      cascadedValues: field.cascadedValues,\r\n      order: defaultOrder\r\n    };\r\n  }\r\n\r\n}\r\n","import { HelperService } from '../../../../../../../_core/services/helper.service';\r\nimport { TranslatedComponent } from '../../../../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../../../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, EventEmitter } from '@angular/core';\r\nimport { CustomAddtionDto } from '../../../../../../../_api/_runtime/dtos/building.dto';\r\nimport { FieldMetaDataDto } from '../../../../../../../_api/dtos/inventory/field-meta-data.dto';\r\nimport { FormActionEvent } from '../../../../../../../_models/form-action-event.model';\r\nimport { FormAction } from '../../../../../../../_enums/form-action';\r\nimport { FieldCategory } from '../../../../../../../_enums/field-category';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { FormField } from '../../../../../../../_models/form-field.model';\r\n\r\n@Component({\r\n  selector: 'upsert-customaddition',\r\n  templateUrl: 'upsert-customaddition.component.html'\r\n})\r\nexport class UpsertCustomAdditionComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  customAdditionDto: CustomAddtionDto;\r\n  fieldMetaData = new Array<FieldMetaDataDto>();\r\n  submitResponse = new EventEmitter<FormActionEvent>();\r\n  formAction: FormAction;\r\n  action: string;\r\n\r\n  public isSaving = false;\r\n\r\n  public FieldCategory: FieldCategory;\r\n\r\n  form: FormGroup;\r\n  defaultFormFields = new Array<FormField>();\r\n\r\n  fields = new Array<FormField>();\r\n\r\n  constructor(\r\n    private helperService: HelperService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.fieldMetaData.forEach((field, index) => {\r\n      this.defaultFormFields.push(this.mapMetaDataToField(field, index + 1));\r\n    });\r\n\r\n    this.action = this.formAction === 0 ? 'Add' : 'Edit';\r\n    this.form = this.helperService.toFormGroup(this.defaultFormFields);\r\n  }\r\n\r\n  save(): void {\r\n    if (!this.customAdditionDto) {\r\n      this.customAdditionDto = <CustomAddtionDto>{};\r\n    }\r\n    this.customAdditionDto.cost = this.form.value.cost;\r\n    this.customAdditionDto.description = this.form.value.description;\r\n    this.submitResponse.emit({ action: this.formAction, formGroup: this.form, dto: this.customAdditionDto });\r\n  }\r\n\r\n  cancel(): void {\r\n    this.submitResponse.emit({ action: FormAction.Cancel });\r\n  }\r\n\r\n  private mapMetaDataToField(field: FieldMetaDataDto, defaultOrder?: number): FormField {\r\n    return <FormField>{\r\n      id: field.name,\r\n      type: field.fieldType,\r\n      value: this.customAdditionDto ? this.mapFieldToValue(field) : '',\r\n      displayName: field.displayName,\r\n      options: field.options,\r\n      cascadedValueOptions: field.cascadedValueOptions,\r\n      cascadedValues: field.cascadedValues,\r\n      order: defaultOrder,\r\n      required: true\r\n    };\r\n  }\r\n\r\n  mapFieldToValue(field: FieldMetaDataDto) {\r\n    let cost: number;\r\n    if (field.name === 'cost') {\r\n      cost = parseFloat(this.customAdditionDto[field.name]);\r\n    }\r\n    return cost !== undefined ? cost : this.customAdditionDto[field.name];\r\n  }\r\n\r\n}\r\n","import { FamisGridComponent } from '../../../../../../_shared/components/famis-grid.component';\r\nimport { TranslatedComponent } from '../../../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../../../_core/i18n/translation-base-keys';\r\nimport { FamisGridService } from '../../../../../../_core/services/famis-grid.service';\r\nimport { UpsertCustomAdditionComponent } from './actions/upsert-customaddition.component';\r\nimport { RemoveCustomAdditionComponent } from './actions/remove-customaddition.component';\r\nimport { customAdditionsHeaders } from '../../../../../../processing/default-values/custom-addition-headers';\r\nimport { BuildingsService } from '../../../../../services/buildings.service';\r\nimport { customAdditionFormModel } from '../../form-models/custom-addition-model';\r\nimport { WindowManager } from '../../../../../../_core/services/window-manager.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Component, OnInit, OnDestroy, Input, ViewChild } from '@angular/core';\r\nimport { BuildingDto } from '../../../../../../_api/_runtime/dtos/building.dto';\r\nimport { FamisGrid, FamisGridFeature } from '../../../../../../_models/shared/famis-grid-state.model';\r\nimport { Subject } from 'rxjs';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormActionEvent } from '../../../../../../_models/form-action-event.model';\r\nimport { WindowRef } from '@progress/kendo-angular-dialog';\r\nimport { FormAction } from '../../../../../../_enums/form-action';\r\nimport { FamisGridActionEvent } from '../../../../../../_models/shared/famis-grid-action-event.model';\r\nimport { WindowOption } from '../../../../../../_models/window-option';\r\nimport { FamisGridCacheResult } from '../../../../../../_models/shared/famis-grid-cache-result.model';\r\n\r\n@Component({\r\n  selector: 'custom-additions-grid',\r\n  templateUrl: './custom-additions-grid.component.html'\r\n})\r\nexport class CustomAdditionsGridComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  @Input()\r\n  buildingDto: BuildingDto;\r\n\r\n  public customAdditionsGrid: FamisGrid;\r\n  public buildingId: string;\r\n\r\n  @ViewChild(FamisGridComponent, {static: true}) famisGrid: FamisGridComponent;\r\n\r\n  private windowSize = 500;\r\n  private destoryed$ = new Subject();\r\n\r\n  constructor(\r\n    private famisGridService: FamisGridService,\r\n    public windowManager: WindowManager,\r\n    private buildingService: BuildingsService,\r\n    private route: ActivatedRoute,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buildingId = this.route.snapshot.paramMap.get('buildingId');\r\n\r\n    this.customAdditionsGrid = <FamisGrid>{\r\n      height: 175,\r\n      gridId: this.famisGridService.createGrid(),\r\n      windowSize: this.windowSize,\r\n      totalRecordCount: 0,\r\n      name: 'customAdditions',\r\n      hideTitle: true,\r\n      supportedOperators: [FamisGridFeature.HideTableCounts],\r\n      actions: ['Edit', 'Remove'],\r\n      translationBaseKey: this.i18n.customAdditions,\r\n    };\r\n\r\n    this.customAdditionsGrid.columnHeaders = customAdditionsHeaders;\r\n    this.customAdditionsGrid.selectedHeaders = ['description', 'cost'];\r\n    this.processCacheUpdate();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destoryed$.next();\r\n  }\r\n\r\n  onFormActionEvent(response: FormActionEvent, modal: WindowRef, itemIndex: number) {\r\n    switch (response.action) {\r\n      case FormAction.Save:\r\n        this.buildingDto.customAdditions.push(response.dto);\r\n        this.updateBuilding();\r\n        break;\r\n      case FormAction.Edit:\r\n        const index = this.buildingDto.customAdditions.findIndex(a => a.id === response.dto.id);\r\n        this.buildingDto.customAdditions[index] = response.dto;\r\n        this.updateBuilding();\r\n        break;\r\n      case FormAction.Remove:\r\n        this.buildingDto.customAdditions.splice(itemIndex, 1);\r\n        this.updateBuilding();\r\n        break;\r\n      case FormAction.Cancel:\r\n        modal.close();\r\n        break;\r\n      default:\r\n        throw new Error(`Action ${response.action} not implemented.`);\r\n    }\r\n    modal.close();\r\n  }\r\n\r\n  updateBuilding() {\r\n    if (this.buildingId) {\r\n      this.customAdditionsGrid.loading = this.buildingService\r\n        .updateBuilding(this.buildingId, this.buildingDto)\r\n        .pipe(takeUntil(this.destoryed$))\r\n        .subscribe(result => {\r\n          this.buildingService.setBuildingRequestSource(result);\r\n          this.buildingDto = result;\r\n          this.updateCache();\r\n        });\r\n    } else {\r\n      this.buildingService.setBuildingRequestSource(this.buildingDto);\r\n      this.updateCache();\r\n    }\r\n  }\r\n\r\n  handleActionEvent(event: FamisGridActionEvent) {\r\n    const s = this;\r\n    switch (event.action) {\r\n      case 'Edit':\r\n        const upsertCustomAdditionModal = this.windowManager.open(UpsertCustomAdditionComponent, 'Edit Custom Addition', <WindowOption>{\r\n          isModal: true\r\n        });\r\n\r\n        upsertCustomAdditionModal.content.instance.fieldMetaData = customAdditionFormModel;\r\n        upsertCustomAdditionModal.content.instance.customAdditionDto = event.item;\r\n        upsertCustomAdditionModal.content.instance.formAction = FormAction.Edit;\r\n        upsertCustomAdditionModal.content.instance.submitResponse.subscribe(response => {\r\n          s.onFormActionEvent(response, upsertCustomAdditionModal, event.rowIndex);\r\n        });\r\n\r\n        break;\r\n\r\n      case 'Remove':\r\n        const removeCustomAdditionModal = this.windowManager.open(RemoveCustomAdditionComponent, 'Remove Custom Addition', <\r\n          WindowOption\r\n        >{\r\n          isModal: true\r\n        });\r\n\r\n        removeCustomAdditionModal.content.instance.fieldMetaData = customAdditionFormModel;\r\n        removeCustomAdditionModal.content.instance.customAdditionDto = event.item;\r\n        removeCustomAdditionModal.content.instance.submitResponse.subscribe(response => {\r\n          s.onFormActionEvent(response, removeCustomAdditionModal, event.rowIndex);\r\n        });\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  addCustomAddition() {\r\n    const s = this;\r\n\r\n    const addCustomAdditionModal = this.windowManager.open(UpsertCustomAdditionComponent, 'Add Custom Addition', <WindowOption>{\r\n      isModal: true\r\n    });\r\n\r\n    addCustomAdditionModal.content.instance.fieldMetaData = customAdditionFormModel;\r\n    addCustomAdditionModal.content.instance.formAction = FormAction.Save;\r\n    addCustomAdditionModal.content.instance.submitResponse.subscribe(response => {\r\n      s.onFormActionEvent(response, addCustomAdditionModal, 0);\r\n    });\r\n  }\r\n\r\n  updateCache(request?: FamisGridCacheResult) {\r\n    this.processCacheUpdate(request);\r\n  }\r\n\r\n  private processCacheUpdate(cacheUpdateRequest?: FamisGridCacheResult): void {\r\n    if (this.buildingDto) {\r\n      this.customAdditionsGrid.totalRecordCount = this.buildingDto.customAdditions.length;\r\n\r\n      this.famisGridService.setCacheRecords(\r\n        this.buildingDto.customAdditions,\r\n        this.customAdditionsGrid.gridId,\r\n        0,\r\n        this.buildingDto.customAdditions.length,\r\n        this.customAdditionsGrid.windowSize\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { FamisGridService } from '../../../../../../_core/services/famis-grid.service';\r\nimport { TranslatedComponent } from '../../../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../../../_core/i18n/translation-base-keys';\r\nimport { BuildingsService } from '../../../../../services/buildings.service';\r\nimport { HelperService } from '../../../../../../_core/services/helper.service';\r\nimport { UpsertOccupancyCodesComponent } from './upsert-occupancy-code.component';\r\nimport { WindowManager } from '../../../../../../_core/services/window-manager.service';\r\nimport { Component, OnInit, Input, ViewContainerRef } from '@angular/core';\r\nimport { FamisGrid, FamisGridFeature } from '../../../../../../_models/shared/famis-grid-state.model';\r\nimport { ReferenceBuildingAdditionGroupDto } from '../../../../../../_api/_configuration/dtos/reference-building-addition-group.dto';\r\nimport { BuildingAdditionField } from '../../../../../../_models/building-addition-view.model';\r\nimport { BuildingDto, OccupancyCodeDto } from '../../../../../../_api/_runtime/dtos/building.dto';\r\nimport { AttributeTypeOption } from '../../../../../../_api/_configuration/dtos/attribute-types-and-codes-result.dto';\r\nimport { FieldType } from '../../../../../../_enums/field-type';\r\nimport { FamisGridActionEvent } from '../../../../../../_models/shared/famis-grid-action-event.model';\r\nimport { BuildingAttributeGridItemViewModel } from '../../../../../../_models/building-form.model';\r\nimport { WindowOption } from '../../../../../../_models/window-option';\r\nimport { ModalFormEvent } from '../../../../../../_enums/modal-form-event';\r\nimport { SortDescriptor } from '@progress/kendo-data-query';\r\nimport { OccupancyCodeGridItemModel } from '../../../../../../_models/occupancy-code-grid-item-model';\r\n\r\n@Component({\r\n  selector: 'occupancy-codes-grid',\r\n  templateUrl: './occupancy-codes-grid.component.html'\r\n})\r\nexport class OccupancyCodesGridComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  isReadOnly = false;\r\n  private windowSize = 250;\r\n\r\n  public additionalEquipmentGrid: FamisGrid;\r\n  public groups = new Array<ReferenceBuildingAdditionGroupDto>();\r\n  public flattendGroups = new Array<BuildingAdditionField>();\r\n  buildingDto: BuildingDto;\r\n\r\n  @Input()\r\n  occupancyCodeOptions = new Array<AttributeTypeOption>();\r\n\r\n  constructor(\r\n    private famisGridService: FamisGridService,\r\n    private buildingService: BuildingsService,\r\n    private windowManager: WindowManager,\r\n    private helperService: HelperService,\r\n    public container: ViewContainerRef\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.additionalEquipmentGrid = <FamisGrid>{\r\n      height: 155,\r\n      gridId: this.famisGridService.createGrid(),\r\n      windowSize: this.windowSize,\r\n      totalRecordCount: 0,\r\n      name: 'occupancyCodes',\r\n      hideTitle: true,\r\n      supportedOperators: [FamisGridFeature.Sort, FamisGridFeature.HideTableCounts],\r\n      actions: this.isReadOnly ? ['View'] : ['Edit', 'Delete'],\r\n      translationBaseKey: this.i18n.building,\r\n    };\r\n\r\n    this.additionalEquipmentGrid.columnHeaders = [\r\n      {\r\n        name: 'description',\r\n        order: 0,\r\n        displayName: 'Occupancy Code',\r\n        isSearchable: false,\r\n        isFilterable: false,\r\n        isSortable: true,\r\n        isFacetable: false,\r\n        isKey: false,\r\n        isCustom: false,\r\n        isEditable: false,\r\n        fieldType: FieldType.String,\r\n        format: ''\r\n      },\r\n      {\r\n        name: 'storyHeight',\r\n        order: 0,\r\n        displayName: 'Story Height',\r\n        isSearchable: false,\r\n        isFilterable: false,\r\n        isSortable: true,\r\n        isFacetable: false,\r\n        isKey: false,\r\n        isCustom: false,\r\n        isEditable: false,\r\n        fieldType: FieldType.Double,\r\n        format: ''\r\n      },\r\n      {\r\n        name: 'percent',\r\n        order: 0,\r\n        displayName: 'Percent',\r\n        isSearchable: false,\r\n        isFilterable: false,\r\n        isSortable: true,\r\n        isFacetable: false,\r\n        isKey: false,\r\n        isCustom: false,\r\n        isEditable: false,\r\n        fieldType: FieldType.Double,\r\n        format: ''\r\n      }\r\n    ];\r\n\r\n    this.additionalEquipmentGrid.selectedHeaders = ['description', 'storyHeight', 'percent'];\r\n\r\n    this.buildingService.buildingRequest$.subscribe(buildingDto => {\r\n      if (buildingDto) {\r\n        this.buildingDto = buildingDto;\r\n        this.updateGrid();\r\n      }\r\n    });\r\n  }\r\n\r\n  handleActionEvent(event: FamisGridActionEvent) {\r\n    switch (event.action) {\r\n      case 'Edit':\r\n        this.upsert(event.item);\r\n        break;\r\n\r\n      case 'Delete':\r\n        const index = this.buildingDto.occupancyCodes.findIndex(c => c.buildingAttributeCodeId === event.item.id);\r\n        this.buildingDto.occupancyCodes.splice(index, 1);\r\n\r\n        this.buildingService.setBuildingRequestSource(this.buildingDto);\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  upsert(itemToEdit?: BuildingAttributeGridItemViewModel) {\r\n    const upsertOccupancyCodesModal = this.windowManager.open(\r\n      UpsertOccupancyCodesComponent,\r\n      itemToEdit ? 'Edit Occupancy Code' : 'Add Occupancy Code',\r\n      <WindowOption>{\r\n        isModal: true\r\n      }\r\n    );\r\n\r\n    upsertOccupancyCodesModal.window.instance.focus();\r\n\r\n    upsertOccupancyCodesModal.content.instance.occupancyCode = itemToEdit;\r\n    upsertOccupancyCodesModal.content.instance.modalTitle = itemToEdit ? 'Edit' : 'Add';\r\n\r\n    upsertOccupancyCodesModal.content.instance.buildingDto = this.buildingDto;\r\n    upsertOccupancyCodesModal.content.instance.options = this.occupancyCodeOptions;\r\n\r\n    upsertOccupancyCodesModal.content.instance.result.subscribe(modalResult => {\r\n      if (modalResult.action === ModalFormEvent.Save) {\r\n        const index = this.buildingDto.occupancyCodes.findIndex(c => c.id === modalResult.occupancyCode.id);\r\n\r\n        if (index !== -1) {\r\n          this.buildingDto.occupancyCodes[index] = modalResult.occupancyCode;\r\n        } else {\r\n          this.buildingDto.occupancyCodes.push(modalResult.occupancyCode);\r\n        }\r\n\r\n        this.buildingService.setBuildingRequestSource(this.buildingDto);\r\n      }\r\n\r\n      this.windowManager.close();\r\n    });\r\n  }\r\n\r\n  addOccupancyCode() {\r\n    this.upsert();\r\n  }\r\n\r\n  private updateGrid(sortDescriptor?: SortDescriptor): void {\r\n    const sortField = sortDescriptor && sortDescriptor[0] ? sortDescriptor[0].field : 'description';\r\n    const sortDir = sortDescriptor && sortDescriptor[0] ? sortDescriptor[0].dir : 'asc';\r\n\r\n    this.famisGridService.setCacheRecords(\r\n      this.helperService.sortCollection(this.mapvalues(this.buildingDto.occupancyCodes), sortField, sortDir),\r\n      this.additionalEquipmentGrid.gridId,\r\n      this.famisGridService.defaultSkip,\r\n      this.buildingDto.occupancyCodes.length,\r\n      this.additionalEquipmentGrid.windowSize\r\n    );\r\n  }\r\n\r\n  private mapvalues(occupancyCodes: OccupancyCodeDto[]) {\r\n    const gridItems = new Array<OccupancyCodeGridItemModel>();\r\n\r\n    occupancyCodes.forEach(occupancyCode => {\r\n      const option = this.occupancyCodeOptions.find(c => c.buildingAttributeCodeId === occupancyCode.buildingAttributeCodeId);\r\n\r\n      if (option) {\r\n        gridItems.push(<OccupancyCodeGridItemModel>{\r\n          id: occupancyCode.id,\r\n          description: option.description,\r\n          percent: occupancyCode.percent,\r\n          storyHeight: occupancyCode.storyHeight,\r\n          buildingAttributeCodeId: occupancyCode.buildingAttributeCodeId\r\n        });\r\n      }\r\n    });\r\n\r\n    return gridItems;\r\n  }\r\n}\r\n","import { TranslatedComponent } from '../../../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../../../_core/i18n/translation-base-keys';\r\nimport { HelperService } from '../../../../../../_core/services/helper.service';\r\nimport { OccupancyCodeBuildingAttributeTypeId } from '../../form-models/building-attributes-model';\r\nimport { Component, OnInit, Input, EventEmitter } from '@angular/core';\r\nimport { BuildingDto, OccupancyCodeDto } from '../../../../../../_api/_runtime/dtos/building.dto';\r\nimport { AttributeTypeOption } from '../../../../../../_api/_configuration/dtos/attribute-types-and-codes-result.dto';\r\nimport { OccupancyCodeModalResult } from '../../../../../../_models/occupancy-code-grid-item-model';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ModalFormEvent } from '../../../../../../_enums/modal-form-event';\r\n\r\n@Component({\r\n  selector: 'upsert-occupancy-code',\r\n  templateUrl: './upsert-occupancy-code.component.html'\r\n})\r\nexport class UpsertOccupancyCodesComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  @Input()\r\n  modalTitle: string = null;\r\n  @Input()\r\n  buildingDto: BuildingDto;\r\n  @Input()\r\n  occupancyCode: OccupancyCodeDto;\r\n\r\n  @Input()\r\n  options = new Array<AttributeTypeOption>();\r\n\r\n  showValidationError = false;\r\n\r\n  result = new EventEmitter<OccupancyCodeModalResult>();\r\n\r\n  constructor(private helperService: HelperService) {}\r\n\r\n  ngOnInit() {\r\n    if (!this.occupancyCode) {\r\n      this.occupancyCode = <OccupancyCodeDto>{\r\n        id: this.helperService.generateGuid(),\r\n        buildingAttributeCodeId: '',\r\n        storyHeight: null,\r\n        percent: null\r\n      };\r\n    } else {\r\n      this.occupancyCode = Object.assign({}, this.occupancyCode);\r\n    }\r\n\r\n    this.occupancyCode.attributeType = OccupancyCodeBuildingAttributeTypeId;\r\n  }\r\n\r\n  save(form: NgForm) {\r\n    if (form.valid) {\r\n      this.result.emit(<OccupancyCodeModalResult>{ action: ModalFormEvent.Save, occupancyCode: this.occupancyCode });\r\n    } else {\r\n      this.showValidationError = true;\r\n    }\r\n  }\r\n\r\n  dismiss() {\r\n    this.result.emit(<OccupancyCodeModalResult>{});\r\n  }\r\n}\r\n","import { HelperService } from '../../../../../../../_core/services/helper.service';\r\nimport { TranslatedComponent } from '../../../../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../../../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, EventEmitter } from '@angular/core';\r\nimport { UserFactorDto } from '../../../../../../../_api/_runtime/dtos/building.dto';\r\nimport { FormActionEvent } from '../../../../../../../_models/form-action-event.model';\r\nimport { FieldCategory } from '../../../../../../../_enums/field-category';\r\nimport { FormField } from '../../../../../../../_models/form-field.model';\r\nimport { FormAction } from '../../../../../../../_enums/form-action';\r\nimport { FieldMetaDataDto } from '../../../../../../../_api/dtos/inventory/field-meta-data.dto';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'remove-userfactor',\r\n  templateUrl: 'remove-userfactor.component.html'\r\n})\r\nexport class RemoveUserFactorComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  userFactorDto = <UserFactorDto>{};\r\n  fieldMetaData = new Array<FieldMetaDataDto>();\r\n  submitResponse = new EventEmitter<FormActionEvent>();\r\n\r\n  public isSaving = false;\r\n\r\n  public FieldCategory: FieldCategory;\r\n\r\n  form: FormGroup;\r\n  defaultFormFields = new Array<FormField>();\r\n\r\n  fields = new Array<FormField>();\r\n\r\n  constructor(private helperService: HelperService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.fieldMetaData.forEach((field, index) => {\r\n      this.defaultFormFields.push(this.mapMetaDataToField(field, index + 1));\r\n    });\r\n\r\n    this.form = this.helperService.toFormGroup(this.defaultFormFields);\r\n  }\r\n\r\n  remove(): void {\r\n    this.submitResponse.emit({ action: FormAction.Remove, formGroup: this.form, dto: '' });\r\n  }\r\n\r\n  cancel(): void {\r\n    this.submitResponse.emit({ action: FormAction.Cancel });\r\n  }\r\n\r\n  private mapMetaDataToField(field: FieldMetaDataDto, defaultOrder?: number): FormField {\r\n    return <FormField>{\r\n      id: field.name,\r\n      type: field.fieldType,\r\n      value: this.userFactorDto ? this.userFactorDto[field.name] : '',\r\n      displayName: field.displayName,\r\n      options: field.options,\r\n      cascadedValueOptions: field.cascadedValueOptions,\r\n      cascadedValues: field.cascadedValues,\r\n      order: defaultOrder\r\n    };\r\n  }\r\n\r\n}\r\n","import { TranslatedComponent } from '../../../../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../../../../_core/i18n/translation-base-keys';\r\nimport { HelperService } from '../../../../../../../_core/services/helper.service';\r\nimport { Component, OnInit, EventEmitter } from '@angular/core';\r\nimport { UserFactorDto } from '../../../../../../../_api/_runtime/dtos/building.dto';\r\nimport { FieldMetaDataDto } from '../../../../../../../_api/dtos/inventory/field-meta-data.dto';\r\nimport { FormActionEvent } from '../../../../../../../_models/form-action-event.model';\r\nimport { FormAction } from '../../../../../../../_enums/form-action';\r\nimport { FieldCategory } from '../../../../../../../_enums/field-category';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { FormField } from '../../../../../../../_models/form-field.model';\r\n\r\n@Component({\r\n  selector: 'upsert-userfactor',\r\n  templateUrl: 'upsert-userfactor.component.html'\r\n})\r\nexport class UpsertUserFactorComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  userFactorDto: UserFactorDto;\r\n  fieldMetaData = new Array<FieldMetaDataDto>();\r\n  submitResponse = new EventEmitter<FormActionEvent>();\r\n  formAction: FormAction;\r\n  action: string;\r\n\r\n  public isSaving = false;\r\n\r\n  public FieldCategory: FieldCategory;\r\n\r\n  form: FormGroup;\r\n  defaultFormFields = new Array<FormField>();\r\n\r\n  fields = new Array<FormField>();\r\n\r\n  constructor(\r\n    private helperService: HelperService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.fieldMetaData.forEach((field, index) => {\r\n      this.defaultFormFields.push(this.mapMetaDataToField(field, index + 1));\r\n    });\r\n\r\n    this.action = this.formAction === 0 ? 'Add' : 'Edit';\r\n    this.form = this.helperService.toFormGroup(this.defaultFormFields);\r\n  }\r\n\r\n  save(): void {\r\n    if (!this.userFactorDto) {\r\n      this.userFactorDto = <UserFactorDto> {};\r\n    }\r\n    this.userFactorDto.factor = this.form.value.factor;\r\n    this.userFactorDto.description = this.form.value.description;\r\n    this.submitResponse.emit({ action: this.formAction, formGroup: this.form, dto: this.userFactorDto });\r\n  }\r\n\r\n  cancel(): void {\r\n    this.submitResponse.emit({ action: FormAction.Cancel });\r\n  }\r\n\r\n  private mapMetaDataToField(field: FieldMetaDataDto, defaultOrder?: number): FormField {\r\n    return <FormField>{\r\n      id: field.name,\r\n      type: field.fieldType,\r\n      value: this.userFactorDto ? this.mapFieldToValue(field) : '',\r\n      displayName: field.displayName,\r\n      options: field.options,\r\n      cascadedValueOptions: field.cascadedValueOptions,\r\n      cascadedValues: field.cascadedValues,\r\n      order: defaultOrder,\r\n      required: true\r\n    };\r\n  }\r\n\r\n  mapFieldToValue(field: FieldMetaDataDto) {\r\n    let factor: number;\r\n\r\n    if (field.name === 'factor') {\r\n      factor = parseFloat(this.userFactorDto[field.name]);\r\n    }\r\n\r\n    return factor !== undefined ? factor : this.userFactorDto[field.name];\r\n  }\r\n\r\n}\r\n","import { TranslatedComponent } from '../../../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../../../_core/i18n/translation-base-keys';\r\nimport { FamisGridService } from '../../../../../../_core/services/famis-grid.service';\r\nimport { userFactorHeaders } from '../../../../../../processing/default-values/user-factor-headers';\r\nimport { UpsertUserFactorComponent } from './actions/upsert-userfactor.component';\r\nimport { BuildingsService } from '../../../../../services/buildings.service';\r\nimport { userFactorFormModel } from '../../form-models/user-factor-model';\r\nimport { FamisGridComponent } from '../../../../../../_shared/components/famis-grid.component';\r\nimport { WindowManager } from '../../../../../../_core/services/window-manager.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Component, OnInit, OnDestroy, Input, ViewChild } from '@angular/core';\r\nimport { BuildingDto } from '../../../../../../_api/_runtime/dtos/building.dto';\r\nimport { FamisGrid, FamisGridFeature } from '../../../../../../_models/shared/famis-grid-state.model';\r\nimport { Subject } from 'rxjs';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormActionEvent } from '../../../../../../_models/form-action-event.model';\r\nimport { WindowRef } from '@progress/kendo-angular-dialog';\r\nimport { FormAction } from '../../../../../../_enums/form-action';\r\nimport { FamisGridActionEvent } from '../../../../../../_models/shared/famis-grid-action-event.model';\r\nimport { WindowOption } from '../../../../../../_models/window-option';\r\nimport { FamisGridCacheResult } from '../../../../../../_models/shared/famis-grid-cache-result.model';\r\n\r\n@Component({\r\n  selector: 'user-factor-grid',\r\n  templateUrl: './user-factor-grid.component.html'\r\n})\r\nexport class UserFactorGridComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  @Input()\r\n  buildingDto: BuildingDto;\r\n\r\n  public userFactorsGrid: FamisGrid;\r\n  public displayCostReplacementNew: number;\r\n  public buildingId: string;\r\n\r\n  @ViewChild(FamisGridComponent, {static: true}) famisGrid: FamisGridComponent;\r\n\r\n  private windowSize = 300;\r\n  private destoryed$ = new Subject();\r\n\r\n  constructor(\r\n    private famisGridService: FamisGridService,\r\n    public windowManager: WindowManager,\r\n    private buildingService: BuildingsService,\r\n    private route: ActivatedRoute,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buildingId = this.route.snapshot.paramMap.get('buildingId');\r\n\r\n    this.userFactorsGrid = <FamisGrid>{\r\n      height: 150,\r\n      gridId: this.famisGridService.createGrid(),\r\n      windowSize: this.windowSize,\r\n      totalRecordCount: 0,\r\n      name: 'userFactor',\r\n      hideTitle: true,\r\n      supportedOperators: [FamisGridFeature.HideTableCounts],\r\n      actions: ['Edit', 'Remove'],\r\n      translationBaseKey: this.i18n.userFactors,\r\n    };\r\n\r\n    this.userFactorsGrid.columnHeaders = userFactorHeaders;\r\n    this.userFactorsGrid.selectedHeaders = ['description', 'factor'];\r\n    this.processCacheUpdate();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destoryed$.next();\r\n  }\r\n\r\n  onFormActionEvent(response: FormActionEvent, modal: WindowRef, itemIndex: number) {\r\n    switch (response.action) {\r\n      case FormAction.Save:\r\n        this.buildingDto.userFactors.push(response.dto);\r\n        this.updateBuilding();\r\n        break;\r\n      case FormAction.Edit:\r\n        const index = this.buildingDto.userFactors.findIndex(a => a.id === response.dto.id);\r\n        this.buildingDto.userFactors[index] = response.dto;\r\n        this.updateBuilding();\r\n        break;\r\n      case FormAction.Cancel:\r\n        modal.close();\r\n        break;\r\n      default:\r\n        throw new Error(`Action ${response.action} not implemented.`);\r\n    }\r\n    modal.close();\r\n  }\r\n\r\n  updateBuilding() {\r\n    if (this.buildingId) {\r\n      this.userFactorsGrid.loading = this.buildingService\r\n        .updateBuilding(this.buildingId, this.buildingDto)\r\n        .pipe(takeUntil(this.destoryed$))\r\n        .subscribe(result => {\r\n          this.buildingService.setBuildingRequestSource(result);\r\n          this.buildingDto = result;\r\n          this.updateCache();\r\n        });\r\n    } else {\r\n      this.buildingService.setBuildingRequestSource(this.buildingDto);\r\n      this.updateCache();\r\n    }\r\n  }\r\n\r\n  handleActionEvent(event: FamisGridActionEvent) {\r\n    const s = this;\r\n    switch (event.action) {\r\n      case 'Edit':\r\n        const upsertUserFactorModal = this.windowManager.open(UpsertUserFactorComponent, 'Edit User Factor', <WindowOption>{\r\n          isModal: true\r\n        });\r\n\r\n        upsertUserFactorModal.content.instance.fieldMetaData = userFactorFormModel;\r\n        upsertUserFactorModal.content.instance.userFactorDto = event.item;\r\n        upsertUserFactorModal.content.instance.formAction = FormAction.Edit;\r\n        upsertUserFactorModal.content.instance.submitResponse.subscribe(response => {\r\n          s.onFormActionEvent(response, upsertUserFactorModal, event.rowIndex);\r\n        });\r\n\r\n        break;\r\n\r\n      case 'Remove':\r\n\r\n      this.buildingDto.userFactors.splice(event.rowIndex, 1);\r\n      this.updateBuilding();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  addUserFactor() {\r\n    const s = this;\r\n\r\n    const addUserFactorModal = this.windowManager.open(UpsertUserFactorComponent, 'Add User Factor', <WindowOption>{\r\n      isModal: true\r\n    });\r\n\r\n    addUserFactorModal.content.instance.fieldMetaData = userFactorFormModel;\r\n    addUserFactorModal.content.instance.formAction = FormAction.Save;\r\n    addUserFactorModal.content.instance.submitResponse.subscribe(response => {\r\n      s.onFormActionEvent(response, addUserFactorModal, 0);\r\n    });\r\n  }\r\n\r\n  updateCache(request?: FamisGridCacheResult) {\r\n    this.processCacheUpdate(request);\r\n  }\r\n\r\n  private processCacheUpdate(cacheUpdateRequest?: FamisGridCacheResult): void {\r\n    if (this.buildingDto) {\r\n      this.userFactorsGrid.totalRecordCount = this.buildingDto.userFactors.length;\r\n\r\n      this.famisGridService.setCacheRecords(\r\n        this.buildingDto.userFactors,\r\n        this.userFactorsGrid.gridId,\r\n        0,\r\n        this.buildingDto.userFactors.length,\r\n        this.userFactorsGrid.windowSize\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { BuildingAttributeGridItemViewModel } from '../../../../../_models/building-form.model';\r\n\r\nexport const OccupancyCodeBuildingAttributeTypeId = 101;\r\n\r\nexport const BuildingAttributes = [\r\n  <BuildingAttributeGridItemViewModel>{\r\n    attributeType: 103,\r\n    attributeTypeName: 'ISO Codes',\r\n    valueName: 'ISO Code',\r\n    order: 1\r\n  },\r\n\r\n  <BuildingAttributeGridItemViewModel>{\r\n    attributeType: 16,\r\n    attributeTypeName: 'Exterior Wall Finishes',\r\n    valueName: 'Exterior Wall Finish',\r\n    order: 2\r\n  },\r\n\r\n  <BuildingAttributeGridItemViewModel>{\r\n    attributeType: 21,\r\n    attributeTypeName: 'Roof Materials',\r\n    valueName: 'Roof Material',\r\n    order: 3\r\n  },\r\n\r\n  <BuildingAttributeGridItemViewModel>{\r\n    attributeType: 22,\r\n    attributeTypeName: 'Roof Pitches',\r\n    valueName: 'Roof Pitch',\r\n    order: 4\r\n  },\r\n\r\n  <BuildingAttributeGridItemViewModel>{\r\n    attributeType: 18,\r\n    attributeTypeName: 'Heating Systems',\r\n    valueName: 'Heating System',\r\n    order: 5\r\n  },\r\n\r\n  <BuildingAttributeGridItemViewModel>{\r\n    attributeType: 14,\r\n    attributeTypeName: 'Cooling Systems',\r\n    valueName: 'Cooling System',\r\n    order: 6\r\n  },\r\n\r\n  <BuildingAttributeGridItemViewModel>{\r\n    attributeType: 15,\r\n    attributeTypeName: 'Electrical Qualities',\r\n    valueName: 'Electrical Quality',\r\n    order: 7\r\n  },\r\n\r\n  <BuildingAttributeGridItemViewModel>{\r\n    attributeType: 20,\r\n    attributeTypeName: 'Partition Wall Structures',\r\n    valueName: 'Partition Wall Structure',\r\n    order: 8\r\n  },\r\n\r\n  <BuildingAttributeGridItemViewModel>{\r\n    attributeType: 19,\r\n    attributeTypeName: 'Partition Wall Finishes',\r\n    valueName: 'Partition Wall Finish',\r\n    order: 9\r\n  },\r\n\r\n  <BuildingAttributeGridItemViewModel>{\r\n    attributeType: 17,\r\n    attributeTypeName: 'Floor Finishes',\r\n    valueName: 'Floor Finish',\r\n    order: 10\r\n  },\r\n\r\n  <BuildingAttributeGridItemViewModel>{\r\n    attributeType: 13,\r\n    attributeTypeName: 'Ceiling Finishes',\r\n    valueName: 'Ceiling Finish',\r\n    order: 11\r\n  }\r\n];\r\n","import { FormField } from '../../../../../_models/form-field.model';\r\nimport { FieldType } from '../../../../../_enums/field-type';\r\n\r\nexport const InitialFloodPlainFieldLayout = {\r\n  left: ['floodPlainFloodZoneIdentifier',\r\n  'baseFloodElevation'],\r\n  right: ['floodZoneCertificateNo',\r\n  'floodZoneLoadDate']\r\n};\r\n\r\nexport const InitialFloodPlainFields = [\r\n  <FormField>{\r\n    id: 'floodPlainFloodZoneIdentifier',\r\n    required: false,\r\n    displayName: 'Flood Zone Identifier',\r\n    value: '',\r\n    type: FieldType.String,\r\n  },\r\n \r\n\r\n  <FormField>{\r\n    id: 'baseFloodElevation',\r\n    required: false,\r\n\r\n    displayName: 'Base Flood Elevation',\r\n    value: '',\r\n    isReadOnly: true,\r\n    type: FieldType.String,\r\n    name: ''\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'floodZoneCertificateNo',\r\n    required: false,\r\n\r\n    displayName: 'Flood Zone Certificate No',\r\n    value: '',\r\n    isReadOnly: true,\r\n    type: FieldType.String,\r\n    name: ''\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'floodZoneLoadDate',\r\n    required: false,\r\n\r\n    displayName: 'Flood Zone Load Date',\r\n    value: '',\r\n    isReadOnly: true,\r\n    type: FieldType.String,\r\n    name: ''\r\n  }\r\n];\r\n\r\nexport const BuildingFloodPlainFieldLayout = {\r\n  left: [   'floodPlainStatusCode',\r\n  'floodPlainDescription',\r\n  'floodPlainNFIPCommunityFirmDate',\r\n  'floodPlainNFIPCommunityName',\r\n  'floodPlainNFIPCommunityParticipationStartDate',\r\n  'floodPlainNFIPCounty',\r\n  'floodPlainNFIPState',\r\n  'floodPlainFloodDepth',\r\n  'floodPlainFloodZoneboundary1Identifier',\r\n  'floodPlainFloodZoneboundary1Distance',\r\n  'floodPlainFloodZoneboundary2Identifier'],\r\n  right: ['floodPlainFloodZoneboundary2Distance',\r\n  'floodZone',\r\n  'floodPlainMapIdentifier',\r\n  'floodPlainMapIndicator',\r\n  'floodPlainMapPanelDate',\r\n  'floodPlainMapPanelIdentifier',\r\n  'floodPlainMapPanelSuffixIdentifier',\r\n  'floodPlainSpecialFloodHazardAreaDistanceFeetCount',\r\n  'floodPlainPartialIndicator',\r\n  'floodPlainSpecialFloodHazardAreaIndicator']\r\n};\r\n\r\nexport const BuildingFloodPlainModel = [\r\n  <FormField>{\r\n    id: 'floodPlainStatusCode',\r\n    required: false,\r\n\r\n    displayName: 'Flood Plain Status Code',\r\n    value: '',\r\n    isReadOnly: true,\r\n    type: FieldType.String,\r\n    name: ''\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'floodPlainDescription',\r\n    required: false,\r\n\r\n    displayName: 'Flood Plain Description',\r\n    value: '',\r\n    isReadOnly: true,\r\n    type: FieldType.String,\r\n    name: ''\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'floodPlainNFIPCommunityFirmDate',\r\n    required: false,\r\n\r\n    displayName: 'Flood Plain NFIP Community Identifier',\r\n    value: '',\r\n    isReadOnly: true,\r\n    type: FieldType.DateTime,\r\n    name: ''\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'floodPlainNFIPCommunityName',\r\n    required: false,\r\n\r\n    displayName: 'Flood Plain NFIP Community Name',\r\n    value: '',\r\n    isReadOnly: true,\r\n    type: FieldType.String,\r\n    name: ''\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'floodPlainNFIPCommunityParticipationStartDate',\r\n    required: false,\r\n\r\n    displayName: 'Flood Plain NFIP Community Participation Start Date',\r\n    value: '',\r\n    isReadOnly: true,\r\n    type: FieldType.DateTime,\r\n    name: ''\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'floodPlainNFIPCounty',\r\n    required: false,\r\n\r\n    displayName: 'Flood Plain NFIP County',\r\n    value: '',\r\n    isReadOnly: true,\r\n    type: FieldType.String,\r\n    name: ''\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'floodPlainNFIPState',\r\n    required: false,\r\n\r\n    displayName: 'Flood Plain NFIP State',\r\n    value: '',\r\n    isReadOnly: true,\r\n    type: FieldType.String,\r\n    name: ''\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'floodPlainFloodDepth',\r\n    required: false,\r\n\r\n    displayName: 'Flood Plain Flood Depth',\r\n    value: '',\r\n    isReadOnly: true,\r\n    type: FieldType.Double,\r\n    name: ''\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'floodPlainFloodZoneboundary1Identifier',\r\n    required: false,\r\n\r\n    displayName: 'Flood Plain Flood Zone Boundary 1 Identifier',\r\n    value: '',\r\n    isReadOnly: true,\r\n    type: FieldType.String,\r\n    name: ''\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'floodPlainFloodZoneboundary1Distance',\r\n    required: false,\r\n\r\n    displayName: 'Flood Plain Flood Zone Boundary 1 Distance',\r\n    value: '',\r\n    isReadOnly: true,\r\n    type: FieldType.Double,\r\n    name: ''\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'floodPlainFloodZoneboundary2Identifier',\r\n    required: false,\r\n\r\n    displayName: 'Flood Plain Flood Zone Boundary 2 Identifier',\r\n    value: '',\r\n    isReadOnly: true,\r\n    type: FieldType.String,\r\n    name: ''\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'floodPlainFloodZoneboundary2Distance',\r\n    required: false,\r\n\r\n    displayName: 'Flood Plain Flood Zone Boundary 2 Distance',\r\n    value: '',\r\n    isReadOnly: true,\r\n    type: FieldType.Double,\r\n    name: ''\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'floodZone',\r\n    required: false,\r\n\r\n    displayName: 'Flood Zone',\r\n    value: '',\r\n    type: FieldType.String,\r\n    isReadOnly: true,\r\n    name: ''\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'floodPlainMapIdentifier',\r\n    required: false,\r\n\r\n    displayName: 'Flood Plain Map Identifier',\r\n    value: '',\r\n    isReadOnly: true,\r\n    type: FieldType.String,\r\n    name: ''\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'floodPlainMapIndicator',\r\n    required: false,\r\n\r\n    displayName: 'Flood Plain Map Indicator',\r\n    value: '',\r\n    isReadOnly: true,\r\n    type: FieldType.String,\r\n    name: ''\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'floodPlainMapPanelDate',\r\n    required: false,\r\n\r\n    displayName: 'Flood Plain Map Panel Date',\r\n    value: '',\r\n    isReadOnly: true,\r\n    type: FieldType.DateTime,\r\n    name: ''\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'floodPlainMapPanelIdentifier',\r\n    required: false,\r\n\r\n    displayName: 'Flood Plain Map Panel Identifier',\r\n    value: '',\r\n    isReadOnly: true,\r\n    type: FieldType.String,\r\n    name: ''\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'floodPlainMapPanelSuffixIdentifier',\r\n    required: false,\r\n\r\n    displayName: 'Flood Plain Map Panel Suffix Identifier',\r\n    value: '',\r\n    isReadOnly: true,\r\n    type: FieldType.String,\r\n    name: ''\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'floodPlainSpecialFloodHazardAreaDistanceFeetCount',\r\n    required: false,\r\n\r\n    displayName: 'Flood Plain Special Flood Hazard Area Distance Feet Count',\r\n    value: '',\r\n    isReadOnly: true,\r\n    type: FieldType.Double,\r\n    name: ''\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'floodPlainPartialIndicator',\r\n    required: false,\r\n\r\n    displayName: 'Flood Plain Partial Indicator',\r\n    value: '',\r\n    isReadOnly: true,\r\n    type: FieldType.String,\r\n    name: ''\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'floodPlainSpecialFloodHazardAreaIndicator',\r\n    required: false,\r\n\r\n    displayName: 'Flood Plain Special Flood Hazard Area Indicator',\r\n    value: '',\r\n    isReadOnly: true,\r\n    type: FieldType.String,\r\n    name: ''\r\n  }\r\n];\r\n","import { FormField } from '../../../../../_models/form-field.model';\r\nimport { FieldType } from '../../../../../_enums/field-type';\r\n\r\nexport const CopedataWindFieldLayout = {\r\n  left: [\r\n    'secondaryATCOccupancyCode',\r\n    'secondaryRMSConstructionCode',\r\n    'secondaryConstructionQuality',\r\n    'secondaryRoofCovering',\r\n    'secondaryRoofAgeCondition',\r\n    'secondaryRoofGeometry',\r\n    'secondaryRoofAnchor',\r\n    'secondaryRoofSheathingAttachment',\r\n    'secondaryRoofEquipmentBracing',\r\n    'secondaryRoofMaintenance',\r\n    'secondaryRoofFramingType',\r\n    'secondaryBasement',\r\n    'secondaryCommercialAppurtenantStructures',\r\n    'secondaryResidentialAppurtenantStructures',\r\n    'secondaryCladdingType',\r\n    'secondaryFrameFoundationConnection'\r\n  ],\r\n  right: [\r\n    'secondaryGroundLevelEquipment',\r\n    'secondaryOpeningProtection',\r\n    'secondaryFlashingAndCopingQuality',\r\n    'secondaryContentGrade',\r\n    'secondaryAtticInsulation',\r\n    'secondaryFireAlarm',\r\n    'secondaryFloodProtection',\r\n    'secondaryMechanicalElectricalEquipment',\r\n    'secondaryPlumbingInsulation',\r\n    'secondaryResistanceDoors',\r\n    'secondaryIceDamProtection',\r\n    'secondaryTreeDensity',\r\n    'secondaryWindMissiles',\r\n    'secondaryRoofVentilation',\r\n    'secondaryRoofParapetsChimneys',\r\n    'secondarySprinklerType',\r\n    'secondarySnowGuards'\r\n  ]\r\n};\r\n\r\nexport const CopedataWindFields = [\r\n  <FormField>{\r\n    id: 'secondaryATCOccupancyCode',\r\n    required: false,\r\n\r\n    displayName: 'ATC Occupancy Code',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryRMSConstructionCode',\r\n    required: false,\r\n\r\n    displayName: 'RMS Construction Code',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryConstructionQuality',\r\n    required: false,\r\n\r\n    displayName: 'Construction Quality',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryRoofCovering',\r\n    required: false,\r\n\r\n    displayName: 'Roof Covering',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryRoofAgeCondition',\r\n    required: false,\r\n\r\n    displayName: 'Roof Age/Condition',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryRoofGeometry',\r\n    required: false,\r\n\r\n    displayName: 'Roof Geometry',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryRoofAnchor',\r\n    required: false,\r\n\r\n    displayName: 'Roof Anchor',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryRoofSheathingAttachment',\r\n    required: false,\r\n\r\n    displayName: 'Roof Sheathing Attachment',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryRoofEquipmentBracing',\r\n    required: false,\r\n\r\n    displayName: 'Roof Equipment Bracing',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryRoofMaintenance',\r\n    required: false,\r\n\r\n    displayName: 'Roof Maintenance',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryRoofFramingType',\r\n    required: false,\r\n\r\n    displayName: 'Roof Framing Type',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryBasement',\r\n    required: false,\r\n\r\n    displayName: 'Basement',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryCommercialAppurtenantStructures',\r\n    required: false,\r\n\r\n    displayName: 'Commercial Appurtenant Structures',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryResidentialAppurtenantStructures',\r\n    required: false,\r\n\r\n    displayName: 'Residential Appurtenant Structures',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryCladdingType',\r\n    required: false,\r\n\r\n    displayName: 'Cladding Type',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryFrameFoundationConnection',\r\n    required: false,\r\n\r\n    displayName: 'Frame-Foundation Connection',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryGroundLevelEquipment',\r\n    required: false,\r\n\r\n    displayName: 'Ground Level Equipment',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryOpeningProtection',\r\n    required: false,\r\n\r\n    displayName: 'Opening Protection',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryFlashingAndCopingQuality',\r\n    required: false,\r\n\r\n    displayName: 'Flashing and Coping Quality',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryContentGrade',\r\n    required: false,\r\n\r\n    displayName: 'Content Grade',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryAtticInsulation',\r\n    required: false,\r\n\r\n    displayName: 'Attic Insulation',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryFireAlarm',\r\n    required: false,\r\n\r\n    displayName: 'Fire Alarm',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryFloodProtection',\r\n    required: false,\r\n\r\n    displayName: 'Flood Protection',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryMechanicalElectricalEquipment',\r\n    required: false,\r\n\r\n    displayName: 'Mechanical/Electrical Equipment',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryPlumbingInsulation',\r\n    required: false,\r\n\r\n    displayName: 'Plumbing Insulation',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryResistanceDoors',\r\n    required: false,\r\n\r\n    displayName: 'Resistance Doors',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryIceDamProtection',\r\n    required: false,\r\n\r\n    displayName: 'Ice Dam Protection',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryTreeDensity',\r\n    required: false,\r\n\r\n    displayName: 'Tree Density',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryWindMissiles',\r\n    required: false,\r\n\r\n    displayName: 'Wind Missles',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryRoofVentilation',\r\n    required: false,\r\n\r\n    displayName: 'Roof Ventilation',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryRoofParapetsChimneys',\r\n    required: false,\r\n\r\n    displayName: 'Roof Parapets/Chimneys',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondarySprinklerType',\r\n    required: false,\r\n\r\n    displayName: 'Sprinkler Type',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondarySnowGuards',\r\n    required: false,\r\n\r\n    displayName: 'Snow Guards',\r\n    value: '',\r\n    type: FieldType.String\r\n  }\r\n];\r\n\r\nexport const CopeDataEarthquakeFieldLayout = {\r\n  left: [\r\n    'secondaryEQAsymmetryandTorsion',\r\n    'secondaryEQBuildingExterior50PercentRule',\r\n    'secondaryEQEngineeredFoundations',\r\n    'secondaryEQEquipmentSupportMaintenance',\r\n    'secondaryEQFrameBoltedToFoundation',\r\n    'secondaryEQInteriorWallsOrPartitions',\r\n    'secondaryEQPoundingandImpact',\r\n    'secondaryEQRedundancy',\r\n    'secondaryEQSoftStory',\r\n    'secondaryEQTank',\r\n    'secondaryEQURMRetrofit'\r\n  ],\r\n  right: [\r\n    'secondaryEQAppendagesandOrnamentation',\r\n    'secondaryEQVerticalIrregularity',\r\n    'secondaryEQTiltUpRetrofitAnchoring',\r\n    'secondaryEQStructuralUpgradeNonURM',\r\n    'secondaryEQShortColumnCondition',\r\n    'secondaryEQQualityofConstruction',\r\n    'secondaryEQPlanIrregularity',\r\n    'secondaryEQGaraging',\r\n    'secondaryEQExteriorWallsOrCladding',\r\n    'secondaryEQEquipmentEQBracing',\r\n    'secondaryEQCrippleWalls',\r\n    'secondaryEQBaseIsolation'\r\n  ]\r\n};\r\n\r\nexport const CopeDataEarthquakeFields = [\r\n  <FormField>{\r\n    id: 'id',\r\n    required: false,\r\n\r\n    displayName: '',\r\n    value: '',\r\n    type: FieldType.Hidden\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryEQAsymmetryandTorsion',\r\n    required: false,\r\n\r\n    displayName: 'EQ Asymmetry and Torsion',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryEQBuildingExterior50PercentRule',\r\n    required: false,\r\n\r\n    displayName: 'EQ Building Exterior - 50% Rule',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryEQEngineeredFoundations',\r\n    required: false,\r\n\r\n    displayName: 'EQ Engineered Foundations',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryEQEquipmentSupportMaintenance',\r\n    required: false,\r\n\r\n    displayName: 'EQ Equipment Support Maintenance',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryEQFrameBoltedToFoundation',\r\n    required: false,\r\n\r\n    displayName: 'EQ Frame Bolted to Foundation',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryEQInteriorWallsOrPartitions',\r\n    required: false,\r\n\r\n    displayName: 'EQ Interior Walls/Partitions',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryEQPoundingandImpact',\r\n    required: false,\r\n\r\n    displayName: 'EQ Pounding and Impact',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryEQRedundancy',\r\n    required: false,\r\n\r\n    displayName: 'EQ Redundancy',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryEQSoftStory',\r\n    required: false,\r\n\r\n    displayName: 'EQ Soft Story',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryEQTank',\r\n    required: false,\r\n\r\n    displayName: 'EQ Tank',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryEQURMRetrofit',\r\n    required: false,\r\n\r\n    displayName: 'EQ URM Retrofit',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryEQAppendagesandOrnamentation',\r\n    required: false,\r\n\r\n    displayName: 'EQ Appendages and Ornamentation',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryEQVerticalIrregularity',\r\n    required: false,\r\n\r\n    displayName: 'EQ Vertical Irregularity',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryEQTiltUpRetrofitAnchoring',\r\n    required: false,\r\n\r\n    displayName: 'EQ Tilt-up Retrofit (Anchoring)',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryEQStructuralUpgradeNonURM',\r\n    required: false,\r\n\r\n    displayName: 'EQ Structural Upgrade (non-URM)',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryEQShortColumnCondition',\r\n    required: false,\r\n\r\n    displayName: 'EQ Short Column Condition',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryEQQualityofConstruction',\r\n    required: false,\r\n\r\n    displayName: 'EQ Quality of Construction',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryEQPlanIrregularity',\r\n    required: false,\r\n\r\n    displayName: 'EQ Plan Irregularity',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryEQGaraging',\r\n    required: false,\r\n\r\n    displayName: 'EQ Garaging',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryEQExteriorWallsOrCladding',\r\n    required: false,\r\n\r\n    displayName: 'EQ Exterior Walls/Cladding',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryEQEquipmentEQBracing',\r\n    required: false,\r\n\r\n    displayName: 'EQ Equipment EQ Bracing',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryEQCrippleWalls',\r\n    required: false,\r\n\r\n    displayName: 'EQ Cripple Walls',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'secondaryEQBaseIsolation',\r\n    required: false,\r\n\r\n    displayName: 'EQ Base Isolation',\r\n    value: '',\r\n    type: FieldType.String\r\n  }\r\n];\r\n","export const customAdditionFormModel = [\r\n  {\r\n    name: 'description',\r\n    displayName: 'Description',\r\n    fieldType: 0,\r\n    required: true,\r\n  },\r\n  {\r\n    name: 'cost',\r\n    displayName: 'Cost',\r\n    fieldType: 1,\r\n    required: true,\r\n  },\r\n];\r\n","import { BuildingAttributeGridItemViewModel } from '../../../../../../_models/building-form.model';\r\n\r\nexport const OccupancyCodeBuildingAttributeTypeId = 101;\r\n\r\nexport const BuildingAttributeFields = [\r\n  <BuildingAttributeGridItemViewModel>{\r\n    attributeType: 16,\r\n    attributeTypeName: 'Exterior Wall Finishes',\r\n    valueName: 'Exterior Wall Finish',\r\n    order: 1\r\n  },\r\n\r\n  <BuildingAttributeGridItemViewModel>{\r\n    attributeType: 21,\r\n    attributeTypeName: 'Roof Materials',\r\n    valueName: 'Roof Material',\r\n    order: 2\r\n  },\r\n\r\n  <BuildingAttributeGridItemViewModel>{\r\n    attributeType: 22,\r\n    attributeTypeName: 'Roof Pitches',\r\n    valueName: 'Roof Pitch',\r\n    order: 3\r\n  },\r\n\r\n  <BuildingAttributeGridItemViewModel>{\r\n    attributeType: 18,\r\n    attributeTypeName: 'Heating Systems',\r\n    valueName: 'Heating System',\r\n    order: 4\r\n  },\r\n\r\n  <BuildingAttributeGridItemViewModel>{\r\n    attributeType: 14,\r\n    attributeTypeName: 'Cooling Systems',\r\n    valueName: 'Cooling System',\r\n    order: 5\r\n  },\r\n\r\n  <BuildingAttributeGridItemViewModel>{\r\n    attributeType: 15,\r\n    attributeTypeName: 'Electrical Qualities',\r\n    valueName: 'Electrical Quality',\r\n    order: 6\r\n  },\r\n\r\n  <BuildingAttributeGridItemViewModel>{\r\n    attributeType: 103,\r\n    attributeTypeName: 'ISO Codes',\r\n    valueName: 'ISO Code',\r\n    order: 7\r\n  },\r\n\r\n  <BuildingAttributeGridItemViewModel>{\r\n    attributeType: 20,\r\n    attributeTypeName: 'Partition Wall Structures',\r\n    valueName: 'Partition Wall Structure',\r\n    order: 8\r\n  },\r\n\r\n  <BuildingAttributeGridItemViewModel>{\r\n    attributeType: 19,\r\n    attributeTypeName: 'Partition Wall Finishes',\r\n    valueName: 'Partition Wall Finish',\r\n    order: 9\r\n  },\r\n\r\n  <BuildingAttributeGridItemViewModel>{\r\n    attributeType: 17,\r\n    attributeTypeName: 'Floor Finishes',\r\n    valueName: 'Floor Finish',\r\n    order: 10\r\n  },\r\n\r\n  <BuildingAttributeGridItemViewModel>{\r\n    attributeType: 13,\r\n    attributeTypeName: 'Ceiling Finishes',\r\n    valueName: 'Ceiling Finish',\r\n    order: 11\r\n  }\r\n];\r\n","import { FormField } from '../../../../../../_models/form-field.model';\r\nimport { FieldType } from '../../../../../../_enums/field-type';\r\n\r\nexport const PrimaryInfoDropDownModel = [\r\n  {\r\n    id: '109',\r\n    order: 5,\r\n    displayName: 'Unit of Measure',\r\n    value: null,\r\n    required: false,\r\n    type: FieldType.DropDown,\r\n    name: 'unitOfMeasure'\r\n  },\r\n\r\n  <FormField>{\r\n    id: '110',\r\n    order: 24,\r\n    displayName: 'Basement Construction Class',\r\n    value: null,\r\n    required: false,\r\n    type: FieldType.DropDown,\r\n    name: 'basementConstructionClass'\r\n  },\r\n\r\n  <FormField>{\r\n    id: '111',\r\n    order: 25,\r\n    displayName: 'Basement Occupancy Code',\r\n    value: null,\r\n    required: false,\r\n    type: FieldType.DropDown,\r\n    name: 'basementOccupancyCode'\r\n  },\r\n\r\n  <FormField>{\r\n    id: '108',\r\n    order: 45,\r\n    displayName: 'Entry Alarm',\r\n    value: null,\r\n    required: false,\r\n    type: FieldType.DropDown,\r\n    name: 'entryAlarm'\r\n  },\r\n\r\n  <FormField>{\r\n    id: '112',\r\n    order: 58,\r\n    displayName: 'Degree Slope',\r\n    value: null,\r\n    required: false,\r\n    type: FieldType.DropDown,\r\n    name: 'degreeSlope'\r\n  },\r\n  <FormField>{\r\n    id: '113',\r\n    order: 59,\r\n    displayName: 'Site Position',\r\n    value: null,\r\n    required: false,\r\n    type: FieldType.DropDown,\r\n    name: 'sitePosition'\r\n  },\r\n  <FormField>{\r\n    id: '115',\r\n    order: 60,\r\n    displayName: 'Soil Condition',\r\n    value: null,\r\n    required: false,\r\n    type: FieldType.DropDown,\r\n    name: 'soilCondition'\r\n  },\r\n  <FormField>{\r\n    id: '114',\r\n    order: 61,\r\n    displayName: 'Site Accessibility',\r\n    value: null,\r\n    required: false,\r\n    type: FieldType.DropDown,\r\n    name: 'siteAccessibility'\r\n  }\r\n];\r\n","import { FormField } from '../../../../../../_models/form-field.model';\r\nimport { CascadedSelectValue } from '../../../../../../_models/cascaded-select-value.model';\r\nimport { CascadedSelectOption } from '../../../../../../_models/cascaded-select-option.model';\r\nimport { FieldType } from '../../../../../../_enums/field-type';\r\nimport { FieldOption } from '../../../../../../_models/field-option.model';\r\n\r\nexport enum FormModelEnum {\r\n  PrimaryInfoFields,\r\n  BuildingFloodPlainModelFields,\r\n  CopeDataModelFields,\r\n  BuildingLocationFields,\r\n  BuildingValuationFields,\r\n  BuildingSuperstructureFields,\r\n  BuildingSubstructureFields,\r\n  BuildingOccupancyFields,\r\n  BuildingConstructionFields,\r\n  BuildingSystemsFields,\r\n  BuildingSiteAttributeFields,\r\n  AdditionalDataFields,\r\n  CoreLogicFields,\r\n  BuildingAttributeFields,\r\n  BuildingImages,\r\n  CopedataWindFields,\r\n  CopeDataEarthquakeFields,\r\n  InitialFloodPlainFields\r\n}\r\n\r\nexport const PrimaryInfoFieldLayout = {\r\n  left: ['siteId', 'buildingNumber', 'buildingName', 'clientUniqueIdentifier', 'buildingImages'],\r\n  right: ['type', 'inspectionDate', 'scopeOfService', 'unitOfMeasure', 'activityCode']\r\n};\r\n\r\nexport const PrimaryInfoFields = [\r\n\r\n  <FormField>{\r\n    id: 'siteId',\r\n    required: false,\r\n    displayName: 'Member Name',\r\n    value: '',\r\n    cascadedValues: [\r\n      <CascadedSelectValue>{ name: 'memberId', displayName: 'Member Name' },\r\n      <CascadedSelectValue>{ name: 'siteId', displayName: 'Site Name' }\r\n    ],\r\n    cascadedValueOptions: new Array<CascadedSelectOption>(),\r\n    type: FieldType.CascadingComboBox\r\n  },\r\n  <FormField>{\r\n    id: 'buildingNumber',\r\n    required: true,\r\n    displayName: 'Building Number',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n  <FormField>{\r\n    id: 'buildingName',\r\n    required: true,\r\n    displayName: 'Building Name',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n  <FormField>{\r\n    id: 'clientUniqueIdentifier',\r\n    required: false,\r\n    displayName: 'Client Unique ID',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'type',\r\n    required: false,\r\n    displayName: 'Building Type',\r\n    value: '',\r\n    options: [\r\n      <FieldOption>{ key: '0', displayName: 'Building' },\r\n      <FieldOption>{ key: '1', displayName: 'Minor Building' },\r\n      <FieldOption>{ key: '2', displayName: 'Land Improvement' }\r\n    ],\r\n    type: FieldType.DropDown,\r\n    name: ''\r\n  },\r\n\r\n\r\n  <FormField>{\r\n    id: 'inspectionDate',\r\n    required: true,\r\n    displayName: 'Date Of Inspection',\r\n    value: '',\r\n    type: FieldType.DateTime\r\n  },\r\n  <FormField>{\r\n    id: 'scopeOfService',\r\n    required: false,\r\n    displayName: 'Scope of Service',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n  <FormField>{\r\n    id: 'unitOfMeasure',\r\n    required: false,\r\n    displayName: 'Unit of Measure',\r\n    value: '',\r\n    options: [<FieldOption>{ key: '1', displayName: 'Meters' }, <FieldOption>{ key: '2', displayName: 'Feet' }],\r\n    type: FieldType.DropDown,\r\n    attributeTypeId: 109\r\n  },\r\n  <FormField>{\r\n    id: 'activityCode',\r\n    required: false,\r\n    displayName: 'Activity Code',\r\n    value: '',\r\n    options: [\r\n      <FieldOption>{ key: '0', displayName: 'New' },\r\n      <FieldOption>{ key: '1', displayName: 'Active' },\r\n      <FieldOption>{ key: '2', displayName: 'Deactivated' },\r\n      <FieldOption>{ key: '3', displayName: 'Retired' }\r\n    ],\r\n    type: FieldType.DropDown,\r\n    name: ''\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'buildingImages',\r\n    required: false,\r\n    displayName: 'Building Images',\r\n    value: '',\r\n    validation: false,\r\n    type: FieldType.Image\r\n  }\r\n];\r\n\r\nexport const BuildingLocationFieldLayout = {\r\n  left: ['addressLine1', 'addressLine2', 'latitude', 'longitude'],\r\n  right: ['city', 'state', 'zipCode', 'country']\r\n};\r\n\r\nexport const BuildingLocationFields = [\r\n  <FormField>{\r\n    id: 'addressLine1',\r\n    required: false,\r\n    displayName: 'Address Line 1',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'addressLine2',\r\n    required: false,\r\n    displayName: 'Address Line 2',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'city',\r\n    required: false,\r\n    displayName: 'City',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'state',\r\n    required: false,\r\n    displayName: 'State',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'zipCode',\r\n    required: false,\r\n    displayName: 'Zip Code',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'country',\r\n    required: false,\r\n    displayName: 'Country',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'latitude',\r\n    required: false,\r\n    displayName: 'Latitude',\r\n    value: '',\r\n    type: FieldType.Double,\r\n    decimalLength: 15,\r\n    format: 'n15'\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'longitude',\r\n    required: false,\r\n    displayName: 'Longitude',\r\n    value: '',\r\n    type: FieldType.Double,\r\n    decimalLength: 15,\r\n    format: 'n15'\r\n  },\r\n\r\n  <FormField>{\r\n    required: false,\r\n    displayName: '',\r\n    value: '',\r\n    type: FieldType.EmptySpace\r\n  }\r\n\r\n];\r\n\r\nexport const BuildingValuationFieldLayout = {\r\n  left: ['costReproductionNew',\r\n        'buildingOverride',\r\n        'valuationCreatedDate',\r\n        'costReplacementNew',\r\n        'costReproductionNewLessDepreciation',\r\n        'previousDPBuildingCostReplacementNew',\r\n        'previousDPContentCostReproductionNew',\r\n        'previousDPSF'\r\n      ],\r\n  right: ['contentCostReproductionNew',\r\n        'contentOverride',\r\n        'contentCode',\r\n        'contentQuality',\r\n        'depreciationPercent',\r\n        'clientBuildingCRN',\r\n        'clientContentCRN',\r\n        'clientSF']\r\n};\r\n\r\nexport const BuildingValuationFields = [\r\n  <FormField>{\r\n    id: 'costReproductionNew',\r\n    required: false,\r\n    displayName: 'Cost Reproduction New',\r\n    value: '',\r\n    type: FieldType.Double\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'depreciationPercent',\r\n    required: false,\r\n    displayName: 'Depreciation Percent',\r\n    value: '',\r\n    type: FieldType.Percent\r\n  },\r\n\r\n\r\n\r\n  <FormField>{\r\n    id: 'buildingOverride',\r\n    required: false,\r\n    displayName: 'Building Override',\r\n    value: '',\r\n    type: FieldType.Double\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'valuationCreatedDate',\r\n    required: false,\r\n    displayName: 'Valuation Created Date',\r\n    value: '',\r\n    type: FieldType.DateTime,\r\n    isReadOnly: true,\r\n    format: 'MM/dd/yyyy HH:mm'\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'costReplacementNew',\r\n    required: false,\r\n    displayName: 'Cost of Replacement New',\r\n    value: '',\r\n    type: FieldType.Double\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'costReproductionNewLessDepreciation',\r\n    required: false,\r\n    displayName: 'Cost of Reproduction New Less Depreciation',\r\n    value: '',\r\n    type: FieldType.Double\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'previousDPBuildingCostReplacementNew',\r\n    required: false,\r\n    displayName: 'Previous DP Building CRN',\r\n    value: '',\r\n    type: FieldType.Double\r\n  },\r\n  <FormField>{\r\n    id: 'previousDPContentCostReproductionNew',\r\n    required: false,\r\n    displayName: 'Previous DP Content CRN',\r\n    value: '',\r\n    type: FieldType.Double\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'previousDPSF',\r\n    required: false,\r\n    displayName: 'Previous DP SF',\r\n    value: '',\r\n    type: FieldType.Integer\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'contentCostReproductionNew',\r\n    required: false,\r\n    displayName: 'Content Cost Reproduction New',\r\n    value: '',\r\n    type: FieldType.Double\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'contentOverride',\r\n    required: false,\r\n    displayName: 'Content Override',\r\n    value: '',\r\n    type: FieldType.Double\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'contentCode',\r\n    required: false,\r\n    displayName: 'Content Code',\r\n    value: '',\r\n    options: [],\r\n    type: FieldType.DropDown,\r\n    name: ''\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'contentQuality',\r\n    required: false,\r\n    displayName: 'Content Quality',\r\n    value: '',\r\n    type: FieldType.Double\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'clientBuildingCRN',\r\n    required: false,\r\n    displayName: 'Client Building CRN',\r\n    value: '',\r\n    type: FieldType.Double\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'clientContentCRN',\r\n    required: false,\r\n    displayName: 'Client Content CRN',\r\n    value: '',\r\n    type: FieldType.Double\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'clientSF',\r\n    required: false,\r\n    displayName: 'Client SF',\r\n    value: '',\r\n    type: FieldType.Integer\r\n  },\r\n\r\n];\r\n\r\n\r\nexport const BuildingSuperstructureFieldLayout = {\r\n  left: ['quality',\r\n          'floorArea',\r\n          'buildingPerimeterAdjustmentMethod',\r\n          'perimeter',\r\n          'numberOfStories',\r\n          'avgStoryHeight',\r\n        ],\r\n  right: ['yearBuilt',\r\n          'architectPercent',\r\n          'overheadPercent',\r\n          'effectiveAge',\r\n          'buildingCondition',\r\n          'buildingOccupancy'\r\n        ]\r\n};\r\n\r\nexport const BuildingSuperstructureFields = [\r\n  <FormField>{\r\n    id: 'floorArea',\r\n    required: false,\r\n    displayName: 'Floor Area',\r\n    value: '',\r\n    type: FieldType.Integer\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'perimeter',\r\n    required: false,\r\n    displayName: 'Perimeter',\r\n    value: '',\r\n    type: FieldType.Integer\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'yearBuilt',\r\n    required: false,\r\n    displayName: 'Year Built',\r\n    value: '',\r\n    type: FieldType.Integer\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'architectPercent',\r\n    required: false,\r\n    displayName: 'Architect Percent',\r\n    value: '',\r\n    type: FieldType.Percent\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'buildingCondition',\r\n    required: false,\r\n    displayName: 'Building Condition',\r\n    value: '',\r\n    options: [\r\n      <FieldOption>{ key: 1, displayName: 'Excellent' },\r\n      <FieldOption>{ key: 2, displayName: 'Good' },\r\n      <FieldOption>{ key: 3, displayName: 'Average' },\r\n      <FieldOption>{ key: 4, displayName: 'Fair' },\r\n      <FieldOption>{ key: 5, displayName: 'Poor' },\r\n      <FieldOption>{ key: 6, displayName: 'Dilapidated' },\r\n      <FieldOption>{ key: 7, displayName: 'N/A' }\r\n    ],\r\n    type: FieldType.DropDown\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'quality',\r\n    required: false,\r\n    displayName: 'Quality',\r\n    value: '',\r\n    type: FieldType.Double\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'numberOfStories',\r\n    required: false,\r\n    displayName: 'Number of Stories',\r\n    value: '',\r\n    type: FieldType.Integer,\r\n    min: 0\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'avgStoryHeight',\r\n    required: false,\r\n    displayName: 'Average Story Height',\r\n    value: '',\r\n    type: FieldType.Double\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'overheadPercent',\r\n    required: false,\r\n    displayName: 'Overhead & Profile Percent',\r\n    value: '',\r\n    type: FieldType.Percent\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'effectiveAge',\r\n    required: false,\r\n    displayName: 'Effective Age',\r\n    value: '',\r\n    type: FieldType.Integer\r\n  },\r\n  <FormField>{\r\n    id: 'buildingPerimeterAdjustmentMethod',\r\n    required: true,\r\n    displayName: 'Perimeter Adjustment Method',\r\n    value: '',\r\n    options: [\r\n      <FieldOption>{ key: 0, displayName: 'None' },\r\n      <FieldOption>{ key: 1, displayName: 'Calculated' },\r\n      <FieldOption>{ key: 2, displayName: 'Irregular Shape' },\r\n      <FieldOption>{ key: 3, displayName: 'Very Irregular Shape' },\r\n    ],\r\n    type: FieldType.DropDown\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'buildingOccupancy',\r\n    required: false,\r\n    displayName: 'Building Occupancy Override',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n];\r\n\r\nexport const BuildingSubStructureFieldLayout = {\r\n  left: ['basementFinishedArea', 'basementUnfinishedArea', 'basementFloorArea', 'crawlspaceArea', 'removeSlabArea'],\r\n  right: ['basementConstructionClass', 'basementOccupancyCode', 'basementDepth', 'stiltsWoodArea', 'stiltsConcreteArea']\r\n};\r\n\r\nexport const BuildingSubStructureFields = [\r\n  <FormField>{\r\n    id: 'basementFinishedArea',\r\n    required: false,\r\n    displayName: 'Basement Finished SF',\r\n    value: '',\r\n    type: FieldType.Integer\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'basementUnfinishedArea',\r\n    required: false,\r\n    displayName: 'Basement Unfinished SF',\r\n    value: '',\r\n    type: FieldType.Integer\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'basementFloorArea',\r\n    required: false,\r\n    displayName: 'Basement Floor Area',\r\n    value: '',\r\n    type: FieldType.Integer\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'crawlspaceArea',\r\n    required: false,\r\n    displayName: 'Crawlspace SF',\r\n    value: '',\r\n    type: FieldType.Integer\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'removeSlabArea',\r\n    required: false,\r\n    displayName: 'Remove Slab SF',\r\n    value: '',\r\n    type: FieldType.Integer\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'basementConstructionClass',\r\n    required: false,\r\n    displayName: 'Basement Construction Class',\r\n    value: '',\r\n    type: FieldType.DropDown,\r\n    attributeTypeId: 110\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'basementOccupancyCode',\r\n    required: false,\r\n    displayName: 'Basement Occupancy Code',\r\n    value: '',\r\n    type: FieldType.DropDown,\r\n    attributeTypeId: 111\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'basementDepth',\r\n    required: false,\r\n    displayName: 'Basement Depth',\r\n    value: '',\r\n    type: FieldType.Integer\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'stiltsWoodArea',\r\n    required: false,\r\n    displayName: 'Stilts Wood SF',\r\n    value: '',\r\n    type: FieldType.Integer\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'stiltsConcreteArea',\r\n    required: false,\r\n    displayName: 'Stilts Concrete SF',\r\n    value: '',\r\n    type: FieldType.Integer\r\n  }\r\n];\r\n\r\nexport const AdditionalDataFieldLayout = {\r\n  left: [\r\n    'dateEntered',\r\n    'employee',\r\n    'fireDepartment',\r\n    'distanceToFireHydrant',\r\n    'distanceToFireStation',\r\n    'distanceToCoast',\r\n    'legacyPhotoLocation',\r\n    'iRISRowID'\r\n  ],\r\n  right: [\r\n    'exclusionsPercent',\r\n    'leasedBuilding',\r\n    'vacantBuilding',\r\n    'acquiredDate',\r\n    'historicRegisterNational',\r\n    'historicRegisterState',\r\n    'historicRegisterOther',\r\n    'protectionClass',\r\n  ]\r\n};\r\n\r\nexport const AdditionalDataFields = [\r\n\r\n  <FormField>{\r\n    id: 'dateEntered',\r\n    required: false,\r\n    displayName: 'Date Entered',\r\n    value: '',\r\n    type: FieldType.DateTime\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'acquiredDate',\r\n    required: false,\r\n    displayName: 'Acquired Date',\r\n    value: '',\r\n    type: FieldType.DateTime\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'employee',\r\n    required: false,\r\n    displayName: 'Employee',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'fireDepartment',\r\n    required: false,\r\n    displayName: 'Fire Department',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'distanceToFireHydrant',\r\n    required: false,\r\n    displayName: 'Distance To Fire Hydrant',\r\n    value: '',\r\n    type: FieldType.String,\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'distanceToFireStation',\r\n    required: false,\r\n    displayName: 'Distance To Fire Station',\r\n    value: '',\r\n    type: FieldType.String,\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'distanceToCoast',\r\n    required: false,\r\n    displayName: 'Distance To Coast',\r\n    value: '',\r\n    type: FieldType.String,\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'legacyPhotoLocation',\r\n    required: false,\r\n    displayName: 'Legacy Photo Location',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'iRISRowID',\r\n    required: false,\r\n    displayName: 'IRIS Row ID',\r\n    value: '',\r\n    type: FieldType.String,\r\n    isReadOnly: true\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'leasedBuilding',\r\n    required: false,\r\n    displayName: 'Leased Building',\r\n    value: '',\r\n    type: FieldType.Boolean\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'vacantBuilding',\r\n    required: false,\r\n    displayName: 'Vacant Building',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'historicRegisterNational',\r\n    required: false,\r\n    displayName: 'Historic Register National',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'historicRegisterState',\r\n    required: false,\r\n    displayName: 'Historic Register State',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'historicRegisterOther',\r\n    required: false,\r\n    displayName: 'Historic Register Other',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'protectionClass',\r\n    required: false,\r\n    displayName: 'Protection Class',\r\n    value: '',\r\n    type: FieldType.String\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'valuationEffectiveDate',\r\n    required: false,\r\n    displayName: 'Valuation Eff Date',\r\n    value: '',\r\n    type: FieldType.DateTime,\r\n    isReadOnly: true\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'exclusionsPercent',\r\n    required: false,\r\n    displayName: 'Exclusions Percent',\r\n    value: '',\r\n    type: FieldType.Percent\r\n  },\r\n\r\n];\r\n\r\nexport const BuildingSiteAttributeFieldLayout = {\r\n  left: ['degreeSlope',\r\n    'soilCondition',\r\n    'seismic'],\r\n  right: ['siteAccessibility',\r\n    'sitePosition',\r\n    'wind']\r\n};\r\n\r\nexport const BuildingSiteAttributeFields = [\r\n  <FormField>{\r\n    id: 'degreeSlope',\r\n    required: false,\r\n    displayName: 'Degree Slope',\r\n    value: '',\r\n    type: FieldType.DropDown,\r\n    attributeTypeId: 112\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'soilCondition',\r\n    required: false,\r\n    displayName: 'Soil Condition',\r\n    value: '',\r\n    type: FieldType.DropDown,\r\n    attributeTypeId: 115\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'seismic',\r\n    required: false,\r\n    displayName: 'Seismic',\r\n    value: '',\r\n    type: FieldType.String,\r\n    isReadOnly: true\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'siteAccessibility',\r\n    required: false,\r\n    displayName: 'Site Accessibility',\r\n    value: '',\r\n    type: FieldType.DropDown,\r\n    attributeTypeId: 114\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'wind',\r\n    required: false,\r\n    displayName: 'Wind Zone',\r\n    value: '',\r\n    type: FieldType.String,\r\n    isReadOnly: true\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'sitePosition',\r\n    required: false,\r\n    displayName: 'Site Position',\r\n    value: '',\r\n    type: FieldType.DropDown,\r\n    attributeTypeId: 113\r\n  }\r\n];\r\n\r\nexport const CoreLogicFieldLayout = {\r\n  left: [\r\n    'valuationId',\r\n    'valuationNumber',\r\n    ],\r\n  right: [\r\n    'valuationLastUpdateMultiplier',\r\n    'valuationErrorCode',\r\n    'valuationErrorDescription'\r\n ]\r\n};\r\n\r\nexport const CoreLogicFields = [\r\n  <FormField>{\r\n    id: 'valuationId',\r\n    required: false,\r\n    displayName: 'Valuation ID',\r\n    value: '',\r\n    type: FieldType.String,\r\n    isReadOnly: true\r\n  },\r\n\r\n\r\n\r\n\r\n  <FormField>{\r\n    id: 'valuationNumber',\r\n    required: false,\r\n    displayName: 'Valuation Number',\r\n    value: '',\r\n    type: FieldType.String,\r\n    isReadOnly: true\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'valuationLastUpdateMultiplier',\r\n    required: false,\r\n    displayName: 'Valuation Last Update Multiplier',\r\n    value: '',\r\n    type: FieldType.String,\r\n    isReadOnly: true\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'valuationErrorCode',\r\n    required: false,\r\n    displayName: 'Valuation Error Code',\r\n    value: '',\r\n    type: FieldType.String,\r\n    isReadOnly: true\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'valuationErrorDescription',\r\n    required: false,\r\n    displayName: 'Valuation Error Description',\r\n    value: '',\r\n    type: FieldType.String,\r\n    isReadOnly: true\r\n  },\r\n\r\n  <FormField>{\r\n    required: false,\r\n    displayName: '',\r\n    value: '',\r\n    type: FieldType.EmptySpace,\r\n    isReadOnly: true\r\n  }\r\n];\r\n\r\n\r\nexport const BuildingSystemFieldLayout = {\r\n  left: [ 'entryAlarm',\r\n  'manualFireAlarm',\r\n  'autoFireAlarm',\r\n  'sprinkler'],\r\n  right: ['passengerElevator',\r\n  'freightElevator',\r\n  'plumbingFixtures']\r\n};\r\n\r\n\r\n\r\nexport const BuildingSystemFields = [\r\n  <FormField>{\r\n    id: 'entryAlarm',\r\n    required: false,\r\n    displayName: 'Entry Alarm',\r\n    value: '',\r\n    options: [\r\n      <FieldOption>{ key: '1', displayName: 'Yes' },\r\n      <FieldOption>{ key: '2', displayName: 'No' },\r\n      <FieldOption>{ key: '3', displayName: 'Partial' }\r\n    ],\r\n    type: FieldType.DropDown,\r\n    attributeTypeId: 108\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'manualFireAlarm',\r\n    required: false,\r\n    displayName: 'Manual Fire Alarm Percent',\r\n    value: '',\r\n    type: FieldType.Double,\r\n    min: 0\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'autoFireAlarm',\r\n    required: false,\r\n    displayName: 'Auto Fire Alarm Percent',\r\n    value: '',\r\n    type: FieldType.Double,\r\n    min: 0\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'sprinkler',\r\n    required: false,\r\n    displayName: 'Sprinkler Percent',\r\n    value: '',\r\n    type: FieldType.Double,\r\n    min: 0\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'passengerElevator',\r\n    required: false,\r\n    displayName: 'Passenger Elevator',\r\n    value: '',\r\n    type: FieldType.Integer,\r\n    min: 0\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'freightElevator',\r\n    required: false,\r\n    displayName: 'Freight Elevator',\r\n    value: '',\r\n    type: FieldType.Integer,\r\n    min: 0\r\n  },\r\n\r\n  <FormField>{\r\n    id: 'plumbingFixtures',\r\n    required: false,\r\n    displayName: 'Plumbing Fixtures',\r\n    value: '',\r\n    type: FieldType.Integer,\r\n    min: 0\r\n  }\r\n];\r\n\r\n\r\nexport const buildingImages = [\r\n\r\n  <FormField>{\r\n    id: 'buildingImages',\r\n    required: false,\r\n    displayName: 'Building Images',\r\n    value: '',\r\n    validation: false,\r\n    type: FieldType.Image\r\n  }\r\n\r\n];\r\n","import { FieldType } from '../../../../../_enums/field-type';\r\n\r\nexport const userFactorFormModel = [\r\n  {\r\n    name: 'description',\r\n    displayName: 'Description',\r\n    fieldType: 0,\r\n    required: true,\r\n  },\r\n  {\r\n    name: 'factor',\r\n    displayName: 'Factor',\r\n    fieldType: FieldType.Double,\r\n    required: true\r\n  },\r\n];\r\n","import { QualityControlService } from '../../services/quality-control.service';\r\nimport { SortDescriptor } from '@progress/kendo-data-query/dist/es/main';\r\nimport { FamisGridService } from '../../../_core/services/famis-grid.service';\r\nimport { AlertService } from '../../../_core/services/alert.service';\r\nimport { HelperService } from '../../../_core/services/helper.service';\r\nimport { BuildingInfoService } from '../../../_core/services/building-info-service';\r\nimport { ViewMapComponent } from '../../../_shared/components/grid-actions/view-map.component';\r\nimport { BuildingsService } from '../../services/buildings.service';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { WindowManager } from '../../../_core/services/window-manager.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { of, Subject, Subscription } from 'rxjs';\r\nimport { Component, OnInit, OnDestroy, Output, EventEmitter, Input, ViewContainerRef, ViewChild } from '@angular/core';\r\nimport { BuildingDto } from '../../../_api/_runtime/dtos/building.dto';\r\nimport { FamisGrid, FamisGridFeature } from '../../../_models/shared/famis-grid-state.model';\r\nimport { State } from '@progress/kendo-data-query';\r\nimport { Router } from '@angular/router';\r\nimport { DataTargetName } from '../../../_enums/data-target-name';\r\nimport { FamisGridCacheResult } from '../../../_models/shared/famis-grid-cache-result.model';\r\nimport { SelectionChangeEvent } from '../../../_models/selection-change-event.model';\r\nimport { DataItemValue } from '../../../_models/data-item-value.model';\r\nimport { FamisGridActionEvent } from '../../../_models/shared/famis-grid-action-event.model';\r\nimport { WindowOption } from '../../../_models/window-option';\r\nimport { DataStateChangeEvent } from '@progress/kendo-angular-grid';\r\nimport { BuildingSortTermDto } from '../../../_api/_runtime/dtos/building-sort-term.dto';\r\nimport { FieldMetaDataDto } from '../../../_api/dtos/inventory/field-meta-data.dto';\r\nimport { FieldType } from '../../../_enums/field-type';\r\nimport { FamisGridComponent } from '../../../_shared/components/famis-grid.component';\r\n\r\n@Component({\r\n  selector: 'quality-control-building-grid',\r\n  templateUrl: './quality-control-building-grid.component.html'\r\n})\r\nexport class QualityControlBuildingGridComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  private percentageFieldsArray = [\r\n    'Architect Percent',\r\n    'Depreciation Percent',\r\n    'Overhead Percent',\r\n    'Exclusions Percent',\r\n    'Exterior Wall Openings Percent'\r\n  ];\r\n\r\n  private nonNegativeFields = [\r\n    'numberOfStories',\r\n    'manualFireAlarm',\r\n    'autoFireAlarm',\r\n    'sprinkler',\r\n    'passengerElevator',\r\n    'freightElevator',\r\n    'plumbingFixtures'\r\n  ];\r\n\r\n  @Output()\r\n  gridSelections = new EventEmitter<Array<BuildingDto>>();\r\n\r\n  public buildingGrid: FamisGrid;\r\n  public selectedBuildings = new Array<BuildingDto>();\r\n  public state: State;\r\n  public sort: SortDescriptor[];\r\n\r\n  @ViewChild(FamisGridComponent, {static: false})\r\n  famisGrid: FamisGridComponent;\r\n\r\n  @Input()\r\n  isReadOnly = true;\r\n\r\n  private destroyed$ = new Subject<any>();\r\n\r\n  constructor(\r\n    private qualityControlService: QualityControlService,\r\n    private famisGridService: FamisGridService,\r\n    private windowManager: WindowManager,\r\n    public container: ViewContainerRef,\r\n    private helperService: HelperService,\r\n    private buildingInfoService: BuildingInfoService,\r\n    private alertService: AlertService,\r\n    private buildingService: BuildingsService,\r\n    private router: Router,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.famisGridService.clearEditedRecords();\r\n\r\n    this.state = {\r\n      skip: 0,\r\n      take: 84\r\n    };\r\n\r\n    this.buildingGrid = <FamisGrid>{\r\n      height: 600,\r\n      gridId: this.famisGridService.createGrid(),\r\n      totalRecordCount: 0,\r\n      name: 'Buildings',\r\n      supportedOperators: this.isReadOnly\r\n        ? [FamisGridFeature.MultiSelectable, FamisGridFeature.ColumnSelection, FamisGridFeature.Sort]\r\n        : [\r\n          FamisGridFeature.MultiSelectable,\r\n          FamisGridFeature.ColumnSelection,\r\n          FamisGridFeature.Sort,\r\n          FamisGridFeature.InGridEditable,\r\n          FamisGridFeature.Filter\r\n        ],\r\n      actions: this.isReadOnly ? ['Map', 'View', 'Image'] : ['Map', 'Edit', 'Image'],\r\n      translationBaseKey: this.i18n.building,\r\n      dataSource: DataTargetName.building,\r\n      groupId: this.qualityControlService.groupId,\r\n      defaultSort: [<SortDescriptor>{field: 'displayId', dir: 'asc'}]\r\n    };\r\n\r\n    this.famisGridService.setUserId();\r\n    this.buildingGrid.loading =\r\n    this.qualityControlService.getBuildingSearchMetadataByGroupId(this.qualityControlService.groupId).subscribe(buildingMetadata => {\r\n      this.mapMetaDataPercentFields(buildingMetadata.fields);\r\n\r\n      buildingMetadata.fields.forEach(field => {\r\n        if (field.name === 'valuationCreatedDate') {\r\n          field.fieldType = 15;\r\n        }\r\n      });\r\n\r\n      this.buildingGrid.columnHeaders =\r\n        this.helperService.mapHeaders(buildingMetadata.fields, this.buildingInfoService.GetInternalColumns());\r\n\r\n      this.buildingGrid.selectedHeaders = this.buildingInfoService.GetDefaultColumns();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  updateCache(request: FamisGridCacheResult) {\r\n    const s = this;\r\n\r\n    this.buildingGrid.loading = s.processCacheUpdateBuilding(request);\r\n    this.buildingGrid.cacheLoading = this.buildingGrid.loading;\r\n  }\r\n\r\n  handleSelectionChanged(event: SelectionChangeEvent) {\r\n    this.selectedBuildings = this.selectedBuildings.concat(event.itemsAdded.map(c => <BuildingDto>c.dataItem));\r\n\r\n    event.itemsRemoved.forEach(item => {\r\n      const index = this.selectedBuildings.indexOf(item.dataItem);\r\n      if (index !== -1) {\r\n        this.selectedBuildings.splice(index, 1);\r\n      }\r\n    });\r\n\r\n    this.gridSelections.emit(this.selectedBuildings);\r\n\r\n  }\r\n\r\n  handleCellValueChanged(result: Array<DataItemValue>) {\r\n\r\n    const resultToSave = JSON.parse(JSON.stringify(result));\r\n\r\n    console.log(event, 'handleCellValueChanged');\r\n\r\n    resultToSave.forEach(editItem => {\r\n      delete editItem.dataItem.imageCollection;\r\n\r\n      const buildingDto = this.buildingInfoService.convertStringsToEnum(<BuildingDto>editItem.dataItem);\r\n\r\n      this.buildingService.updateBuilding(editItem.itemId, buildingDto).subscribe(\r\n        () => {\r\n          this.alertService.success('Building(s) edited successfuly');\r\n\r\n          this.famisGridService.removeEditedRecord(editItem.itemId);\r\n          this.famisGridService.removeRecordWithErrors(editItem.itemId);\r\n        },\r\n        error => {\r\n          this.alertService.error(!!error.error ? error.error : 'An error has occurred saving the building');\r\n\r\n          this.famisGridService.addRecordsWithErrors(editItem.itemId, editItem.dataItem);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  handleActionEvent(event: FamisGridActionEvent) {\r\n    switch (event.action) {\r\n      case 'Map':\r\n        const viewMapModal = this.windowManager.open(ViewMapComponent, 'Map', <WindowOption>{\r\n          isModal: true\r\n        });\r\n\r\n        viewMapModal.content.instance.latitude = parseFloat(event.item.latitude);\r\n        viewMapModal.content.instance.longitude = parseFloat(event.item.longitude);\r\n        viewMapModal.content.instance.buildingName = event.item.buildingName;\r\n        break;\r\n\r\n      case 'Edit':\r\n        this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl/EditBuilding/${event.item.id}`]);\r\n\r\n        break;\r\n\r\n      case 'View':\r\n        this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl/ViewBuilding/${event.item.id}`]);\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  handleDataStateChanged(state: DataStateChangeEvent) {\r\n    const s = this;\r\n\r\n    this.state = state;\r\n\r\n    this.famisGridService\r\n      .update(\r\n        s.buildingGrid.gridId,\r\n        s.state.skip,\r\n        s.state.take,\r\n        s.buildingGrid.totalRecordCount,\r\n        s.famisGridService.currentSort[s.buildingGrid.gridId],\r\n        true)\r\n      .pipe(takeUntil(s.destroyed$))\r\n      .subscribe(result => {\r\n        if (result.updateCache) {\r\n          s.updateCache(result);\r\n        } else {\r\n          if (result.gridId === s.buildingGrid.gridId) {\r\n            s.buildingGrid.gridData = of(result.cachedData);\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  handleSortChanged(sort: SortDescriptor[]) {\r\n    const s = this;\r\n    this.sort = sort;\r\n    const sortTerms = new Array<BuildingSortTermDto>();\r\n    const orderCount = 0;\r\n\r\n    sort.forEach(c => {\r\n      const sortTerm = <BuildingSortTermDto>{\r\n        termOrder: orderCount,\r\n        sortDirection: c.dir === 'asc' ? 0 : 1,\r\n        field: c.field\r\n      };\r\n      sortTerms.push(sortTerm);\r\n    });\r\n\r\n    this.famisGridService.currentSort[this.buildingGrid.gridId] = sortTerms;\r\n\r\n    s.famisGridService\r\n      .update(\r\n        s.buildingGrid.gridId,\r\n        s.state.skip,\r\n        s.state.take,\r\n        s.buildingGrid.totalRecordCount,\r\n        s.famisGridService.currentSort[s.buildingGrid.gridId],\r\n        true)\r\n      .pipe(takeUntil(s.destroyed$))\r\n      .subscribe(result => {\r\n        s.updateCache(result);\r\n      });\r\n  }\r\n\r\n  private mapMetaDataPercentFields(metaDataFields: FieldMetaDataDto[]) {\r\n    metaDataFields.map((field) => {\r\n      if (this.percentageFieldsArray.some((percentageField) => percentageField === field.displayName)) {\r\n        field.fieldType = FieldType.Percent.valueOf();\r\n      }\r\n    });\r\n  }\r\n\r\n  private processCacheUpdateBuilding(cacheUpdateRequest?: FamisGridCacheResult): Subscription {\r\n    const s = this;\r\n\r\n    this.selectedBuildings = new Array<BuildingDto>();\r\n\r\n    if (this.famisGrid) {\r\n      this.famisGrid.selectedRows = [];\r\n    }\r\n\r\n    return this.qualityControlService\r\n      .updateBuildingData(\r\n        s.qualityControlService.groupId,\r\n        cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.skip : s.famisGridService.defaultSkip,\r\n        cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.take : s.famisGridService.defaultTake,\r\n        cacheUpdateRequest ? cacheUpdateRequest.sortTerms : null,\r\n        cacheUpdateRequest ? cacheUpdateRequest.filters : null\r\n      )\r\n      .subscribe(dto => {\r\n        this.buildingGrid.totalRecordCount = dto.totalInRecordSet;\r\n\r\n        s.famisGridService.setCacheRecords(\r\n          s.buildingInfoService.mapGridColumns(dto.buildings),\r\n          s.buildingGrid.gridId,\r\n          cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.skip : s.famisGridService.defaultSkip,\r\n          dto.totalInRecordSet,\r\n          cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.skip : s.famisGridService.defaultTake\r\n        );\r\n\r\n        this.famisGrid.dataLoading = false;\r\n      });\r\n  }\r\n}\r\n","import { QualityControlService } from '../../../services/quality-control.service';\r\nimport { AssetFileInfoService } from '../../../../_core/services/asset-file-info-service';\r\nimport { AlertService } from '../../../../_core/services/alert.service';\r\nimport { ComponentCanDeactivate } from '../../../../_core/guards/component-can-deactivate';\r\nimport { CanDeactivateService } from '../../../../_core/guards/can-deactivate.service';\r\nimport { TranslatedComponent } from '../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FieldMetaDataDto } from '../../../../_api/dtos/inventory/field-meta-data.dto';\r\nimport { ImageEntityType } from '../../../../_api/_runtime/enums/image-entity-type';\r\nimport { CascadedSelectOption } from '../../../../_models/cascaded-select-option.model';\r\nimport { FieldOption } from '../../../../_models/field-option.model';\r\nimport { AssetFileSummaryDto } from '../../../../_api/dtos/asset-file-summary.dto';\r\nimport { BreadCrumb } from '../../../../_models/breadcrumbs.model';\r\nimport { NgForm, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { InventoryService } from '../../../../_api/services/reconciliation/inventory.service';\r\nimport { AssetDto } from '../../../../_api/_runtime/dtos/asset.dto';\r\nimport { FormAction } from '../../../../_enums/form-action';\r\nimport { FormActionEvent } from '../../../../_models/form-action-event.model';\r\nimport { FieldType } from '../../../../_enums/field-type';\r\nimport { CascadedSelectValue } from '../../../../_models/cascaded-select-value.model';\r\n\r\n@Component({\r\n  selector: 'add-content',\r\n  templateUrl: './add-content.component.html'\r\n})\r\nexport class AddContentComponent extends ComponentCanDeactivate implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  fields = new Array<FieldMetaDataDto>();\r\n\r\n  groupId: string = this.qualityControlService.groupId;\r\n  imageEntityType: ImageEntityType = ImageEntityType.Asset;\r\n\r\n  groupSiteInfo: Array<CascadedSelectOption>;\r\n  groupAccounts: Array<FieldOption>;\r\n  groupDepartments: Array<FieldOption>;\r\n\r\n  assetFileSummary = <AssetFileSummaryDto>{};\r\n\r\n  keepFormOpen: boolean;\r\n\r\n  breadCrumbs = [\r\n    <BreadCrumb>{ name: 'Quality Control Overview', routerLink: '../../QualityControl' },\r\n    <BreadCrumb>{ name: 'Add Content', routerLink: '../AddContent', isDisabled: true }\r\n  ];\r\n\r\n  private formInProgress: NgForm;\r\n\r\n  constructor(\r\n    private qualityControlService: QualityControlService,\r\n    private assetFileInfoService: AssetFileInfoService,\r\n    private router: Router,\r\n    private alertService: AlertService,\r\n    private inventoryServiceRuntime: InventoryService,\r\n    private canDeactivateService: CanDeactivateService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    const s = this;\r\n\r\n    s.fields = this.qualityControlService.assetFileSummary.fields.filter(function (x) {\r\n\r\n      const internalFields = s.assetFileInfoService.GetInternalColumns();\r\n\r\n      // TODO Possibily Add the columns that are excluded to the internalFields list.\r\n      return (\r\n        internalFields.findIndex(c => c === x.name) === -1 &&\r\n        x.name !== 'siteIdentifier' &&\r\n        x.name !== 'activityCode' &&\r\n        x.name !== 'memberName' &&\r\n        x.name !== 'memberNumber' &&\r\n        x.name !== 'buildingName' &&\r\n        x.name !== 'buildingNumber' &&\r\n        x.name !== 'siteNumber' &&\r\n        x.name !== 'siteName' &&\r\n        x.name !== 'departmentNumber' &&\r\n        x.name !== 'accountNumber' &&\r\n        x.name !== 'accountDescription'\r\n      );\r\n    });\r\n\r\n    const buildingSelection = <FieldMetaDataDto>{\r\n      fieldType: FieldType.CascadingComboBox,\r\n      displayName: 'Member',\r\n      name: 'buildingId',\r\n      cascadedValues: [\r\n        <CascadedSelectValue>{ displayName: 'Member', name: 'member' },\r\n        <CascadedSelectValue>{ displayName: 'Site', name: 'siteId' },\r\n        <CascadedSelectValue>{ displayName: 'Building', name: 'buildingId' }\r\n      ],\r\n      cascadedValueOptions: this.qualityControlService.buildingSelectionOptions,\r\n      required: true\r\n    };\r\n\r\n    s.fields.push(buildingSelection);\r\n\r\n    // console.log(this.qualityControlService.groupDepartmentOptions, 'groupDepartmentOptions');\r\n\r\n    const departmentSelection = <FieldMetaDataDto>{\r\n      fieldType: FieldType.DropDown,\r\n      displayName: 'Department',\r\n      name: 'departmentId',\r\n      options: this.qualityControlService.groupDepartmentOptions\r\n    };\r\n\r\n    s.fields.push(departmentSelection);\r\n\r\n    const accountSelections = <FieldMetaDataDto>{\r\n      fieldType: FieldType.DropDown,\r\n      displayName: 'Account',\r\n      name: 'accountId',\r\n      options: this.qualityControlService.accountOptions\r\n    };\r\n    s.fields.push(accountSelections);\r\n\r\n    const nonTranslatedFields = this.assetFileInfoService.GetNonTranslatedFields();\r\n\r\n    s.fields.forEach(field => {\r\n      if (field.name === 'depreciationConvention') {\r\n        field.options = this.qualityControlService.depreciationConventionOptions;\r\n      }\r\n      if (nonTranslatedFields.findIndex(x => x === field.name) === -1) {\r\n        field.translationKey = this.i18n.asset;\r\n      } else {\r\n        field.translationKey = this.i18n.noTranslate;\r\n      }\r\n    });\r\n  }\r\n\r\n  onFormActionEvent(event: FormActionEvent) {\r\n    switch (event.action) {\r\n      case FormAction.Cancel:\r\n        this.cancel();\r\n        break;\r\n      case FormAction.Save:\r\n        this.keepFormOpen = false;\r\n        this.save(event.formGroup, event.dto);\r\n        break;\r\n      case FormAction.ValueChange:\r\n        this.formInProgress = event.form;\r\n        break;\r\n      case FormAction.KeepOpen:\r\n        this.keepFormOpen = true;\r\n        this.save(event.formGroup, event.dto);\r\n        break;\r\n      default:\r\n        throw new Error(`Action ${event.action} not implemented.`);\r\n    }\r\n  }\r\n  save(form: FormGroup, assetDto: AssetDto) {\r\n    if (form.valid) {\r\n      assetDto.activityCode = 0;\r\n      this.assetFileSummary.id = this.qualityControlService.assetFileSummary.id;\r\n      this.inventoryServiceRuntime.createAssetRecord(this.assetFileSummary.id, assetDto).subscribe(\r\n        result => {\r\n\r\n          this.alertService.success('Content created successfully');\r\n          if (!this.keepFormOpen) {\r\n            this.formInProgress = null;\r\n            this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl`], { queryParams: { mode: 0 } });\r\n          } else {\r\n            this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl/EditContent/${result.id}`], { queryParams: { mode: 0 } });\r\n          }\r\n        },\r\n        error => {\r\n          this.alertService.error('An error has occurred saving this Content');\r\n        },\r\n        () => { }\r\n      );\r\n    }\r\n  }\r\n\r\n  canDeactivate(): boolean {\r\n    return this.canDeactivateService.canDeactivateForm(this.formInProgress);\r\n  }\r\n\r\n  private cancel(): void {\r\n    this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl`], { queryParams: { mode: 0 } });\r\n  }\r\n}\r\n","import { QualityControlService } from '../../../services/quality-control.service';\r\nimport { AlertService } from '../../../../_core/services/alert.service';\r\nimport { AssetFileInfoService } from '../../../../_core/services/asset-file-info-service';\r\nimport { ComponentCanDeactivate } from '../../../../_core/guards/component-can-deactivate';\r\nimport { CanDeactivateService } from '../../../../_core/guards/can-deactivate.service';\r\nimport { TranslatedComponent } from '../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../_core/i18n/translation-base-keys';\r\nimport { ImageService } from '../../../../_core/services/image.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FieldMetaDataDto } from '../../../../_api/dtos/inventory/field-meta-data.dto';\r\nimport { ImageEntityType } from '../../../../_api/_runtime/enums/image-entity-type';\r\nimport { AssetDto } from '../../../../_api/_runtime/dtos/asset.dto';\r\nimport { CascadedSelectOption } from '../../../../_models/cascaded-select-option.model';\r\nimport { FieldOption } from '../../../../_models/field-option.model';\r\nimport { AssetFileSummaryDto } from '../../../../_api/dtos/asset-file-summary.dto';\r\nimport { BreadCrumb } from '../../../../_models/breadcrumbs.model';\r\nimport { NgForm, FormGroup } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { InventoryApiService } from '../../../../_api/_runtime/services/inventory-api.service';\r\nimport { ImageApiService } from '../../../../_api/_runtime/services/image-api.service';\r\nimport { InventoryService } from '../../../../_api/services/reconciliation/inventory.service';\r\nimport { FieldType } from '../../../../_enums/field-type';\r\nimport { CascadedSelectValue } from '../../../../_models/cascaded-select-value.model';\r\nimport { FormActionEvent } from '../../../../_models/form-action-event.model';\r\nimport { FormAction } from '../../../../_enums/form-action';\r\nimport { forkJoin } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'edit-content',\r\n  templateUrl: './edit-content.component.html'\r\n})\r\nexport class EditContentComponent extends ComponentCanDeactivate implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  isDuplicate: string;\r\n\r\n  fields = new Array<FieldMetaDataDto>();\r\n  imageEntityType: ImageEntityType = ImageEntityType.Asset;\r\n\r\n  assetDto: AssetDto;\r\n\r\n  contentId: string;\r\n  groupId: string = this.qualityControlService.groupId;\r\n  fileType: string;\r\n\r\n  formModels = [];\r\n\r\n  fieldsArray: Array<AssetDto | FieldMetaDataDto>;\r\n\r\n  groupSiteInfo: Array<CascadedSelectOption>;\r\n  groupAccounts: Array<FieldOption>;\r\n  groupDepartments: Array<FieldOption>;\r\n  assetFileSummary = <AssetFileSummaryDto>{};\r\n  keepFormOpen: boolean;\r\n  savingForm = false;\r\n\r\n  depreciationFields = new Array<FieldMetaDataDto>();\r\n\r\n  breadCrumbs = [\r\n    <BreadCrumb>{ name: 'Quality Control Overview', routerLink: '../../' },\r\n    <BreadCrumb>{ name: 'Edit Content', routerLink: 'EditContent', isDisabled: true }\r\n  ];\r\n\r\n  private formInProgress: NgForm;\r\n\r\n  constructor(\r\n    private qualityControlService: QualityControlService,\r\n    private assetFileInfoService: AssetFileInfoService,\r\n    private router: Router,\r\n    private alertService: AlertService,\r\n    private route: ActivatedRoute,\r\n    private inventoryServiceRuntime: InventoryApiService,\r\n    private canDeactivateService: CanDeactivateService,\r\n    private imageApiService: ImageApiService,\r\n    private imageService: ImageService,\r\n    private inventoryService: InventoryService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    const s = this;\r\n    const contentId = this.route.snapshot.paramMap.get('contentId');\r\n    this.isDuplicate = this.route.snapshot.queryParamMap.get('isDuplicate');\r\n\r\n    if (contentId) {\r\n      this.contentId = contentId;\r\n      this.inventoryServiceRuntime.getAssetRecord(contentId).subscribe(assetDto => {\r\n        this.assetDto = assetDto;\r\n        this.fields = this.qualityControlService.assetFileSummary.fields.filter(function (x) {\r\n\r\n          if ('depreciationAsOfDate, periodDepreciation, lifeMonths, accumulatedDepreciation'.indexOf(x.name) !== -1) {\r\n            s.depreciationFields.push(x);\r\n          }\r\n\r\n          const internalFields = s.assetFileInfoService.GetInternalColumns();\r\n\r\n          return (\r\n            internalFields.findIndex(c => c === x.name) === -1 &&\r\n            x.name !== 'siteIdentifier' &&\r\n            x.name !== 'activityCode' &&\r\n            x.name !== 'memberName' &&\r\n            x.name !== 'memberNumber' &&\r\n            x.name !== 'buildingName' &&\r\n            x.name !== 'buildingNumber' &&\r\n            x.name !== 'siteNumber' &&\r\n            x.name !== 'siteName' &&\r\n            x.name !== 'departmentNumber' &&\r\n            x.name !== 'accountNumber' &&\r\n            x.name !== 'accountDescription' &&\r\n            x.name !== 'departmentName'\r\n          );\r\n        });\r\n\r\n        const buildingSelection = <FieldMetaDataDto>{\r\n          fieldType: FieldType.CascadingComboBox,\r\n          displayName: 'Member',\r\n          name: 'buildingId',\r\n          cascadedValues: [\r\n            <CascadedSelectValue>{ displayName: 'Member', name: 'member' },\r\n            <CascadedSelectValue>{ displayName: 'Site', name: 'siteId' },\r\n            <CascadedSelectValue>{ displayName: 'Building', name: 'buildingId' }\r\n          ],\r\n          cascadedValueOptions: this.qualityControlService.buildingSelectionOptions,\r\n          required: true\r\n        };\r\n\r\n        s.fields.push(buildingSelection);\r\n\r\n        const departmentSelection = <FieldMetaDataDto>{\r\n          fieldType: FieldType.DropDown,\r\n          displayName: 'Department',\r\n          name: 'departmentId',\r\n          options: this.qualityControlService.groupDepartmentOptions,\r\n        };\r\n\r\n        s.fields.push(departmentSelection);\r\n\r\n        const accountSelections = <FieldMetaDataDto>{\r\n          fieldType: FieldType.DropDown,\r\n          displayName: 'Account',\r\n          name: 'accountId',\r\n          options: this.qualityControlService.accountOptions\r\n        };\r\n        s.fields.push(accountSelections);\r\n\r\n        const activityCodeSelections = <FieldMetaDataDto>{\r\n          fieldType: FieldType.DropDown,\r\n          displayName: 'Activity Code',\r\n          name: 'activityCode',\r\n          options: this.qualityControlService.activityCodeOptions\r\n        };\r\n        s.fields.push(activityCodeSelections);\r\n\r\n        const nonTranslatedFields = this.assetFileInfoService.GetNonTranslatedFields();\r\n\r\n        s.fields.forEach(field => {\r\n          if(field.name === 'depreciationConvention') {\r\n            field.options = this.qualityControlService.depreciationConventionOptions;\r\n          }\r\n          else if(field.name === 'depreciationMethod') {\r\n            field.options = this.qualityControlService.depreciationMethodOptions;\r\n          }\r\n          if (nonTranslatedFields.findIndex(x => x === field.name) === -1) {\r\n            field.translationKey = this.i18n.asset;\r\n          } else {\r\n            field.translationKey = this.i18n.noTranslate;\r\n          }\r\n        });        \r\n      });\r\n\r\n    }\r\n    \r\n  }\r\n\r\n  onFormActionEvent(event: FormActionEvent) {\r\n    switch (event.action) {\r\n      case FormAction.Cancel:\r\n        this.cancel();\r\n        break;\r\n      case FormAction.Save:\r\n        this.keepFormOpen = false;\r\n        this.save(event.formGroup, event.dto);\r\n        break;\r\n      case FormAction.ValueChange:\r\n        this.formInProgress = event.form;\r\n        break;\r\n      case FormAction.KeepOpen:\r\n        this.keepFormOpen = true;\r\n        this.save(event.formGroup, event.dto);\r\n        break;\r\n      default:\r\n        throw new Error(`Action ${event.action} not implemented.`);\r\n    }\r\n  }\r\n\r\n  canDeactivate(): boolean {\r\n    return this.canDeactivateService.canDeactivateForm(this.formInProgress);\r\n  }\r\n\r\n  private save(form: FormGroup, assetDto: AssetDto): void {\r\n    this.savingForm = true;\r\n\r\n    if (form.valid) {\r\n      assetDto.id = this.contentId;\r\n      if (this.isDuplicate === 'true') {\r\n        assetDto.activityCode = 0;\r\n        this.assetFileSummary.id = this.qualityControlService.assetFileSummary.id;\r\n        this.inventoryService.createAssetRecord(this.assetFileSummary.id, assetDto).subscribe(\r\n          result => {\r\n            this.alertService.success('Content created successfully');\r\n            if (!this.keepFormOpen) {\r\n              this.formInProgress = null;\r\n              this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl`], { queryParams: { mode: 0 } });\r\n            } else {\r\n              this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl/EditContent/${result.id}`], {\r\n                queryParams: { mode: 0 }\r\n              });\r\n            }\r\n          },\r\n          error => {\r\n            this.alertService.error('An error has occurred saving this Content');\r\n          },\r\n          () => { }\r\n        );\r\n      } else {\r\n        forkJoin(\r\n          this.inventoryServiceRuntime.updateAssetRecord(this.contentId, assetDto).pipe(first()),\r\n          this.imageApiService.updateAssetImages(this.contentId, this.imageService.imageCollection).pipe(first())\r\n        ).subscribe(\r\n          (res) => {\r\n            this.alertService.success('Content edit successfully');\r\n            if (!this.keepFormOpen) {\r\n              this.formInProgress = null;\r\n              this.savingForm = false;\r\n              this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl`], { queryParams: { mode: 0 } });\r\n            } else {\r\n              this.savingForm = false;\r\n            }\r\n          },\r\n          error => {\r\n            this.alertService.error('An error has occurred saving this content');\r\n          }\r\n        );\r\n      }\r\n    } else {\r\n      this.savingForm = false;\r\n      this.alertService.error('Missing required fields');\r\n    }\r\n  }\r\n\r\n\r\n\r\n  private cancel(): void {\r\n    this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl`], { queryParams: { mode: 0 } });\r\n  }\r\n}\r\n","import { QualityControlService } from '../../../services/quality-control.service';\r\nimport { AssetFileInfoService } from '../../../../_core/services/asset-file-info-service';\r\nimport { QualityControlModes } from '../../../enums/quality-control-modes';\r\nimport { OnDestroy, OnInit, Component } from '@angular/core';\r\nimport { TranslatedComponent } from '../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../_core/i18n/translation-base-keys';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { FilterDto } from '../../../../_api/dtos/inventory/filter.dto';\r\nimport { Term } from '../../../../_api/_runtime/dtos/processing-detail-request.dto';\r\nimport { FieldMetaDataDto } from '../../../../_api/dtos/inventory/field-meta-data.dto';\r\nimport { BreadCrumb } from '../../../../_models/breadcrumbs.model';\r\n\r\n@Component({\r\n  selector: 'mass-update-content',\r\n  templateUrl: './mass-update-content.component.html'\r\n})\r\n\r\nexport class MassUpdateContentComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  private destroyed$ = new Subject<any>();\r\n\r\n  defaultFilterTerm: Array<FilterDto> = [\r\n    <FilterDto> {\r\n      term: <Term>{\r\n        dataTarget: this.qualityControlService.dataTarget, field: '', value: ''\r\n      },\r\n      operation: 'noop'\r\n    }\r\n  ];\r\n  filterMetaData: Array<FieldMetaDataDto>;\r\n  replaceMetaData: Array<FieldMetaDataDto>;\r\n\r\n  mode: QualityControlModes = QualityControlModes.Content;\r\n\r\n  breadCrumbs = [\r\n    <BreadCrumb>{ name: 'Quality Control', routerLink: '../../', queryParams: { mode: this.mode } },\r\n    <BreadCrumb>{ name: 'Mass Update Criteria', routerLink: '../../MassUpdate/Content', queryParams: { mode: this.mode } },\r\n    <BreadCrumb>{ name: 'View Results', routerLink: '../../MassUpdate/Results', queryParams: { mode: this.mode } }\r\n  ];\r\n\r\n  constructor(\r\n    private qualityControlService: QualityControlService,\r\n    private assetFileInfoService: AssetFileInfoService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    const getFilterDataSource = this.qualityControlService.\r\n    getSearchMetadataByGroupId(this.qualityControlService.groupId, this.qualityControlService.dataTarget);\r\n\r\n    getFilterDataSource.pipe(takeUntil(this.destroyed$))\r\n    .subscribe((filterDataSource) => {\r\n\r\n      let assetFileFields = filterDataSource.fields;\r\n      const internalColumns: string[] = this.assetFileInfoService.GetInternalColumns();\r\n      assetFileFields = assetFileFields.filter(field => {\r\n        return !internalColumns.includes(field.name);\r\n      });\r\n      this.filterMetaData = assetFileFields;\r\n\r\n      const hiddenFields: string[] = this.assetFileInfoService.GetInternalAndHiddenFields();\r\n      assetFileFields = filterDataSource.fields;\r\n      assetFileFields = assetFileFields.filter(field => {\r\n        return !hiddenFields.includes(field.name);\r\n      });\r\n      this.replaceMetaData = assetFileFields;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n  }\r\n}\r\n","import { QualityControlService } from '../../../services/quality-control.service';\r\nimport { AlertService } from '../../../../_core/services/alert.service';\r\nimport { AssetFileInfoService } from '../../../../_core/services/asset-file-info-service';\r\nimport { ComponentCanDeactivate } from '../../../../_core/guards/component-can-deactivate';\r\nimport { CanDeactivateService } from '../../../../_core/guards/can-deactivate.service';\r\nimport { TranslatedComponent } from '../../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FieldMetaDataDto } from '../../../../_api/dtos/inventory/field-meta-data.dto';\r\nimport { ImageEntityType } from '../../../../_api/_runtime/enums/image-entity-type';\r\nimport { AssetDto } from '../../../../_api/_runtime/dtos/asset.dto';\r\nimport { CascadedSelectOption } from '../../../../_models/cascaded-select-option.model';\r\nimport { FieldOption } from '../../../../_models/field-option.model';\r\nimport { AssetFileSummaryDto } from '../../../../_api/dtos/asset-file-summary.dto';\r\nimport { BreadCrumb } from '../../../../_models/breadcrumbs.model';\r\nimport { NgForm, FormGroup } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { InventoryApiService } from '../../../../_api/_runtime/services/inventory-api.service';\r\nimport { FieldType } from '../../../../_enums/field-type';\r\nimport { CascadedSelectValue } from '../../../../_models/cascaded-select-value.model';\r\nimport { FormActionEvent } from '../../../../_models/form-action-event.model';\r\nimport { FormAction } from '../../../../_enums/form-action';\r\n\r\n@Component({\r\n  selector: 'view-content',\r\n  templateUrl: './view-content.component.html'\r\n})\r\nexport class ViewContentComponent extends ComponentCanDeactivate implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  fields = new Array<FieldMetaDataDto>();\r\n  imageEntityType: ImageEntityType = ImageEntityType.Asset;\r\n\r\n  assetDto: AssetDto;\r\n\r\n  contentId: string;\r\n  groupId: string = this.qualityControlService.groupId;\r\n  fileType: string;\r\n\r\n  formModels = [];\r\n\r\n  fieldsArray: Array<AssetDto | FieldMetaDataDto>;\r\n\r\n  groupSiteInfo: Array<CascadedSelectOption>;\r\n  groupAccounts: Array<FieldOption>;\r\n  groupDepartments: Array<FieldOption>;\r\n\r\n  assetFileSummary = <AssetFileSummaryDto>{};\r\n\r\n  keepFormOpen: boolean;\r\n\r\n\r\n  breadCrumbs = [\r\n    <BreadCrumb>{ name: 'Quality Control Overview', routerLink: '../../' },\r\n    <BreadCrumb>{ name: 'Edit Content', routerLink: 'EditContent', isDisabled: true }\r\n  ];\r\n\r\n  private formInProgress: NgForm;\r\n\r\n  constructor(\r\n    private qualityControlService: QualityControlService,\r\n    private assetFileInfoService: AssetFileInfoService,\r\n    private router: Router,\r\n    private alertService: AlertService,\r\n    private route: ActivatedRoute,\r\n    private inventoryServiceRuntime: InventoryApiService,\r\n    private canDeactivateService: CanDeactivateService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    const s = this;\r\n    const contentId = this.route.snapshot.paramMap.get('contentId');\r\n\r\n    if (contentId) {\r\n      this.contentId = contentId;\r\n      this.inventoryServiceRuntime.getAssetRecord(contentId).subscribe(assetDto => {\r\n        this.assetDto = assetDto;\r\n        this.fields = this.qualityControlService.assetFileSummary.fields.filter(function(x) {\r\n          const internalFields = s.assetFileInfoService.GetInternalColumns();\r\n          return (internalFields.findIndex(c => c === x.name) === -1 &&\r\n            x.name !== 'siteIdentifier' &&\r\n            x.name !== 'activityCode' &&\r\n            x.name !== 'memberName' &&\r\n            x.name !== 'memberNumber' &&\r\n            x.name !== 'buildingName' &&\r\n            x.name !== 'buildingNumber' &&\r\n            x.name !== 'siteNumber' &&\r\n            x.name !== 'siteName' &&\r\n            x.name !== 'departmentNumber' &&\r\n            x.name !== 'accountNumber' &&\r\n            x.name !== 'accountDescription'\r\n          );\r\n        });\r\n\r\n        const buildingSelection = <FieldMetaDataDto>{\r\n          fieldType: FieldType.CascadingComboBox,\r\n          displayName: 'Member',\r\n          name: 'buildingId',\r\n          cascadedValues: [\r\n            <CascadedSelectValue>{ displayName: 'Member', name: 'member' },\r\n            <CascadedSelectValue>{ displayName: 'Site', name: 'siteId' },\r\n            <CascadedSelectValue>{ displayName: 'Building', name: 'buildingId' }\r\n          ],\r\n          cascadedValueOptions: this.qualityControlService.buildingSelectionOptions,\r\n          required: true\r\n        };\r\n\r\n        s.fields.push(buildingSelection);\r\n\r\n        const departmentSelection = <FieldMetaDataDto>{\r\n          fieldType: FieldType.DropDown,\r\n          displayName: 'Department Name',\r\n          name: 'departmentId',\r\n          options: this.qualityControlService.groupDepartmentOptions\r\n        };\r\n\r\n        s.fields.push(departmentSelection);\r\n\r\n        const accountSelections = <FieldMetaDataDto>{\r\n          fieldType: FieldType.DropDown,\r\n          displayName: 'Account Description',\r\n          name: 'accountId',\r\n          options: this.qualityControlService.accountOptions\r\n        };\r\n        s.fields.push(accountSelections);\r\n\r\n        const activityCodeSelections = <FieldMetaDataDto>{\r\n          fieldType: FieldType.DropDown,\r\n          displayName: 'ActivityCode',\r\n          name: 'activityCode',\r\n          options: this.qualityControlService.activityCodeOptions\r\n        };\r\n        s.fields.push(activityCodeSelections);\r\n\r\n        const nonTranslatedFields = this.assetFileInfoService.GetNonTranslatedFields();\r\n\r\n        s.fields.forEach(field => {\r\n          if (nonTranslatedFields.findIndex(x => x === field.name) === -1) {\r\n            field.translationKey = this.i18n.asset;\r\n          } else {\r\n            field.translationKey = this.i18n.noTranslate;\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  onFormActionEvent(event: FormActionEvent) {\r\n    switch (event.action) {\r\n      case FormAction.Cancel:\r\n        this.cancel();\r\n        break;\r\n      case FormAction.Save:\r\n        this.keepFormOpen = false;\r\n        this.save(event.formGroup, event.dto);\r\n        break;\r\n      case FormAction.ValueChange:\r\n        this.formInProgress = event.form;\r\n        break;\r\n        case FormAction.KeepOpen:\r\n        this.keepFormOpen = true;\r\n        this.save(event.formGroup, event.dto);\r\n        break;\r\n      default:\r\n        throw new Error(`Action ${event.action} not implemented.`);\r\n    }\r\n  }\r\n\r\n  canDeactivate(): boolean {\r\n    return this.canDeactivateService.canDeactivateForm(this.formInProgress);\r\n  }\r\n\r\n  private save(form: FormGroup, assetDto: AssetDto): void {\r\n    if (form.valid) {\r\n      assetDto.id = this.contentId;\r\n      this.inventoryServiceRuntime.updateAssetRecord(this.contentId, assetDto).subscribe(\r\n        () => {\r\n          this.alertService.success('Content edit successfully');\r\n          if (!this.keepFormOpen) {\r\n            this.formInProgress = null;\r\n            this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl`], { queryParams: { mode: 0 } });\r\n          } \r\n        },\r\n        error => {\r\n          this.alertService.error('An error has occurred saving this content');\r\n        },\r\n        () => {}\r\n      );\r\n    } else {\r\n      this.alertService.error('Missing required fields');\r\n    }\r\n  }\r\n\r\n  private cancel(): void {\r\n    this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl`], { queryParams: { mode: 0 } });\r\n  }\r\n}\r\n","import { SortDescriptor } from '@progress/kendo-data-query/dist/es/main';\r\nimport { QualityControlService } from '../../services/quality-control.service';\r\nimport { FieldType } from '../../../_api/_runtime/enums/field-type';\r\nimport { AssetFileInfoService } from '../../../_core/services/asset-file-info-service';\r\nimport { FamisGridService } from '../../../_core/services/famis-grid.service';\r\nimport { HelperService } from '../../../_core/services/helper.service';\r\nimport { FamisGridComponent } from '../../../_shared/components/famis-grid.component';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { AssetDto } from '../../../_api/_runtime/dtos/asset.dto';\r\nimport { AlertService } from '../../../_core/services/alert.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Component, OnInit, OnDestroy, Output, EventEmitter, ViewChild, Input } from '@angular/core';\r\nimport { FamisGrid, FamisGridFeature } from '../../../_models/shared/famis-grid-state.model';\r\nimport { Asset } from '../../../_models/asset.model';\r\nimport { State } from '@progress/kendo-data-query';\r\nimport { Subject, forkJoin, Subscription } from 'rxjs';\r\nimport { ReconciliationInventoryService } from '../../../reconciliation/services/inventory.service';\r\nimport { Router } from '@angular/router';\r\nimport { DataTargetName } from '../../../_enums/data-target-name';\r\nimport { FamisGridCacheResult } from '../../../_models/shared/famis-grid-cache-result.model';\r\nimport { SelectionChangeEvent } from '../../../_models/selection-change-event.model';\r\nimport { DataItemValue } from '../../../_models/data-item-value.model';\r\nimport { FamisGridActionEvent } from '../../../_models/shared/famis-grid-action-event.model';\r\nimport { AssetSortTermDto } from '../../../_api/dtos/inventory/asset-search.dto';\r\nimport { EnumDto } from '../../../_api/_configuration/dtos/enum.dto';\r\nimport { FilterSourceEnum } from '../../../_api/_configuration/enums/filterSource.enum';\r\n\r\n@Component({\r\n  selector: 'quality-control-content-grid',\r\n  templateUrl: './quality-control-content-grid.component.html'\r\n})\r\nexport class QualityControlContentGridComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  public dataGrid: FamisGrid;\r\n  public selectedAssets = new Array<Asset>();\r\n  public sort: SortDescriptor[];\r\n  public state: State;\r\n  public enumDtos = new Array<EnumDto>();\r\n  private destroyed$ = new Subject<any>();\r\n\r\n  @Output()\r\n  gridSelections = new EventEmitter<Array<Asset>>();\r\n\r\n  @ViewChild(FamisGridComponent, {static: false})\r\n  famisGrid: FamisGridComponent;\r\n\r\n  @Input()\r\n  isReadOnly = true;\r\n\r\n  constructor(\r\n    private qualityControlService: QualityControlService,\r\n    private famisGridService: FamisGridService,\r\n    private helperService: HelperService,\r\n    private assetFileInfoService: AssetFileInfoService,\r\n    private inventoryService: ReconciliationInventoryService,\r\n    private alertService: AlertService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n\r\n    this.famisGridService.clearEditedRecords();\r\n\r\n\r\n    this.state = {\r\n      skip: 0,\r\n      take: 84\r\n    };\r\n\r\n    this.dataGrid = <FamisGrid>{\r\n      height: 600,\r\n      gridId: this.famisGridService.createGrid(),\r\n      totalRecordCount: 0,\r\n      name: this.qualityControlService.dataTarget === DataTargetName.inventory ? 'Actual Inventory' : 'Consolidated File',\r\n      dataSource: this.qualityControlService.dataTarget,\r\n      supportedOperators: [\r\n        FamisGridFeature.MultiSelectable,\r\n        FamisGridFeature.ColumnSelection,\r\n        FamisGridFeature.Sort,\r\n        FamisGridFeature.InGridEditable,\r\n        FamisGridFeature.Filter\r\n      ],\r\n      actions: this.isReadOnly ? ['View', 'Image'] : ['Edit', 'Image'],\r\n      translationBaseKey: this.i18n.asset,\r\n      defaultSort: [<SortDescriptor>{field: 'displayId', dir: 'asc'}]\r\n    };\r\n\r\n    this.famisGridService.setUserId();\r\n    const getActivityCodes = this.qualityControlService.getActivityCodes();\r\n\r\n    const getDepreciationConventions = this.qualityControlService.getDepreciationConventions();\r\n\r\n    const getDepreciationMethods = this.qualityControlService.getDepreciationMethods();\r\n\r\n    const getSearchMetadataByGroupId = this.qualityControlService.getSearchMetadataByGroupId(\r\n      this.qualityControlService.groupId,\r\n      this.qualityControlService.dataTarget\r\n    );\r\n\r\n    this.dataGrid.loading = forkJoin(getActivityCodes, getDepreciationConventions, getDepreciationMethods, getSearchMetadataByGroupId)\r\n    .subscribe(([activityCodes, depreciationConventions, depreciationMethods, searchMetadata]) => {\r\n      searchMetadata.fields.forEach(field => {\r\n        if (field.name.indexOf('assetImages') > -1) {\r\n          field.fieldType = FieldType.Image;\r\n        }\r\n      });\r\n      this.enumDtos.push(activityCodes.result, depreciationConventions.result, depreciationMethods.result);\r\n      this.qualityControlService.assetFileSummary = searchMetadata;\r\n      this.dataGrid.fileId = searchMetadata.id;\r\n      this.dataGrid.columnHeaders = this.helperService.mapHeaders(searchMetadata.fields, this.assetFileInfoService.GetInternalColumns(), undefined, this.enumDtos);\r\n      this.dataGrid.selectedHeaders = this.assetFileInfoService.GetDefaultColumns();\r\n\r\n      this.assetFileInfoService.updateReferenceData(activityCodes.result.enumOptions, 'ActivityCodes');\r\n      this.assetFileInfoService.updateReferenceData(depreciationConventions.result.enumOptions, 'DepreciationConventions');\r\n      this.assetFileInfoService.updateReferenceData(depreciationMethods.result.enumOptions, 'DepreciationMethods');\r\n    });\r\n  }\r\n    ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  updateCache(request?: FamisGridCacheResult) {\r\n    const s = this;\r\n\r\n    this.dataGrid.loading = s.processCacheUpdate(request);\r\n    this.dataGrid.cacheLoading = this.dataGrid.loading;\r\n  }\r\n\r\n  handleSelectionChanged(event: SelectionChangeEvent) {\r\n    event.itemsAdded.forEach(item => {\r\n      const index = this.selectedAssets.indexOf(item.dataItem);\r\n      if (index === -1) {\r\n        this.selectedAssets.push(<Asset>item.dataItem);\r\n      }\r\n    });\r\n\r\n    event.itemsRemoved.forEach(item => {\r\n      const index = this.selectedAssets.indexOf(item.dataItem);\r\n      if (index !== -1) {\r\n        this.selectedAssets.splice(index, 1);\r\n      }\r\n    });\r\n\r\n    this.gridSelections.emit(this.selectedAssets);\r\n  }\r\n\r\n  handleCellValueChanged(result: Array<DataItemValue>) {\r\n\r\n    const resultToSave = JSON.parse(JSON.stringify(result));\r\n\r\n    resultToSave.forEach(editItem => {\r\n      delete editItem.dataItem.imageCollection;\r\n\r\n      this.inventoryService.updateAssetRecord(editItem.itemId, <AssetDto>editItem.dataItem)\r\n        .subscribe(() => {\r\n          this.alertService.success('Asset(s) edited successfully');\r\n\r\n          this.famisGridService.removeEditedRecord(editItem.itemId);\r\n          this.famisGridService.removeRecordWithErrors(editItem.itemId);\r\n        },\r\n          error => {\r\n            this.alertService.error(!!error.error ? error.error : 'An error has occurred saving the asset');\r\n\r\n            this.famisGridService.addRecordsWithErrors(editItem.itemId, editItem.dataItem);\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n  handleActionEvent(event: FamisGridActionEvent) {\r\n    switch (event.action) {\r\n      case 'Edit':\r\n        this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl/EditContent/${event.item.id}`]);\r\n        break;\r\n\r\n      case 'View':\r\n        this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl/ViewContent/${event.item.id}`]);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // TODO Consider moving this method to the famis shared grid service\r\n  private processCacheUpdate(cacheUpdateRequest?: FamisGridCacheResult): Subscription {\r\n    const s = this;\r\n\r\n    this.selectedAssets = new Array<Asset>();\r\n\r\n    if (this.famisGrid) {\r\n      this.famisGrid.selectedRows = [];\r\n    }\r\n\r\n    return this.qualityControlService\r\n      .updateData(\r\n        s.qualityControlService.groupId,\r\n        cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.skip : s.famisGridService.defaultSkip,\r\n        cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.take : s.famisGridService.defaultTake,\r\n        cacheUpdateRequest ? cacheUpdateRequest.sortTerms : s.famisGridService.currentSort[this.dataGrid.gridId],\r\n        cacheUpdateRequest ? cacheUpdateRequest.filters : null,\r\n        FilterSourceEnum.QualityControlGrid\r\n      )\r\n      .subscribe(dto => {\r\n        this.dataGrid.totalRecordCount = dto.totalInRecordSet;\r\n        s.famisGridService.setCacheRecords(\r\n          this.assetFileInfoService.mapEnums(\r\n            dto.assets.map(asset => {\r\n              asset.assetData.imageCollection = !!asset.assetData.assetImages ? asset.assetData.assetImages : [];\r\n              return asset.assetData;\r\n            })\r\n          ),\r\n          s.dataGrid.gridId,\r\n          cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.skip : s.famisGridService.defaultSkip,\r\n          dto.totalInRecordSet,\r\n          cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.take : s.famisGridService.defaultTake\r\n        );\r\n        this.famisGrid.dataLoading = false;\r\n      },\r\n      error => {\r\n        if (error['error']) {\r\n          if(error['error'] === 'Unable to filter records') \r\n            this.alertService.error('unabletofilterrecords');\r\n          else if(error['error'] === 'Unable to sort records')\r\n            this.alertService.error('unabletosortrecords');          \r\n        }\r\n        else\r\n            this.alertService.error('anunexpectederrorhasoccurred.');    \r\n      });\r\n  }\r\n\r\n  handleSortChanged(sort: SortDescriptor[]) {\r\n    const s = this;\r\n    this.sort = sort;\r\n    const sortTerms = new Array<AssetSortTermDto>();\r\n    const orderCount = 0;\r\n    sort.forEach(c => {\r\n      const sortTerm = <AssetSortTermDto>{\r\n        termOrder: orderCount,\r\n        sortDirection: c.dir === 'asc' ? 0 : 1,\r\n        field: c.field\r\n      };\r\n\r\n      sortTerms.push(sortTerm);\r\n    });\r\n\r\n    this.famisGridService.currentSort[this.dataGrid.gridId] = sortTerms;\r\n\r\n    s.famisGridService\r\n      .update(\r\n        s.dataGrid.gridId,\r\n        s.state.skip,\r\n        s.state.take,\r\n        s.dataGrid.totalRecordCount,\r\n        s.famisGridService.currentSort[s.dataGrid.gridId],\r\n        true\r\n      )\r\n      .pipe(takeUntil(s.destroyed$))\r\n      .subscribe(result => {\r\n        s.updateCache(result);\r\n      });\r\n  }\r\n}\r\n","import { forkJoin, Subscription, Subject } from 'rxjs';\r\nimport { QualityControlService } from '../../services/quality-control.service';\r\nimport { DuplicateCheckService } from '../../services/duplicate-check/duplicate-check.service';\r\nimport { FamisGridService } from '../../../_core/services/famis-grid.service';\r\nimport { ReplaceFieldComponent } from '../../../_shared/components/replace-field.component';\r\nimport { AssetFileInfoService } from '../../../_core/services/asset-file-info-service';\r\nimport { HelperService } from '../../../_core/services/helper.service';\r\nimport { AlertService } from '../../../_core/services/alert.service';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Component, OnInit, OnDestroy, ViewChild, ComponentFactoryResolver } from '@angular/core';\r\nimport { FamisGrid, FamisGridFeature } from '../../../_models/shared/famis-grid-state.model';\r\nimport { State } from '@progress/kendo-data-query';\r\nimport { FieldMetaDataDto } from '../../../_api/dtos/inventory/field-meta-data.dto';\r\nimport { ReplaceField } from '../../../_models/replace-field-state.model';\r\nimport { MassUpdateRequestDto } from '../../../_api/_runtime/dtos/mass-update-request.dto';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { QualityControlApiService } from '../../../_api/_runtime/services/quality-control-api.service';\r\nimport { BreadCrumb } from '../../../_models/breadcrumbs.model';\r\nimport { FieldType } from '../../../_enums/field-type';\r\nimport { FamisGridCacheResult } from '../../../_models/shared/famis-grid-cache-result.model';\r\nimport { SelectionChangeEvent } from '../../../_models/selection-change-event.model';\r\nimport { AssetFilterTermDto } from '../../../_api/dtos/inventory/asset-search.dto';\r\nimport { AssetSearchTermDto } from '../../../_api/_runtime/dtos/asset-search-term.dto';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'duplicate-check',\r\n  templateUrl: './duplicate-check.component.html'\r\n})\r\nexport class DuplicateCheckComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  public summaryGrid: FamisGrid;\r\n  public duplicateGrid: FamisGrid;\r\n\r\n  public running: Subscription;\r\n\r\n  public selectedField = '';\r\n  private windowSize = 500;\r\n  public state: State;\r\n\r\n  inventoryMetadata = new Array<FieldMetaDataDto>();\r\n  isProcessing = false;\r\n  isLoading = false;\r\n  duplicateField: string;\r\n  public replaceFieldState = <ReplaceField>{};\r\n  request: MassUpdateRequestDto;\r\n\r\n  /* A Subject for monitoring the destruction of the component. */\r\n  private destroyed$ = new Subject<any>();\r\n\r\n  @ViewChild(ReplaceFieldComponent, {static: true}) private replaceFieldComponent: ReplaceFieldComponent;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private componentResolver: ComponentFactoryResolver,\r\n    private qualityControlService: QualityControlService,\r\n    private qualityControlApiService: QualityControlApiService,\r\n    private duplicateCheckService: DuplicateCheckService,\r\n    private famisGridService: FamisGridService,\r\n    private assetFileInfoService: AssetFileInfoService,\r\n    private helperService: HelperService,\r\n    private alertService: AlertService\r\n  ) {}\r\n\r\n  breadCrumbs = [\r\n    <BreadCrumb>{ name: 'Quality Control', routerLink: '../../QualityControl' },\r\n    <BreadCrumb>{ name: 'Duplicate Check', routerLink: '../DuplicateCheck', isDisabled: true }\r\n  ];\r\n\r\n  ngOnInit() {\r\n    const s = this;\r\n\r\n\r\n    // Initialize base request data\r\n    this.request = <MassUpdateRequestDto>{\r\n      textReplaceValue: null,\r\n      field: '',\r\n      filterConjunction: 'and',\r\n      sortTerms: [{field: 'id', sortDirection: 0, termOrder: 0}],\r\n      filterTerms: []\r\n    };\r\n\r\n    this.replaceFieldState.replacementField = this.request.field;\r\n    this.replaceFieldState.replacementValue = this.request.textReplaceValue;\r\n\r\n\r\n    this.duplicateGrid = <FamisGrid>{\r\n      height: 300,\r\n      gridId: this.famisGridService.createGrid(),\r\n      windowSize: this.windowSize,\r\n      totalRecordCount: 0,\r\n      columnToSelectBy: 'fieldValue',\r\n      name: 'Duplicates',\r\n      columnHeaders: [\r\n        {\r\n          name: 'fieldValue',\r\n          displayName: 'Duplicate Value',\r\n          fieldType: FieldType.String,\r\n          isSearchable: true,\r\n          isFilterable: true,\r\n          isSortable: true,\r\n          isFacetable: false,\r\n          isKey: false,\r\n          isCustom: false\r\n        },\r\n        {\r\n          name: 'count',\r\n          displayName: '# of Duplicates',\r\n          fieldType: 'count',\r\n          isSearchable: true,\r\n          isFilterable: true,\r\n          isSortable: true,\r\n          isFacetable: false,\r\n          isKey: false,\r\n          isCustom: false\r\n        }\r\n      ],\r\n      selectedHeaders: ['fieldValue', 'count'],\r\n      supportedOperators: [FamisGridFeature.ColumnSelection],\r\n      translationBaseKey: this.i18n.asset,\r\n    };\r\n\r\n    this.summaryGrid = <FamisGrid>{\r\n      height: 300,\r\n      gridId: this.famisGridService.createGrid(),\r\n      windowSize: this.windowSize,\r\n      totalRecordCount: 0,\r\n      name: 'Summary',\r\n      supportedOperators: [FamisGridFeature.ColumnSelection],\r\n      translationBaseKey: this.i18n.asset\r\n    };\r\n\r\n    this.qualityControlService\r\n      .getSearchMetadataByGroupId(this.qualityControlService.groupId, this.qualityControlService.dataTarget)\r\n      .subscribe(metaData => {\r\n        this.summaryGrid.columnHeaders = s.helperService.mapHeaders(metaData.fields, this.assetFileInfoService.GetInternalColumns());\r\n        this.summaryGrid.selectedHeaders = this.assetFileInfoService.GetDefaultDuplicateCheckColumns();\r\n      });\r\n\r\n    const getFilterDataSource = this.qualityControlService.getSearchMetadataByGroupId(\r\n      this.qualityControlService.groupId,\r\n      this.qualityControlService.dataTarget\r\n    );\r\n\r\n    forkJoin(getFilterDataSource)\r\n      .pipe(takeUntil(this.destroyed$))\r\n      .subscribe(\r\n        ([filterDataSource]) => {\r\n          this.inventoryMetadata = this.helperService.sortCollection(filterDataSource.fields, 'displayName', 'ASC');\r\n          this.replaceFieldState.collection = filterDataSource.fields;\r\n\r\n        },\r\n        error => {},\r\n        () => {\r\n          // Anything on finish?\r\n        }\r\n      );\r\n\r\n    // Subscribe for when the replacement field and value change\r\n    this.replaceFieldComponent.modelChanged.subscribe(model => {\r\n      this.request.textReplaceValue = model.replacementValue;\r\n      this.request.field = model.replacementField;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  runDuplicateCheck() {\r\n    this.duplicateGrid.loading = this.processDuplicateCacheUpdate();\r\n  }\r\n\r\n  processDuplicateCacheUpdate(cacheUpdateRequest?: FamisGridCacheResult): Subscription {\r\n    const s = this;\r\n\r\n    return this.duplicateCheckService\r\n      .updateDuplicateCheckResults(\r\n        s.qualityControlService.groupId,\r\n        s.selectedField,\r\n        s.qualityControlService.dataTarget,\r\n        !!cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.skip : 0,\r\n        !!cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.take : 0,\r\n        !!cacheUpdateRequest ? cacheUpdateRequest.sortTerms : null,\r\n        !!cacheUpdateRequest ? cacheUpdateRequest.filters : null\r\n      )\r\n      .subscribe(dto => {\r\n        this.duplicateGrid.totalRecordCount = dto.totalRecords;\r\n\r\n        this.famisGridService.setCacheRecords(\r\n          dto.results,\r\n          this.duplicateGrid.gridId,\r\n          0,\r\n          dto.totalRecords,\r\n          this.duplicateGrid.windowSize\r\n        );\r\n      });\r\n  }\r\n\r\n  handleDuplicateSelectionChanged(event: SelectionChangeEvent) {\r\n    const s = this;\r\n\r\n    const filter = [\r\n      <AssetFilterTermDto>{\r\n        term: <AssetSearchTermDto>{\r\n          dataTarget: s.qualityControlService.dataTarget,\r\n          field: s.selectedField,\r\n          value: event.itemsAdded[0].dataItem.fieldValue },\r\n        operation: 'eq'\r\n      }\r\n    ];\r\n\r\n    this.request.filterTerms = filter;\r\n\r\n    this.summaryGrid.loading = this.duplicateCheckService\r\n      .updateDuplicateSummary(s.qualityControlService.groupId, 0, 0, null, filter)\r\n      .subscribe(dto => {\r\n        this.summaryGrid.totalRecordCount = dto.totalInRecordSet;\r\n\r\n        this.famisGridService.setCacheRecords(\r\n          dto.assets.map(c => c.assetData),\r\n          this.summaryGrid.gridId,\r\n          0,\r\n          dto.totalInRecordSet,\r\n          this.summaryGrid.windowSize\r\n        );\r\n      });\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    if (form.valid && this.request.field && this.request.textReplaceValue) {\r\n      this.qualityControlApiService.executeMassContentUpdate(this.qualityControlService.groupId, this.request).subscribe(result => {\r\n        if(result.code === 6){\r\n          this.alertService.error('Mass Update failed. Attempted to divide by zero');\r\n        }else{\r\n          this.alertService.success('{{field}} has been updated for {{totalRecords}} records.', true,\r\n         {field: result.result.field, totalRecords: result.result.totalRecords});\r\n        }\r\n        this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl`]);\r\n      });\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl`]);\r\n  }\r\n}\r\n","import { FilterCriteriaBuilderComponent } from '../../../_shared/components/filter-criteria-builder.component';\r\nimport { QualityControlService } from '../../services/quality-control.service';\r\nimport { MassUpdateService } from '../../services/mass-update.service';\r\nimport { ReplaceFieldComponent } from '../../../_shared/components/replace-field.component';\r\nimport { QualityControlModes } from '../../enums/quality-control-modes';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Component, OnInit, OnDestroy, Input, ViewContainerRef, ViewChild, ComponentFactoryResolver } from '@angular/core';\r\nimport { FilterDto } from '../../../_api/dtos/inventory/filter.dto';\r\nimport { ReplaceField } from '../../../_models/replace-field-state.model';\r\nimport { MassUpdateRequestDto } from '../../../_api/_runtime/dtos/mass-update-request.dto';\r\nimport { ReplaceFieldSelectionInfo } from '../../../_models/shared/replace-field-selection-info.model';\r\nimport { Subject } from 'rxjs';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\nimport { FieldMetaDataDto } from '../../../_api/_runtime/dtos/field-meta-data.dto';\r\nimport { ApiServiceResult } from \"../../../_api/dtos/api-service-result.dto\";\r\nimport { AttributeTypesAndCodesResult } from \"../../../_api/_configuration/dtos/attribute-types-and-codes-result.dto\";\r\nimport { BuildingInfoService } from '../../../_core/services/building-info-service';\r\n\r\n@Component({\r\n  selector: 'mass-update-criteria',\r\n  templateUrl: './mass-update-criteria.component.html'\r\n})\r\n\r\nexport class MassUpdateCriteriaComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  isAdvanced = false;\r\n  mode: number = Number(this.route.snapshot.queryParamMap.get('mode'));\r\n\r\n  @Input() defaultFilterTerm: Array<FilterDto>;\r\n  @Input() filterMetaData: Array<FieldMetaDataDto>;\r\n  @Input() replaceMetaData: Array<FieldMetaDataDto>;\r\n  @Input() translatedBaseKey: string;\r\n\r\n  @ViewChild('filterCriteria', { read: ViewContainerRef, static: true })\r\n  filterCriteriaContainer: ViewContainerRef;\r\n\r\n  @ViewChild(ReplaceFieldComponent, {static: true})\r\n  private replaceFieldComponent: ReplaceFieldComponent;\r\n\r\n  private replaceFieldState = <ReplaceField>{};\r\n\r\n  massUpdateRequest = <MassUpdateRequestDto>{};\r\n  inventoryMetadata = new Array<FieldMetaDataDto>();\r\n  isProcessing = false;\r\n  replaceSelectionInfo: Array<ReplaceFieldSelectionInfo>;\r\n  /* A Subject for monitoring the destruction of the component. */\r\n  private destroyed$ = new Subject<any>();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private componentResolver: ComponentFactoryResolver,\r\n    private qualityControlService: QualityControlService,\r\n    private massUpdateService: MassUpdateService,\r\n    private route: ActivatedRoute,\r\n    private buildingInfoService: BuildingInfoService\r\n  ) { }\r\n\r\n  private siteAttributeFields = this.buildingInfoService.GetSiteAttributeFields();\r\n\r\n  ngOnInit() {\r\n\r\n    this.replaceSelectionInfo = new Array<ReplaceFieldSelectionInfo>();\r\n    this.massUpdateService.massUpdateRequest$.pipe(takeUntil(this.destroyed$))\r\n    .subscribe(request => {\r\n      this.massUpdateRequest = request;\r\n      this.replaceFieldState.replacementField = request.field;\r\n      this.replaceFieldState.replacementValue = request.textReplaceValue;\r\n      if (this.replaceFieldComponent.replaceValue) {\r\n        this.replaceFieldComponent.replaceValue.nativeElement.innerHTML = this.replaceFieldState.advancedReplacementHtml;\r\n      }\r\n    });\r\n\r\n    this.setExistingFilters();\r\n    this.replaceFieldState.collection = this.replaceMetaData;\r\n    this.massUpdateService.updateContextSource(this.defaultFilterTerm, this.filterMetaData);\r\n    this.massUpdateService.defaultFilterTerms = this.defaultFilterTerm;\r\n\r\n    this.replaceFieldState.isAdvanced = true;\r\n\r\n    this.replaceFieldComponent.state = this.replaceFieldState;\r\n    this.replaceFieldComponent.modelChanged.pipe(takeUntil(this.destroyed$))\r\n    .subscribe(model => {\r\n      this.replaceFieldState = model;\r\n\r\n      this.massUpdateRequest.field = this.replaceFieldState.replacementField;\r\n      this.massUpdateRequest.textReplaceValue = this.replaceFieldState.replacementValue;\r\n      this.massUpdateRequest.advancedReplaceOperation = this.replaceFieldState.advancedReplacementValue;\r\n    });\r\n\r\n    this.qualityControlService\r\n      .getAccountData(this.qualityControlService.groupId)\r\n      .subscribe(accounts => {\r\n        this.replaceSelectionInfo.push(this.qualityControlService.mapAccounts(accounts));\r\n        this.replaceFieldComponent.selectionFieldInfo = this.replaceSelectionInfo;\r\n      }\r\n        );\r\n\r\n    this.qualityControlService\r\n      .getDepartmentData(this.qualityControlService.groupId)\r\n      .subscribe(departments => {\r\n        this.replaceSelectionInfo.push(this.qualityControlService.mapDepartments(departments));\r\n        this.replaceFieldComponent.selectionFieldInfo = this.replaceSelectionInfo;\r\n    });\r\n\r\n    this.qualityControlService\r\n    .getAttributeTypesAndCodes()\r\n    .subscribe( attributeTypesAndCodes => {\r\n      const siteAttributeTypeaAndCodes = this.getSelectedSiteAttributeOptions(attributeTypesAndCodes, this.siteAttributeFields);\r\n      const siteAttributesWithOptions = this.qualityControlService.mapSiteAttributeTypesAndCodes(siteAttributeTypeaAndCodes);\r\n      this.replaceSelectionInfo.push(...siteAttributesWithOptions);\r\n      this.replaceFieldComponent.selectionFieldInfo = this.replaceSelectionInfo;\r\n    });\r\n    \r\n    this.massUpdateService.currentReplaceComponentState.pipe(takeUntil(this.destroyed$)).subscribe(state => {\r\n      if (state.replacementField) {\r\n        this.replaceFieldState = state;\r\n        this.replaceFieldComponent.state = state;\r\n        this.massUpdateRequest.field = this.replaceFieldState.replacementField;\r\n        this.massUpdateRequest.textReplaceValue = this.replaceFieldState.replacementValue;\r\n        this.massUpdateRequest.advancedReplaceOperation = this.replaceFieldState.advancedReplacementValue;\r\n        this.isAdvanced = !!state.advancedReplacementValue;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    if (form.valid) {\r\n      if (this.replaceFieldState.isAdvanced) {\r\n        this.replaceFieldComponent.updateAdvancedModel();\r\n      }\r\n      if (this.massUpdateRequest.field &&\r\n        (this.massUpdateRequest.textReplaceValue ||\r\n          this.massUpdateRequest.textReplaceValue == null || !this.massUpdateRequest.textReplaceValue)) {\r\n        this.massUpdateService.updateReplaceComponentState(this.replaceFieldComponent.state);\r\n        this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl/MassUpdate/Results`],\r\n          { queryParams: { mode: this.mode }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl`],\r\n      { queryParams: { mode: this.mode }\r\n    });\r\n  }\r\n\r\n  addFilter(filter?: FilterDto) {\r\n    const comp = this.componentResolver.resolveComponentFactory(FilterCriteriaBuilderComponent);\r\n    const filterCriteria = this.filterCriteriaContainer.createComponent(comp);\r\n\r\n    filterCriteria.instance.translationKeyBase = this.translatedBaseKey;\r\n    // Setting reference to close/remove\r\n    filterCriteria.instance.ref = filterCriteria;\r\n    filterCriteria.instance.filterMetadata = this.filterMetaData;\r\n\r\n    if (this.mode === QualityControlModes.Content) {\r\n      filterCriteria.instance.dataTarget = this.qualityControlService.dataTarget;\r\n    }\r\n\r\n    filterCriteria.instance.criteriaChangedEvent.pipe(takeUntil(this.destroyed$))\r\n    .subscribe(filterChanged => {\r\n      this.massUpdateService.addOrUpdateFilter(filterChanged);\r\n    });\r\n\r\n    filterCriteria.instance.filterRemovedEvent.pipe(takeUntil(this.destroyed$))\r\n    .subscribe(filterRemove => {\r\n      this.massUpdateService.removeFilter(filterRemove.id);\r\n    });\r\n\r\n    if (filter) {\r\n      filterCriteria.instance.filter = filter;\r\n    }\r\n  }\r\n\r\n  private setExistingFilters() {\r\n    if (!this.massUpdateRequest.filterTerms.length) {\r\n      this.addFilter();\r\n    } else {\r\n      this.massUpdateRequest.filterTerms.forEach(filter => {\r\n        this.addFilter(filter);\r\n      });\r\n    }\r\n  }\r\n\r\n  private getSelectedSiteAttributeOptions (attributeTypesAndCodesResult: ApiServiceResult<Array<AttributeTypesAndCodesResult>>,siteAttributes: string[]): Array<AttributeTypesAndCodesResult> {\r\n\r\n    const siteAttribOptions = [];\r\n    siteAttributes.forEach( siteAttribute => {\r\n      const siteAttribOption = attributeTypesAndCodesResult.result.find(c => c.name.toLowerCase() === siteAttribute.toLowerCase() );\r\n      siteAttribOptions.push(siteAttribOption);\r\n    });\r\n\r\n    return siteAttribOptions;\r\n  }\r\n}\r\n","import { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'mass-update-form',\r\n  templateUrl: './mass-update-form.component.html'\r\n})\r\n\r\nexport class MassUpdateFormComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  isLoading = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\r\n  }\r\n}\r\n","import { FamisGridService } from '../../../_core/services/famis-grid.service';\r\nimport { QualityControlService } from '../../services/quality-control.service';\r\nimport { AlertService } from '../../../_core/services/alert.service';\r\nimport { ReplaceFieldComponent } from '../../../_shared/components/replace-field.component';\r\n\r\nimport { MassUpdateService } from '../../services/mass-update.service';\r\nimport { HelperService } from '../../../_core/services/helper.service';\r\nimport { AssetFileInfoService } from '../../../_core/services/asset-file-info-service';\r\nimport { QualityControlModes } from '../../enums/quality-control-modes';\r\nimport { BuildingInfoService } from '../../../_core/services/building-info-service';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { FamisGrid, FamisGridFeature } from '../../../_models/shared/famis-grid-state.model';\r\nimport { FieldMetaDataDto } from '../../../_api/_runtime/dtos/field-meta-data.dto';\r\nimport { FilterDto } from '../../../_api/dtos/inventory/filter.dto';\r\nimport { MassUpdateRequestDto } from '../../../_api/_runtime/dtos/mass-update-request.dto';\r\nimport { BuildingSearchDto } from '../../../_api/_runtime/dtos/building-search.dto';\r\nimport { Subscription, Subject } from 'rxjs';\r\nimport { SortDescriptor, State } from '@progress/kendo-data-query';\r\nimport { AssetDto } from '../../../_api/_runtime/dtos/asset.dto';\r\nimport { ReplaceFieldSelectionInfo } from '../../../_models/shared/replace-field-selection-info.model';\r\nimport { ReplaceField } from '../../../_models/replace-field-state.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FamisGridCacheResult } from '../../../_models/shared/famis-grid-cache-result.model';\r\nimport { FamisGridActionEvent } from '../../../_models/shared/famis-grid-action-event.model';\r\nimport { NgForm } from '@angular/forms';\r\nimport { SortTerm } from '../../../_api/_runtime/dtos/sort-term.dto';\r\nimport { AssetSearchDto } from '../../../_api/_runtime/dtos/asset-search.dto';\r\nimport { ApiServiceResult } from \"../../../_api/dtos/api-service-result.dto\";\r\nimport { AttributeTypesAndCodesResult } from \"../../../_api/_configuration/dtos/attribute-types-and-codes-result.dto\";\r\n\r\n@Component({\r\n  selector: 'mass-update-results',\r\n  templateUrl: './mass-update-results.component.html'\r\n})\r\nexport class MassUpdateResultsComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  isAdvanced = false;\r\n  resultsGrid: FamisGrid;\r\n\r\n  // Observer Context\r\n  mode: number = Number(this.route.snapshot.queryParamMap.get('mode'));\r\n  filterMetaData = new Array<FieldMetaDataDto>();\r\n  defaultFilterTerm = new Array<FilterDto>();\r\n  translatedBaseKey: string;\r\n  recordsFoundCount = 0;\r\n  searchInProgress: AssetSearchDto;\r\n  requestInProgress: MassUpdateRequestDto;\r\n  buildingSearchInProgress: BuildingSearchDto;\r\n\r\n  loading: Subscription;\r\n  contextSubscription: Subscription;\r\n  inProgressSubscription: Subscription;\r\n  public sort: SortDescriptor[];\r\n  public state: State;\r\n  private assets = new Array<AssetDto>();\r\n  replaceSelectionInfo = new Array<ReplaceFieldSelectionInfo>();\r\n  private windowSize = 500;\r\n  private initWindowSize = 84;\r\n\r\n  /* A Subject for monitoring the destruction of the component. */\r\n  private destroyed$ = new Subject<any>();\r\n\r\n\r\n  @ViewChild(ReplaceFieldComponent, {static: true}) private replaceFieldComponent: ReplaceFieldComponent;\r\n\r\n  private replaceFieldState = <ReplaceField>{};\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private qualityControlService: QualityControlService,\r\n    private massUpdateService: MassUpdateService,\r\n    private famisGridService: FamisGridService,\r\n    private alertService: AlertService,\r\n    private helperService: HelperService,\r\n    private assetFileInfoService: AssetFileInfoService,\r\n    private route: ActivatedRoute,\r\n    private buildingInfoService: BuildingInfoService\r\n  ) {}\r\n\r\n  private siteAttributeFields = this.buildingInfoService.GetSiteAttributeFields();\r\n\r\n  ngOnInit() {\r\n    const parentThis = this;\r\n    this.state = {\r\n      skip: 0,\r\n      take: 84\r\n    };\r\n    this.translatedBaseKey = this.mode === 0 ? this.i18n.asset : this.i18n.building;\r\n    this.massUpdateService.massUpdateContext$.pipe(takeUntil(this.destroyed$)).subscribe((context) => {\r\n      parentThis.defaultFilterTerm = context.defaultFilterTerm;\r\n      parentThis.filterMetaData = context.filterMetaData;\r\n\r\n      // If user loads reloads page\r\n      if (!parentThis.filterMetaData) {\r\n        this.back();\r\n      } else {\r\n        if (parentThis.mode === QualityControlModes.Content) {\r\n          parentThis.assetData(parentThis.filterMetaData);\r\n\r\n        } else {\r\n          parentThis.buildingData(parentThis.filterMetaData);\r\n        }\r\n        const sort = [{field: 'displayId', dir: 'asc'}] as SortDescriptor[];\r\n        this.handleSortChanged(sort);\r\n      }\r\n\r\n      this.qualityControlService\r\n      .getAccountData(this.qualityControlService.groupId)\r\n      .subscribe(accounts => {\r\n        this.replaceSelectionInfo.push(this.qualityControlService.mapAccounts(accounts));\r\n        this.replaceFieldComponent.selectionFieldInfo = this.replaceSelectionInfo;\r\n      });\r\n\r\n      this.qualityControlService\r\n      .getDepartmentData(this.qualityControlService.groupId)\r\n      .subscribe(departments => {\r\n        this.replaceSelectionInfo.push(this.qualityControlService.mapDepartments(departments));\r\n        this.replaceFieldComponent.selectionFieldInfo = this.replaceSelectionInfo;\r\n      });\r\n\r\n      this.qualityControlService\r\n      .getAttributeTypesAndCodes()\r\n      .subscribe( attributeTypesAndCodes => {\r\n        const siteAttributeTypeaAndCodes = this.getSelectedSiteAttributeOptions(attributeTypesAndCodes, this.siteAttributeFields);\r\n        const siteAttributesWithOptions = this.qualityControlService.mapSiteAttributeTypesAndCodes(siteAttributeTypeaAndCodes);\r\n        this.replaceSelectionInfo.push(...siteAttributesWithOptions);\r\n        this.replaceFieldComponent.selectionFieldInfo = this.replaceSelectionInfo;\r\n      });\r\n    });\r\n    \r\n    this.massUpdateService.massUpdateRequest$.pipe(takeUntil(this.destroyed$)).subscribe(request => {\r\n      this.requestInProgress = request;\r\n      this.replaceFieldState.replacementField = request.field;\r\n      this.replaceFieldState.replacementValue = request.textReplaceValue;\r\n      this.isAdvanced = !!request.advancedReplaceOperation;\r\n    });\r\n    \r\n    // Subscribe for when the replacement field and value change\r\n\r\n    this.massUpdateService.currentReplaceComponentState.pipe(takeUntil(this.destroyed$)).subscribe(state => {\r\n      if (state.replacementField) {\r\n        this.replaceFieldState = state;\r\n        this.replaceFieldComponent.state = state;\r\n        this.requestInProgress.field = this.replaceFieldState.replacementField;\r\n        this.requestInProgress.textReplaceValue = this.replaceFieldState.replacementValue;\r\n        this.requestInProgress.advancedReplaceOperation = this.replaceFieldState.advancedReplacementValue;\r\n        this.isAdvanced = !!state.advancedReplacementValue;\r\n        this.massUpdateService.updateMassUpdateRequest(this.requestInProgress);\r\n      }\r\n    });\r\n\r\n    this.replaceFieldComponent.state = this.replaceFieldState;\r\n\r\n    this.replaceFieldComponent.modelChanged.pipe(takeUntil(this.destroyed$)).subscribe(model => {\r\n      this.replaceFieldState = model;\r\n      this.requestInProgress.field = this.replaceFieldState.replacementField;\r\n      this.requestInProgress.textReplaceValue = this.replaceFieldState.replacementValue;\r\n      this.requestInProgress.advancedReplaceOperation = this.replaceFieldState.advancedReplacementValue;\r\n      this.replaceFieldComponent.state.isAdvanced = !!this.replaceFieldState.advancedReplacementValue;\r\n      this.massUpdateService.updateMassUpdateRequest(this.requestInProgress);\r\n    });\r\n\r\n\r\n  }\r\n\r\n  updateCache(request: FamisGridCacheResult) {\r\n    if (request.gridId === this.resultsGrid.gridId) {\r\n      if (this.mode === QualityControlModes.Content) {\r\n        this.resultsGrid.cacheLoading = this.processCacheUpdate(request);\r\n      } else {\r\n        this.resultsGrid.cacheLoading = this.processCacheUpdateBuilding(request);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleActionEvent(actionEvent: FamisGridActionEvent) {\r\n    if (actionEvent.action === 'Exclude') {\r\n      // console.log('Exclude event', actionEvent);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    if (form.valid) {\r\n      // Clear the text replace field if we have an advaned field\r\n      if (this.requestInProgress.advancedReplaceOperation) {\r\n        this.requestInProgress.textReplaceValue = null;\r\n        this.replaceFieldComponent.updateAdvancedModel();\r\n      }\r\n\r\n      this.massUpdateService.commitMassUpdate(this.mode).pipe(takeUntil(this.destroyed$)).subscribe(result => {\r\n        this.massUpdateService.clearMassUpdateRequest(this.defaultFilterTerm);\r\n        this.massUpdateService.clearTermsForFilterCriteria();\r\n        if (result && result.code === 6) {\r\n          this.alertService.error('Mass Update failed. Attempted to divide by zero');\r\n        } else {\r\n          this.alertService.success('{{field}} has been updated for {{totalRecords}} records.',\r\n            true, {field: result.result.field, totalRecords: result.result.totalRecords});\r\n        }\r\n        this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl`],\r\n          { queryParams: { mode: this.mode }\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  back() {\r\n    if (this.mode === QualityControlModes.Content) {\r\n      this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl/MassUpdate/Content`],\r\n        { queryParams: { mode: this.mode }\r\n      });\r\n    } else {\r\n      this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl/MassUpdate/Building`],\r\n        {queryParams: { mode: this.mode }\r\n      });\r\n    }\r\n  }\r\n\r\n  private processCacheUpdate(cacheUpdateRequest?: FamisGridCacheResult): Subscription {\r\n    const s = this;\r\n    const sortTerms = !!cacheUpdateRequest && !!cacheUpdateRequest.sortTerms ?\r\n      cacheUpdateRequest.sortTerms : this.searchInProgress.sortTerms;\r\n    const filterTerms = !!cacheUpdateRequest && !!cacheUpdateRequest.filters ?\r\n      cacheUpdateRequest.filters : this.searchInProgress.filterTerms;\r\n    const getActivityCodes = this.massUpdateService.getActivityCodes();\r\n    getActivityCodes.subscribe((activityCodes) => {\r\n      this.assetFileInfoService.updateReferenceData(activityCodes.result.enumOptions, 'ActivityCodes');\r\n    });\r\n\r\n    return this.qualityControlService\r\n      .updateData(this.qualityControlService.groupId, 0, this.initWindowSize, sortTerms, filterTerms)\r\n      .subscribe(\r\n        result => {\r\n          s.assets = result.assets.map(c => c.assetData);\r\n\r\n          this.resultsGrid.totalRecordCount = result.totalInRecordSet;\r\n          this.recordsFoundCount = result.totalInRecordSet;\r\n          this.famisGridService.setCacheRecords(\r\n            this.assetFileInfoService.mapEnums(s.assets),\r\n            this.resultsGrid.gridId,\r\n            0,\r\n            result.totalInRecordSet,\r\n            this.initWindowSize\r\n          );\r\n        },\r\n      error => {\r\n        if (error['error']) {\r\n          if(error['error'] === 'Unable to filter records') \r\n            this.alertService.error('unabletofilterrecords');\r\n          else if(error['error'] === 'Unable to sort records')\r\n            this.alertService.error('unabletosortrecords');          \r\n        }\r\n        else\r\n            this.alertService.error('anunexpectederrorhasoccurred.');\r\n      },\r\n        () => {}\r\n      );\r\n  }\r\n\r\n  private processCacheUpdateBuilding(cacheUpdateRequest?: FamisGridCacheResult): Subscription {\r\n    const s = this;\r\n    const sortTerms = !!cacheUpdateRequest && !!cacheUpdateRequest.sortTerms ?\r\n      cacheUpdateRequest.sortTerms : this.buildingSearchInProgress.sortTerms;\r\n    const filterTerms = !!cacheUpdateRequest && !!cacheUpdateRequest.filters ?\r\n      cacheUpdateRequest.filters : this.buildingSearchInProgress.filterTerms;\r\n    return this.qualityControlService\r\n      .updateBuildingData(this.qualityControlService.groupId, 0, this.initWindowSize, sortTerms, filterTerms)\r\n      .subscribe(\r\n        result => {\r\n          this.resultsGrid.totalRecordCount = result.totalInRecordSet;\r\n          this.recordsFoundCount = result.totalInRecordSet;\r\n          this.famisGridService.setCacheRecords(\r\n            s.buildingInfoService.mapGridColumns(result.buildings),\r\n            s.resultsGrid.gridId,\r\n            cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.skip : s.famisGridService.defaultSkip,\r\n            result.numberInThisPayload,\r\n            this.resultsGrid.windowSize\r\n          );\r\n        },\r\n        error => { },\r\n        () => { }\r\n      );\r\n  }\r\n\r\n  private assetData(filterMetaData: Array<FieldMetaDataDto>) {\r\n    this.resultsGrid = <FamisGrid>{\r\n      gridId: this.famisGridService.createGrid(),\r\n      dataSource: this.qualityControlService.dataTarget,\r\n      windowSize: this.windowSize,\r\n      totalRecordCount: 0,\r\n      supportedOperators: [FamisGridFeature.Sort, FamisGridFeature.Filter, FamisGridFeature.ColumnSelection],\r\n      translationBaseKey: this.translatedBaseKey\r\n    };\r\n\r\n    this.replaceFieldState.collection = filterMetaData;\r\n\r\n    this.resultsGrid.columnHeaders = this.helperService.mapHeaders(filterMetaData, this.assetFileInfoService.GetInternalColumns());\r\n    this.resultsGrid.selectedHeaders = this.assetFileInfoService.GetDefaultMassUpdateColumns();\r\n\r\n    this.massUpdateService.massUpdateCriteriaSearch$.pipe(takeUntil(this.destroyed$)).subscribe(searchInProgress => {\r\n      this.searchInProgress = searchInProgress;\r\n      this.resultsGrid.loading = this.processCacheUpdate();\r\n    });\r\n  }\r\n\r\n  handleSortChanged(sort: SortDescriptor[]) {\r\n    const s = this;\r\n    this.sort = sort;\r\n    const sortTerms = new Array<SortTerm>();\r\n    const orderCount = 0;\r\n\r\n    sort.forEach(c => {\r\n      const sortTerm = <SortTerm>{\r\n        termOrder: orderCount,\r\n        sortDirection: c.dir === 'asc' ? 0 : 1,\r\n        field: c.field\r\n      };\r\n      sortTerms.push(sortTerm);\r\n    });\r\n\r\n    this.famisGridService.currentSort[this.resultsGrid.gridId] = sortTerms;\r\n\r\n    s.famisGridService\r\n      .update(\r\n        s.resultsGrid.gridId,\r\n        s.state.skip,\r\n        s.state.take,\r\n        s.resultsGrid.totalRecordCount,\r\n        s.famisGridService.currentSort[s.resultsGrid.gridId],\r\n        true)\r\n      .pipe(takeUntil(s.destroyed$))\r\n      .subscribe(result => {\r\n        s.updateCache(result);\r\n      });\r\n  }\r\n\r\n  private buildingData(filterMetaData: Array<FieldMetaDataDto>) {\r\n    this.resultsGrid = <FamisGrid>{\r\n      gridId: this.famisGridService.createGrid(),\r\n      windowSize: this.windowSize,\r\n      totalRecordCount: 0,\r\n      supportedOperators: [FamisGridFeature.Sort, FamisGridFeature.Filter, FamisGridFeature.ColumnSelection],\r\n      translationBaseKey: this.translatedBaseKey\r\n    };\r\n\r\n    this.replaceFieldState.collection = filterMetaData;\r\n\r\n    this.resultsGrid.columnHeaders = this.helperService.mapHeaders(\r\n      filterMetaData,\r\n      this.buildingInfoService.GetInternalColumns()\r\n    );\r\n    this.resultsGrid.selectedHeaders = this.buildingInfoService.GetDefaultColumns();\r\n\r\n    this.massUpdateService.massUpdateCriteriaSearch$.pipe(takeUntil(this.destroyed$)).subscribe(searchInProgress => {\r\n      this.buildingSearchInProgress = searchInProgress;\r\n\r\n      this.resultsGrid.loading = this.processCacheUpdateBuilding();\r\n    });\r\n  }\r\n\r\n  private getSelectedSiteAttributeOptions (attributeTypesAndCodesResult: ApiServiceResult<Array<AttributeTypesAndCodesResult>>,siteAttributes: string[]): Array<AttributeTypesAndCodesResult> {\r\n    const siteAttribOptions = [];\r\n    siteAttributes.forEach( siteAttribute => {\r\n      const siteAttribOption = attributeTypesAndCodesResult.result.find(c => c.name.toLowerCase() === siteAttribute.toLowerCase() );\r\n      siteAttribOptions.push(siteAttribOption);\r\n    });\r\n    return siteAttribOptions;\r\n  }\r\n}\r\n","import { QualityControlService } from '../services/quality-control.service';\r\nimport { FamisGridService } from '../../_core/services/famis-grid.service';\r\nimport { AssetRetirementComponent } from './actions/asset-retirement.component';\r\nimport { AssetTransferComponent } from './actions/asset-transfer.component';\r\nimport { CostAdjustmentComponent } from './actions/cost-adjustment.component';\r\nimport { AlertService } from '../../_core/services/alert.service';\r\nimport { NgbDropdownConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { QualityControlActions } from '../enums/quality-control-actions';\r\nimport { QualityControlModes } from '../enums/quality-control-modes';\r\nimport { QualityControlBuildingGridComponent } from './building/quality-control-building-grid.component';\r\nimport { QualityControlContentGridComponent } from './content/quality-control-content-grid.component';\r\nimport { BuildingValuationComponent } from '../components/building/actions/building-valuation.component';\r\nimport { FloodPlainValuationComponent } from '../components/building/actions/floodplain-valuation.component';\r\nimport { SystemPermissionsEnum } from '../../_core/user/permissions';\r\nimport { UserStore } from '../../_core/user/user.store';\r\nimport { User } from '../../_core/user/user';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { WindowManager } from '../../_core/services/window-manager.service';\r\nimport { CanDeactivateService } from '../../_core/guards/can-deactivate.service';\r\nimport { Component, OnInit, OnDestroy, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { FamisGrid } from '../../_models/shared/famis-grid-state.model';\r\nimport { Asset } from '../../_models/asset.model';\r\nimport { Building } from '../../_models/building.model';\r\nimport { DataItemValue } from '../../_models/data-item-value.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { WindowOption } from '../../_models/window-option';\r\nimport { ModalFormEvent } from '../../_enums/modal-form-event';\r\n\r\n@Component({\r\n  selector: 'quality-control-form',\r\n  templateUrl: './quality-control-form.component.html'\r\n})\r\nexport class QualityControlFormComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  dataGrid: FamisGrid;\r\n  buildingGrid: FamisGrid;\r\n  modalActions = QualityControlActions;\r\n  qualityControlModes = QualityControlModes;\r\n  mode: QualityControlModes = QualityControlModes.Content;\r\n  selectedAssets = new Array<Asset>();\r\n  selectedBuildings = new Array<Building>();\r\n  actionSelected: QualityControlActions;\r\n  showValuationErrorsButton = false;\r\n  action = '';\r\n  buildingGridInitialized = false;\r\n  permissions = SystemPermissionsEnum;\r\n  user: User;\r\n\r\n  @ViewChild(QualityControlBuildingGridComponent, {static: false})\r\n  qualityControlBuildingGridComponent: QualityControlBuildingGridComponent;\r\n  @ViewChild(QualityControlContentGridComponent, {static: false})\r\n  qualityControlContentGridComponent: QualityControlContentGridComponent;\r\n\r\n  @ViewChild(BuildingValuationComponent, {static: false})\r\n  buildingValuationComponent: BuildingValuationComponent;\r\n  @ViewChild(FloodPlainValuationComponent, {static: false})\r\n  floodPlainValuationComponent: FloodPlainValuationComponent;\r\n\r\n  private editedRecords = new Array<DataItemValue>();\r\n\r\n  statusExists = true;\r\n\r\n  constructor(\r\n    private qualityControlService: QualityControlService,\r\n    private router: Router,\r\n    private famisGridService: FamisGridService,\r\n    private alertService: AlertService,\r\n    private dropDownConfig: NgbDropdownConfig,\r\n    private route: ActivatedRoute,\r\n    private userStore: UserStore,\r\n    private windowManager: WindowManager,\r\n    public container: ViewContainerRef,\r\n    private canDeactivateService: CanDeactivateService\r\n  ) {\r\n    this.dropDownConfig.placement = 'bottom-right';\r\n  }\r\n\r\n  isLoading = true;\r\n\r\n  ngOnInit() {\r\n    this.famisGridService.editedRecords$.subscribe(editedRecords => {\r\n      this.editedRecords = editedRecords;\r\n    });\r\n\r\n    this.statusExists = this.qualityControlService.statisExists;\r\n\r\n    const selectedMode = this.route.snapshot.queryParams['mode'];\r\n\r\n    switch (selectedMode) {\r\n      case '0':\r\n        this.mode = QualityControlModes.Content;\r\n        break;\r\n      case '1':\r\n        this.mode = QualityControlModes.Buildings;\r\n        break;\r\n    }\r\n\r\n    this.userStore.user.subscribe(currentUser => {\r\n      this.user = currentUser;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n\r\n  add() {\r\n\r\n    if (this.checkIfCanNavigateAway()) {\r\n\r\n      if (this.mode === QualityControlModes.Content) {\r\n        this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl/AddContent`]);\r\n      }\r\n      if (this.mode === QualityControlModes.Buildings) {\r\n        this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl/AddBuilding`]);\r\n      }\r\n    }\r\n  }\r\n\r\n  duplicate() {\r\n\r\n    if (this.checkIfCanNavigateAway()) {\r\n\r\n    if (this.mode === QualityControlModes.Content) {\r\n      this.router.navigate([\r\n        `/project-profile/${this.qualityControlService.groupId}/QualityControl/EditContent/${this.selectedAssets[0].id}`],\r\n        { queryParams: { isDuplicate: true } });\r\n    }\r\n  }\r\n  }\r\n\r\n  massUpdate() {\r\n    if (this.checkIfCanNavigateAway()) {\r\n    if (this.mode === QualityControlModes.Content) {\r\n      this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl/MassUpdate/Content`], {\r\n        queryParams: { mode: 0 }\r\n      });\r\n    }\r\n\r\n    if (this.mode === QualityControlModes.Buildings) {\r\n      this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl/MassUpdate/Building`], {\r\n        queryParams: { mode: 1 }\r\n      });\r\n    }\r\n  }\r\n  }\r\n\r\n  duplicateCheck() {\r\n    if (this.checkIfCanNavigateAway()) {\r\n    this.router.navigate([`/project-profile/${this.qualityControlService.groupId}/QualityControl/DuplicateCheck`]);\r\n    }\r\n  }\r\n\r\n  selectAction(action: QualityControlActions) {\r\n    if (action === QualityControlActions.RetireAsset) {\r\n      const assetRetirementWindow = this.windowManager.open(AssetRetirementComponent, 'Asset Retirement', <WindowOption>{\r\n        isModal: true\r\n      });\r\n\r\n      assetRetirementWindow.content.instance.assetsCollection = this.selectedAssets;\r\n\r\n      assetRetirementWindow.result.subscribe(success => {\r\n        if (assetRetirementWindow.content.instance.status === ModalFormEvent.Success) {\r\n          this.qualityControlContentGridComponent.updateCache();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (action === QualityControlActions.TransferAsset) {\r\n      const assetTransferWindow = this.windowManager.open(AssetTransferComponent, 'Asset Transfer', <WindowOption>{\r\n        isModal: true\r\n      });\r\n\r\n      assetTransferWindow.content.instance.assetsCollection = this.selectedAssets;\r\n\r\n      assetTransferWindow.result.subscribe(success => {\r\n        if (assetTransferWindow.content.instance.status === ModalFormEvent.Success) {\r\n          this.alertService.success((this.selectedAssets.length === 1 ? 'Asset' : 'Assets') + ' transferred successfully.');\r\n\r\n          this.qualityControlContentGridComponent.updateCache();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (action === QualityControlActions.CostAdjustment) {\r\n      const costAdjustmentWindow = this.windowManager.open(CostAdjustmentComponent, 'Cost Adjustment', <WindowOption>{\r\n        isModal: true\r\n      });\r\n\r\n      costAdjustmentWindow.content.instance.selectedAsset = this.selectedAssets[0];\r\n\r\n      costAdjustmentWindow.result.subscribe(success => {\r\n        if (costAdjustmentWindow.content.instance.status === ModalFormEvent.Success) {\r\n          this.qualityControlContentGridComponent.updateCache();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (action === QualityControlActions.BuildingValuation) {\r\n      this.actionSelected = action;\r\n      if (this.selectedBuildings.length > 0) {\r\n        this.buildingValuationComponent.open(false, this.selectedBuildings);\r\n      } else if (this.selectedBuildings.length === 0) {\r\n        this.alertService.info('Please select a minimum of 1 building to submit for valuation', false);\r\n      }\r\n    }\r\n\r\n    if (action === QualityControlActions.FloodPlanValuation) {\r\n      this.actionSelected = action;\r\n      if (this.selectedBuildings.length > 0) {\r\n        this.floodPlainValuationComponent.open(false, this.selectedBuildings);\r\n      } else if (this.selectedBuildings.length === 0) {\r\n        this.alertService.info('Please select a minimum of 1 building to submit for valuation', false);\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleQualityControlMode(mode: QualityControlModes) {\r\n    if (this.canDeactivateService.canDeactivateComponent(this.editedRecords.length > 0)) {\r\n      this.mode = mode;\r\n    }\r\n  }\r\n\r\n  userCanWriteData() {\r\n    let canWriteData = false;\r\n\r\n    if (this.user) {\r\n      const grantedPermissionIndex = this.user.permissions.permissionsGranted.findIndex(c => c === this.permissions.canWriteData);\r\n      canWriteData = grantedPermissionIndex > -1;\r\n    }\r\n\r\n    return canWriteData;\r\n  }\r\n\r\n  handleAction(response: boolean) {\r\n    this.showValuationErrorsButton = response;\r\n  }\r\n\r\n  openModal() {\r\n    if (this.actionSelected === QualityControlActions.BuildingValuation) {\r\n      this.buildingValuationComponent.open(true, this.selectedBuildings);\r\n    } else if (this.actionSelected === QualityControlActions.FloodPlanValuation) {\r\n      this.floodPlainValuationComponent.open(true, this.selectedBuildings);\r\n    }\r\n  }\r\n\r\n  public contentReferenceDataLoaded(): boolean {\r\n    return !!this.qualityControlService.status && !!this.qualityControlService.activityCodeOptions &&\r\n      !!this.qualityControlService.assetFileSummary && !!this.qualityControlService.accountOptions;\r\n  }\r\n\r\n  public buildingReferenceDataLoaded(): boolean {\r\n    return !!this.qualityControlService.buildingSelectionOptions && !!this.qualityControlService.groupDepartmentOptions;\r\n  }\r\n\r\n  private checkIfCanNavigateAway(): boolean {\r\n    return this.canDeactivateService.canDeactivateComponent(this.editedRecords.length > 0);\r\n\r\n  }\r\n}\r\n","import { QualityControlService } from '../services/quality-control.service';\r\nimport { BuildingInfoService } from '../../_core/services/building-info-service';\r\nimport { ReconciliationInventoryService } from '../../reconciliation/services/inventory.service';\r\nimport { AssetFileInfoService } from '../../_core/services/asset-file-info-service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { AlertService } from '../../_core/services/alert.service';\r\nimport { ComponentCanDeactivate } from '../../_core/guards/component-can-deactivate';\r\nimport { CanDeactivateService } from '../../_core/guards/can-deactivate.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { FamisGridService } from '../../_core/services/famis-grid.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subject, forkJoin } from 'rxjs';\r\nimport { DataItemValue } from '../../_models/data-item-value.model';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { InventoryApiService } from '../../_api/_runtime/services/inventory-api.service';\r\nimport { FieldOption } from '../../_models/field-option.model';\r\n\r\n@Component({\r\n  selector: 'quality-control',\r\n  templateUrl: './quality-control.component.html'\r\n})\r\nexport class QualityControlComponent extends ComponentCanDeactivate implements OnInit, OnDestroy, TranslatedComponent {\r\n\r\n  i18n = TranslationBaseKeys;\r\n  dataTarget: number;\r\n  isLoading = true;\r\n\r\n  private destroyed$ = new Subject<any>();\r\n\r\n  private form: NgForm;\r\n\r\n  private editedRecords = new Array<DataItemValue>();\r\n\r\n\r\n  constructor(\r\n    private qualityControlService: QualityControlService,\r\n    private route: ActivatedRoute,\r\n    private inventoryServiceRuntime: InventoryApiService,\r\n    private buildingInfoService: BuildingInfoService,\r\n    private inventoryService: ReconciliationInventoryService,\r\n    private assetFileInfoService: AssetFileInfoService,\r\n    private router: Router,\r\n    private alertService: AlertService,\r\n    private canDeactivateService: CanDeactivateService,\r\n    private famisGridservice: FamisGridService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n\r\n    this.famisGridservice.editedRecords$.subscribe(editedRecords => {\r\n\r\n      this.editedRecords = editedRecords;\r\n\r\n    });\r\n\r\n    this.qualityControlService.groupId = this.route.parent.snapshot.paramMap.get('groupId');\r\n\r\n    // API querys\r\n    this.qualityControlService.getStatus(this.qualityControlService.groupId).subscribe(status => {\r\n      if (status) {\r\n        this.qualityControlService.statisExists = status.exists;\r\n\r\n        if (status.exists) {\r\n          this.qualityControlService.status = status;\r\n\r\n          this.inventoryServiceRuntime\r\n            .getSearchMetadataByGroupId(this.qualityControlService.groupId, status.dataTarget)\r\n            .subscribe(assetFileSummary => {\r\n              this.qualityControlService.assetFileSummary = assetFileSummary;\r\n            });\r\n        }\r\n      }\r\n\r\n      const getActivityCodes = this.qualityControlService.getActivityCodes();\r\n      const getDepreciationConventions = this.qualityControlService.getDepreciationConventions();\r\n      const getDepreciationMethods = this.qualityControlService.getDepreciationMethods();\r\n      const getBuildingHierarchy = this.buildingInfoService.getBuildingHierarchyByGroupId(this.qualityControlService.groupId);\r\n      const getGroupDepartmentOptions = this.inventoryService.getGroupDepartmentsOptions(this.qualityControlService.groupId);\r\n      const getAccountData = this.qualityControlService.getAccountData(this.qualityControlService.groupId);\r\n\r\n      forkJoin(getActivityCodes, getBuildingHierarchy, getGroupDepartmentOptions, getAccountData, getDepreciationConventions, getDepreciationMethods)\r\n        .pipe(takeUntil(this.destroyed$))\r\n        .subscribe(\r\n          ([activityCodes, buildingHierarchy, groupDepartmentOptions, accountData, depreciationConventions, depreciationMethods]) => {\r\n            if (activityCodes && buildingHierarchy && groupDepartmentOptions && accountData && depreciationConventions && depreciationMethods) {\r\n              this.qualityControlService.buildingSelectionOptions = this.buildingInfoService.mapSitesToSelectOptions(buildingHierarchy);\r\n              this.qualityControlService.groupDepartmentOptions = groupDepartmentOptions;\r\n\r\n              this.qualityControlService.activityCodeOptions = this.assetFileInfoService.mapEnumResult(\r\n                activityCodes.result.enumOptions\r\n              );\r\n\r\n              this.qualityControlService.depreciationConventionOptions = this.assetFileInfoService.mapEnumResult(\r\n                depreciationConventions.result.enumOptions\r\n              );\r\n\r\n              this.qualityControlService.depreciationMethodOptions = this.assetFileInfoService.mapEnumResult(\r\n                depreciationMethods.result.enumOptions\r\n              );\r\n\r\n              if (!this.qualityControlService.accountOptions) {\r\n                this.qualityControlService.accountOptions = new Array<FieldOption>();\r\n\r\n                accountData.forEach(account => {\r\n                  this.qualityControlService.accountOptions.push(\r\n                    <FieldOption>{ key: account.id, displayName: account.accountDescription });\r\n                });\r\n              }\r\n            }\r\n          },\r\n          error => {\r\n            this.alertService.error('An error has occurred');\r\n          }\r\n        );\r\n\r\n      this.dataTarget = status.dataTarget;\r\n\r\n      this.qualityControlService.dataTarget = status.dataTarget;\r\n\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n\r\n  canDeactivate(): boolean {\r\n    return this.canDeactivateService.canDeactivateForm(null, this.editedRecords.length > 0);\r\n  }\r\n\r\n  navigateToImportData(event: any): void {\r\n    event.preventDefault();\r\n    this.router.navigate([`project-profile/${this.qualityControlService.groupId}/DataImport`]);\r\n  }\r\n\r\n  hasRequiredData() {\r\n    const hasRequiredData =\r\n      !!this.qualityControlService.buildingSelectionOptions &&\r\n      !!this.qualityControlService.groupDepartmentOptions &&\r\n      !!this.qualityControlService.accountOptions &&\r\n      !!this.qualityControlService.activityCodeOptions &&\r\n      !!this.qualityControlService.depreciationConventionOptions;\r\n\r\n    return hasRequiredData;\r\n  }\r\n}\r\n","export enum QualityControlActions {\r\n  RetireAsset,\r\n  TransferAsset,\r\n  CostAdjustment,\r\n  BuildingValuation,\r\n  FloodPlanValuation\r\n}\r\n\r\n\r\n","export enum QualityControlModes{\r\n  Content,\r\n  Buildings\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '../_shared/shared.module';\r\nimport { DatePickerModule, DateInputsModule } from '@progress/kendo-angular-dateinputs';\r\n\r\nimport { QualityControlService } from './services/quality-control.service';\r\n\r\nimport { QualityControlComponent } from './components/quality-control.component';\r\nimport { QualityControlFormComponent } from './components/quality-control-form.component';\r\nimport { MassUpdateFormComponent } from './components/mass-update/mass-update-form.component';\r\nimport { MassUpdateCriteriaComponent } from './components/mass-update/mass-update-criteria.component';\r\nimport { MassUpdateResultsComponent } from './components/mass-update/mass-update-results.component';\r\nimport { MassUpdateService } from './services/mass-update.service';\r\nimport { DuplicateCheckService } from './services/duplicate-check/duplicate-check.service';\r\nimport { AssetRetirementComponent } from './components/actions/asset-retirement.component';\r\nimport { QualityControlActionsService } from './services/actions/quality-control-actions.service';\r\nimport { AssetTransferComponent } from './components/actions/asset-transfer.component';\r\nimport { CostAdjustmentComponent } from './components/actions/cost-adjustment.component';\r\nimport { DuplicateCheckComponent } from './components/duplicate-check/duplicate-check.component';\r\nimport { AddContentComponent } from './components/content/actions/add-content.component';\r\nimport { QualityControlContentGridComponent } from './components/content/quality-control-content-grid.component';\r\nimport { QualityControlBuildingGridComponent } from './components/building/quality-control-building-grid.component';\r\nimport { BuildingsService } from './services/buildings.service';\r\nimport { EditContentComponent } from './components/content/actions/edit-content.component';\r\nimport { MassUpdateContentComponent } from './components/content/actions/mass-update-content.component';\r\nimport { MassUpdateBuildingComponent } from './components/building/actions/mass-update-building.component';\r\nimport { ValuationService } from './services/valuation-service';\r\nimport { BuildingValuationComponent } from './components/building/actions/building-valuation.component';\r\nimport { FloodPlainValuationComponent } from './components/building/actions/floodplain-valuation.component';\r\nimport { NgbActiveModal, NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CoreModule } from '../_core/core.module';\r\nimport { ViewContentComponent } from './components/content/actions/view-content.component';\r\n// TODO: Refactor this\r\n// import { ViewBuildingComponent } from './components/building/actions/view-building.component';\r\nimport { InputsModule } from '@progress/kendo-angular-inputs';\r\nimport { AdditionalDataService } from './services/additional-data/additional-data.service';\r\nimport { AdditionalDataGridService } from './services/additional-data/additional-data-grid.service';\r\n// tslint:disable-next-line:max-line-length\r\nimport { BuildingAttributeService } from './services/building-attribute.service';\r\nimport { AdditionalBuildingEquipmentComponent } from './components/building/form/dynamic-data-grids/additional-data/additional-building-equipment-grid.component';\r\nimport { BuildingFormGroupComponent } from './components/building/form/building-form-group.component';\r\nimport { UserFactorGridComponent } from './components/building/form/dynamic-data-grids/user-factor-grid/user-factor-grid.component';\r\n// tslint:disable-next-line:max-line-length\r\nimport { UpsertCustomAdditionComponent } from './components/building/form/dynamic-data-grids/custom-additions/actions/upsert-customaddition.component';\r\nimport { UpsertUserFactorComponent } from './components/building/form/dynamic-data-grids/user-factor-grid/actions/upsert-userfactor.component';\r\n// tslint:disable-next-line:max-line-length\r\nimport { RemoveCustomAdditionComponent } from './components/building/form/dynamic-data-grids/custom-additions/actions/remove-customaddition.component';\r\n// tslint:disable-next-line:max-line-length\r\nimport { RemoveUserFactorComponent } from './components/building/form/dynamic-data-grids/user-factor-grid/actions/remove-userfactor.component';\r\nimport { UpsertBuildingComponent } from './components/building/form/building-form.component';\r\n// tslint:disable-next-line:max-line-length\r\nimport { BuildingAttributesGridComponent } from './components/building/form/dynamic-data-grids/building-attributes/building-attributes-grid.component';\r\nimport { UpsertBuildingAttributeComponent } from './components/building/form/dynamic-data-grids/building-attributes/upsert-building-attribute.component';\r\n// tslint:disable-next-line:max-line-length\r\nimport { UpsertBuildingAdditionComponent } from './components/building/form/dynamic-data-grids/additional-data/upsert-building-addition.component';\r\nimport { UpsertOccupancyCodesComponent } from './components/building/form/dynamic-data-grids/occupancy-codes/upsert-occupancy-code.component';\r\nimport { OccupancyCodesGridComponent } from './components/building/form/dynamic-data-grids/occupancy-codes/occupancy-codes-grid.component';\r\n// tslint:disable-next-line:max-line-length\r\nimport { CustomAdditionsGridComponent } from './components/building/form/dynamic-data-grids/custom-additions/custom-additions-grid.component';\r\nimport { ScrollToModule } from '@nicky-lenaers/ngx-scroll-to';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { OrderModule } from 'ngx-order-pipe';\r\nimport { LaddaModule } from 'angular2-ladda';\r\nimport { GridModule } from '@progress/kendo-angular-grid';\r\nimport { QualityControlApiService } from '../_api/_runtime/services/quality-control-api.service';\r\nimport { CalculationApiService } from '../_api/_runtime/services/calculation-api.service';\r\nimport { InsuranceApiService } from '../_api/_runtime/services/insurance-api.service';\r\nimport { GroupApiService } from '../_api/_runtime/services/group-api.service';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CoreModule,\r\n    CommonModule,\r\n    DateInputsModule,\r\n    InputsModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    OrderModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    SharedModule,\r\n    LaddaModule,\r\n    DatePickerModule,\r\n    NgbModule,\r\n    GridModule,\r\n    ScrollToModule.forRoot(),\r\n\r\n  ],\r\n  declarations: [\r\n    QualityControlComponent,\r\n    QualityControlFormComponent,\r\n    MassUpdateFormComponent,\r\n    MassUpdateCriteriaComponent,\r\n    MassUpdateResultsComponent,\r\n    AssetRetirementComponent,\r\n    AssetTransferComponent,\r\n    CostAdjustmentComponent,\r\n    DuplicateCheckComponent,\r\n    AddContentComponent,\r\n    QualityControlContentGridComponent,\r\n    QualityControlBuildingGridComponent,\r\n    EditContentComponent,\r\n    MassUpdateContentComponent,\r\n    MassUpdateBuildingComponent,\r\n    ViewContentComponent,\r\n    // ViewBuildingComponent,\r\n    BuildingValuationComponent,\r\n    FloodPlainValuationComponent,\r\n    AdditionalBuildingEquipmentComponent,\r\n    BuildingFormGroupComponent,\r\n    UserFactorGridComponent,\r\n    CustomAdditionsGridComponent,\r\n    UpsertCustomAdditionComponent,\r\n    UpsertUserFactorComponent,\r\n    RemoveCustomAdditionComponent,\r\n    RemoveUserFactorComponent,\r\n    UpsertBuildingComponent,\r\n    BuildingAttributesGridComponent,\r\n    UpsertBuildingAttributeComponent,\r\n    UpsertBuildingAdditionComponent,\r\n    UpsertOccupancyCodesComponent,\r\n    OccupancyCodesGridComponent\r\n  ],\r\n  entryComponents: [\r\n    AssetRetirementComponent,\r\n    AssetTransferComponent,\r\n    CostAdjustmentComponent,\r\n    BuildingValuationComponent,\r\n    FloodPlainValuationComponent,\r\n    UpsertCustomAdditionComponent,\r\n    UpsertUserFactorComponent,\r\n    RemoveCustomAdditionComponent,\r\n    RemoveUserFactorComponent,\r\n    UpsertBuildingAttributeComponent,\r\n    BuildingFormGroupComponent,\r\n    UpsertBuildingAdditionComponent,\r\n    UpsertOccupancyCodesComponent\r\n  ],\r\n  providers: [\r\n    QualityControlService,\r\n    MassUpdateService,\r\n    QualityControlActionsService,\r\n    DuplicateCheckService,\r\n    QualityControlApiService,\r\n    CalculationApiService,\r\n    BuildingsService,\r\n    InsuranceApiService,\r\n    GroupApiService,\r\n    ValuationService,\r\n    NgbActiveModal,\r\n    AdditionalDataService,\r\n    AdditionalDataGridService,\r\n    BuildingAttributeService\r\n  ]\r\n})\r\nexport class QualityControlModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { InsuranceApiService } from '../../../_api/_runtime/services/insurance-api.service';\r\nimport { TransactionRequestDto } from '../../../_api/_runtime/dtos/transaction-request.dto';\r\nimport { Observable } from 'rxjs';\r\nimport { TransactionResponseDto } from '../../../_api/_runtime/dtos/transaction-response.dto';\r\n\r\n@Injectable()\r\nexport class QualityControlActionsService {\r\n\r\n  constructor(\r\n    private insuranceApiService: InsuranceApiService,\r\n  ) { }\r\n\r\n  public processTransaction(dto: TransactionRequestDto): Observable<TransactionResponseDto> {\r\n    return this.insuranceApiService.createTransaction(dto);\r\n  }\r\n}\r\n","import { HelperService } from '../../../_core/services/helper.service';\r\nimport { of, Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { BuildingDto, BuildingSelectedAddition } from '../../../_api/_runtime/dtos/building.dto';\r\nimport { BuildingAdditionField, BuildingAdditionViewModel,\r\n  BuildingAdditionValueSummary } from '../../../_models/building-addition-view.model';\r\nimport { ReferenceDataApiService } from '../../../_api/_configuration/services/reference-data-api.service';\r\n\r\n@Injectable()\r\nexport class AdditionalDataGridService {\r\n  private currentBuilding: BuildingDto;\r\n  private buildingAdditionFields: Array<BuildingAdditionField>;\r\n\r\n  constructor(private referenceDataApiService: ReferenceDataApiService,\r\n    private helperService: HelperService) { }\r\n\r\n  public initBuildingAdditionGrid(\r\n    building: BuildingDto,\r\n    referenceData: Array<BuildingAdditionField>\r\n  ): Observable<Array<BuildingAdditionViewModel>> {\r\n    this.currentBuilding = building;\r\n    this.buildingAdditionFields = referenceData;\r\n\r\n    const buildingAdditionViews = new Array<BuildingAdditionViewModel>();\r\n\r\n    if (building && building.buildingSelectedAdditions) {\r\n      building.buildingSelectedAdditions.forEach(addition => {\r\n        const referenceCriteria = referenceData.find(c => c.criteria.id === addition.referenceBuildingAdditionCriterionId);\r\n\r\n        if (referenceCriteria && !this.isAdditionChild(addition)) {\r\n          const vm = <BuildingAdditionViewModel>{};\r\n          vm.totalCost = addition.totalCost;\r\n          vm.quantity = addition.quantity;\r\n          vm.id = addition.id;\r\n          vm.groupDescription = referenceCriteria.groupDto.description;\r\n          vm.categoryDescription = referenceCriteria.categoryDto.description;\r\n          vm.categoryCode = referenceCriteria.categoryDto.code;\r\n          vm.criteriaSummary = this.getCriteriaSummary(addition);\r\n          vm.adjustmentSummary = this.getAdjustmentSummary(addition);\r\n          if (addition.childAdditionCriterionId) {\r\n            vm.childCriterionAdditionId = addition.childAdditionCriterionId;\r\n          }\r\n          buildingAdditionViews.push(vm);\r\n        }\r\n      });\r\n    }\r\n\r\n\r\n    return of(buildingAdditionViews);\r\n  }\r\n\r\n  private isAdditionChild(addition: BuildingSelectedAddition) {\r\n    const isChild = this.currentBuilding.buildingSelectedAdditions.findIndex(c => c.childAdditionCriterionId === addition.id) !== -1;\r\n\r\n    return isChild;\r\n  }\r\n\r\n  private getAdjustmentSummary(addition: BuildingSelectedAddition): BuildingAdditionValueSummary[] {\r\n    const adjustmentSummary = new Array<BuildingAdditionValueSummary>();\r\n\r\n    if (addition.buildingSelectedAdjustments) {\r\n      addition.buildingSelectedAdjustments.forEach(a => {\r\n        const selectedCriteria = this.buildingAdditionFields.find(c => c.criteria.id === addition.referenceBuildingAdditionCriterionId);\r\n\r\n        console.log(a, 'Adjustment');\r\n\r\n        const adjustmentsforCategory = selectedCriteria.categoryDto.referenceBuildingAdditionAdjustmentDtos;\r\n\r\n        console.log(adjustmentsforCategory, 'Adjustments for Category');\r\n\r\n\r\n        adjustmentSummary.push(<BuildingAdditionValueSummary>{\r\n          id: a.id,\r\n          criteriaId: a.referenceBuildingAdditionAdjustmentId,\r\n          description: adjustmentsforCategory.\r\n          find(c => c.id === a.referenceBuildingAdditionAdjustmentId).referenceBuildingAdjustmentDto.description,\r\n          value: a.value,\r\n          totalCost: addition.totalCost\r\n        });\r\n\r\n      });\r\n    }\r\n\r\n    return adjustmentSummary;\r\n  }\r\n\r\n  private getCriteriaSummary(addition: BuildingSelectedAddition): BuildingAdditionValueSummary[] {\r\n    let currentAddition = addition;\r\n\r\n    const criteriaSummary = new Array<BuildingAdditionValueSummary>();\r\n    let selectedCriteria = this.buildingAdditionFields.find(c => c.criteria.id === addition.referenceBuildingAdditionCriterionId);\r\n\r\n    let vm = <BuildingAdditionValueSummary>{\r\n      id: addition.id,\r\n      criteriaId: addition.referenceBuildingAdditionCriterionId,\r\n      description: selectedCriteria.criteria.description ? selectedCriteria.criteria.description : '',\r\n      value: addition.criterionValue,\r\n      totalCost: addition.totalCost\r\n    };\r\n\r\n    criteriaSummary.push(vm);\r\n\r\n    currentAddition = this.getAdditionById(addition.childAdditionCriterionId);\r\n\r\n    while (currentAddition) {\r\n      selectedCriteria = this.buildingAdditionFields.find(c => c.criteria.id === currentAddition.referenceBuildingAdditionCriterionId);\r\n\r\n      vm = <BuildingAdditionValueSummary>{\r\n        id: currentAddition.id,\r\n        criteriaId: currentAddition.referenceBuildingAdditionCriterionId,\r\n        description: selectedCriteria.criteria.description,\r\n        value: currentAddition.criterionValue,\r\n        totalCost: addition.totalCost\r\n      };\r\n\r\n      criteriaSummary.push(vm);\r\n\r\n      currentAddition = this.getAdditionById(currentAddition.childAdditionCriterionId);\r\n    }\r\n\r\n    return criteriaSummary;\r\n  }\r\n\r\n  public getAdditionById(id): BuildingSelectedAddition {\r\n    return this.currentBuilding.buildingSelectedAdditions.find(c => c.id === id);\r\n  }\r\n}\r\n","import { HelperService } from '../../../_core/services/helper.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { ReferenceBuildingAdditionGroupDto } from '../../../_api/_configuration/dtos/reference-building-addition-group.dto';\r\nimport { BuildingAdditionField } from '../../../_models/building-addition-view.model';\r\nimport { ReferenceDataApiService } from '../../../_api/_configuration/services/reference-data-api.service';\r\n\r\n// TODO: Add Additional data recipe at the top\r\n// Consider breaking it up in multiple classes one that manages\r\n@Injectable()\r\nexport class AdditionalDataService {\r\n  private buildingAdditionGroupsSource = new BehaviorSubject<Array<ReferenceBuildingAdditionGroupDto>>(\r\n    new Array<ReferenceBuildingAdditionGroupDto>()\r\n  );\r\n  public buildingAdditionGroups$ = this.buildingAdditionGroupsSource.asObservable();\r\n\r\n  public flattenedData = new Array<BuildingAdditionField>();\r\n\r\n  constructor(private referenceDataApiService: ReferenceDataApiService, private helperService: HelperService) {}\r\n\r\n  initBuildingAdditionGroups(): void {\r\n    this.referenceDataApiService.getBuildingAdditionGroups().subscribe(buildingAdditionGroups => {\r\n      const flattend = this.flattenReferenceData(buildingAdditionGroups.result);\r\n\r\n      this.flattenedData = flattend;\r\n\r\n      this.buildingAdditionGroupsSource.next(buildingAdditionGroups.result);\r\n    });\r\n  }\r\n\r\n  private flattenReferenceData(referenceData: ReferenceBuildingAdditionGroupDto[]): BuildingAdditionField[] {\r\n    const result = [];\r\n\r\n    referenceData.forEach(group => {\r\n      group.referenceBuildingAdditionCategoryDtos.forEach(category => {\r\n        category.referenceBuildingAdditionCriterionDtos.forEach(criteria => {\r\n          result.push(<BuildingAdditionField>{ groupDto: group, categoryDto: category, criteria: criteria });\r\n        });\r\n      });\r\n    });\r\n\r\n    return result;\r\n  }\r\n}\r\n","import { HelperService } from '../../_core/services/helper.service';\r\nimport { BuildingAttributeFields } from '../components/building/form/form-models/primary-info/building-attributes-model';\r\nimport { of, Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { BuildingDto } from '../../_api/_runtime/dtos/building.dto';\r\nimport { BuildingAttributeGridItemViewModel } from '../../_models/building-form.model';\r\n\r\n@Injectable()\r\nexport class BuildingAttributeService {\r\n\r\n  constructor() { }\r\n\r\n  public initBuildingAdditions(\r\n    building: BuildingDto): Observable<Array<BuildingAttributeGridItemViewModel>> {\r\n\r\n    const dynamicAttributes = BuildingAttributeFields.sort(c => c.order);\r\n\r\n    return of(dynamicAttributes);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { BuildingDto } from '../../_api/_runtime/dtos/building.dto';\r\nimport { FieldOption } from '../../_models/field-option.model';\r\nimport { InsuranceApiService } from '../../_api/_runtime/services/insurance-api.service';\r\nimport { CascadedSelectOption } from '../../_models/cascaded-select-option.model';\r\n\r\n@Injectable()\r\nexport class BuildingsService {\r\n  private buildingRequestSource = new BehaviorSubject<BuildingDto>(<BuildingDto>{});\r\n  public buildingRequest$ = this.buildingRequestSource.asObservable();\r\n\r\n  private attributeOptionsSource =\r\n  new BehaviorSubject<Array<Array<FieldOption>>>(new Array<Array<FieldOption>>());\r\n\r\n  public attributeOptions$ = this.attributeOptionsSource.asObservable();\r\n\r\n  constructor(private insuranceApiService: InsuranceApiService) { }\r\n\r\n  createBuilding(buildingDto: BuildingDto, groupId: string): Observable<BuildingDto> {\r\n    return this.insuranceApiService.createBuilding(groupId, buildingDto, true);\r\n  }\r\n\r\n  updateBuilding(id: string, buildingDto: BuildingDto): Observable<BuildingDto> {\r\n    if (buildingDto.siteId && buildingDto.siteId.indexOf(',') > 0) {\r\n      buildingDto.siteId = buildingDto.siteId.split(',')[1];\r\n    }\r\n    return this.insuranceApiService.updateBuilding(id, buildingDto, true);\r\n  }\r\n\r\n  getBuilding(buildingId: string): Observable<BuildingDto> {\r\n    return this.insuranceApiService.getBuilding(buildingId);\r\n  }\r\n\r\n  setBuildingRequestSource(dto: BuildingDto) {\r\n    this.buildingRequestSource.next(dto);\r\n  }\r\n\r\n  public updateOptions(id: number, options: Array<CascadedSelectOption>) {\r\n    const current = this.attributeOptionsSource.getValue();\r\n\r\n    current[id] = options;\r\n\r\n    this.attributeOptionsSource.next(current);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { QualityControlService } from '../quality-control.service';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { DuplicateCheckRequestDto } from '../../../_api/_runtime/dtos/duplicate-check.dto';\r\nimport { AssetSortTermDto, AssetFilterTermDto, AssetSearchDto } from '../../../_api/dtos/inventory/asset-search.dto';\r\nimport { QualityControlApiService } from '../../../_api/_runtime/services/quality-control-api.service';\r\nimport { InventoryApiService } from '../../../_api/_runtime/services/inventory-api.service';\r\nimport { DuplicateCheckResponseDto } from '../../../_api/_runtime/dtos/duplicate-check-response.dto';\r\nimport { FilterDto } from '../../../_api/dtos/inventory/filter.dto';\r\nimport { Term } from '../../../_api/_runtime/dtos/processing-detail-request.dto';\r\nimport { AssetSearchResponseDto } from '../../../_api/_runtime/dtos/asset-search-response.dto';\r\n\r\n@Injectable()\r\nexport class DuplicateCheckService {\r\n  private duplicateCheckRequestSource = new BehaviorSubject<DuplicateCheckRequestDto>(\r\n    <DuplicateCheckRequestDto>{}\r\n  );\r\n  public duplicateCheckRequest$ = this.duplicateCheckRequestSource.asObservable();\r\n\r\n  public defaultResultsSortTerms = [<AssetSortTermDto>{ termOrder: 0, sortDirection: 0, field: 'manufacturer' }];\r\n  public defaultDuplicateCheckSortTerms = [<AssetSortTermDto>{ termOrder: 0, sortDirection: 1, field: 'count' }];\r\n\r\n  constructor(\r\n    private qualityControlApiService: QualityControlApiService,\r\n    private inventoryApiService: InventoryApiService,\r\n    private qualityControlService: QualityControlService\r\n  ) {}\r\n\r\n  public updateDuplicateCheckResults(\r\n    groupId: string,\r\n    field: string,\r\n    dataTarget: number,\r\n    skip: number,\r\n    take: number,\r\n    sortTerms: Array<AssetSortTermDto> = new Array<AssetSortTermDto>(),\r\n    filterTerms: Array<AssetFilterTermDto> = new Array<AssetFilterTermDto>()\r\n  ): Observable<DuplicateCheckResponseDto> {\r\n    const s = this;\r\n\r\n    const current = this.duplicateCheckRequestSource.getValue();\r\n\r\n    const defaultFilter = <FilterDto>{\r\n      term: <Term>{ dataTarget: this.qualityControlService.dataTarget, field: '', value: '' },\r\n      operation: 'noop'\r\n    };\r\n\r\n    const request = <DuplicateCheckRequestDto>{\r\n      field: field,\r\n      sortTerms: !!sortTerms ? sortTerms : s.defaultDuplicateCheckSortTerms,\r\n      skip: skip,\r\n      take: take,\r\n      filterTerms: !!filterTerms && filterTerms.length > 0 ? filterTerms : [defaultFilter],\r\n      filterConjunction: 'and'\r\n    };\r\n\r\n    return this.qualityControlApiService.duplicateCheck(groupId, request);\r\n  }\r\n\r\n  public updateDuplicateSummary(\r\n    groupId: string,\r\n    skip: number,\r\n    take: number,\r\n    sortTerms: Array<AssetSortTermDto> = new Array<AssetSortTermDto>(),\r\n    filterTerms: Array<AssetFilterTermDto> = new Array<AssetFilterTermDto>()\r\n  ): Observable<AssetSearchResponseDto> {\r\n    const defaultFilter = <FilterDto>{\r\n      term: <Term>{ dataTarget: this.qualityControlService.dataTarget, field: '', value: '' },\r\n      operation: 'noop'\r\n    };\r\n\r\n    const searchRequest = <AssetSearchDto>{\r\n      fieldMatchTerms: [],\r\n      fieldMatchConjunction: 'and',\r\n      filterTerms: !!filterTerms && filterTerms.length > 0 ? filterTerms : [defaultFilter],\r\n      filterConjunction: 'and',\r\n      sortTerms: !!sortTerms && sortTerms.length > 0 ? sortTerms : this.defaultResultsSortTerms,\r\n      skip: skip,\r\n      take: take\r\n    };\r\n\r\n    return this.inventoryApiService.search(groupId, searchRequest);\r\n  }\r\n\r\n  public setDuplicateCheckRequest(request: DuplicateCheckRequestDto): void {\r\n    this.duplicateCheckRequestSource.next(request);\r\n  }\r\n}\r\n","import { ProcessingService } from '../../processing/services/processing.service';\r\nimport { QualityControlService } from './quality-control.service';\r\nimport { FilterOperationsService } from '../../_core/services/filter-operations.service';\r\nimport { QualityControlModes } from '../enums/quality-control-modes';\r\nimport { ReferenceDataApiService } from '../../_api/_configuration/services/reference-data-api.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { MassUpdateContext } from '../../_api/_runtime/dtos/mass-update-context.dto';\r\nimport { AssetSortTermDto } from '../../_api/_runtime/dtos/asset-sort-term.dto';\r\nimport { AssetFilterTermDto } from '../../_api/_runtime/dtos/asset-filter-term.dto';\r\nimport { AssetSearchDto } from '../../_api/_runtime/dtos/asset-search.dto';\r\nimport { QualityControlApiService } from '../../_api/_runtime/services/quality-control-api.service';\r\nimport { MassUpdateRequestDto } from '../../_api/_runtime/dtos/mass-update-request.dto';\r\nimport { AssetDto } from '../../_api/_runtime/dtos/asset.dto';\r\nimport { FilterDto } from '../../_api/dtos/inventory/filter.dto';\r\nimport { FieldMetaDataDto } from '../../_api/_runtime/dtos/field-meta-data.dto';\r\nimport { QualityControlMassUpdateResponseDto } from '../../_api/_runtime/dtos/quality-control-mass-update-response.dto';\r\nimport { ApiServiceResult } from '../../_api/dtos/api-service-result.dto';\r\nimport { EnumDto } from '../../_api/_configuration/dtos/enum.dto';\r\nimport { ReplaceField } from '../../_models/replace-field-state.model';\r\n\r\n@Injectable()\r\nexport class MassUpdateService {\r\n\r\n    private replaceComponentState = new BehaviorSubject<ReplaceField>(<ReplaceField>{});\r\n    public currentReplaceComponentState = this.replaceComponentState.asObservable();\r\n\r\n    private massUpdateContextSource = new BehaviorSubject<MassUpdateContext>(<MassUpdateContext>{});\r\n    public massUpdateContext$ = this.massUpdateContextSource.asObservable();\r\n    public defaultSortTerms = [<AssetSortTermDto>{ termOrder: 0, sortDirection: 0, field: 'id' }];\r\n    public defaultFilterTerms = [<AssetFilterTermDto> {\r\n        operation: 'noop',\r\n        term: {\r\n            dataTarget: this.getDataTarget(),\r\n            field: '',\r\n            value: ''}\r\n        }];\r\n    private massUpdateCriteriaSearchSource = new BehaviorSubject<AssetSearchDto>(<AssetSearchDto>{\r\n        fieldMatchTerms: [],\r\n        fieldMatchConjunction: 'and',\r\n        filterTerms : this.defaultFilterTerms,\r\n        filterConjunction: 'and',\r\n        excludeMatchedRecords: false,\r\n        sortTerms: this.defaultSortTerms,\r\n        skip: 0,\r\n        take: 0\r\n      });\r\n\r\n    private dateFields = [\r\n        'acquisitionDate',\r\n        'depreciationAsOfDate',\r\n        'lastInventoryDate',\r\n        'updatedTimeStamp'\r\n    ];\r\n\r\n    constructor(\r\n        private qualityControlApiService: QualityControlApiService,\r\n        private qualityControlService: QualityControlService,\r\n        private filterOperationsService: FilterOperationsService,\r\n        private referenceDataApiService: ReferenceDataApiService\r\n    ) {}\r\n\r\n    public massUpdateCriteriaSearch$ = this.massUpdateCriteriaSearchSource.asObservable();\r\n\r\n    private massUpdateRequestSource =\r\n    new BehaviorSubject<MassUpdateRequestDto>(<MassUpdateRequestDto> {\r\n        field: '',\r\n        textReplaceValue: null,\r\n        filterTerms: this.defaultFilterTerms,\r\n        filterConjunction: 'and',\r\n        sortTerms: this.defaultSortTerms\r\n    });\r\n\r\n    public massUpdateRequest$ = this.massUpdateRequestSource.asObservable();\r\n\r\n\r\n    private resultsGridDataSource = new BehaviorSubject<Array<AssetDto>>(new Array<AssetDto>());\r\n\r\n    public resultsGridData$ = this.resultsGridDataSource.asObservable();\r\n\r\n    public updateReplaceComponentState(message: any) {\r\n        this.replaceComponentState.next(message);\r\n    }\r\n\r\n    private getDataTarget(): number {\r\n        const status = this.qualityControlService.status;\r\n        if (status.exists) {\r\n            return status.dataTarget;\r\n        }else {\r\n            this.qualityControlService.getStatus(this.qualityControlService.groupId).subscribe(res => {\r\n                if (res && res.exists) {\r\n                    return res.dataTarget;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public updateContextSource(defaultFilterTerm: Array<FilterDto>, filterMetaData: Array<FieldMetaDataDto>): void {\r\n        const current = this.massUpdateContextSource.getValue();\r\n        current.defaultFilterTerm = defaultFilterTerm;\r\n        current.filterMetaData = filterMetaData;\r\n\r\n        this.massUpdateContextSource.next(current);\r\n    }\r\n\r\n    public addOrUpdateFilter(filterModified: FilterDto): void {\r\n\r\n        // Check if the field modified is a date field which uses kendo date picker,\r\n        // ensure the final value is a Date not a string to prevent the control from\r\n        // throwing exception.\r\n        if (this.isDateField(filterModified.term.field) && filterModified.term.value) {\r\n            filterModified.term.value = new Date(filterModified.term.value);\r\n        }\r\n\r\n\r\n        const current = this.massUpdateCriteriaSearchSource.getValue();\r\n        current.filterTerms = this.filterOperationsService.updateFilter\r\n        (filterModified, current.filterTerms);\r\n        // console.log(current.filterTerms);\r\n        this.massUpdateCriteriaSearchSource.next(current);\r\n    }\r\n\r\n    public updateMassUpdateRequest(massUpdateRequest: MassUpdateRequestDto) {\r\n        const current = this.massUpdateRequestSource.getValue();\r\n        current.field = massUpdateRequest.field;\r\n        current.textReplaceValue = massUpdateRequest.textReplaceValue;\r\n        current.advancedReplaceOperation = massUpdateRequest.advancedReplaceOperation;\r\n        this.massUpdateRequestSource.next(current);\r\n    }\r\n\r\n    public removeFilter(id: string): void {\r\n        const current = this.massUpdateCriteriaSearchSource.getValue();\r\n        current.filterTerms = this.filterOperationsService.removeFilter(id, current.filterTerms);\r\n        this.massUpdateCriteriaSearchSource.next(current);\r\n    }\r\n\r\n    public setMassUpdateDataSource(data: Array<AssetDto>) {\r\n        this.resultsGridDataSource.next(data);\r\n    }\r\n\r\n    public clearMassUpdateRequest(filterTerms: Array<FilterDto>) {\r\n        const current = this.massUpdateRequestSource.getValue();\r\n        current.field = '';\r\n        current.textReplaceValue = null;\r\n        current.filterTerms = filterTerms;\r\n        current.filterConjunction = 'and';\r\n        current.sortTerms = this.defaultSortTerms;\r\n\r\n        this.massUpdateRequestSource.next(current);\r\n    }\r\n\r\n    public clearTermsForFilterCriteria() {\r\n        const current = this.massUpdateCriteriaSearchSource.getValue();\r\n        current.filterTerms = [];\r\n\r\n        this.massUpdateCriteriaSearchSource.next(current);\r\n    }\r\n\r\n    public commitMassUpdate(mode: QualityControlModes): Observable<ApiServiceResult<QualityControlMassUpdateResponseDto>> {\r\n        const currentMassUpdateRequest = this.massUpdateRequestSource.getValue();\r\n        const currentCriteriaSearchRequest = this.massUpdateCriteriaSearchSource.getValue();\r\n\r\n        currentMassUpdateRequest.field = currentMassUpdateRequest.field.charAt(0).toUpperCase() + currentMassUpdateRequest.field.slice(1);\r\n\r\n        currentMassUpdateRequest.filterTerms = currentCriteriaSearchRequest.filterTerms;\r\n        if (currentMassUpdateRequest.filterTerms.length === 0) {\r\n            this.defaultFilterTerms = [<AssetFilterTermDto>{\r\n                operation: 'noop', term: {dataTarget: this.getDataTarget(), field: '', value: ''}}];\r\n            currentMassUpdateRequest.filterTerms = this.defaultFilterTerms;\r\n        }\r\n\r\n        if (mode === QualityControlModes.Content) {\r\n            return this.qualityControlApiService.executeMassContentUpdate(this.qualityControlService.groupId, currentMassUpdateRequest);\r\n        }\r\n\r\n        return this.qualityControlApiService.executeMassBuildingsUpdate(this.qualityControlService.groupId, currentMassUpdateRequest);\r\n    }\r\n\r\n    public getActivityCodes(): Observable<ApiServiceResult<EnumDto>> {\r\n        return this.referenceDataApiService.getActivityCodes();\r\n      }\r\n\r\n    private isDateField(field: string): boolean {\r\n        return this.dateFields.indexOf(field) !== -1;\r\n    }\r\n\r\n}\r\n","\r\nimport {map} from 'rxjs/operators';\r\nimport * as moment from 'moment-timezone';\r\nimport { AssetFileInfoService } from '../../_core/services/asset-file-info-service';\r\nimport { of, Observable, BehaviorSubject } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { ReplaceFieldSelectionOption, ReplaceFieldSelectionInfo } from '../../_models/shared/replace-field-selection-info.model';\r\nimport { AccountDto } from '../../_api/_runtime/dtos/account.dto';\r\nimport { DepartmentDto } from '../../_api/_runtime/dtos/department.dto';\r\nimport { DataTargetName } from '../../_enums/data-target-name';\r\nimport { Asset } from '../../_models/asset.model';\r\nimport { FieldOption } from '../../_models/field-option.model';\r\nimport { CascadedSelectOption } from '../../_models/cascaded-select-option.model';\r\nimport { BuildingSearchDto } from '../../_api/_runtime/dtos/building-search.dto';\r\nimport { BuildingResponseDto } from '../../_api/_runtime/dtos/building.dto';\r\nimport { BuildingFilterTermDto } from '../../_api/_runtime/dtos/building-filter-term.dto';\r\nimport { BuildingSortTermDto } from '../../_api/_runtime/dtos/building-sort-term.dto';\r\nimport { ApiServiceResult } from '../../_api/dtos/api-service-result.dto';\r\nimport { EnumDto } from '../../_api/_configuration/dtos/enum.dto';\r\nimport { AssetFileSummaryDto } from '../../_api/_runtime/dtos/asset-file-summary.dto';\r\nimport { AssetSortTermDto } from '../../_api/_runtime/dtos/asset-sort-term.dto';\r\nimport { BuildingHierarchyDto } from '../../_api/_runtime/dtos/building-hierarchy.dto';\r\nimport { QualityControlStatusDto } from '../../_api/_runtime/dtos/quality-control-status.dto';\r\nimport { InventoryApiService } from '../../_api/_runtime/services/inventory-api.service';\r\nimport { InsuranceApiService } from '../../_api/_runtime/services/insurance-api.service';\r\nimport { QualityControlApiService } from '../../_api/_runtime/services/quality-control-api.service';\r\nimport { ReferenceDataApiService } from '../../_api/_configuration/services/reference-data-api.service';\r\nimport { GroupApiService } from '../../_api/_runtime/services/group-api.service';\r\nimport { AssetFilterTermDto } from '../../_api/_runtime/dtos/asset-filter-term.dto';\r\nimport { AssetSearchResponseDto } from '../../_api/_runtime/dtos/asset-search-response.dto';\r\nimport { FilterDto } from '../../_api/dtos/inventory/filter.dto';\r\nimport { Term } from '../../_api/_runtime/dtos/processing-detail-request.dto';\r\nimport { AssetSearchDto } from '../../_api/_runtime/dtos/asset-search.dto';\r\nimport { ConsolidatedFilePreviewDto } from '../../_api/_runtime/dtos/consolidated-file-preview.dto';\r\nimport { AttributeTypesAndCodesResult } from \"../../_api/_configuration/dtos/attribute-types-and-codes-result.dto\";\r\n\r\n\r\n@Injectable()\r\nexport class QualityControlService {\r\n  private cachedRecordsSource = new BehaviorSubject<Array<Array<Asset>>>(new Array<Array<Asset>>());\r\n  public cachedRecords$ = this.cachedRecordsSource.asObservable();\r\n\r\n  public statisExists = true;\r\n  public groupId: string;\r\n  public dataTarget: number;\r\n  public assetFileSummary: AssetFileSummaryDto;\r\n\r\n  private groupSiteInfoSource = new BehaviorSubject<Array<CascadedSelectOption>>(new Array<CascadedSelectOption>());\r\n  public groupSiteInfo$ = this.groupSiteInfoSource.asObservable();\r\n\r\n  private groupDepartmentInfoSource = new BehaviorSubject<Array<FieldOption>>(new Array<FieldOption>());\r\n  public groupDepartmentInfo$ = this.groupDepartmentInfoSource.asObservable();\r\n\r\n  private groupAccountInfoSource = new BehaviorSubject<Array<FieldOption>>(new Array<FieldOption>());\r\n  public groupAccountInfo$ = this.groupAccountInfoSource.asObservable();\r\n\r\n  public defaultSortTerms = [<AssetSortTermDto>{ termOrder: 0, sortDirection: 1, field: 'SerialNumber' }];\r\n\r\n  public defaultBuildingSortTerms = [<BuildingSortTermDto>{ termOrder: 0, sortDirection: 1, field: 'buildingName' }];\r\n  public defaultBuildingFilterTerms = [];\r\n  groupSiteInfo: BuildingHierarchyDto;\r\n  groupDepartmentOptions: Array<FieldOption>;\r\n  activityCodeOptions: Array<FieldOption>;\r\n  accountOptions: Array<FieldOption>;\r\n  depreciationConventionOptions: Array<FieldOption>;\r\n  depreciationMethodOptions: Array<FieldOption>;\r\n\r\n  status: QualityControlStatusDto;\r\n  buildingSelectionOptions: CascadedSelectOption[];\r\n\r\n  userTimeZone = moment.tz.guess(true);\r\n  minDate = moment.utc('1900-01-02');\r\n\r\n  constructor(\r\n    private inventoryApiService: InventoryApiService,\r\n    private insuranceApiService: InsuranceApiService,\r\n    private qualityControlApiService: QualityControlApiService,\r\n    private referenceDataApiService: ReferenceDataApiService,\r\n    private groupService: GroupApiService,\r\n    private assetFileInfoService: AssetFileInfoService\r\n  ) {}\r\n\r\n  public updateData(\r\n    groupId: string,\r\n    skip: number,\r\n    take: number,\r\n    sortTerms: Array<AssetSortTermDto> = new Array<AssetSortTermDto>(),\r\n    filterTerms: Array<AssetFilterTermDto> = new Array<AssetFilterTermDto>(),\r\n    source: string = null\r\n  ): Observable<AssetSearchResponseDto> {\r\n    const defaultFilter = <FilterDto>{\r\n      term: <Term>{ dataTarget: this.dataTarget, field: '', value: '' },\r\n      operation: 'noop'\r\n    };\r\n\r\n    const searchRequest = <AssetSearchDto>{\r\n      fieldMatchTerms: [],\r\n      fieldMatchConjunction: 'and',\r\n      filterTerms: !!filterTerms && filterTerms.length > 0 ? filterTerms : [defaultFilter],\r\n      filterConjunction: 'and',\r\n      excludeMatchedRecords: false,\r\n      sortTerms: !!sortTerms && sortTerms.length > 0 ? sortTerms : this.defaultSortTerms,\r\n      skip: skip,\r\n      take: take,\r\n      source: source\r\n    };\r\n\r\n    return this.inventoryApiService.search(groupId, searchRequest);\r\n  }\r\n\r\n  public getSearchMetadataByGroupId(groupId: string, fileType): Observable<AssetFileSummaryDto> {\r\n    return this.inventoryApiService.getSearchMetadataByGroupId(groupId, fileType);\r\n  }\r\n\r\n  public getConsolidatedFilePreview(groupId: string): Observable<ApiServiceResult<Array<ConsolidatedFilePreviewDto>>> {\r\n    return this.inventoryApiService.getConsolidatedFilePreview(groupId);\r\n  }\r\n\r\n  public getAccountData(groupId: string): Observable<Array<AccountDto>> {\r\n    return this.inventoryApiService.getAccountsByGroupId(groupId);\r\n  }\r\n\r\n  public getDepartmentData(groupId: string): Observable<Array<DepartmentDto>> {\r\n    return this.inventoryApiService.getDepartmentsByGroupId(groupId);\r\n  }\r\n\r\n  public getStatus(groupId: string): Observable<QualityControlStatusDto> {\r\n    {\r\n      return this.qualityControlApiService.getStatus(groupId);\r\n    }\r\n  }\r\n\r\n  public getBuildingSearchMetadataByGroupId(groupId: string): Observable<AssetFileSummaryDto> {\r\n    return this.insuranceApiService.getBuildingSearchMetadataByGroupId(groupId);\r\n  }\r\n\r\n  public getActivityCodes(): Observable<ApiServiceResult<EnumDto>> {\r\n    return this.referenceDataApiService.getActivityCodes();\r\n  }\r\n\r\n  public getDepreciationConventions(): Observable<ApiServiceResult<EnumDto>> {\r\n    return this.referenceDataApiService.getDepreciationConventions();\r\n  }\r\n\r\n  public getDepreciationMethods(): Observable<ApiServiceResult<EnumDto>> {\r\n    return this.referenceDataApiService.getDepreciationMethods();\r\n  }\r\n\r\n  public hasFiscalYearEnd(): Observable<boolean> {\r\n    return this.groupService.getGroup(this.groupId).pipe(map(g => g.fiscalYearEnd !== null));\r\n  }\r\n\r\n  public getAttributeTypesAndCodes(): Observable<ApiServiceResult<Array<AttributeTypesAndCodesResult>>> {\r\n    return this.referenceDataApiService.getAttributeTypesAndCodes();\r\n  }\r\n\r\n  public updateBuildingData(\r\n    groupdId: string,\r\n    skip: number,\r\n    take: number,\r\n    sortTerms: Array<BuildingSortTermDto> = new Array<BuildingSortTermDto>(),\r\n    filterTerms: Array<BuildingFilterTermDto> = new Array<BuildingFilterTermDto>()\r\n  ): Observable<BuildingResponseDto> {\r\n    const searchRequest = <BuildingSearchDto>{\r\n      filterTerms: !!filterTerms && filterTerms.length > 0 ? filterTerms : this.defaultBuildingFilterTerms,\r\n      filterConjunction: 'and',\r\n      sortTerms: !!sortTerms && sortTerms.length > 0 ? sortTerms : this.defaultBuildingSortTerms,\r\n      skip: skip,\r\n      take: take\r\n    };\r\n\r\n    return this.insuranceApiService.searchBuildingsByGroup(groupdId, searchRequest);\r\n  }\r\n\r\n  public updateGroupSiteInfo(groupSiteInfo: Array<CascadedSelectOption>) {\r\n    this.groupSiteInfoSource.next(groupSiteInfo);\r\n  }\r\n\r\n  public updateGroupDepartmentInfo(groupDepartmentsInfo: Array<FieldOption>) {\r\n    this.groupDepartmentInfoSource.next(groupDepartmentsInfo);\r\n  }\r\n\r\n  public updateGroupAccountInfo(groupAccountsInfo: Array<FieldOption>) {\r\n    this.groupAccountInfoSource.next(groupAccountsInfo);\r\n  }\r\n\r\n  public updateCachedRecord(asset: Asset, dataTarget: DataTargetName): Observable<boolean> {\r\n    const current = this.cachedRecordsSource.getValue();\r\n\r\n    if (asset && current[dataTarget]) {\r\n      const index = current[dataTarget].findIndex(i => i.assetId === asset.assetId);\r\n      if (index !== -1) {\r\n        for (const [key, value] of Object.entries(current[dataTarget][index])) {\r\n          if (key !== 'assetId' && key !== 'id' && asset[key]) {\r\n            current[dataTarget][index][key] = asset[key];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.cachedRecordsSource.next(current);\r\n    return of(true);\r\n  }\r\n\r\n  public createCachedRecord(asset: Asset, dataTarget: DataTargetName): Observable<boolean> {\r\n    const current = this.cachedRecordsSource.getValue();\r\n\r\n    if (asset && current[dataTarget]) {\r\n      let newAsset: Asset;\r\n      if (current[dataTarget][0]) {\r\n        // TODO: Var is forbidden in typescript use const or let\r\n        newAsset = Object.assign({}, current[dataTarget][0]);\r\n        for (const [key, value] of Object.entries(newAsset)) {\r\n          newAsset[key] = asset[key];\r\n        }\r\n      }\r\n      newAsset.isMatched = false;\r\n      newAsset.isChild = false;\r\n      newAsset.isParent = false;\r\n      newAsset.dataSource = dataTarget;\r\n      current[dataTarget].unshift(newAsset);\r\n    }\r\n    this.cachedRecordsSource.next(current);\r\n    return of(true);\r\n  }\r\n\r\n  public calculateContentCostReproductionNew(contentCode: string, contentQuality: number, floorArea: number): Observable<string> {\r\n    return this.qualityControlApiService\r\n    .calculateContentCostReproductionNew(contentCode, contentQuality, floorArea).pipe(map(c => c.result));\r\n  }\r\n\r\n  public calculateBasementFloorArea(basementFinishedArea: number, basementUnfinishedArea: number): Observable<string> {\r\n    return this.qualityControlApiService.calculateBasementFloorArea(basementFinishedArea, basementUnfinishedArea).pipe(map(c => c.result));\r\n  }\r\n\r\n  // TODO - Can be invoked from all the places that don't have piped date time values.\r\n  public convertToCurrentTimeZone(inputDate: string): string {\r\n    if (!moment(inputDate).isValid() || moment.utc(inputDate).isBefore(this.minDate)) {\r\n      return '';\r\n    }\r\n    return moment.utc(inputDate).tz(this.userTimeZone).format('YYYY-MM-DDThh:mm:ss');\r\n  }\r\n\r\n  public mapDepartments(departments: DepartmentDto[]): ReplaceFieldSelectionInfo {\r\n    const selection = <ReplaceFieldSelectionInfo> {\r\n      fieldNames: this.assetFileInfoService.GetDepartmentColumns(),\r\n      values: new Array<ReplaceFieldSelectionOption>()\r\n    };\r\n    departments.forEach(dep => {\r\n      const option = <ReplaceFieldSelectionOption> {\r\n        name: dep.departmentNumber + ' - ' + dep.description,\r\n        value: dep.id\r\n      };\r\n      selection.values.push(option);\r\n    });\r\n    return selection;\r\n  }\r\n\r\n  public mapAccounts(accounts: AccountDto[]): ReplaceFieldSelectionInfo {\r\n    const selection = <ReplaceFieldSelectionInfo> {\r\n      fieldNames: this.assetFileInfoService.GetAccountColumns(),\r\n      values: new Array<ReplaceFieldSelectionOption>()\r\n    };\r\n    accounts.forEach(act => {\r\n      const option = <ReplaceFieldSelectionOption> {\r\n        name: act.accountNumber + ' - ' + act.accountDescription,\r\n        value: act.id\r\n      };\r\n      selection.values.push(option);\r\n    });\r\n    return selection;\r\n  }\r\n\r\n  public mapSiteAttributeTypesAndCodes(siteAttributeTypesAndCodes: Array<AttributeTypesAndCodesResult>):  Array<ReplaceFieldSelectionInfo> {\r\n    const selectionArr = new Array<ReplaceFieldSelectionInfo>();\r\n    siteAttributeTypesAndCodes.forEach((siteAttributeTypeAndCode) => {\r\n      const camelCaseFieldName = siteAttributeTypeAndCode.name[0].toLowerCase()+siteAttributeTypeAndCode.name.substring(1);\r\n      const selection = <ReplaceFieldSelectionInfo>{\r\n        fieldNames: [camelCaseFieldName],\r\n        values: new Array<ReplaceFieldSelectionOption>(),\r\n      };\r\n\r\n      siteAttributeTypeAndCode.options.forEach((element) => {\r\n        const options = <ReplaceFieldSelectionOption>{\r\n          name: element.description,\r\n          value: element.buildingAttributeCodeId,\r\n        };\r\n        selection.values.push(options);\r\n      });\r\n      selectionArr.push(selection);\r\n    });\r\n    return selectionArr;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Building } from '../../_models/building.model';\r\nimport { ApiServiceResult } from '../../_api/dtos/api-service-result.dto';\r\nimport { EnumDto } from '../../_api/_configuration/dtos/enum.dto';\r\nimport { InsuranceApiService } from '../../_api/_runtime/services/insurance-api.service';\r\nimport { ReferenceDataApiService } from '../../_api/_configuration/services/reference-data-api.service';\r\nimport { Observable } from 'rxjs';\r\nimport { ValuationResponseDto } from '../../_api/_runtime/dtos/building.dto';\r\n\r\n@Injectable()\r\nexport class ValuationService {\r\n  private selectedBuildings: Building;\r\n  public buildingValuationErrors: ApiServiceResult<EnumDto>;\r\n  public floodPlainValuationErrors: ApiServiceResult<EnumDto>;\r\n\r\n  constructor(private insuranceApiService: InsuranceApiService,\r\n              private referenceDataApiService: ReferenceDataApiService) {}\r\n\r\n  public submitBuildingValuation(buildingIds: string[]): Observable<Array<ValuationResponseDto>> {\r\n    return this.insuranceApiService.submitBuildingValuation(buildingIds);\r\n  }\r\n\r\n  public submitFloodPlainValuation(buildingIds: string[]): Observable<Array<ValuationResponseDto>> {\r\n    return this.insuranceApiService.submitFloodPlainValuation(buildingIds);\r\n  }\r\n\r\n  public getBuildingValuationErrorMappings() {\r\n    this.referenceDataApiService.getBuildingValuationErrorTypes().subscribe(errors => {\r\n      this.buildingValuationErrors = errors;\r\n    });\r\n  }\r\n\r\n  public getFloodPlainValuationErrorMappings() {\r\n    this.referenceDataApiService.getFloodPlainValuationErrorTypes().subscribe(errors => {\r\n      this.floodPlainValuationErrors = errors;\r\n    });\r\n  }\r\n}\r\n","import { HelperService } from '../../../_core/services/helper.service';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, EventEmitter } from '@angular/core';\r\nimport { RecipientDto } from '../../../_api/_runtime/dtos/recipient.dto';\r\nimport { FormActionEvent } from '../../../_models/form-action-event.model';\r\nimport { FieldCategory } from '../../../_enums/field-category';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { FormField } from '../../../_models/form-field.model';\r\nimport { FormAction } from '../../../_enums/form-action';\r\nimport { FieldMetaDataDto } from '../../../_api/dtos/inventory/field-meta-data.dto';\r\n\r\n@Component({\r\n  selector: 'remove-recipient',\r\n  templateUrl: 'remove-recipient.component.html'\r\n})\r\nexport class RemoveRecipientComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  recipientDto = <RecipientDto>{ id: '' };\r\n  fieldMetaData = new Array<FieldMetaDataDto>();\r\n  submitResponse = new EventEmitter<FormActionEvent>();\r\n\r\n  public isSaving = false;\r\n\r\n  public FieldCategory: FieldCategory;\r\n\r\n  form: FormGroup;\r\n  defaultFormFields = new Array<FormField>();\r\n\r\n  fields = new Array<FormField>();\r\n\r\n  constructor(private helperService: HelperService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.fieldMetaData.forEach((field, index) => {\r\n      this.defaultFormFields.push(this.mapMetaDataToField(field, index + 1));\r\n    });\r\n\r\n    this.form = this.helperService.toFormGroup(this.defaultFormFields);\r\n  }\r\n\r\n  remove(): void {\r\n    this.isSaving = true;\r\n\r\n    const recipientDto = Object.assign(this.form.value, { id: this.recipientDto.id });\r\n\r\n    this.submitResponse.emit({ action: FormAction.Remove, formGroup: this.form, dto: recipientDto });\r\n  }\r\n\r\n  cancel(): void {\r\n    this.submitResponse.emit({ action: FormAction.Cancel });\r\n  }\r\n\r\n  private mapMetaDataToField(field: FieldMetaDataDto, defaultOrder?: number): FormField {\r\n    // console.log(this.recipientDto);\r\n    return <FormField>{\r\n      id: field.name,\r\n      type: field.fieldType,\r\n      value: this.recipientDto ? this.mapValue(field, this.recipientDto[field.name]) : '',\r\n      displayName: field.displayName,\r\n      options: field.options,\r\n      cascadedValueOptions: field.cascadedValueOptions,\r\n      cascadedValues: field.cascadedValues,\r\n      order: defaultOrder\r\n    };\r\n  }\r\n\r\n  private mapValue(field: FieldMetaDataDto, value: string): string {\r\n\r\n    return value;\r\n  }\r\n\r\n}\r\n","import { HelperService } from '../../../_core/services/helper.service';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { TranslationManager } from '../../../_core/i18n/translation-manager';\r\nimport { Component, OnInit, EventEmitter } from '@angular/core';\r\nimport { RecipientDto } from '../../../_api/_runtime/dtos/recipient.dto';\r\nimport { FormActionEvent } from '../../../_models/form-action-event.model';\r\nimport { FormAction } from '../../../_enums/form-action';\r\nimport { FieldCategory } from '../../../_enums/field-category';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { FormField } from '../../../_models/form-field.model';\r\nimport { FieldMetaDataDto } from '../../../_api/dtos/inventory/field-meta-data.dto';\r\nimport { Deliverable } from '../../../_api/_runtime/enums/recipient-deliverable';\r\n\r\n@Component({\r\n  selector: 'upsert-recipient',\r\n  templateUrl: 'upsert-recipient.component.html'\r\n})\r\nexport class UpsertRecipientComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  recipientDto: RecipientDto;\r\n  fieldMetaData = new Array<FieldMetaDataDto>();\r\n  submitResponse = new EventEmitter<FormActionEvent>();\r\n  formAction: FormAction;\r\n  action: string;\r\n\r\n  public isSaving = false;\r\n\r\n  public FieldCategory: FieldCategory;\r\n\r\n  form: FormGroup;\r\n  defaultFormFields = new Array<FormField>();\r\n\r\n  fields = new Array<FormField>();\r\n\r\n  constructor(\r\n    private helperService: HelperService,\r\n    private translateService: TranslationManager\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.fieldMetaData.forEach((field, index) => {\r\n      this.defaultFormFields.push(this.mapMetaDataToField(field, index + 1));\r\n    });\r\n\r\n    this.action = this.formAction === 0 ? 'Add' : 'Edit';\r\n    this.form = this.helperService.toFormGroup(this.defaultFormFields);\r\n  }\r\n\r\n  save(): void {\r\n    this.isSaving = true;\r\n\r\n    const mappedFormValues = this.mapDeliverablesToApi(this.form.value);\r\n    let updatedRecipientDto = <RecipientDto>{};\r\n\r\n    if (this.recipientDto) {\r\n      updatedRecipientDto = Object.assign(mappedFormValues, { id: this.recipientDto.id });\r\n    } else {\r\n      updatedRecipientDto = Object.assign(mappedFormValues);\r\n    }\r\n\r\n    this.submitResponse.emit({ action: this.formAction, formGroup: this.form, dto: updatedRecipientDto });\r\n  }\r\n\r\n  cancel(): void {\r\n    this.submitResponse.emit({ action: FormAction.Cancel });\r\n  }\r\n\r\n  private mapDeliverablesToApi(formValues) {\r\n    formValues.deliverables = formValues.deliverables.length ? formValues.deliverables.split(', ').map((enumValue) => {\r\n        return { deliverable: Number(enumValue) };\r\n    }) : [];\r\n    return formValues;\r\n  }\r\n\r\n  private mapMetaDataToField(field: FieldMetaDataDto, defaultOrder?: number): FormField {\r\n    return <FormField>{\r\n      id: field.name,\r\n      type: field.fieldType,\r\n      value: this.recipientDto ? this.mapValue(field, this.recipientDto[field.name]) : '',\r\n      displayName: field.displayName,\r\n      options: field.options,\r\n      cascadedValueOptions: field.cascadedValueOptions,\r\n      cascadedValues: field.cascadedValues,\r\n      order: defaultOrder,\r\n      required: field.required\r\n    };\r\n  }\r\n\r\n  private mapDeliverablesToEnum(value: string): string {\r\n    return value.split(', ').map((deliverableNum): string => {\r\n      return Deliverable[deliverableNum];\r\n    }).join(', ');\r\n  }\r\n\r\n  private mapValue(field: FieldMetaDataDto, value: string): string {\r\n    return field.name === 'deliverables' ? this.mapDeliverablesToEnum(value) : value;\r\n  }\r\n\r\n}\r\n","import { FamisGridService } from '../../_core/services/famis-grid.service';\r\nimport { FamisGridComponent } from '../../_shared/components/famis-grid.component';\r\nimport { RecipientsInfoService } from '../../_core/services/recipients-info-service';\r\nimport { RecipientsService } from '../services/recipients.service';\r\nimport { UpsertRecipientComponent } from './actions/upsert-recipient.component';\r\nimport { AlertService } from '../../_core/services/alert.service';\r\nimport { RemoveRecipientComponent } from './actions/remove-recipient.component';\r\nimport { Deliverable } from '../../_api/_runtime/enums/recipient-deliverable';\r\nimport { recipientHeaders } from '../../processing/default-values/default-recipient-headers';\r\nimport { recipientFormModel } from '../form-models/recipients-form-model';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { WindowManager } from '../../_core/services/window-manager.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Component, OnInit, OnDestroy, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { FamisGrid } from '../../_models/shared/famis-grid-state.model';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { FormActionEvent } from '../../_models/form-action-event.model';\r\nimport { WindowRef } from '@progress/kendo-angular-dialog';\r\nimport { FormAction } from '../../_enums/form-action';\r\nimport { FamisGridActionEvent } from '../../_models/shared/famis-grid-action-event.model';\r\nimport { WindowOption } from '../../_models/window-option';\r\nimport { RecipientDto } from '../../_api/_runtime/dtos/recipient.dto';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { FamisGridCacheResult } from '../../_models/shared/famis-grid-cache-result.model';\r\n\r\n@Component({\r\n  selector: 'recipients-grid',\r\n  templateUrl: 'recipients-grid.component.html'\r\n})\r\nexport class RecipientsGridComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  public recipientsGrid: FamisGrid;\r\n\r\n  @ViewChild(FamisGridComponent, {static: false}) famisGrid: FamisGridComponent;\r\n\r\n  private windowSize = 500;\r\n  private destoryed$ = new Subject();\r\n\r\n  constructor(\r\n    private famisGridService: FamisGridService,\r\n    private recipientsInfoService: RecipientsInfoService,\r\n    private recipientsService: RecipientsService,\r\n    private alertService: AlertService,\r\n    private windowManager: WindowManager,\r\n    private container: ViewContainerRef\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.recipientsGrid = <FamisGrid>{\r\n      height: 600,\r\n      gridId: this.famisGridService.createGrid(),\r\n      windowSize: this.windowSize,\r\n      totalRecordCount: 0,\r\n      name: '',\r\n      supportedOperators: [],\r\n      actions: ['Edit', 'Remove'],\r\n      translationBaseKey: this.i18n.recipients\r\n    };\r\n\r\n    this.recipientsGrid.loading = this.recipientsService.getRecipientsByGroupId(this.recipientsService.groupId)\r\n        .pipe(takeUntil(this.destoryed$))\r\n        .subscribe((result) => {\r\n\r\n      this.recipientsGrid.columnHeaders = recipientHeaders;\r\n      this.recipientsGrid.selectedHeaders = this.recipientsInfoService.GetDefaultColumns();\r\n      this.recipientsGrid.loading = this.processCacheUpdate();\r\n    });\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destoryed$.next();\r\n  }\r\n\r\n  onFormActionEvent(response: FormActionEvent, modal: WindowRef) {\r\n    switch (response.action) {\r\n      case FormAction.Save:\r\n        this.save(response.formGroup, response.dto);\r\n        break;\r\n      case FormAction.Edit:\r\n        this.edit(response.formGroup, response.dto);\r\n        break;\r\n      case FormAction.Remove:\r\n        this.remove(response.formGroup, response.dto);\r\n        break;\r\n      case FormAction.Cancel:\r\n        modal.close();\r\n        break;\r\n      default:\r\n      throw new Error(`Action ${response.action} not implemented.`);\r\n    }\r\n    modal.close();\r\n  }\r\n\r\n  handleActionEvent(event: FamisGridActionEvent) {\r\n    const parentThis = this;\r\n    switch (event.action) {\r\n      case 'Edit':\r\n        const editRecipientModal = this.windowManager.open(UpsertRecipientComponent, 'Edit Recipient', <WindowOption> {\r\n          isModal: true\r\n        });\r\n\r\n        editRecipientModal.content.instance.fieldMetaData = recipientFormModel;\r\n        editRecipientModal.content.instance.recipientDto = event.item;\r\n        editRecipientModal.content.instance.formAction = FormAction.Edit;\r\n        editRecipientModal.content.instance.submitResponse.subscribe((response) => {\r\n          parentThis.onFormActionEvent(response, editRecipientModal);\r\n        });\r\n        break;\r\n\r\n      case 'Remove':\r\n        const removeRecipientModal = this.windowManager.open(RemoveRecipientComponent, 'Remove Recipient',\r\n        <WindowOption> {\r\n          isModal: true\r\n\r\n        });\r\n\r\n        removeRecipientModal.content.instance.fieldMetaData = recipientFormModel;\r\n        removeRecipientModal.content.instance.recipientDto = event.item;\r\n        removeRecipientModal.content.instance.submitResponse.subscribe((response) => {\r\n          parentThis.onFormActionEvent(response, removeRecipientModal);\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  addRecipient() {\r\n    const parentThis = this;\r\n    const addRecipientModal = this.windowManager.open(UpsertRecipientComponent, 'Add Recipient', <WindowOption> {\r\n      isModal: true\r\n    });\r\n\r\n    addRecipientModal.content.instance.fieldMetaData = recipientFormModel;\r\n    addRecipientModal.content.instance.formAction = FormAction.Save;\r\n    addRecipientModal.content.instance.submitResponse.subscribe((response) => {\r\n      parentThis.onFormActionEvent(response, addRecipientModal);\r\n    });\r\n  }\r\n\r\n\r\n  save(form: FormGroup, recipientDto: RecipientDto) {\r\n    recipientDto.zip = parseInt(recipientDto.zip.toString(), 10);\r\n    if (form.valid) {\r\n      this.recipientsService.createRecipient(this.recipientsService.groupId, recipientDto).subscribe(\r\n        result => {\r\n          // console.log(result);\r\n          this.alertService.success('Recipient created successfully');\r\n          this.updateCache();\r\n        },\r\n        error => {\r\n          // console.log(error);\r\n          this.alertService.error('An error has occurred in adding a recipient');\r\n        },\r\n        () => { }\r\n      );\r\n    }\r\n  }\r\n\r\n  edit(form: FormGroup, recipientDto: RecipientDto) {\r\n    if (form.valid) {\r\n      this.recipientsService.updateRecipient(recipientDto.id, this.recipientsService.groupId, recipientDto).subscribe(\r\n        result => {\r\n          // console.log(result);\r\n          this.alertService.success('Recipient updated successfully');\r\n          this.updateCache();\r\n        },\r\n        error => {\r\n          // console.log(error);\r\n          this.alertService.error('An error has occurred in updating a recipient');\r\n        },\r\n        () => { }\r\n      );\r\n    }\r\n  }\r\n\r\n  remove(form: FormGroup, recipientDto: RecipientDto) {\r\n\r\n    if (form.valid) {\r\n      this.recipientsService.deleteRecipient(recipientDto.id).subscribe(\r\n        result => {\r\n          this.alertService.success('Recipient removed successfully');\r\n          this.updateCache();\r\n        },\r\n        error => {\r\n          // console.log(error);\r\n          this.alertService.error('An error has occurred in removing the recipient');\r\n        },\r\n        () => { }\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  updateCache(request?: FamisGridCacheResult) {\r\n    this.recipientsGrid.cacheLoading = this.processCacheUpdate(request);\r\n  }\r\n\r\n  // Any is used because deliverables is being mapped from an array of objects to a flat string value\r\n  private mapDeliverablesToString(dto: any): Array<RecipientDto> {\r\n    return dto.map((field) => {\r\n      field.deliverables = field.deliverables.map((deliverable): string => {\r\n        return Deliverable[deliverable.deliverable];\r\n      }).join(', ');\r\n      return field;\r\n    });\r\n  }\r\n\r\n  private processCacheUpdate(cacheUpdateRequest?: FamisGridCacheResult): Subscription {\r\n    const s = this;\r\n\r\n    return this.\r\n      recipientsService.updateRecipientsData(\r\n      this.recipientsService.groupId,\r\n        cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.skip : s.famisGridService.defaultSkip,\r\n        cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.take : s.famisGridService.defaultTake,\r\n      )\r\n      .subscribe(dto => {\r\n        this.recipientsGrid.totalRecordCount = dto.length;\r\n\r\n        s.famisGridService.setCacheRecords(\r\n          this.mapDeliverablesToString(dto),\r\n          s.recipientsGrid.gridId,\r\n          cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.skip : s.famisGridService.defaultSkip,\r\n          dto.length,\r\n          this.recipientsGrid.windowSize\r\n        );\r\n      });\r\n\r\n  }\r\n}\r\n","import { RecipientsService } from '../services/recipients.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'recipients',\r\n  templateUrl: 'recipients.component.html'\r\n})\r\nexport class RecipientsComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private recipientsServices: RecipientsService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.recipientsServices.groupId = this.route.parent.snapshot.paramMap.get('groupId');\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n\r\n  public referenceDataLoaded(): boolean {\r\n    return (\r\n      !!this.recipientsServices.groupId\r\n    );\r\n  }\r\n\r\n}\r\n","import { FieldType } from '../../_enums/field-type';\r\n\r\nexport const recipientFormModel = [\r\n  {\r\n    name: 'recipientName',\r\n    displayName: 'Recipient Name',\r\n    fieldType: FieldType.String,\r\n    required: true,\r\n  },\r\n  {\r\n    name: 'address',\r\n    displayName: 'Address',\r\n    fieldType: FieldType.String,\r\n    required: false,\r\n  },\r\n  {\r\n    name: 'address2',\r\n    displayName: 'Address2',\r\n    fieldType: FieldType.String,\r\n    required: false,\r\n  },\r\n  {\r\n    name: 'city',\r\n    displayName: 'City',\r\n    fieldType: FieldType.String,\r\n    required: false,\r\n  },\r\n  {\r\n    name: 'state',\r\n    displayName: 'State',\r\n    fieldType: FieldType.String,\r\n    required: false,\r\n  },\r\n  {\r\n    name: 'zip',\r\n    displayName: 'Zip',\r\n    fieldType: FieldType.String,\r\n    required: false,\r\n  },\r\n  {\r\n    name: 'email',\r\n    displayName: 'Email',\r\n    fieldType: FieldType.String,\r\n    required: false,\r\n  },\r\n  {\r\n    name: 'phoneNumber',\r\n    displayName: 'Phone Number',\r\n    fieldType: FieldType.String,\r\n    required: false,\r\n  },\r\n  {\r\n    name: 'deliverables',\r\n    displayName: 'Deliverables',\r\n    fieldType: FieldType.DropDown,\r\n    options: [\r\n      {\r\n        displayName: 'Portal',\r\n        key: 0\r\n      },\r\n      {\r\n        displayName: 'Hard Copy',\r\n        key: 1\r\n      },\r\n      {\r\n        displayName: 'Both',\r\n        key: `0, 1`\r\n      }\r\n    ],\r\n    required: true,\r\n  }\r\n];\r\n","import { RecipientsGridComponent } from './components/recipients-grid.component';\r\nimport { RecipientsService } from './services/recipients.service';\r\nimport { RecipientsComponent } from './components/recipients.component';\r\nimport { SharedModule } from '../_shared/shared.module';\r\nimport { RecipientsApiService } from '../_api/_runtime/services/recipients-api.service';\r\nimport { UpsertRecipientComponent } from './components/actions/upsert-recipient.component';\r\nimport { RemoveRecipientComponent } from './components/actions/remove-recipient.component';\r\nimport { CoreModule } from '../_core/core.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { LaddaModule } from 'angular2-ladda';\r\nimport { OrderModule } from 'ngx-order-pipe';\r\nimport { GridModule } from '@progress/kendo-angular-grid';\r\nimport { RouterModule } from '@angular/router';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgbModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    LaddaModule,\r\n    OrderModule,\r\n    GridModule,\r\n    RouterModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    SharedModule,\r\n    CoreModule\r\n  ],\r\n  declarations: [\r\n    RecipientsGridComponent,\r\n    RecipientsComponent,\r\n    UpsertRecipientComponent,\r\n    RemoveRecipientComponent\r\n  ],\r\n  entryComponents: [\r\n    UpsertRecipientComponent,\r\n    RemoveRecipientComponent\r\n  ],\r\n  providers: [\r\n    RecipientsService,\r\n    RecipientsApiService\r\n  ]\r\n})\r\nexport class RecipientsModule { }\r\n","import { RecipientsApiService } from '../../_api/_runtime/services/recipients-api.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RecipientDto } from '../../_api/_runtime/dtos/recipient.dto';\r\n\r\n@Injectable()\r\nexport class RecipientsService {\r\n\r\n  groupId: string;\r\n\r\n\r\n  constructor(\r\n    private recipientsApiService: RecipientsApiService\r\n  ) { }\r\n\r\n  public updateRecipientsData(\r\n    groupdId: string,\r\n    skip: number,\r\n    take: number,\r\n  ): Observable<RecipientDto[]> {\r\n\r\n    return this.getRecipientsByGroupId(groupdId);\r\n  }\r\n\r\n  getRecipientsByGroupId(groupId: string): Observable<Array<RecipientDto>> {\r\n    return this.recipientsApiService.getRecipientsByGroupId(groupId);\r\n  }\r\n\r\n  createRecipient(groupId: string, dto: RecipientDto): Observable<Array<RecipientDto>> {\r\n    return this.recipientsApiService.createRecipient(groupId, dto);\r\n  }\r\n\r\n  updateRecipient(recipientId: string, groupId: string,\r\n    recipientDto: RecipientDto): Observable<Array<RecipientDto>> {\r\n\r\n    return this.recipientsApiService.updateRecipient(recipientId, groupId, recipientDto);\r\n  }\r\n\r\n  deleteRecipient(recipientId: string): Observable<Array<RecipientDto>> {\r\n    return this.recipientsApiService.deleteRecipient(recipientId);\r\n  }\r\n}\r\n","import { AlertService } from '../../../_core/services/alert.service';\r\nimport { ConsolidationService } from '../../services/consolidation.service';\r\n\r\nimport { SelectableSettings } from '@progress/kendo-angular-grid/dist/es/selection/selectable-settings';\r\nimport { ConsolidationColumn } from '../../../_models/reconciliation/consolidation-column.model';\r\nimport { SelectionEvent } from '@progress/kendo-angular-grid';\r\nimport { OrderPipe } from 'ngx-order-pipe';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { DataTargetName } from '../../../_enums/data-target-name';\r\n\r\n@Component({\r\n  selector: 'asset-column-select',\r\n  templateUrl: './asset-column-select.component.html'\r\n})\r\nexport class AssetColumnSelectComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  @Input('file-type') assetFileType: DataTargetName;\r\n  @Input() title: string;\r\n  @Output() onAssetColumnAdded = new EventEmitter<any>();\r\n\r\n  loadingBusyIndicator = true;\r\n  assetFileFields: Array<ConsolidationColumn>;\r\n  selectedItems: Array<string> = new Array<string>();\r\n\r\n  selectableSettings: SelectableSettings = {\r\n    enabled: true,\r\n    mode: 'multiple'\r\n  };\r\n\r\n  constructor(\r\n    private alertService: AlertService,\r\n    private consolidationService: ConsolidationService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loadColumns();\r\n  }\r\n\r\n  private loadColumns() {\r\n    this.consolidationService.getColumns(this.assetFileType)\r\n      .subscribe(\r\n      results => {\r\n        this.assetFileFields = results;\r\n        this.assetFileFields = this.assetFileFields\r\n          .filter(a => this.consolidationService.ExcludedMappedColumns.indexOf(a.sourceColumn) === -1);\r\n        this.selectedItems = this.assetFileFields\r\n          .filter(item => item.selected)\r\n          .map(result => result.sourceColumn);\r\n        this.loadingBusyIndicator = false;\r\n      },\r\n      error => { },\r\n      () => {\r\n        this.loadingBusyIndicator = false;\r\n      });\r\n  }\r\n\r\n  public onSelectionChange(event: SelectionEvent) {\r\n\r\n    this.consolidationService.defineLayoutDirty = true;\r\n\r\n    if (event.deselectedRows.length > 0) {\r\n      this.consolidationService.deselectColumns(<ConsolidationColumn[]>event.deselectedRows.map(row => row.dataItem));\r\n    }\r\n    if (event.selectedRows.length > 0) {\r\n      this.consolidationService.selectColumns(<ConsolidationColumn[]>event.selectedRows.map(row => row.dataItem));\r\n    }\r\n  }\r\n}\r\n","import { ConsolidationService } from '../../services/consolidation.service';\r\nimport { ConsolidationColumn } from '../../../_models/reconciliation/consolidation-column.model';\r\nimport { Component, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { Subscription } from 'rxjs';\r\n\r\nconst tableRow = node => node.tagName.toLowerCase() === 'tr';\r\nconst closest = (node, predicate) => {\r\n  while (node && !predicate(node)) {\r\n      node = node.parentNode;\r\n  }\r\n\r\n  return node;\r\n};\r\n\r\n@Component({\r\n  selector: 'asset-selected-columns',\r\n  templateUrl: './asset-selected-columns.component.html'\r\n})\r\nexport class AssetSelectedColumnsComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  @Output() onAssetColumnAdded = new EventEmitter<any>();\r\n\r\n  loadingBusyIndicator = true;\r\n  selectedColumns: Array<ConsolidationColumn> = [];\r\n\r\n  private columnsSubscription: Subscription;\r\n\r\n  constructor(\r\n    private consolidationService: ConsolidationService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loadSelectedColumns();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.columnsSubscription) {\r\n      this.columnsSubscription.unsubscribe();\r\n      this.columnsSubscription = null;\r\n    }\r\n  }\r\n\r\n  private loadSelectedColumns() {\r\n    this.columnsSubscription = this.consolidationService.getSelectedColumns()\r\n      .subscribe(\r\n      result => {\r\n        this.selectedColumns = result;\r\n        this.loadingBusyIndicator = false;\r\n      },\r\n      error => { },\r\n      () => {\r\n        this.loadingBusyIndicator = false;\r\n      });\r\n  }\r\n\r\n  public remove(item: ConsolidationColumn) {\r\n    this.consolidationService.deselectColumns([item]);\r\n    this.consolidationService.defineLayoutDirty = true;\r\n\r\n  }\r\n\r\n  public autoMapFields(event: any) {\r\n    this.consolidationService.autoMapFields();\r\n  }\r\n\r\n}\r\n","import { ConsolidationService } from '../../services/consolidation.service';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ConsolidationColumn } from '../../../_models/reconciliation/consolidation-column.model';\r\nimport { GroupMatchCode } from '../../../_models/group-match-code.model';\r\nimport { ConsolidationColumnOverride } from '../../../_models/reconciliation/consolidation-column-override.model';\r\nimport { ConsolidationAssignment } from '../../../_models/reconciliation/consolidation-assignment.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatchCodesService } from '../../../_api/services/reconciliation/match-codes.service';\r\n\r\n@Component({\r\n  selector: 'consolidation-match-code-assignment',\r\n  templateUrl: './consolidation-match-code-assignment.component.html'\r\n})\r\nexport class ConsolidationMatchCodeAssignmentComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  public loadingBusyIndicator = true;\r\n  public emptyMatchCodesIndicator = false;\r\n\r\n  private selectedColumns: Array<ConsolidationColumn>;\r\n  public selectedMatchCodes: Array<GroupMatchCode>;\r\n  private matchCodeOverrides: Array<ConsolidationColumnOverride> = [];\r\n\r\n  public models: Array<ConsolidationAssignment> = [];\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private consolidationService: ConsolidationService,\r\n    private matchCodeService: MatchCodesService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    const groupId = this.route.parent.parent.snapshot.paramMap.get('groupId');\r\n    this.loadAssignmentData(groupId);\r\n  }\r\n\r\n  private loadAssignmentData(groupId: string) {\r\n    this.matchCodeService.getGroupMatchCodes(groupId).subscribe(matchCodes => {\r\n      this.selectedMatchCodes = matchCodes.filter(matchCode => matchCode.matchCodeIsUsed === true);\r\n      this.buildModel();\r\n    });\r\n\r\n    this.consolidationService.getSelectedColumns().subscribe(columns => {\r\n          this.selectedColumns = columns;\r\n          this.buildModel();\r\n        });\r\n\r\n    this.consolidationService.columnOverrides.subscribe(overrides => {\r\n      this.matchCodeOverrides = overrides;\r\n      this.buildModel();\r\n    });\r\n\r\n  }\r\n\r\n  private buildModel() {\r\n    this.models = [];\r\n    if (this.selectedColumns == null || this.selectedMatchCodes == null) {\r\n      return;\r\n    }\r\n    if (this.selectedColumns.length === 0 || this.selectedMatchCodes.length === 0) {\r\n      this.loadingBusyIndicator = false;\r\n      this.emptyMatchCodesIndicator = this.selectedMatchCodes.length === 0;\r\n      return;\r\n    }\r\n\r\n    this.selectedColumns.forEach(column => {\r\n      const entity = <ConsolidationAssignment> {\r\n        id: column.id,\r\n        columnName: column.sourceColumn,\r\n        displayName: column.sourceColumn === column.destinationColumnName ? column.displayName : column.destinationColumnName,\r\n        source: column.sourceTarget,\r\n        isCustom: column.isCustom\r\n      };\r\n      this.selectedMatchCodes.forEach(code => {\r\n        const override = this.matchCodeOverrides.find(o => o.consolidationColumnId === column.id && o.matchCodeId === code.matchCodeId);\r\n        entity[code.matchCodeId] = override == null ? `${column.sourceTarget}_${column.sourceColumn}`\r\n                                                    : `${override.source}_${override.columnName}`;\r\n      });\r\n      this.models.push(entity);\r\n    });\r\n\r\n    this.loadingBusyIndicator = false;\r\n  }\r\n\r\n}\r\n","import { ConsolidationService } from '../../services/consolidation.service';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, OnDestroy, OnChanges, Input, SimpleChanges } from '@angular/core';\r\nimport { ConsolidationColumn } from '../../../_models/reconciliation/consolidation-column.model';\r\nimport { SelectOption } from '../../../_models/select-option.model';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'destination-column-selector',\r\n  templateUrl: './destination-column-selector.component.html',\r\n})\r\nexport class DestinationColumnSelectorComponent implements OnInit, OnDestroy, OnChanges, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  @Input('column') column: ConsolidationColumn;\r\n  @Input('value') destinationColumnValue: string;\r\n\r\n  validationMessage = '';\r\n  selectedValue: string;\r\n  customValue: string;\r\n\r\n  public availableColumns: Array<SelectOption> = [];\r\n  public standardColumns: Array<ConsolidationColumn> = [];\r\n\r\n  public selectOptionSubscription: Subscription;\r\n\r\n  constructor(private consolidationService: ConsolidationService) { }\r\n\r\n  public ngOnInit(): void {\r\n    this.initSelectOptions();\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    if (this.selectOptionSubscription) {\r\n      this.selectOptionSubscription.unsubscribe();\r\n      this.selectOptionSubscription = null;\r\n    }\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges): void {\r\n    if ((this.selectedValue == null || this.selectedValue.length === 0)\r\n     && (this.destinationColumnValue != null && this.destinationColumnValue.length > 0) ) {\r\n      this.selectedValue = this.resolveDestinationColumnValue(this.destinationColumnValue);\r\n    }\r\n    this.addSelectedValueToOptions();\r\n  }\r\n\r\n  private resolveDestinationColumnValue(destinationColumnValue: string): string {\r\n    const column = this.consolidationService.getDefaultColumns().find(x => x.sourceColumn === destinationColumnValue);\r\n    return (column == null) ? '-1' : column.sourceColumn;\r\n  }\r\n\r\n  private initSelectOptions() {\r\n    this.selectOptionSubscription = this.consolidationService.availableDestinationList.subscribe(\r\n      options => {\r\n        this.availableColumns = [];\r\n        options\r\n          .filter(x => x.fieldType === this.column.fieldType)\r\n          .forEach(option => {\r\n            this.availableColumns.push(<SelectOption> {\r\n              label: option.displayName,\r\n              value: option.destinationColumnName,\r\n            });\r\n        });\r\n\r\n        this.availableColumns = this.availableColumns.sort((a, b) => this.stringComparator(a, b));\r\n\r\n        if (this.selectedValue != null && this.availableColumns.findIndex(x => x.value === this.selectedValue) === -1) {\r\n          this.addSelectedValueToOptions();\r\n        }\r\n      });\r\n  }\r\n\r\n  private stringComparator(a, b): number {\r\n    if (a < b) { return -1; }\r\n    if (a > b) { return 1; }\r\n    return 0;\r\n  }\r\n\r\n  private addSelectedValueToOptions() {\r\n    if (this.selectedValue == null || this.selectedValue.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const defaultColumn = this.consolidationService.getDefaultColumns()\r\n      .find(x => x.sourceColumn.toLowerCase() === this.selectedValue.toLowerCase());\r\n    // This is a standard column that doesn't exist in the list\r\n    if (defaultColumn != null) {\r\n      if (this.availableColumns.findIndex(x => x.label === defaultColumn.displayName) === -1) {\r\n        this.availableColumns.push(<SelectOption> {\r\n          label: defaultColumn.displayName,\r\n          value: defaultColumn.destinationColumnName,\r\n        });\r\n      }\r\n    } else {\r\n      this.customValue = this.column.destinationColumnName;\r\n    }\r\n  }\r\n\r\n  public onSelectionChanged() {\r\n\r\n    this.consolidationService.defineLayoutDirty = true;\r\n\r\n    if (this.selectedValue == null || this.selectedValue === '' || this.selectedValue === '-1') {\r\n      this.setTargetColumnValue('');\r\n      return;\r\n    }\r\n    this.customValue = '';\r\n    this.setTargetColumnValue(this.selectedValue);\r\n  }\r\n\r\n  public onTextChanged() {\r\n    if (this.selectedValue !== '-1') {\r\n      return;\r\n    }\r\n    this.setTargetColumnValue(this.customValue);\r\n  }\r\n\r\n  private setTargetColumnValue(columnName: string) {\r\n    const result = this.consolidationService.setColumnDestination(this.column, columnName);\r\n    if (!result.success) {\r\n      this.validationMessage = result.message;\r\n      this.selectedValue = this.selectedValue === '-1' ? this.selectedValue : '';\r\n      this.customValue = '';\r\n      return;\r\n    }\r\n    this.column.destinationColumnName = columnName;\r\n    this.validationMessage = '';\r\n  }\r\n}\r\n","\r\nimport { ConsolidationService } from '../../services/consolidation.service';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { SelectOption } from '../../../_models/select-option.model';\r\nimport { ConsolidationColumn } from '../../../_models/reconciliation/consolidation-column.model';\r\nimport { DataTargetName } from '../../../_enums/data-target-name';\r\n\r\n@Component({\r\n  selector: 'dynamic-assignment-field',\r\n  templateUrl: './dynamic-assignment-select.component.html'\r\n})\r\nexport class DynamicAssignmentFieldComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  @Input() columnId: string;\r\n  @Input() matchCodeId: string;\r\n  @Input() selectedValue: string;\r\n\r\n  public formKey: string;\r\n  public selectOptions: Array<SelectOption>;\r\n  private column: ConsolidationColumn;\r\n\r\n  constructor(private consolidationService: ConsolidationService) { }\r\n\r\n  public ngOnInit(): void {\r\n    this.formKey = `${this.columnId}_${this.matchCodeId}`;\r\n    this.column = this.consolidationService.getSelectedColumn(this.columnId);\r\n    this.selectOptions = this.consolidationService.getMapMatchCodeOptions(this.columnId);\r\n  }\r\n\r\n  public onChange(): void {\r\n    const values = this.selectedValue.split('_');\r\n    const target = <DataTargetName> parseInt(values[0], 10);\r\n    this.consolidationService.setColumnOverride(this.columnId, this.matchCodeId, target, values.slice(1).join('_'));\r\n    this.consolidationService.mapMatchCodesDirty = true;\r\n  }\r\n}\r\n","import { ReconciliationInventoryService } from '../services/inventory.service';\r\nimport { ReconcileDataService } from '../services/reconcile-data.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, ViewChild, Output, EventEmitter } from '@angular/core';\r\nimport { NgbModalRef, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SelectableSettings } from '@progress/kendo-angular-grid';\r\n\r\n@Component({\r\n  selector: 'copy-inventory',\r\n  templateUrl: './copy-inventory.component.html'\r\n})\r\nexport class CopyInventoryComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  @ViewChild('content', {static: false}) private content: any;\r\n  private modalRef: NgbModalRef;\r\n\r\n  public selectableSettings: SelectableSettings;\r\n\r\n  @Output() onInventoryCopied = new EventEmitter<any>();\r\n\r\n  title: string;\r\n  action: string;\r\n\r\n  availableGroups: any;\r\n\r\n  selectedGroup = [];\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private inventoryService: ReconciliationInventoryService,\r\n    private reconcileDataService: ReconcileDataService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n\r\n    this.inventoryService\r\n      .getContractGroupsWithInventory(\r\n        this.reconcileDataService.groupId\r\n      )\r\n      .subscribe(data => {\r\n        this.availableGroups = data;\r\n\r\n        // console.log(this.availableGroups);\r\n      });\r\n\r\n    this.setSelectableSettings();\r\n  }\r\n\r\n  public setSelectableSettings() {\r\n    this.selectableSettings = {\r\n      checkboxOnly: true,\r\n      mode: 'single'\r\n    };\r\n  }\r\n\r\n  open(event: any) {\r\n    event.preventDefault();\r\n\r\n    // this.customcolumn = new CustomColumn();\r\n    this.title = 'Select Group to Copy Inventory From';\r\n    this.action = 'Create';\r\n\r\n    this.modalRef = this.modalService.open(this.content);\r\n  }\r\n\r\n  onSubmit(form) {\r\n\r\n    this.inventoryService\r\n      .copyInventoryToGroup(\r\n        this.selectedGroup[0],\r\n        this.reconcileDataService.groupId\r\n      )\r\n      .subscribe(result => {\r\n        this.modalRef.dismiss();\r\n\r\n        this.onInventoryCopied.emit(true);\r\n      });\r\n  }\r\n}\r\n","import { ReconciliationConstants } from '../reconciliation.constants';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { WindowManager } from '../../_core/services/window-manager.service';\r\nimport { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { MatchCodeCategory } from '../../_models/match-code-category.model';\r\nimport { MatchCode } from '../../_models/match-code.model';\r\nimport { WindowRef } from '@progress/kendo-angular-dialog';\r\nimport { MatchCodesService } from '../../_api/services/reconciliation/match-codes.service';\r\nimport { WindowOption } from '../../_models/window-option';\r\nimport { ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'create-match-code',\r\n  templateUrl: './create-match-code.component.html'\r\n})\r\nexport class CreateMatchCodeComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  closeResult: string;\r\n  matchCodeCategories = new Array<MatchCodeCategory>();\r\n\r\n  matchCode = new MatchCode();\r\n  @Output()\r\n  onAddorUpdateMatchCode = new EventEmitter<any>();\r\n\r\n  @ViewChild('content', {static: false})\r\n  private content: any;\r\n\r\n  title: string;\r\n  action: string;\r\n  startingName: string;\r\n\r\n  isNameTaken: boolean;\r\n\r\n  windowRef: WindowRef;\r\n\r\n  constructor(\r\n    private matchCodeService: MatchCodesService,\r\n    private windowManager: WindowManager,\r\n  ) {}\r\n\r\n  open(event: any, id?: string) {\r\n    event.preventDefault();\r\n\r\n    if (id) {\r\n      this.matchCodeService.getMatchCodeById(id).subscribe(mc => {\r\n        this.matchCode = mc;\r\n        this.title = 'Edit Match Code';\r\n        this.action = 'Edit';\r\n        this.startingName = mc.name;\r\n\r\n        this.windowRef = this.windowManager.open(this.content, this.title, <WindowOption>{\r\n          isModal: true,\r\n          translationKey: this.i18n.reconciliation\r\n        });\r\n      });\r\n    } else {\r\n      this.matchCode = new MatchCode();\r\n      this.title = 'Create New Match Code';\r\n      this.action = 'Create';\r\n      this.matchCode.isEnabled = true;\r\n\r\n      this.windowRef = this.windowManager.open(this.content, this.title, <WindowOption>{\r\n        isModal: true,\r\n        translationKey: this.i18n.reconciliation\r\n      });\r\n    }\r\n\r\n    this.isNameTaken = false;\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.matchCodeService.getMatchCodeCategories().subscribe(categories => {\r\n      if (categories == null || categories.length === 0) {\r\n        this.matchCodeCategories = [];\r\n      }\r\n\r\n      this.matchCodeCategories = categories.filter(category => category.id !== ReconciliationConstants.SystemMatchCategoryId);\r\n    });\r\n  }\r\n\r\n  onNameInputChange(event: any, nameVal: string) {\r\n    event.preventDefault();\r\n    if (this.action === 'Create') {\r\n      this.isNameTaken =\r\n        this.matchCodeService.cachedMatchCodes.find(x => x.name.toLowerCase() === this.matchCode.name.toLowerCase()) != null;\r\n    }\r\n    if (this.action === 'Edit') {\r\n      if (nameVal !== this.startingName) {\r\n        this.isNameTaken =\r\n          this.matchCodeService.cachedMatchCodes.find(x => x.name.toLowerCase() === this.matchCode.name.toLowerCase()) &&\r\n          this.matchCode.name.toLowerCase() !== this.startingName.toLowerCase();\r\n      }\r\n    }\r\n  }\r\n\r\n  onSubmit(form) {\r\n    if (form.valid) {\r\n      if (this.action === 'Create') {\r\n        if (this.isNameTaken) {\r\n          return;\r\n        }\r\n        this.matchCodeService.createMatchCode(this.matchCode).subscribe(createdMatchCode => {\r\n          this.windowRef.close();\r\n\r\n          this.onAddorUpdateMatchCode.emit(createdMatchCode);\r\n        });\r\n      } else {\r\n        this.matchCodeService.updateMatchCode(this.matchCode).subscribe(editedMatchCode => {\r\n          this.windowRef.close();\r\n\r\n          this.onAddorUpdateMatchCode.emit(editedMatchCode);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  cancel(): void {\r\n    this.windowRef.close();\r\n  }\r\n}\r\n","import { AlertService } from '../../_core/services/alert.service';\r\nimport { ConsolidationService } from '../services/consolidation.service';\r\nimport { ComponentCanDeactivate } from '../../_core/guards/component-can-deactivate';\r\nimport { CanDeactivateService } from '../../_core/guards/can-deactivate.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'define-layout',\r\n  templateUrl: './define-layout.component.html'\r\n})\r\nexport class DefineLayoutComponent extends ComponentCanDeactivate implements OnDestroy, OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  subscription: Subscription;\r\n  public isBusy = false;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private alertService: AlertService,\r\n    private consolidationService: ConsolidationService,\r\n    private canDeactivateService: CanDeactivateService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    const groupId = this.route.parent.parent.snapshot.paramMap.get('groupId');\r\n    this.consolidationService.initialize(groupId);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  onBack(event: any) {\r\n    this.router.navigate(['./reconcile-data'], {\r\n      relativeTo: this.route.parent\r\n    });\r\n  }\r\n\r\n  canDeactivate(): boolean {\r\n    return this.canDeactivateService.canDeactivateComponent(this.consolidationService.defineLayoutDirty);\r\n  }\r\n\r\n  public onContinue(event: any): void {\r\n    event.preventDefault();\r\n    this.isBusy = true;\r\n    const validation = this.consolidationService.validateDestinations();\r\n    if (validation.length > 0) {\r\n      this.alertService.error(validation);\r\n      this.isBusy = false;\r\n      return;\r\n    }\r\n\r\n    this.subscription = this.consolidationService.saveColumnMappingSettings().subscribe(results => {\r\n      this.consolidationService.defineLayoutDirty = false;\r\n\r\n      this.router.navigate(['./map-matchcodes'], {\r\n        relativeTo: this.route.parent\r\n      });\r\n      this.isBusy = false;\r\n    });\r\n  }\r\n}\r\n","import { AlertService } from '../../_core/services/alert.service';\r\nimport { ConsolidationService } from '../services/consolidation.service';\r\nimport { HelperService } from '../../_core/services/helper.service';\r\nimport { ReconcileDataService } from '../services/reconcile-data.service';\r\n\r\nimport { ReconciliationValidationComponent } from './reconciliation-validation.component';\r\nimport { AssetFileInfoService } from '../../_core/services/asset-file-info-service';\r\nimport { ReconciliationInventoryService } from '../services/inventory.service';\r\nimport { InventoryService } from '../../_api/services/reconciliation/inventory.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { TranslationManager } from '../../_core/i18n/translation-manager';\r\nimport { Component, ViewChild, OnDestroy, OnInit } from '@angular/core';\r\nimport { ConsolidatedFilePreviewDto } from '../../_api/dtos/consolidated-file-preview.dto';\r\nimport { Subscription, Subject, forkJoin } from 'rxjs';\r\nimport { GridColumnHeader } from '../../_models/grid-column-header.model';\r\nimport { IntlService } from '@progress/kendo-angular-intl';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DataTargetName } from '../../_enums/data-target-name';\r\n\r\n@Component({\r\n  selector: 'finalze-data',\r\n  templateUrl: './finalize-data.component.html'\r\n})\r\nexport class FinalizeDataComponent implements OnDestroy, OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  public showValidationErrors: boolean;\r\n  responseData: Array<ConsolidatedFilePreviewDto>;\r\n  groupId: string;\r\n  public loading: Subscription;\r\n  public isBusy = false;\r\n  public headers: GridColumnHeader[];\r\n\r\n  @ViewChild(ReconciliationValidationComponent, {static: false}) reconciliationValidationComponent: ReconciliationValidationComponent;\r\n\r\n  /* A Subject for monitoring the destruction of the component. */\r\n  private destroyed$ = new Subject<any>();\r\n\r\n  constructor(\r\n    public intl: IntlService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private alertService: AlertService,\r\n    private helperService: HelperService,\r\n    private consolidationService: ConsolidationService,\r\n    private inventoryApiService: InventoryService,\r\n    private reconcileDataService: ReconcileDataService,\r\n    private assetFileInfoService: AssetFileInfoService,\r\n    private inventoryService: ReconciliationInventoryService,\r\n    private translateManager: TranslationManager,\r\n    private translateService: TranslateService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.groupId = this.reconcileDataService.groupId;\r\n    this.showValidationErrors = false;\r\n    this.consolidationService.initialize(this.groupId);\r\n\r\n    // Init form fields\r\n      this.inventoryApiService.getConsolidatedFilePreview(this.groupId, true).subscribe(consolidatedPreview => {\r\n        this.inventoryService.getSearchMetadataByGroupId(this.groupId, DataTargetName.consolidated)\r\n        .subscribe((searchMetadata) => {\r\n          this.responseData = consolidatedPreview.result;\r\n          this.headers = this.helperService\r\n            .mapHeaders(searchMetadata.fields, this.assetFileInfoService.GetInternalColumns())\r\n            .filter(x =>\r\n              consolidatedPreview.result[0].columnProperties.find(\r\n                c => this.helperService.lowerCasePropertyName(c.destinationColumnName) ===\r\n                  this.helperService.lowerCasePropertyName(x.name)\r\n              )\r\n            );\r\n        },\r\n        error => {\r\n          this.alertService.error(error.error ? error.error : 'An unknown error occurred generating preview');\r\n        }\r\n        );\r\n      });\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.loading) {\r\n      this.loading.unsubscribe();\r\n    }\r\n\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  getHeaders(row: any) {\r\n    const headers = {};\r\n    row.forEach(element => {\r\n      headers[this.helperService.lowerCasePropertyName(element.destinationColumnName)] = null;\r\n    });\r\n\r\n    return this.helperService.getHeaders(headers, this.assetFileInfoService.GetInternalColumns());\r\n  }\r\n\r\n  generateColumnArrayData(obj) {\r\n    return Object.keys(obj).map(key => {\r\n      return { key: key, value: obj[key] };\r\n    });\r\n  }\r\n\r\n  onBack(event: any) {\r\n    this.router.navigate(['./map-matchcodes'], {\r\n      relativeTo: this.route.parent\r\n    });\r\n  }\r\n\r\n  onSave(event: any) {\r\n    this.alertService.success('Reconciliation data saved successfully.', true);\r\n    this.router.navigate([`/project-profile/${this.groupId}/MainProfile`]);\r\n  }\r\n\r\n  onContinue(event: any) {\r\n    event.preventDefault();\r\n    this.isBusy = true;\r\n\r\n    this.reconcileDataService.validateReconciliation(false).subscribe(result => {\r\n      if (result.isReconciliationComplete && !result.isConsolidatedFileCreated) {\r\n        this.showValidationErrors = false;\r\n        this.inventoryApiService.createConsolidatedFile(this.groupId).subscribe(\r\n          consolidationResult => {\r\n            this.alertService.success('Consolidated file successfully created.', true);\r\n            this.router.navigate([`/project-profile/${this.groupId}/MainProfile`]);\r\n          },\r\n          error => {\r\n            this.alertService.error(error.error ? error.error : 'An unknown error occurred creating consolidated file');\r\n          },\r\n          () => {\r\n            this.isBusy = false;\r\n          }\r\n        );\r\n      } else {\r\n        this.showValidationErrors = true;\r\n        this.reconciliationValidationComponent.resolveErrorsToCommit = true;\r\n        this.reconciliationValidationComponent.open();\r\n        this.isBusy = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  public getColumnTitle(column: GridColumnHeader): string {\r\n    if (!column.isCustom) {\r\n      return this.translateManager.instant(this.i18n.asset + column.displayName);\r\n    }\r\n\r\n    return column.displayName;\r\n  }\r\n\r\n  upperCasePropertyName(fieldName: string) {\r\n    return this.helperService.upperCasePropertyName(fieldName);\r\n  }\r\n}\r\n","import { ConsolidationService } from '../services/consolidation.service';\r\nimport { ComponentCanDeactivate } from '../../_core/guards/component-can-deactivate';\r\nimport { CanDeactivateService } from '../../_core/guards/can-deactivate.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'map-matchcodes',\r\n  templateUrl: './map-matchcodes.component.html'\r\n})\r\nexport class MapMatchCodesComponent extends ComponentCanDeactivate implements OnDestroy, OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  subscription: Subscription;\r\n  public isBusy = false;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private consolidationService: ConsolidationService,\r\n    private canDeactivateService: CanDeactivateService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    const groupId = this.route.parent.parent.snapshot.paramMap.get('groupId');\r\n    this.consolidationService.initialize(groupId);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  onBack(event: any) {\r\n    this.router.navigate(['./define-layout'], {\r\n      relativeTo: this.route.parent\r\n    });\r\n  }\r\n\r\n  canDeactivate(): boolean {\r\n    return this.canDeactivateService.canDeactivateComponent(this.consolidationService.mapMatchCodesDirty);\r\n  }\r\n\r\n  onContinue(event: any) {\r\n    event.preventDefault();\r\n    this.isBusy = true;\r\n    this.subscription = this.consolidationService.saveColumnMappingAssignments().subscribe(results => {\r\n      this.consolidationService.mapMatchCodesDirty = false;\r\n      this.router.navigate(['./finalize-data'], { relativeTo: this.route.parent });\r\n      this.isBusy = false;\r\n    });\r\n  }\r\n}\r\n","import { MassMatchService } from '../../services/mass-match/mass-match.service';\r\nimport { HelperService } from '../../../_core/services/helper.service';\r\nimport { Component, OnInit, ComponentRef } from '@angular/core';\r\nimport { FieldMetaDataDto } from '../../../_api/_configuration/dtos/field-metadata.dto';\r\nimport { FieldMatchDto } from '../../../_api/dtos/inventory/field-match.dto';\r\nimport { DataTargetName } from '../../../_enums/data-target-name';\r\nimport { FieldMatchTermDto } from '../../../_api/dtos/inventory/field-match-term.dto';\r\n\r\n@Component({\r\n  selector: 'field-matches',\r\n  templateUrl: './field-matches.component.html'\r\n})\r\nexport class FieldMatchesComponent implements OnInit {\r\n  // Setting unique form field names\r\n  formFieldNames = {\r\n    leftTerm: 'leftTerm' + this.helperService.generateGuid(),\r\n    rightTerm: 'rightTerm' + this.helperService.generateGuid()\r\n  };\r\n\r\n  inventoryMetadata: Array<Array<FieldMetaDataDto>> = Array<Array<FieldMetaDataDto>>();\r\n\r\n  ref: ComponentRef<FieldMatchesComponent>;\r\n\r\n  fieldMatch: FieldMatchDto;\r\n  dataTargetNames = DataTargetName;\r\n\r\n  constructor(private massMatchService: MassMatchService, private helperService: HelperService) {}\r\n\r\n  ngOnInit() {\r\n    this.massMatchService.inventoryMetadata$.subscribe(inventoryMetadata => {\r\n      if (inventoryMetadata) {\r\n        this.inventoryMetadata = inventoryMetadata;\r\n      }\r\n    });\r\n\r\n    if (!this.fieldMatch) {\r\n      this.fieldMatch = <FieldMatchDto>{\r\n        leftTerm: <FieldMatchTermDto>{},\r\n        rightTerm: <FieldMatchTermDto>{},\r\n        operation: 'eq',\r\n        isNullOk: false\r\n      };\r\n      this.fieldMatch.id = this.helperService.generateGuid();\r\n      this.fieldMatch.leftTerm.dataTarget = DataTargetName.client;\r\n      this.fieldMatch.rightTerm.dataTarget = DataTargetName.inventory;\r\n    }\r\n  }\r\n\r\n  remove() {\r\n    this.massMatchService.removeFieldMatch(this.fieldMatch);\r\n\r\n    this.ref.destroy();\r\n  }\r\n\r\n  fieldMatchChange() {\r\n    this.massMatchService.addOrUpdateFieldMatch(this.fieldMatch);\r\n  }\r\n}\r\n","import { HelperService } from '../../../_core/services/helper.service';\r\nimport { MassMatchService } from '../../services/mass-match/mass-match.service';\r\nimport { FilterOperationsService } from '../../../_core/services/filter-operations.service';\r\nimport { Component, OnInit, ComponentRef, EventEmitter, Output } from '@angular/core';\r\nimport { FieldMetaDataDto } from '../../../_api/_configuration/dtos/field-metadata.dto';\r\nimport { FilterDto } from '../../../_api/dtos/inventory/filter.dto';\r\nimport { FieldType } from '../../../_enums/field-type';\r\nimport { DataTargetName } from '../../../_enums/data-target-name';\r\nimport { FilterOperation } from '../../../_models/filter-operation.model';\r\nimport { FilterTermDto } from '../../../_api/dtos/inventory/filter-term.dto';\r\n\r\n@Component({\r\n  selector: 'filter-criteria-builder',\r\n  templateUrl: './filter-criteria-builder.component.html'\r\n})\r\nexport class FilterCriteriaBuilderComponent implements OnInit {\r\n  ref: ComponentRef<FilterCriteriaBuilderComponent>;\r\n  inventoryMetadata: Array<Array<FieldMetaDataDto>> = new Array<Array<FieldMetaDataDto>>();\r\n  @Output() criteriaChangedEvent = new EventEmitter<FilterDto>();\r\n\r\n  filter: FilterDto;\r\n  selectedField: FieldMetaDataDto;\r\n\r\n  sourceMetadata: Array<FieldMetaDataDto> = new Array<FieldMetaDataDto>();\r\n\r\n  fieldTypes = FieldType;\r\n  dataTargetNames = DataTargetName;\r\n\r\n  selectedSource: number = DataTargetName.client;\r\n\r\n  operationsForSelectedTerm: Array<FilterOperation> = new Array<FilterOperation>();\r\n\r\n  // Setting unique form field names\r\n  formFieldNames = {\r\n    sourceClientFile: 'selectedSourceClientFile' + this.helperService.generateGuid(),\r\n    sourceInventoryFile: 'selectedSourceInventoryFile' + this.helperService.generateGuid(),\r\n    selectedField: 'selectedField' + this.helperService.generateGuid(),\r\n    selectedFilterType: 'selectedFilterType' + this.helperService.generateGuid(),\r\n    value: 'value' + this.helperService.generateGuid()\r\n  };\r\n\r\n  constructor(\r\n    private helperService: HelperService,\r\n    private massMatchService: MassMatchService,\r\n    private filterOperationService: FilterOperationsService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.massMatchService.inventoryMetadata$.subscribe(inventoryMetadata => {\r\n      if (inventoryMetadata) {\r\n        this.inventoryMetadata = inventoryMetadata;\r\n\r\n        if (!this.filter) {\r\n          this.filter = <FilterDto>{ term: <FilterTermDto>{} };\r\n          this.filter.id = this.helperService.generateGuid();\r\n          this.filter.term.dataTarget = DataTargetName.client;\r\n          this.sourceMetadata = this.inventoryMetadata[DataTargetName.client];\r\n        } else {\r\n          this.sourceMetadata = this.inventoryMetadata[this.filter.term.dataTarget];\r\n          this.selectedField = this.sourceMetadata.find(c => c.name === this.filter.term.field);\r\n          if(this.selectedField){\r\n            this.operationsForSelectedTerm = this.filterOperationService.getOperationsForFieldType(this.selectedField.fieldType);\r\n          }\r\n\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  setSourceFile(dataTarget: number, event: any) {\r\n    event.preventDefault();\r\n    this.filter.term.dataTarget = dataTarget;\r\n\r\n    this.sourceMetadata = this.inventoryMetadata[dataTarget];\r\n  }\r\n\r\n  initOperationAndValue() {\r\n    this.filter.term.value = null;\r\n    this.filter.operation = null;\r\n\r\n    this.filter.term.field = this.selectedField.name;\r\n\r\n    this.operationsForSelectedTerm = this.filterOperationService.getOperationsForFieldType(this.selectedField.fieldType);\r\n  }\r\n\r\n  criteriaChange() {\r\n    this.massMatchService.addOrUpdateFilter(this.filter);\r\n  }\r\n\r\n  remove() {\r\n    this.ref.destroy();\r\n    this.massMatchService.removeFilter(this.filter);\r\n  }\r\n}\r\n","import { Component, OnInit, AfterViewInit, OnDestroy, ElementRef, ViewChild, Input  } from '@angular/core';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { SortDescriptor, State } from '@progress/kendo-data-query';\r\nimport {  orderBy, process } from '@progress/kendo-data-query/dist/es/main';\r\nimport { SearchResponseDto, SearchRecordDto } from '../../../_api/dtos/inventory/search-response.dto';\r\nimport { ReconcilationMassMatchDto } from '../../../_api/dtos/reconcilation-mass-match.dto';\r\nimport { DataTargetName } from '../../../_enums/data-target-name';\r\nimport { GridComponent, SelectionEvent, RowClassArgs, GridDataResult, DataStateChangeEvent } from '@progress/kendo-angular-grid';\r\nimport { DataType } from '../../../_models/data-type';\r\nimport { GridColumnHeader } from '../../../_models/grid-column-header.model';\r\nimport { MassMatchService } from '../../services/mass-match/mass-match.service';\r\nimport { HelperService } from '../../../_core/services/helper.service';\r\nimport { AlertService } from '../../../_core/services/alert.service';\r\nimport { ReconcileDataService } from '../../services/reconcile-data.service';\r\nimport { AssetFileInfoService } from '../../../_core/services/asset-file-info-service';\r\nimport { ReconciliationInventoryService } from '../../services/inventory.service';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { MassMatchGridState } from '../../../_models/mass-match-grid-state';\r\nimport { ManyToOneMatchDto } from '../../../_api/dtos/reconciliation/many-to-one-match.dto';\r\nimport { OneToManyMatchDto } from '../../../_api/dtos/reconciliation/one-to-many-match.dto';\r\nimport { MatchRecordsDto } from '../../../_api/dtos/reconciliation/match-records.dto';\r\nimport { ReconcileMatchService } from '../../services/reconcile-match.service';\r\n\r\n@Component({\r\n  selector: 'many-to-one-match',\r\n  templateUrl: './many-to-one-match.component.html',\r\n\r\n})\r\nexport class ManyToOneMatchComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  searchResponse: SearchResponseDto;\r\n  \r\n  @Input() selectedInventoryHeaders = new Array<GridColumnHeader>();\r\n  @Input() selectedClientHeaders = new Array<GridColumnHeader>();\r\n  @ViewChild(GridComponent, { static: false })\r\n  public grid: GridComponent;\r\n\r\n  public state: State = {\r\n    skip: 0,\r\n    take: 5,\r\n\r\n    sort: <SortDescriptor[]>[\r\n      {\r\n        dir: 'asc',\r\n        field: 'opportunityName'\r\n      }\r\n    ]\r\n  };\r\n  private destroyed$ = new Subject<any>();\r\n  groupId: string;\r\n  allInventoryHeaders = new Array<GridColumnHeader>();\r\n  allClientHeaders = new Array<GridColumnHeader>();\r\n  matchesCount = 0;\r\n  selectedInventoryHeaderNames = new Array<string>() ;\r\n  selectedClientHeaderNames = new Array<string>();\r\n  manyMatchRecords= new Array<MatchRecordsDto>();\r\n  matchesInProgress = new Array<ReconcilationMassMatchDto>();\r\n  ManyToOneRecords = new Array<ManyToOneMatchDto>();\r\n  OneToManyRecords = new Array<OneToManyMatchDto>();\r\n  public matchedRowIndex= -1;\r\n  selectedmatchCode: string;\r\n  public loading: boolean;\r\n  constructor(\r\n    private massMatchService: MassMatchService,\r\n    private helperService: HelperService,\r\n    private reconcileDataService: ReconcileDataService,\r\n    private reconcileMatchService: ReconcileMatchService,\r\n    private router: Router,\r\n    private alertService: AlertService,\r\n    private element: ElementRef,\r\n    private assetFileInfoService: AssetFileInfoService,\r\n    private inventoryService: ReconciliationInventoryService\r\n  ) {\r\n   // this.loadContracts();\r\n  }\r\n  ngOnInit() {\r\n    this.groupId = this.reconcileDataService.groupId;\r\n  const s = this;\r\n    this.massMatchService.searchResponse$.subscribe(searchResponse => {\r\n      if (searchResponse) {\r\n        this.searchResponse = searchResponse;\r\n\r\n          if (s.searchResponse.records && s.searchResponse.matches) {\r\n            s.matchesInProgress = Array.from(s.searchResponse.matches);\r\n            s.matchesCount = s.matchesInProgress.length;\r\n\r\n            this.updateManyMatchGridData(s.searchResponse);\r\n           \r\n          }\r\n      \r\n      } //else {\r\n      //   this.router.navigate([`project-profile/${this.groupId}/Reconciliation/mass-match`]);\r\n      // }\r\n    });\r\n  }\r\n\r\n  public dataStateChange(state: DataStateChangeEvent): void {\r\n    this.state = state;\r\n    this.loadGridData();\r\n  }\r\n  ngOnDestroy() {\r\n      this.destroyed$.next();\r\n    }\r\n    private loadGridData() {\r\n      this.OneToManyRecords = orderBy(this.OneToManyRecords, this.state.sort);\r\n      this.OneToManyRecords = process(this.OneToManyRecords, this.state);\r\n    }\r\n    updateManyMatchGridData(searchResponse: SearchResponseDto) {\r\n    this.manyMatchRecords= searchResponse.matches_ManyToOne.map( m=> \r\n        {\r\n        //  let ids=m.secondaryAssetRecordId;\r\n        const record = searchResponse.records.filter(function(x){ return x.id === m.secondaryAssetRecordId; });\r\n        const ids = m.primaryAssetRecordIds;\r\n          return { inventoryRecords: this.assetFileInfoService.mapEnums(null, null, record),\r\n                   clientFileRecords: this.assetFileInfoService.mapEnums(null, null,\r\n                    searchResponse.records.filter(function(x2) { return  ids.find(f => f === x2.id); })\r\n                   ),\r\n                   detailRecordCount: ids.length\r\n                  };\r\n        });\r\n        this.matchesCount = this.manyMatchRecords.reduce((total, cnt) => total + cnt.detailRecordCount , 0);\r\n\r\n        this.selectedmatchCode = this.massMatchService.selectedMatchCode;\r\n    }\r\n  \r\n    onMatch(dataItem: MatchRecordsDto, rowIndex: number) {\r\n\r\n    const matchedClient = this.searchResponse.matches_ManyToOne.filter(function(x)\r\n      { return x.secondaryAssetRecordId === dataItem.inventoryRecords.map( m => m.id)[0]; })\r\n      .map(record =>  record);\r\n      \r\n      this.matchedRowIndex = this.manyMatchRecords.indexOf(dataItem);\r\n      const matchedClientIndex = matchedClient!= null ? this.searchResponse.matches_ManyToOne.indexOf(matchedClient[0]) : -1;\r\n      this.saveOneToOneMatches(\r\n         matchedClient.map(x => x.primaryAssetRecordIds[rowIndex]),\r\n         matchedClient.map(x => x.secondaryAssetRecordId),\r\n         matchedClient.map(x => x.matchCodeId)[0],\r\n         dataItem.detailRecordCount,\r\n         matchedClientIndex\r\n      );\r\n    }\r\n     private saveOneToOneMatches(clientAssetIds: string[], InventoryAssetIds: string[], matchCodeId: string, potentialCount:number ,matchedClientIndex: number) {\r\n      this.reconcileMatchService.createMassOneToOneMatch(clientAssetIds, InventoryAssetIds, matchCodeId).subscribe(dto => {\r\n        if (dto == null) {\r\n          this.alertService.error('Unexpected service error.');\r\n        }\r\n        if (dto.result == null) {\r\n          this.alertService.error('Unexpected error saving match.');\r\n        }\r\n        if (dto.invalidArguments.length > 0) {\r\n          this.alertService.error('The selected items cannot be saved as a mass one to one match.');\r\n        }\r\n        if(dto.result != null && dto.invalidArguments.length == 0){\r\n          this.alertService.success('Match saved successfully!');\r\n          this.RefreshMatchedDataGrid(potentialCount,matchedClientIndex);\r\n          }\r\n      });\r\n    }\r\n    RefreshMatchedDataGrid(potentialCount: number, matchedClientIndex: number){\r\n      if (this.manyMatchRecords.length > 0 && this.matchedRowIndex < this.manyMatchRecords.length)\r\n        { \r\n          this.manyMatchRecords.splice(this.matchedRowIndex, 1);\r\n          this.searchResponse.matches_ManyToOne.splice(matchedClientIndex, 1);\r\n          this.matchesCount = this.matchesCount - potentialCount;\r\n          this.grid.collapseRow(this.matchedRowIndex);\r\n          this.matchedRowIndex = -1;\r\n        }\r\n      }\r\n}\r\n","import { ReconcileDataService } from '../../services/reconcile-data.service';\r\nimport { FilterCriteriaBuilderComponent } from './filter-criteria-builder.component';\r\nimport { FieldMatchesComponent } from './field-matches.component';\r\nimport { MassMatchService } from '../../services/mass-match/mass-match.service';\r\nimport { AlertService } from '../../../_core/services/alert.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { Component, OnInit, ViewChild, ViewContainerRef, ComponentFactoryResolver } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { InventorySearchRepository } from '../../../_api/services/inventory/inventory-search-repository.service';\r\nimport { MatchCodesService } from '../../../_api/services/reconciliation/match-codes.service';\r\nimport { DataTargetName } from '../../../_enums/data-target-name';\r\nimport { GroupMatchCode } from '../../../_models/group-match-code.model';\r\nimport { SearchRequest } from '../../../_models/search-request.model';\r\nimport { FieldMetaDataDto } from '../../../_api/_configuration/dtos/field-metadata.dto';\r\nimport { FieldMatchDto } from '../../../_api/dtos/inventory/field-match.dto';\r\nimport { FilterDto } from '../../../_api/dtos/inventory/filter.dto';\r\n\r\n@Component({\r\n  selector: 'mass-match',\r\n  templateUrl: './mass-match.component.html'\r\n})\r\nexport class MassMatchComponent implements OnInit {\r\n  @ViewChild('filterCriteria', { read: ViewContainerRef, static: true })\r\n  filterCriteriaContainer: ViewContainerRef;\r\n\r\n  @ViewChild('fieldMatch', { read: ViewContainerRef, static: true })\r\n  fieldMatchContainer: ViewContainerRef;\r\n\r\n  constructor(\r\n    private reconcileDataService: ReconcileDataService,\r\n    private router: Router,\r\n    private searchMetadataRepository: InventorySearchRepository,\r\n    private componentResolver: ComponentFactoryResolver,\r\n    private massMatchService: MassMatchService,\r\n    private searchRepositoryService: InventorySearchRepository,\r\n    private matchCodesService: MatchCodesService,\r\n    private alertService: AlertService\r\n  ) {}\r\n\r\n  dataTargetNames = DataTargetName;\r\n  matchCodes = new Array<GroupMatchCode>();\r\n  disabledMatchCodes = new Array<GroupMatchCode>();\r\n\r\n  selectedGroupId: string;\r\n  selectedMatchCodeId: string;\r\n  isLoading = false;\r\n  showInvalidFieldMatchesAlert = false;\r\n\r\n  private searchInProgress = <SearchRequest>{};\r\n\r\n  private hiddenFields = [\r\n    'id',\r\n    'assetFileId',\r\n    'sourceRecordId',\r\n    'groupId'\r\n  ];\r\n\r\n  ngOnInit() {\r\n\r\n    this.selectedGroupId = this.reconcileDataService.groupId;\r\n\r\n    if (this.selectedGroupId !== this.massMatchService.currentGroupId) {\r\n      this.massMatchService.clearSearch();\r\n      this.massMatchService.currentGroupId = this.selectedGroupId;\r\n    }\r\n\r\n    this.massMatchService.initSearchResponse(this.selectedGroupId);\r\n\r\n    // Can only Mass Match both client file and D&P file has data.\r\n    if (!this.massMatchService.canMassMatch) {\r\n      // Sending user back to reconcile data step\r\n      this.router.navigate([`project-profile/${this.selectedGroupId}/Reconciliation/reconcile-data`]);\r\n    }\r\n\r\n    this.searchMetadataRepository.search(DataTargetName.client, this.selectedGroupId,true).subscribe(clientDataResult => {\r\n      this.searchMetadataRepository.search(DataTargetName.inventory, this.selectedGroupId,true).subscribe(inventoryDataResult => {\r\n        const inventoryMetadata = new Array<Array<FieldMetaDataDto>>();\r\n\r\n        // define list of hidden fields, filter inventoryMetadata\r\n        const filterClientResult = clientDataResult.filter(x => !(this.hiddenFields.indexOf(x.name) > -1));\r\n\r\n        inventoryMetadata[DataTargetName.client] = filterClientResult;\r\n        inventoryMetadata[DataTargetName.inventory] = inventoryDataResult;\r\n\r\n        this.massMatchService.updateInventoryMetadata(inventoryMetadata);\r\n      });\r\n    });\r\n\r\n    // Init existing Field Matches and Filter Criteria\r\n    this.massMatchService.searchRequest$.pipe(first())\r\n    .subscribe(searchInProgress => {\r\n\r\n      this.searchInProgress = searchInProgress;\r\n\r\n      // Clear search in progress if new group is selected\r\n      if (this.selectedGroupId !== searchInProgress.groupId) {\r\n        this.massMatchService.clearSearch();\r\n      }\r\n\r\n      // Load one field match if no filters set\r\n      if (searchInProgress.fieldMatchTerms.length === 0) {\r\n        this.addFieldMatch();\r\n      }\r\n\r\n      // Load one filter if no filters set\r\n      if (searchInProgress.filterTerms.length === 0) {\r\n        this.addFilter();\r\n      }\r\n\r\n      // add existing field matches in progress\r\n      searchInProgress.fieldMatchTerms.forEach(fieldMatch => {\r\n        this.addFieldMatch(fieldMatch);\r\n      });\r\n\r\n      // add existing filters in progress\r\n      searchInProgress.filterTerms.forEach(filter => {\r\n        this.addFilter(filter);\r\n      });\r\n\r\n      this.selectedMatchCodeId = searchInProgress.matchCodeId;\r\n    });\r\n\r\n    this.matchCodesService.getGroupMatchCodes(this.selectedGroupId).subscribe(result => {\r\n      this.matchCodes = new Array<GroupMatchCode>();\r\n      this.disabledMatchCodes = new Array<GroupMatchCode>();\r\n      result.forEach(code => {\r\n        if (code.groupMatchCodeIsEnabled && code.matchCodeIsEnabled) {\r\n          this.matchCodes.push(code);\r\n        }\r\n        if (code.groupMatchCodeIsEnabled && !code.matchCodeIsEnabled) {\r\n          this.disabledMatchCodes.push(code);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  addFieldMatch(fieldMatch?: FieldMatchDto) {\r\n    const comp = this.componentResolver.resolveComponentFactory(FieldMatchesComponent);\r\n    const fieldMatchComponent = this.fieldMatchContainer.createComponent(comp);\r\n    // Setting reference to close/remove\r\n    fieldMatchComponent.instance.ref = fieldMatchComponent;\r\n    if (fieldMatch) {\r\n      fieldMatchComponent.instance.fieldMatch = fieldMatch;\r\n    }\r\n  }\r\n\r\n  addFilter(filter?: FilterDto) {\r\n    const comp = this.componentResolver.resolveComponentFactory(FilterCriteriaBuilderComponent);\r\n    const filterCriteria = this.filterCriteriaContainer.createComponent(comp);\r\n    // Setting reference to close/remove\r\n    filterCriteria.instance.ref = filterCriteria;\r\n    if (filter) {\r\n      filterCriteria.instance.filter = filter;\r\n    }\r\n  }\r\n\r\n  cancel(event: any) {\r\n    event.preventDefault();\r\n    this.massMatchService.clearSearch();\r\n    this.router.navigate([`project-profile/${this.selectedGroupId}/Reconciliation/reconcile-data`]);\r\n  }\r\n\r\n  onSubmit(form: any) {\r\n    if (form.valid) {\r\n      const validFieldMatches = this.searchInProgress.fieldMatchTerms.filter(function(x) {\r\n        if (x.leftTerm.field && x.rightTerm.field) {\r\n          return x;\r\n        }\r\n      });\r\n\r\n      // Field Matches must be set on both the Client File and Actual Inventory\r\n      if (validFieldMatches.length === 0 || validFieldMatches.length < this.searchInProgress.fieldMatchTerms.length) {\r\n        this.showInvalidFieldMatchesAlert = true;\r\n      } else {\r\n        this.showInvalidFieldMatchesAlert = false;\r\n\r\n        this.isLoading = true;\r\n\r\n        this.massMatchService.searchAssets(this.selectedGroupId, this.selectedMatchCodeId).subscribe(result => {\r\n          if (result) {\r\n            this.isLoading = false;\r\n           const matchCode= this.matchCodes.filter(f=>f.matchCodeId===this.selectedMatchCodeId).map(m=>m.matchCodeName);\r\n           this.massMatchService.selectedMatchCode = matchCode ? matchCode[0] : null;\r\n            this.massMatchService.updateSearchResponse(result);\r\n\r\n            this.router.navigate([`/project-profile/${this.selectedGroupId}/Reconciliation/view-matches`]);\r\n          }\r\n        },\r\n        error => {\r\n          if (error['error'] && error['error'].includes('many to many')) {\r\n            this.alertService\r\n            .error('manytomany');\r\n          } else {\r\n            this.alertService.error('An error has occurred');\r\n          }\r\n          this.isLoading = false;\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, AfterViewInit, OnDestroy, ElementRef, ViewChild, Input  } from '@angular/core';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { SortDescriptor, State } from '@progress/kendo-data-query';\r\nimport {  orderBy, process } from '@progress/kendo-data-query/dist/es/main';\r\nimport { SearchResponseDto, SearchRecordDto } from '../../../_api/dtos/inventory/search-response.dto';\r\nimport { ReconcilationMassMatchDto } from '../../../_api/dtos/reconcilation-mass-match.dto';\r\nimport { DataTargetName } from '../../../_enums/data-target-name';\r\nimport { GridComponent, SelectionEvent, RowClassArgs, GridDataResult, DataStateChangeEvent } from '@progress/kendo-angular-grid';\r\nimport { DataType } from '../../../_models/data-type';\r\nimport { GridColumnHeader } from '../../../_models/grid-column-header.model';\r\nimport { MassMatchService } from '../../services/mass-match/mass-match.service';\r\nimport { HelperService } from '../../../_core/services/helper.service';\r\nimport { AlertService } from '../../../_core/services/alert.service';\r\nimport { ReconcileDataService } from '../../services/reconcile-data.service';\r\nimport { AssetFileInfoService } from '../../../_core/services/asset-file-info-service';\r\nimport { ReconciliationInventoryService } from '../../services/inventory.service';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { MassMatchGridState } from '../../../_models/mass-match-grid-state';\r\n//import { ManyMatchDetailComponent } from './many-match-detail.component';\r\nimport { ManyToOneMatchDto } from '../../../_api/dtos/reconciliation/many-to-one-match.dto';\r\nimport { OneToManyMatchDto } from '../../../_api/dtos/reconciliation/one-to-many-match.dto';\r\nimport { MatchRecordsDto } from '../../../_api/dtos/reconciliation/match-records.dto';\r\nimport { ReconcileMatchService } from '../../services/reconcile-match.service';\r\nimport { MatchCodesService } from '../../../_api/services/reconciliation/match-codes.service';\r\n//import { ManyMatchRecordDto } from '../../../_api/dtos/reconciliation/many-match-record.dto';\r\n//import { ManyMatchRecordDto } from '../../../_api/dtos/reconciliation/many-match-record.dto';\r\n\r\n\r\n@Component({\r\n  selector: 'one-to-many-match',\r\n  templateUrl: './one-to-many-match.component.html',\r\n})\r\nexport class OneToManyMatchComponent implements OnInit, AfterViewInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  searchResponse: SearchResponseDto;\r\n  clientFileMatches = new Array<ReconcilationMassMatchDto>();\r\n  dataTargetNames = DataTargetName;\r\n  public clientGridViewData: GridDataResult;\r\n  public inventoryGridViewData: GridDataResult;\r\n  dataType = DataType;\r\n\r\n  matchesInProgress = new Array<ReconcilationMassMatchDto>();\r\n  inventoryRecords = new Array<SearchRecordDto>();\r\n\r\n  allInventoryHeaders = new Array<GridColumnHeader>();\r\n  allClientHeaders = new Array<GridColumnHeader>();\r\n\r\n  selectedInventoryHeaderNames = new Array<string>() ;\r\n  selectedClientHeaderNames = new Array<string>();\r\n\r\n  selectedClientFileRows = new Array<string>();\r\n  selectedInventoryFileRows = new Array<string>();\r\n\r\n  matchesCount = 0;\r\n  clientFileRecords = new Array<SearchRecordDto>();\r\n\r\n  saveIsLoading = false;\r\n  saveAndNewIsLoading = false;\r\n\r\n  groupId: string;\r\n\r\n manyMatchRecords= new Array<MatchRecordsDto>();\r\n\r\n  public state: State = {\r\n    skip: 0,\r\n    take: 15,\r\n\r\n    sort: <SortDescriptor[]>[\r\n      {\r\n        dir: 'asc',\r\n        field: 'description'\r\n      }\r\n    ]\r\n  };\r\n  public stateInventory: State /*StateForInventory*/ = {\r\n    skip: 0,\r\n    take: 15,\r\n\r\n    sort: <SortDescriptor[]>[\r\n      {\r\n        dir: 'asc',\r\n        field: 'description'\r\n      }\r\n    ]\r\n  };\r\n  public gridState: MassMatchGridState = {\r\n    skip: 0,\r\n    take: 250\r\n  };\r\n  public sort: Array<SortDescriptor> = [];\r\n  public pageSize = 10;\r\n  public skip = 0;\r\n  \r\n  private destroyed$ = new Subject<any>();\r\n\r\n  @Input() selectedInventoryHeaders = new Array<GridColumnHeader>();\r\n  @Input() selectedClientHeaders = new Array<GridColumnHeader>();\r\n  //@ViewChild('manyMatchDetail', {static: false})\r\n  //private manyMatchDetail: ManyMatchDetailComponent;\r\n  public loading: boolean;\r\n  @ViewChild(GridComponent, { static: false })\r\n   public grid: GridComponent;\r\n\r\n   ManyToOneRecords = new Array<ManyToOneMatchDto>();\r\n   OneToManyRecords = new Array<OneToManyMatchDto>();\r\n   public expandedDetailKeys: any[] = [];\r\n   matchCodeId: string;\r\n   public matchedRowIndex= -1;\r\n\r\n  selectedmatchCode: string;\r\n  constructor(\r\n    private massMatchService: MassMatchService,\r\n    private helperService: HelperService,\r\n    private reconcileDataService: ReconcileDataService,\r\n    private reconcileMatchService: ReconcileMatchService,\r\n    private router: Router,\r\n    private alertService: AlertService,\r\n    private element: ElementRef,\r\n    private assetFileInfoService: AssetFileInfoService,\r\n    private inventoryService: ReconciliationInventoryService,\r\n    private matchCodesService: MatchCodesService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.groupId = this.reconcileDataService.groupId;\r\n  const s = this;\r\n  \r\n    this.massMatchService.searchResponse$.subscribe(searchResponse => {\r\n      if (searchResponse) {\r\n        this.searchResponse = searchResponse;\r\n       \r\n          if (s.searchResponse.records && s.searchResponse.matches) {\r\n            s.matchesInProgress = Array.from(s.searchResponse.matches);\r\n            s.matchesCount = s.matchesInProgress.length;\r\n\r\n            this.updateManyMatchGridData(s.searchResponse);\r\n          \r\n          }\r\n       // });\r\n         // error => {},\r\n         // () => {};\r\n      } else {\r\n        this.router.navigate([`project-profile/${this.groupId}/Reconciliation/mass-match`]);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // this.syncScrolling(\r\n    //   this.clientFileMatchesGrid.nativeElement.getElementsByClassName('k-grid-content')[0],\r\n    //   this.inventoryMatchesGrid.nativeElement.getElementsByClassName('k-grid-content')[0]\r\n    // );\r\n  }\r\n\r\npublic dataStateChange(state: DataStateChangeEvent): void {\r\n  this.state = state;\r\n  this.loadGridData();\r\n}\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n  }\r\n  private loadGridData() {\r\n  \r\n    this.manyMatchRecords = orderBy(this.manyMatchRecords.map(m => m.inventoryRecords), this.state.sort);\r\n   // this.manyMatchRecords.sort()\r\n    //this.manyMatchRecords = process(this.manyMatchRecords, this.state);\r\n  }\r\n  updateManyMatchGridData(searchResponse: SearchResponseDto) {\r\n  this.manyMatchRecords= searchResponse.matches_OneToMany.map( m=> \r\n      {\r\n      const c_record = searchResponse.records.filter(function(x){ return x.id === m.primaryAssetRecordId; });\r\n      const ids = m.secondaryAssetRecordIds;\r\n        return { clientFileRecords: this.assetFileInfoService.mapEnums(null, null, \r\n          c_record\r\n          ),\r\n                 inventoryRecords: this.assetFileInfoService.mapEnums(null, null,\r\n                  searchResponse.records.filter(function(x2) { return  ids.find(f => f === x2.id); })\r\n                 ),\r\n                 detailRecordCount: ids.length\r\n                };\r\n      });\r\n      this.matchesCount = this.manyMatchRecords.reduce((total, cnt) => total + cnt.detailRecordCount , 0);\r\n\r\n     this.selectedmatchCode = this.massMatchService.selectedMatchCode;\r\n  }\r\n  public showOnlyDetails(dataItem: any, primarId: string, index: number): boolean {\r\n    return dataItem.inventoryRecords !== null;\r\n }\r\n public expandDetailsBy = (dataItem: any): any  => {\r\n  return dataItem.clientFileRecords.Id;\r\n}\r\ngetMatchCode(id:string)\r\n  {\r\n     this.matchCodesService.getMatchCodeById(id).subscribe(res=>{\r\n      this.selectedmatchCode = res.name;\r\n     });\r\n  }\r\n  onMatch(dataItem: MatchRecordsDto, rowIndex: number) {\r\n\r\n    //const invId= dataItem.inventoryRecords[rowIndex].id;\r\n\r\n    const matchedClient = this.searchResponse.matches_OneToMany.filter(function(x)\r\n    { return x.primaryAssetRecordId === dataItem.clientFileRecords.map( m => m.id)[0]; })\r\n    .map(record =>  record);\r\n    const matchedClientIndex = matchedClient!= null ? this.searchResponse.matches_OneToMany.indexOf(matchedClient[0]) : -1;\r\n    \r\n    this.matchedRowIndex = this.manyMatchRecords.indexOf(dataItem);\r\n    this.saveOneToOneMatches(\r\n       matchedClient.map(x => x.primaryAssetRecordId),\r\n       matchedClient.map(x => x.secondaryAssetRecordIds[rowIndex]), //secondaryAssetRecordId,\r\n       matchedClient.map(x => x.matchCodeId)[0],\r\n       dataItem.detailRecordCount,\r\n       matchedClientIndex\r\n    );\r\n  }\r\n   private saveOneToOneMatches(\r\n     clientAssetIds: string[], InventoryAssetIds: string[], matchCodeId: string, potentialCount:number, matchedClientIndex: number) {\r\n    this.reconcileMatchService.createMassOneToOneMatch(clientAssetIds, InventoryAssetIds, matchCodeId).subscribe(dto => {\r\n      if (dto == null) {\r\n        this.alertService.error('Unexpected service error.');\r\n      }\r\n      if (dto.result == null) {\r\n        this.alertService.error('Unexpected error saving match.');\r\n      }\r\n      if (dto.invalidArguments.length > 0) {\r\n        this.alertService.error('The selected items cannot be saved as a mass one to one match.');\r\n      }\r\n\r\n      if(dto.result != null && dto.invalidArguments.length == 0){\r\n      \r\n      this.alertService.success('Match saved successfully!');\r\n      this.RefreshMatchedDataGrid(potentialCount, matchedClientIndex);\r\n      }\r\n    });\r\n  }\r\n  \r\n  RefreshMatchedDataGrid(potentialCount: number, matchedClientIndex:number){\r\n    if(this.manyMatchRecords.length > 0 && this.matchedRowIndex < this.manyMatchRecords.length)\r\n    { \r\n      this.manyMatchRecords.splice(this.matchedRowIndex, 1);\r\n      this.searchResponse.matches_OneToMany.splice(matchedClientIndex, 1);\r\n      this.matchesCount = this.matchesCount - potentialCount;\r\n      this.grid.collapseRow(this.matchedRowIndex);\r\n      this.matchedRowIndex = -1;\r\n    }\r\n  }\r\n    \r\n  onSubmit(form: any) {\r\n    if (form.valid) {\r\n    this.saveIsLoading = true;\r\n    this.saveIsLoading = true;\r\n    \r\n    }\r\n  }\r\n  public sortChangeClient(sort: SortDescriptor[]): void {\r\n    //this.sort = sort;\r\n    if (sort && sort.length > 0 && sort[0].field !== 'Actions') {\r\n      this.gridState.sortTerm = sort[0].dir ? {\r\n        field: sort[0].field,\r\n        sortDirection: sort[0].dir === 'asc' ? 0 : 1,\r\n        termOrder: 0\r\n      } : undefined;\r\n\r\n      this.gridState.skip = 0;\r\n      // this.clientFileRecords = [];\r\n      // this.inventoryRecords = [];\r\n\r\n      this.refreshGridData();\r\n      //this.loadGridData();\r\n      this.state.sort = sort;\r\n      this.stateInventory.sort = sort;\r\n    }\r\n  }\r\n  public  refreshGridData() {\r\n    if (this.gridState.skip >= this.matchesCount) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.massMatchService.searchAssets(this.groupId, this.matchesInProgress[0].matchCodeId, this.gridState).subscribe((searchResponse) => {\r\n      this.loading = false;\r\n      if (searchResponse && searchResponse.records && searchResponse.matches) {\r\n        this.updateManyMatchGridData(searchResponse);\r\n        this.gridState.skip += this.gridState.take;\r\n      }\r\n    }, (error) => {\r\n      if (error['error'] && error['error'].includes('many to many')) {\r\n        this.alertService\r\n        .error('manytomany');\r\n      } else {\r\n        this.alertService.error('An error has occurred');\r\n      }\r\n      this.loading = false;\r\n    });\r\n  }\r\n}\r\n","import { MassMatchService } from '../../services/mass-match/mass-match.service';\r\nimport { HelperService } from '../../../_core/services/helper.service';\r\nimport { AlertService } from '../../../_core/services/alert.service';\r\nimport { GridComponent, SelectionEvent, RowClassArgs, GridDataResult } from '@progress/kendo-angular-grid';\r\nimport { AfterViewInit, Component, OnInit, OnDestroy, ElementRef, ViewChild } from '@angular/core';\r\nimport { ReconcileDataService } from '../../services/reconcile-data.service';\r\nimport { AssetFileInfoService } from '../../../_core/services/asset-file-info-service';\r\nimport { ReconciliationInventoryService } from '../../services/inventory.service';\r\nimport { TranslateCompiler } from '@ngx-translate/core';\r\nimport { TranslatedComponent } from '../../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../../_core/i18n/translation-base-keys';\r\nimport { FamisGridUpdateColumnSelectionEvent } from '../../../_models/shared/famis-grid-update-column-selection-event.model';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { SearchResponseDto, SearchRecordDto } from '../../../_api/dtos/inventory/search-response.dto';\r\nimport { ReconcilationMassMatchDto } from '../../../_api/dtos/reconcilation-mass-match.dto';\r\nimport { DataTargetName } from '../../../_enums/data-target-name';\r\nimport { DataType } from '../../../_models/data-type';\r\nimport { GridColumnHeader } from '../../../_models/grid-column-header.model';\r\nimport { Subject, forkJoin } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { SortDescriptor, orderBy, State, process } from '@progress/kendo-data-query/dist/es/main';\r\nimport { MassMatchGridState } from '../../../_models/mass-match-grid-state';\r\nimport { MatchCodesService } from '../../../_api/services/reconciliation/match-codes.service';\r\n@Component({\r\n  selector: 'view-matches',\r\n  templateUrl: './view-matches.component.html'\r\n})\r\nexport class ViewMatchesComponent implements OnInit, AfterViewInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  searchResponse: SearchResponseDto;\r\n  clientFileMatches = new Array<ReconcilationMassMatchDto>();\r\n  dataTargetNames = DataTargetName;\r\n  public clientGridViewData: GridDataResult;\r\n  public inventoryGridViewData: GridDataResult;\r\n  dataType = DataType;\r\n\r\n  matchesInProgress = new Array<ReconcilationMassMatchDto>();\r\n  inventoryRecords = new Array<SearchRecordDto>();\r\n\r\n  allInventoryHeaders = new Array<GridColumnHeader>();\r\n  allClientHeaders = new Array<GridColumnHeader>();\r\n\r\n  selectedInventoryHeaders = new Array<GridColumnHeader>();\r\n  selectedClientHeaders = new Array<GridColumnHeader>();\r\n\r\n  selectedInventoryHeaderNames = new Array<string>() ;\r\n  selectedClientHeaderNames = new Array<string>();\r\n\r\n  selectedClientFileRows = new Array<string>();\r\n  selectedInventoryFileRows = new Array<string>();\r\n\r\n  matchesCount = 0;\r\n  clientFileRecords = new Array<SearchRecordDto>();\r\n\r\n  saveIsLoading = false;\r\n  saveAndNewIsLoading = false;\r\n\r\n  groupId: string;\r\n\r\n  public state: State = {\r\n    skip: 0,\r\n    take: 15,\r\n\r\n    sort: <SortDescriptor[]>[\r\n      {\r\n        dir: 'asc',\r\n        field: 'description'\r\n      }\r\n    ]\r\n  };\r\n  public stateInventory: State /*StateForInventory*/ = {\r\n    skip: 0,\r\n    take: 15,\r\n\r\n    sort: <SortDescriptor[]>[\r\n      {\r\n        dir: 'asc',\r\n        field: 'description'\r\n      }\r\n    ]\r\n  };\r\n  @ViewChild('clientFileMatchesGrid', { read: ElementRef, static: false })\r\n  clientFileMatchesGrid: ElementRef;\r\n  @ViewChild('inventoryMatchesGrid', { read: ElementRef, static: false })\r\n  inventoryMatchesGrid: ElementRef;\r\n  /* A Subject for monitoring the destruction of the component. */\r\n  private destroyed$ = new Subject<any>();\r\n\r\n  public selectableSettings = {\r\n    checkboxOnly: true\r\n  };\r\n\r\n  public loading: boolean;\r\n\r\n  public gridState: MassMatchGridState = {\r\n    skip: 0,\r\n    take: 250\r\n  };\r\n  selectedmatchCode: string;\r\n \r\n  constructor(\r\n    private massMatchService: MassMatchService,\r\n    private helperService: HelperService,\r\n    private reconcileDataService: ReconcileDataService,\r\n    private router: Router,\r\n    private alertService: AlertService,\r\n    private element: ElementRef,\r\n    private assetFileInfoService: AssetFileInfoService,\r\n    private inventoryService: ReconciliationInventoryService,\r\n    private matchCodesService: MatchCodesService,\r\n  ) {}\r\n\r\n  // TODO: Break this out into service methods within MassMatchService\r\n  ngOnInit() {\r\n    const s = this;\r\n\r\n    this.groupId = this.reconcileDataService.groupId;\r\n    \r\n    // Init form fields\r\n    const getInventoryMetadata = this.inventoryService.getSearchMetadataByGroupId(this.groupId, DataTargetName.inventory);\r\n    const getClientMetadata = this.inventoryService.getSearchMetadataByGroupId(this.groupId, DataTargetName.client);\r\n    const getActivityCodes = this.massMatchService.getActivityCodes();\r\n   const getMatcheCodes = this.matchCodesService.getMatchCodes();\r\n    this.massMatchService.searchResponse$.subscribe(searchResponse => {\r\n      if (searchResponse) {\r\n        this.searchResponse = searchResponse;\r\n\r\n        forkJoin(getInventoryMetadata, getClientMetadata, getActivityCodes, getMatcheCodes)\r\n        .pipe(takeUntil(this.destroyed$))\r\n        .subscribe(([inventoryMetadata, clientMetadata, activityCodes, matcheCodes]) => {\r\n          this.assetFileInfoService.updateReferenceData(activityCodes.result.enumOptions, 'ActivityCodes');\r\n\r\n          if (s.searchResponse.records && s.searchResponse.matches) {\r\n            s.matchesInProgress = Array.from(s.searchResponse.matches);\r\n            s.matchesCount = s.matchesInProgress.length;\r\n\r\n            this.updateGridData(s.searchResponse);\r\n            //this.updateManyMatchGridData(s.searchResponse);\r\n            this.gridState.skip = this.gridState.take;\r\n\r\n            s.allInventoryHeaders = this.helperService.mapHeaders(\r\n              inventoryMetadata.fields,\r\n              this.assetFileInfoService.GetInternalColumns()\r\n            );\r\n\r\n            s.allClientHeaders = this.helperService.mapHeaders(clientMetadata.fields, this.assetFileInfoService.GetInternalColumns());\r\n\r\n            const selectedInventoryHeaderNames = this.massMatchService.searchFieldMatchTerms\r\n              .map(c => c.rightTerm.field)\r\n              .concat(\r\n                this.massMatchService.searchFilterTerms\r\n                  .filter(c => c.term.dataTarget === DataTargetName.inventory)\r\n                  .map(c => c.term.field)\r\n              )\r\n              .filter(s.distinctValues);\r\n              if (selectedInventoryHeaderNames.findIndex(c => c === 'description') === -1) {\r\n                selectedInventoryHeaderNames.push('description');\r\n              }\r\n            this.massMatchService.updateSelectedInventoryHeaders(selectedInventoryHeaderNames);\r\n\r\n            const selectedClientHeaderNames = this.massMatchService.searchFieldMatchTerms\r\n              .map(c => c.leftTerm.field)\r\n              .concat(\r\n                this.massMatchService.searchFilterTerms\r\n                  .filter(c => c.term.dataTarget === DataTargetName.client)\r\n                  .map(c => c.term.field)\r\n              )\r\n              .filter(s.distinctValues);\r\n              if (selectedClientHeaderNames.findIndex(c => c === 'description') === -1) {\r\n                selectedClientHeaderNames.push('description');\r\n              }\r\n            this.massMatchService.updateSelectedClientHeaders(selectedClientHeaderNames);\r\n          }\r\n        });\r\n         // error => {},\r\n         // () => {};\r\n      } else {\r\n        // No search response\r\n        // Sending user back mass match\r\n        this.router.navigate([`project-profile/${this.groupId}/Reconciliation/mass-match`]);\r\n      }\r\n    });\r\n\r\n    this.massMatchService.selectedClientHeaders$.subscribe(selectedHeaders => {\r\n      if (selectedHeaders) {\r\n        this.selectedClientHeaders = this.allClientHeaders.filter(function(x) {\r\n          return selectedHeaders.find(c => c === x.name);\r\n        });\r\n\r\n        this.selectedClientHeaderNames = this.selectedClientHeaders.map(c => c.name);\r\n      }\r\n    });\r\n\r\n    this.massMatchService.selectedInventoryHeaders$.subscribe(selectedHeaders => {\r\n      if (selectedHeaders) {\r\n        this.selectedInventoryHeaders = this.allInventoryHeaders.filter(function(x) {\r\n          return selectedHeaders.find(c => c === x.name);\r\n        });\r\n\r\n        this.selectedInventoryHeaderNames = this.selectedInventoryHeaders.map(c => c.name);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.syncScrolling(\r\n      this.clientFileMatchesGrid.nativeElement.getElementsByClassName('k-grid-content')[0],\r\n      this.inventoryMatchesGrid.nativeElement.getElementsByClassName('k-grid-content')[0]\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  private syncSort(sort: SortDescriptor[]) {\r\n    if (sort && sort.length > 0 && sort[0].field !== 'Actions') {\r\n      this.gridState.sortTerm = sort[0].dir ? {\r\n        field: sort[0].field,\r\n        sortDirection: sort[0].dir === 'asc' ? 0 : 1,\r\n        termOrder: 0\r\n      } : undefined;\r\n\r\n      this.gridState.skip = 0;\r\n      this.clientFileRecords = [];\r\n      this.inventoryRecords = [];\r\n\r\n      this.refreshGridData();\r\n\r\n      this.state.sort = sort;\r\n      this.stateInventory.sort = sort;\r\n    }\r\n  }\r\n\r\n  public sortChangeClient(sort: SortDescriptor[]): void {\r\n    this.syncSort(sort);\r\n  }\r\n  public sortChangeInventroyRecords(sort: SortDescriptor[]): void {\r\n    this.syncSort(sort);\r\n  }\r\n\r\n  private loadClientMatchData() {\r\n    this.clientFileRecords = orderBy(this.clientFileRecords, this.state.sort);\r\n    // this.contracts = orderBy(this.contracts, this.state.sort);\r\n    this.clientGridViewData = process(this.clientFileRecords, this.state);\r\n  }\r\n\r\n  private loadInventoryMatchData() {\r\n    this.inventoryRecords = orderBy(this.inventoryRecords, this.stateInventory.sort);\r\n    // this.contracts = orderBy(this.contracts, this.state.sort);\r\n    this.inventoryGridViewData = process(this.inventoryRecords, this.stateInventory);\r\n  }\r\n\r\n  unmatch(assetId: string) {\r\n    const match = this.matchesInProgress.find(c => c.primaryAssetRecordId === assetId || c.secondaryAssetRecordId === assetId);\r\n    const matchIndex = this.matchesInProgress.indexOf(match);\r\n\r\n    const primaryIndex = this.inventoryRecords.findIndex(c => c.id === match.secondaryAssetRecordId);\r\n    const secondaryIndex = this.clientFileRecords.findIndex(c => c.id === match.primaryAssetRecordId);\r\n\r\n    if (matchIndex >= 0) {\r\n      this.matchesInProgress.splice(matchIndex, 1);\r\n\r\n      this.matchesCount = this.matchesCount - 1;\r\n\r\n      this.inventoryRecords[primaryIndex].isUnmatched = true;\r\n      this.clientFileRecords[primaryIndex].isUnmatched = true;\r\n\r\n      setTimeout(() => {\r\n        if (primaryIndex >= 0 && secondaryIndex >= 0) {\r\n          this.inventoryRecords.splice(primaryIndex, 1);\r\n          this.clientFileRecords.splice(secondaryIndex, 1);\r\n        }\r\n      }, 250);\r\n    }\r\n  }\r\n\r\n  public isUnmatched(context: RowClassArgs) {\r\n    return context.dataItem.isUnmatched ? 'un-matched animated fadeOutLeft' : 'mass-match-row';\r\n  }\r\n RefreshMatchedDataGrid(){\r\n  this.matchesInProgress.forEach((element, index) => {\r\n    const primaryIndex = this.inventoryRecords.findIndex(c => c.id === element.secondaryAssetRecordId);\r\n    const secondaryIndex = this.clientFileRecords.findIndex(c => c.id === element.primaryAssetRecordId);\r\n   if (primaryIndex >= 0 && secondaryIndex >= 0) {\r\n         this.inventoryRecords.splice(primaryIndex, 1);\r\n         this.clientFileRecords.splice(secondaryIndex, 1);\r\n         this.matchesInProgress.splice(index, 1);\r\n         this.matchesCount = this.matchesCount - 1;\r\n       }\r\n  }); \r\n  this.loadClientMatchData();\r\n  this.loadInventoryMatchData();\r\n\r\n  }\r\n  onSubmit() {\r\n    if(this.matchesInProgress != null && this.matchesInProgress.length > 0){\r\n    this.saveIsLoading = true;\r\n\r\n    this.massMatchService.saveMassMatch(this.matchesInProgress).subscribe(result => {\r\n      if (result) {\r\n        this.saveIsLoading = false;\r\n        this.alertService.success(`{{matchesInProgress}} matches saved successfully!`,\r\n         null, {matchesInProgress: this.matchesInProgress.length});\r\n        //this.router.navigate([`project-profile/${this.groupId}/Reconciliation/reconcile-data`]);\r\n        this.RefreshMatchedDataGrid();\r\n      }\r\n    });\r\n    }\r\n  }\r\n\r\n  saveAndNew(event: any) {\r\n    event.preventDefault();\r\n    if(this.matchesInProgress != null && this.matchesInProgress.length > 0){\r\n        this.saveAndNewIsLoading = true;\r\n        this.massMatchService.saveMassMatch(this.matchesInProgress).subscribe(result => {\r\n          if (result) {\r\n            this.saveAndNewIsLoading = false;\r\n\r\n            this.alertService.success(`${this.matchesInProgress.length} matches saved successfully!`);\r\n\r\n            this.massMatchService.clearSearch();\r\n\r\n            this.router.navigate([`project-profile/${this.groupId}/Reconciliation/mass-match`]);\r\n          }\r\n        });\r\n      }\r\n  }\r\n\r\n  back(event: any) {\r\n    this.router.navigate([`project-profile/${this.groupId}/Reconciliation/mass-match`]);\r\n  }\r\n\r\n  public clientFileSelectionChange(event: SelectionEvent) {\r\n\r\n    this.selectedInventoryFileRows = new Array<string>();\r\n\r\n    event.selectedRows.forEach(row => {\r\n      if (row.dataItem && row.dataItem.id) {\r\n        const filteredMatches = this.searchResponse.matches\r\n          .filter(c => c.primaryAssetRecordId === row.dataItem.id)\r\n          .map(c => c.secondaryAssetRecordId);\r\n\r\n        this.selectedInventoryFileRows = filteredMatches;\r\n      }\r\n    });\r\n  }\r\n\r\n  public inventoryFileSelectionChange(event: SelectionEvent) {\r\n\r\n    this.selectedClientFileRows = new Array<string>();\r\n\r\n    event.selectedRows.forEach(row => {\r\n      if (row.dataItem && row.dataItem.id) {\r\n        const filteredMatches = this.searchResponse.matches\r\n          .filter(c => c.secondaryAssetRecordId === row.dataItem.id)\r\n          .map(c => c.primaryAssetRecordId);\r\n\r\n        this.selectedClientFileRows = filteredMatches;\r\n      }\r\n    });\r\n  }\r\n\r\n  public onColumnSelection(columnsSelected: FamisGridUpdateColumnSelectionEvent) {\r\n    this.massMatchService.updateSelectedInventoryHeaders(columnsSelected.SelectedHeaders);\r\n    this.massMatchService.updateSelectedClientHeaders(columnsSelected.SelectedHeaders);\r\n\r\n  }\r\n\r\n  private distinctValues(value, index, self) {\r\n    return self.indexOf(value) === index;\r\n  }\r\n\r\n  private syncScrolling(one, two) {\r\n    function sync(source) {\r\n      setTimeout(() => {\r\n        this.scrollTop = source.scrollTop;\r\n        this.scrollLeft = source.scrollLeft;\r\n      }, 10);\r\n    }\r\n    two.onscroll = sync.bind(one, two);\r\n  }\r\n\r\n  public  refreshGridData() {\r\n    if (this.gridState.skip >= this.matchesCount) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.massMatchService.searchAssets(this.groupId, this.matchesInProgress[0].matchCodeId, this.gridState).subscribe((searchResponse) => {\r\n      this.loading = false;\r\n      if (searchResponse && searchResponse.records && searchResponse.matches) {\r\n        this.updateGridData(searchResponse);\r\n        this.gridState.skip += this.gridState.take;\r\n      }\r\n    }, (error) => {\r\n      if (error['error'] && error['error'].includes('many to many')) {\r\n        this.alertService\r\n        .error('manytomany');\r\n      } else {\r\n        this.alertService.error('An error has occurred');\r\n      }\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  updateGridData(searchResponse: SearchResponseDto) {\r\n    this.inventoryRecords = this.inventoryRecords.concat(this.assetFileInfoService.mapEnums(null, null,\r\n      searchResponse.records.filter(function(x) {\r\n        return searchResponse.matches.find(c => c.secondaryAssetRecordId === x.id);\r\n      }).map(record => {\r\n        return record;\r\n      })));\r\n    this.clientFileRecords = this.clientFileRecords.concat(this.assetFileInfoService.mapEnums(null, null,\r\n      searchResponse.records.filter(function(x) {\r\n        return searchResponse.matches.find(c => c.primaryAssetRecordId === x.id);\r\n      }).map(record => {\r\n        return record;\r\n      })));\r\n  } \r\n\r\n}\r\n","import { CreateMatchCodeComponent } from './create-match-code.component';\r\nimport { ReconciliationConstants } from '../reconciliation.constants';\r\nimport { SortDescriptor, orderBy, State, process } from '@progress/kendo-data-query/dist/es/main';\r\nimport { RowClassArgs, SelectionEvent, GridDataResult, PageChangeEvent, DataStateChangeEvent,\r\n  SelectableSettings } from '@progress/kendo-angular-grid';\r\nimport { AlertService } from '../../_core/services/alert.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, ViewChild, Input, Output, EventEmitter } from '@angular/core';\r\nimport { MatchCode } from '../../_models/match-code.model';\r\nimport { Observable } from 'rxjs';\r\nimport { MatchCodesService } from '../../_api/services/reconciliation/match-codes.service';\r\n\r\n@Component({\r\n  selector: 'match-codes',\r\n  templateUrl: './match-codes.component.html'\r\n})\r\nexport class MatchCodesComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  matchcodeGridBusy = true;\r\n  pageSize = 100;\r\n  skip = 0;\r\n\r\n  @ViewChild(CreateMatchCodeComponent, {static: false})\r\n  createMatchCodeComponent: CreateMatchCodeComponent;\r\n  @Input() selectedMatchCodeIds: Array<any>;\r\n  @Input() includeContractSearch: Array<any>;\r\n  @Output() onMatchCodeSelection = new EventEmitter<any>();\r\n  @Output() onMatchCodesLoaded = new EventEmitter<any>();\r\n\r\n  matchCodes$: Observable<MatchCode[]>;\r\n  matchCodes: MatchCode[] = new Array<MatchCode>();\r\n\r\n  public selectableSettings = <SelectableSettings> {\r\n    checkboxOnly: true,\r\n    mode: 'multiple'\r\n  };\r\n\r\n  state: State = {\r\n    skip: 0,\r\n    take: 100,\r\n\r\n    // Initial filter descriptor\r\n    filter: {\r\n      logic: 'and',\r\n      filters: []\r\n    },\r\n\r\n    sort: <SortDescriptor[]>[{\r\n      dir: 'asc',\r\n      field: 'name'\r\n    }]\r\n\r\n  };\r\n\r\n  public sortSelectedAsc = false;\r\n  public sortSelectedDesc = false;\r\n\r\n  gridData: GridDataResult = process(this.matchCodes, this.state);\r\n\r\n  constructor(private matchCodesService: MatchCodesService, private alertService: AlertService) { }\r\n\r\n  pageChange(event: PageChangeEvent): void {\r\n    this.skip = event.skip;\r\n    this.loadMatchCodes();\r\n  }\r\n\r\n  private loadMatchCodes(): void {\r\n    this.gridData = {\r\n      data: this.matchCodes.slice(this.skip, this.skip + this.pageSize),\r\n      total: this.matchCodes.length\r\n    };\r\n  }\r\n\r\n  dataStateChange(state: DataStateChangeEvent): void {\r\n    this.state = state;\r\n    this.gridData = process(this.matchCodes, this.state);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.matchCodes$ = this.matchCodesService.getMatchCodes();\r\n    this.matchCodes$.subscribe(\r\n      codes => {\r\n        this.matchCodes = codes.filter(code => code.categoryId !== ReconciliationConstants.SystemMatchCategoryId);\r\n        this.gridData = process(this.matchCodes, this.state);\r\n\r\n        this.matchCodesService.cachedMatchCodes = codes;\r\n        this.onMatchCodesLoaded.emit(codes);\r\n      },\r\n      error => {},\r\n      () => this.matchcodeGridBusy = false);\r\n\r\n    if (!this.selectedMatchCodeIds) {\r\n      this.selectedMatchCodeIds = new Array<any>();\r\n    }\r\n  }\r\n\r\n  onSelectionChanged(args?: SelectionEvent) {\r\n    setTimeout(() => {\r\n      this.onDeselectedRows(args.deselectedRows);\r\n      this.validateSelectedRows(args.selectedRows);\r\n      this.emitSelectedRows();\r\n    });\r\n  }\r\n\r\n  private onDeselectedRows(deselectedRows: Array<any>){\r\n    if (deselectedRows == null || deselectedRows.length === 0) {\r\n      return;\r\n    }\r\n\r\n    deselectedRows.forEach(value => {\r\n      const matchCode = this.matchCodes.find(c => c.id === value.dataItem.id);\r\n      matchCode.isSelected = false;\r\n    });\r\n  }\r\n\r\n  private validateSelectedRows(selectedRows: Array<any>) {\r\n    selectedRows.forEach(value => {\r\n      const matchCode = this.matchCodes.find(c => c.id === value.dataItem.id);\r\n      if (!matchCode.isEnabled) {\r\n        this.alertService.error('This match code is disabled and cannot be added to the group.');\r\n        this.selectedMatchCodeIds.splice(this.selectedMatchCodeIds.findIndex(c => c === value), 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  private emitSelectedRows() {\r\n    const selectedMatchCodes = new Array<MatchCode>();\r\n    this.selectedMatchCodeIds.forEach(id => {\r\n      const matchCode = this.matchCodes.find(c => c.id === id);\r\n      matchCode.isSelected = true;\r\n      selectedMatchCodes.push(matchCode);\r\n    });\r\n\r\n    this.onMatchCodeSelection.emit(selectedMatchCodes);\r\n}\r\n\r\n  editMatchCode(id: string, event: any) {\r\n    event.preventDefault();\r\n    this.createMatchCodeComponent.open(event, id);\r\n  }\r\n\r\n  handleCreatedorModifiedMatchCode(matchCode: MatchCode) {\r\n    const existingMatchCode = this.matchCodes.find(c => c.id === matchCode.id);\r\n\r\n    if (!existingMatchCode) {\r\n      this.matchCodes.push(matchCode);\r\n    } else {\r\n      const index = this.matchCodes.indexOf(existingMatchCode);\r\n      this.matchCodes[index] = matchCode;\r\n    }\r\n    this.gridData = process(this.matchCodes, this.state);\r\n  }\r\n\r\n  public sortSelected() {\r\n    if (this.sortSelectedDesc) {\r\n      this.sortSelectedAsc = true;\r\n      this.sortSelectedDesc = false;\r\n      this.setSortDescriptor('asc', 'isSelected');\r\n    } else {\r\n      this.sortSelectedAsc = false;\r\n      this.sortSelectedDesc = true;\r\n      this.setSortDescriptor('desc', 'isSelected');\r\n    }\r\n\r\n    this.gridData = process(this.matchCodes, this.state);\r\n  }\r\n\r\n  private setSortDescriptor(direction: string, field: string) {\r\n    this.state.sort = <SortDescriptor[]>[{\r\n      dir: direction,\r\n      field: field\r\n    }];\r\n  }\r\n\r\n  public isDisabled(context: RowClassArgs) {\r\n    return context.dataItem.isEnabled ? 'enabled-row' : 'disabled-row';\r\n  }\r\n}\r\n","import { AddAssetColumnComponent } from '../../_shared/components/add-asset-column-component';\r\nimport { ReconcileDataService } from '../services/reconcile-data.service';\r\nimport { AlertService } from '../../_core/services/alert.service';\r\nimport { ReconcileDataGridService } from '../services/reconcile-data-grid.service';\r\nimport { HelperService } from '../../_core/services/helper.service';\r\nimport { AssetFileInfoService } from '../../_core/services/asset-file-info-service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { WindowRef } from '@progress/kendo-angular-dialog';\r\nimport { WindowManager } from '../../_core/services/window-manager.service';\r\nimport { Component, ViewContainerRef, ViewChild, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { InventoryService } from '../../_api/services/reconciliation/inventory.service';\r\nimport { DataTargetName } from '../../_enums/data-target-name';\r\nimport { ColumnAddedEvent } from '../../_models/column-added-event.model';\r\nimport { CreateAssetFileCustomColumnDto } from '../../_api/dtos/create-asset-file-custom-column.dto';\r\nimport { GridColumnHeader } from '../../_models/grid-column-header.model';\r\nimport { WindowOption } from '../../_models/window-option';\r\nimport { ReconcileDataGridComponent } from './reconcile-data-grid.component';\r\nimport { UserGridService } from '../../_core/services/user-grid.service';\r\nimport { stringify } from 'querystring';\r\nimport { SettingsApiService } from '../../_api/_runtime/services/settings-api.service';\r\nimport { SettingType } from '../../_enums/setting-type';\r\nimport { forkJoin } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'order-asset-columns-component',\r\n  templateUrl: './order-asset-columns-component.html'\r\n})\r\nexport class OrderAssetColumnsComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  constructor(\r\n    private inventoryService: InventoryService,\r\n    private reconcileDataService: ReconcileDataService,\r\n    private alertService: AlertService,\r\n    private reconcileDataGridService: ReconcileDataGridService,\r\n    private helperService: HelperService,\r\n    private assetFileInfoService: AssetFileInfoService,\r\n    private windowManager: WindowManager,\r\n    public container: ViewContainerRef,\r\n    private reconcileDataGridComponent: ReconcileDataGridComponent,\r\n    private userGridService: UserGridService\r\n    , private settingsApiService: SettingsApiService\r\n  ) {}\r\n\r\n  @ViewChild('content', {static: false}) private content: any;\r\n  @ViewChild(AddAssetColumnComponent, {static: false}) addCustomColumnsComponent: AddAssetColumnComponent;\r\n\r\n  title: 'Select Columns to Display';\r\n\r\n  @Input() dataSource: DataTargetName;\r\n  @Input() assetFileId: string;\r\n  @Input() mappedColumns: string[];\r\n @Output() onColumnOrderUpdated = new EventEmitter();\r\n  @Output() columnAdded = new EventEmitter<ColumnAddedEvent>();\r\n  isAddingColumn = false;\r\n  public pendingCustomColumns = new Array<CreateAssetFileCustomColumnDto>();\r\n\r\n  public columnNames: string[];\r\n\r\n  public headersAvailable = new Array<GridColumnHeader>();\r\n  public selectedHeaders = new Array<string>();\r\n  settingName: string;\r\n  private assetfileId: string;\r\n  private windowRef: WindowRef;\r\nprivate showAllColumns = false;\r\n\r\nngOnInit() {\r\n  this.showAllColumns = false;\r\n}\r\n  open() {\r\n    const s = this;\r\n    \r\n    this.reconcileDataGridService.headers$.subscribe(headers => {\r\n      if (headers) {\r\n        if (this.mappedColumns === undefined || this.showAllColumns ) {\r\n          this.headersAvailable = headers[this.dataSource].filter(\r\n          header => this.assetFileInfoService.GetInternalColumns().some(hidden => hidden === header.name) === false\r\n          );\r\n        } else {\r\n        this.headersAvailable = headers[this.dataSource].filter(\r\n          header => this.mappedColumns.some(hidden => hidden.toLowerCase() === header.name.toLowerCase()) === true\r\n        );\r\n        }\r\n      }\r\n    });\r\n\r\n    this.reconcileDataGridService.selectedHeaders$.subscribe(selectedHeaders => {\r\n      if (selectedHeaders) {\r\n        this.selectedHeaders = selectedHeaders[this.dataSource];\r\n      }\r\n    });\r\n\r\n    this.columnNames = this.headersAvailable.map(col => col.name);\r\n\r\n    this.reconcileDataGridService.pendingCustomColumns$.subscribe(columns => {\r\n      if (columns) {\r\n        this.pendingCustomColumns = columns[this.dataSource];\r\n      } else {\r\n        this.pendingCustomColumns = new Array<CreateAssetFileCustomColumnDto>();\r\n      }\r\n    });\r\n\r\n    this.windowRef = this.windowManager.open(this.content, 'Select Columns to Display', <WindowOption> {\r\n      isModal: true\r\n    });\r\n  }\r\npublic DisplayAllColumnsToggle(ev: any)\r\n{\r\n    this.showAllColumns = !this.showAllColumns;\r\n\r\n    this.reconcileDataGridService.headers$.subscribe(headers => {\r\n      if (headers) {\r\n        if (this.mappedColumns === undefined || this.showAllColumns ) {\r\n          this.headersAvailable = headers[this.dataSource].filter(\r\n          header => this.assetFileInfoService.GetInternalColumns().some(hidden => hidden === header.name) === false\r\n          );\r\n        } else {\r\n        this.headersAvailable = headers[this.dataSource].filter(\r\n          header => this.mappedColumns.some(hidden => hidden.toLowerCase() === header.name.toLowerCase()) === true\r\n        );\r\n        }\r\n      }\r\n    });\r\n\r\n    this.reconcileDataGridService.updateAvailableColumns(this.headersAvailable, this.dataSource);\r\n}\r\n\r\npublic updateCurrentView(clearCache: boolean = false) {\r\n  const s = this;\r\n\r\n}\r\n\r\n  public saveChanges() {\r\n    const s = this;\r\n    // TODO : Set the Ordering\r\n    s.reconcileDataGridService.updateSelectedHeaders(s.selectedHeaders, s.dataSource);\r\n    this.userGridService.saveSelectedHeaders(this.reconcileDataGridComponent.gridSettingsName, s.selectedHeaders);\r\n\r\n    // Save custom columns\r\n    if (s.pendingCustomColumns.length > 0) {\r\n      s.inventoryService.addAssetCustomColumns(s.assetFileId, s.pendingCustomColumns).subscribe(result => {\r\n        if (result.code === 0) {\r\n          s.alertService.success('Columns added to asset file.');\r\n          s.columnAdded.emit(<ColumnAddedEvent>{ dataSource: s.dataSource, columns: result.result });\r\n          s.reconcileDataGridService.updateSelectedHeaders(s.selectedHeaders, s.dataSource);\r\n          s.reconcileDataGridService.clearPendingColumns(s.dataSource);\r\n        } else {\r\n          s.alertService.error('An error occurred, asset column(s) could not be added.');\r\n        }\r\n        s.windowRef.close();\r\n      });\r\n    } else {\r\n      s.windowRef.close();\r\n    }\r\n  }\r\n\r\n  public cancle() {\r\n    this.windowRef.close();\r\n  }\r\n\r\n  public removePendingColumn(col: CreateAssetFileCustomColumnDto) {\r\n    let index = this.pendingCustomColumns.findIndex(i => i.columnName.toLowerCase() === col.columnName.toLowerCase());\r\n    if (index !== -1) {\r\n      this.pendingCustomColumns.splice(index, 1);\r\n    }\r\n    index = this.columnNames.findIndex(i => i.toLowerCase() === col.columnName.toLowerCase());\r\n    if (index !== -1) {\r\n      this.columnNames.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  public onColumnAdded(col: CreateAssetFileCustomColumnDto) {\r\n    // Create a new header\r\n    const header = <GridColumnHeader>{};\r\n    const columnName = this.helperService.lowerCasePropertyName(col.columnName);\r\n    col.columnName = columnName;\r\n    header.displayName = col.columnName;\r\n    header.name = columnName;\r\n    header.isCustom = true;\r\n    header.order = this.headersAvailable.length + 1;\r\n    this.headersAvailable.push(header);\r\n    this.selectedHeaders.push(header.name);\r\n    this.columnNames.push(col.columnName);\r\n    this.reconcileDataGridService.addPendingColumn(this.dataSource, col);\r\n  }\r\n}\r\n","import { ReconcileDataService } from '../services/reconcile-data.service';\r\nimport { HelperService } from '../../_core/services/helper.service';\r\nimport { ParentChildService } from '../services/parent-child.service';\r\nimport { AssetFileInfoService } from '../../_core/services/asset-file-info-service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { OnInit, Component } from '@angular/core';\r\nimport { Asset } from '../../_models/asset.model';\r\n\r\n@Component({\r\n  selector: 'parent-child-match-detail',\r\n  templateUrl: './parent-child-match-detail.component.html'\r\n})\r\nexport class ParentChildMatchDetailComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  public headers = [];\r\n\r\n  public children: Array<Asset>;\r\n\r\n  constructor(\r\n    private reconcileDataService: ReconcileDataService,\r\n    private helperService: HelperService,\r\n    private parentChildService: ParentChildService,\r\n    private assetFileInfoService: AssetFileInfoService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.parentChildService.children$.subscribe(currentChildren => {\r\n      this.children = currentChildren;\r\n    });\r\n\r\n    if (this.children.length > 0) {\r\n      this.headers = this.helperService.getHeaders(this.children[0], this.assetFileInfoService.GetInternalColumns());\r\n    }\r\n  }\r\n\r\n  public showColumn(columnKey: string): boolean {\r\n    const hideColumn =\r\n      this.reconcileDataService.defaultColumns\r\n      .indexOf(columnKey) !== -1 || this.assetFileInfoService.GetInternalColumns().indexOf(columnKey) !== -1;\r\n    return hideColumn;\r\n  }\r\n}\r\n","import { ParentChildService } from '../services/parent-child.service';\r\nimport { AlertService } from '../../_core/services/alert.service';\r\nimport { GridComponent } from '@progress/kendo-angular-grid/dist/es/grid.component';\r\nimport { ResultType } from '../../_enums/result-type';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { WindowManager } from '../../_core/services/window-manager.service';\r\nimport { concat, Observable } from 'rxjs';\r\nimport { Component, OnInit, ViewChild, Output, EventEmitter, ViewContainerRef } from '@angular/core';\r\nimport { ApiServiceResult } from '../../_api/dtos/api-service-result.dto';\r\nimport { ReconciliationSummaryResult } from '../../_api/dtos/reconciliation/reconciliation-summary-result.dto';\r\nimport { ReconcileParentChild } from '../../_models/reconcile-parent-child.model';\r\nimport { Asset } from '../../_models/asset.model';\r\nimport { WindowRef } from '@progress/kendo-angular-dialog';\r\nimport { WindowOption } from '../../_models/window-option';\r\nimport { MatchOrAllocationResult } from '../../_api/dtos/reconciliation/match-or-allocation-result.dto';\r\n\r\n@Component({\r\n  selector: 'parent-child-match',\r\n  templateUrl: './parent-child-match.component.html'\r\n})\r\nexport class ParentChildMatchComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  @ViewChild('content', {static: false}) private content: any;\r\n  @Output() parentChildMatch = new EventEmitter<ApiServiceResult<ReconciliationSummaryResult[]>>();\r\n  @Output() parentChildRemoved = new EventEmitter<string[]>();\r\n  closeResult: string;\r\n\r\n  title: string;\r\n  saveText: string;\r\n\r\n  parentAssetId: string;\r\n  public assetsGridData: Array<ReconcileParentChild>;\r\n  reconcileParentChild: ReconcileParentChild;\r\n  public isEdit = false;\r\n  public showSelectParentAlert = false;\r\n  public removedIds = Array<string>();\r\n\r\n  public children = new Array<Asset>();\r\n\r\n  isConfirmOpen = false;\r\n  confirmMessage = '';\r\n  confirmHeader = 'Confirm';\r\n\r\n  windowRef: WindowRef;\r\n  private defaultParentIndex = -1;\r\n  showMatchedChildAssigned = false;\r\n\r\n  constructor(\r\n    private windowManager: WindowManager,\r\n    private alertService: AlertService,\r\n    private parentChildService: ParentChildService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.parentChildService.children$.subscribe(children => {\r\n      this.children = children;\r\n    });\r\n\r\n    this.parentChildService.currentSelectedAssets.subscribe(currentSelectedAssets => {\r\n      this.assetsGridData = currentSelectedAssets;\r\n    });\r\n  }\r\n\r\n  public open(event: any) {\r\n    event.preventDefault();\r\n    this.showMatchedChildAssigned = false;\r\n    this.parentChildService.isValidSelection(this.assetsGridData).subscribe(result => {\r\n      if (!result) {\r\n        this.alertService.error(this.parentChildService.getValidationErrors());\r\n        return;\r\n      }\r\n\r\n      this.loadItems(this.getChildAssetIds());\r\n\r\n      this.title = 'Parent / Child Relationship';\r\n      this.saveText = 'Apply';\r\n      this.parentAssetId = null;\r\n      this.showSelectParentAlert = false;\r\n\r\n      this.defaultParentIndex = this.assetsGridData.findIndex(p => p.isMatched === true);\r\n      if (this.defaultParentIndex !== -1) {\r\n        this.selectParent(this.defaultParentIndex);\r\n      }\r\n\r\n      this.windowRef = this.windowManager.open(this.content, this.title, <WindowOption>{\r\n        isModal: true,\r\n        translationKey: this.i18n.reconciliation\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n  public selectParent(rowIndex: any) {\r\n    if (rowIndex != null) {\r\n      const item = this.assetsGridData[rowIndex];\r\n      if (this.defaultParentIndex !== -1) {\r\n        if (this.assetsGridData[rowIndex].assetId !== this.assetsGridData[this.defaultParentIndex].assetId) {\r\n          this.showMatchedChildAssigned = true;\r\n          return;\r\n        }\r\n      }\r\n      this.parentAssetId = item.assetId;\r\n      this.showMatchedChildAssigned = false;\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.parentAssetId == null) {\r\n      this.showSelectParentAlert = true;\r\n      return;\r\n    }\r\n    if (this.showMatchedChildAssigned) {\r\n      return;\r\n    }\r\n\r\n    const observables = new Array<Observable<ApiServiceResult<ReconciliationSummaryResult[] | MatchOrAllocationResult>>>();\r\n    let assetsToRemove = new Array<string>();\r\n\r\n    if (this.getOriginalParent() !== '' && this.parentAssetId !== this.getOriginalParent()) {\r\n      const originalParent = this.getOriginalParent();\r\n      assetsToRemove = this.getChildAssetIds();\r\n      assetsToRemove.push(this.parentAssetId);\r\n      assetsToRemove.splice(assetsToRemove.indexOf(originalParent), 1);\r\n    }\r\n    if (this.removedIds.length > 0) {\r\n      this.removedIds.forEach(id => assetsToRemove.push(id));\r\n    }\r\n\r\n    if (assetsToRemove.length > 0 && this.isEdit) {\r\n      const remove = this.parentChildService.removeChildMatches(assetsToRemove);\r\n      observables.push(remove);\r\n    }\r\n\r\n    if (this.isEdit) {\r\n      const adds = this.parentChildService.updateParentChildMatches(this.parentAssetId, this.getChildAssetIds());\r\n      observables.push(adds);\r\n    } else {\r\n      const adds = this.parentChildService.setParentChildMatches(this.parentAssetId, this.getChildAssetIds());\r\n      observables.push(adds);\r\n    }\r\n\r\n    concat(...observables).subscribe(\r\n      c => {\r\n        if (c.resultType === ResultType.reconciliationSummaryResult) {\r\n          this.parentChildMatch.emit(<ApiServiceResult<ReconciliationSummaryResult[]>>c);\r\n        }\r\n\r\n        if (c.resultType === ResultType.matchOrAllocationResult) {\r\n          const removedResult = <ApiServiceResult<MatchOrAllocationResult>>c;\r\n          this.parentChildRemoved.emit(removedResult.result.assetIds);\r\n        }\r\n\r\n        this.windowRef.close();\r\n      },\r\n      error => {}\r\n    );\r\n  }\r\n\r\n  private loadItems(assetIds: string[]) {\r\n    this.parentChildService.getMatchSummaryForAssetIds(this.getChildAssetIds()).subscribe(data => {\r\n      if (data.result.assetData.length === 0) {\r\n        return;\r\n      }\r\n      data.result.assetData.forEach(match => {\r\n        const element = this.assetsGridData.find(a => a.assetId === match.id);\r\n        if (element != null) {\r\n          element.isParent = match.isParent;\r\n          element.parentId = match.parentId;\r\n          if (element.isParent === true) {\r\n            this.parentAssetId = element.assetId;\r\n          }\r\n        }\r\n      });\r\n      this.isEdit = true;\r\n    });\r\n  }\r\n\r\n  private getOriginalParent(): string {\r\n    let parents = this.assetsGridData.map(({ parentId }) => parentId);\r\n    parents = parents.filter(function(v, i) {\r\n      return v != null && parents.indexOf(v) === i;\r\n    });\r\n    if (parents.length === 0) {\r\n      return '';\r\n    }\r\n    return parents[0];\r\n  }\r\n\r\n  private getChildAssetIds(): string[] {\r\n    const assetIds = this.assetsGridData.map(({ assetId }) => assetId);\r\n    const index = assetIds.indexOf(this.parentAssetId);\r\n    if (index > -1) {\r\n      assetIds.splice(index, 1);\r\n    }\r\n    return assetIds;\r\n  }\r\n\r\n  public onUnrelateAllItems(event: any) {\r\n    event.preventDefault();\r\n\r\n    this.confirmMessage = 'Are you sure you want to remove the associations from all items?';\r\n    this.isConfirmOpen = true;\r\n  }\r\n\r\n  public onUnrelateRow(rowIndex: number, event: any, grid: GridComponent) {\r\n    event.preventDefault();\r\n\r\n    if (this.assetsGridData.length <= 2) {\r\n      this.confirmMessage = 'Removing this item will unrelate all items. Are you sure?';\r\n      this.isConfirmOpen = true;\r\n    }\r\n\r\n    this.removedIds.push(this.assetsGridData[rowIndex].assetId);\r\n    this.assetsGridData.splice(rowIndex, 1);\r\n  }\r\n\r\n  public onConfirmed(isConfirmed: boolean) {\r\n    this.isConfirmOpen = false;\r\n    if (isConfirmed) {\r\n      this.unrelateAllItems();\r\n    }\r\n  }\r\n\r\n  public unrelateAllItems() {\r\n    const ids = this.getChildAssetIds();\r\n    if (this.removedIds.length > 0) {\r\n      this.removedIds.forEach(id => ids.push(id));\r\n    }\r\n\r\n    this.parentChildService.removeChildMatches(ids).subscribe(removedEntities => {\r\n      if (removedEntities) {\r\n        let assetIds = new Array<string>();\r\n\r\n        const removedResult = <MatchOrAllocationResult>removedEntities.result;\r\n\r\n        assetIds = assetIds.concat(removedResult.assetIds);\r\n\r\n        assetIds.push(this.parentAssetId);\r\n\r\n        this.parentChildRemoved.emit(assetIds);\r\n        this.windowRef.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  cancel(): void {\r\n    this.windowRef.close();\r\n  }\r\n}\r\n","import { AllocationService } from '../services/allocation.service';\r\nimport { AlertService } from '../../_core/services/alert.service';\r\nimport { ReconcileMatchService } from '../services/reconcile-match.service';\r\nimport { ReconcileDataService } from '../services/reconcile-data.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { WindowManager } from '../../_core/services/window-manager.service';\r\nimport { Component, OnInit, ViewChild, Output, EventEmitter, ViewContainerRef } from '@angular/core';\r\nimport { ReconcileDataAllocations } from '../../_models/reconcile-allocation.model';\r\nimport { AssetDto } from '../../_api/dtos/reconciliation/reconciliation-summary-result.dto';\r\nimport { Asset } from '../../_models/asset.model';\r\nimport { WindowRef } from '@progress/kendo-angular-dialog';\r\nimport { CostFieldsService } from '../../_api/services/reconciliation/cost-fields.service';\r\nimport { CalculationApiService } from '../../_api/_runtime/services/calculation-api.service';\r\nimport { DataTargetName } from '../../_enums/data-target-name';\r\nimport { ReconciliationStatus } from '../../_enums/reconciliationStatus';\r\nimport { WindowOption } from '../../_models/window-option';\r\nimport { ReconciliationAllocationDto } from '../../_api/dtos/reconcilation-allocation.dto';\r\nimport { ReconciliationMatchDto } from '../../_api/dtos/reconcilation-match.dto';\r\n\r\n@Component({\r\n  selector: 'reconcile-data-allocations',\r\n  templateUrl: './reconcile-data-allocations.component.html'\r\n})\r\nexport class ReconcileDataAllocationsComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  @ViewChild('content', {static: false})\r\n  content: any;\r\n  title = 'Allocation';\r\n  isConfirmOpen = false;\r\n  confirmMessage = '';\r\n  confirmHeader= '';\r\n  vm: ReconcileDataAllocations;\r\n  @Output()\r\n  allocation = new EventEmitter<AssetDto[]>();\r\n  @Output()\r\n  allocationUnmatchAll = new EventEmitter();\r\n  selectedClientAssets: Array<Asset>;\r\n  selectedInventoryAssets: Array<Asset>;\r\n  matchCode: string;\r\n  costField: string;\r\n  allocationCost: number;\r\n  inventoryAssetsToRemove: Array<Asset>;\r\n  remainingBalance = 0;\r\n\r\n  windowRef: WindowRef;\r\n\r\n\r\n  constructor(\r\n    private windowManager: WindowManager,\r\n    private allocationService: AllocationService,\r\n    private alertService: AlertService,\r\n    private reconcilationMatchService: ReconcileMatchService,\r\n    private reconcileMatchService: ReconcileMatchService,\r\n    private costFieldsService: CostFieldsService,\r\n    private reconcileDataService: ReconcileDataService,\r\n    private calculationService: CalculationApiService,\r\n    private container: ViewContainerRef\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    const s = this;\r\n\r\n    this.allocationService.currentSelectedMatchCode.subscribe(matchCode => (this.matchCode = matchCode));\r\n\r\n    this.reconcileMatchService.selectedMatch$.subscribe(match => {\r\n      this.selectedClientAssets = match.filter(c => c.dataSource === DataTargetName.client);\r\n      this.selectedInventoryAssets = match.filter(c => c.dataSource === DataTargetName.inventory);\r\n    });\r\n\r\n    this.costFieldsService.getGroupCostField(this.reconcileDataService.groupId).subscribe(field => {\r\n      if (field === null || field.assetFileField.length === 0) { s.costField = 'historicalCost'; } else {\r\n        s.costField = field.assetFileField.charAt(0).toLowerCase() + field.assetFileField.slice(1);\r\n      }\r\n    });\r\n  }\r\n\r\n  open(event: any) {\r\n    event.preventDefault();\r\n\r\n    this.launchAllocationModal();\r\n  }\r\n\r\n  launchAllocationModal() {\r\n    this.isConfirmOpen = false;\r\n    if (this.matchCode === '' || this.matchCode == null) {\r\n      this.alertService.error('Select a match code to create an allocation.');\r\n      return;\r\n    }\r\n    if (this.selectedClientAssets.length > 1) {\r\n      this.alertService.error('Cannot create allocations for more than one client record at a time.');\r\n      return;\r\n    }\r\n    if (this.selectedClientAssets.length === 0) {\r\n      this.alertService.error('A client record must be selected to create an allocation.');\r\n      return;\r\n    }\r\n    if (this.selectedInventoryAssets.length === 0) {\r\n      this.alertService.error('At least one inventory item must be selected to create or modify an allocation.');\r\n      return;\r\n    }\r\n    this.inventoryAssetsToRemove = new Array<Asset>();\r\n    // If we made it this far, get the reconcilation matches and verify selction is elligable for allocation.\r\n    const ids = new Array<string>();\r\n    ids.push(this.selectedClientAssets[0].assetId);\r\n    this.reconcilationMatchService.getMatchSummaryForAssetIds(this.reconcileDataService.groupId, ids).subscribe(result => {\r\n      if (result.code === ReconciliationStatus.Success && result.result != null) {\r\n        const allMatchedAssets = result.result.assetData;\r\n        // console.log(result);\r\n\r\n        if (this.isValidAssetSelectionForExistingAllocation(allMatchedAssets)) {\r\n          // Launch Modal in modify/view mode\r\n          this.initializeUpdateViewModel(allMatchedAssets);\r\n        } else if (this.isValidAssetSelectionForNewAllocation(allMatchedAssets)) {\r\n          // Launch Modal in new allocation mode\r\n          this.initializeViewModel();\r\n        } else {\r\n          this.alertService.error('The selected assets are not valid for creating or modifying an allocation.');\r\n          return;\r\n        }\r\n\r\n        this.windowRef = this.windowManager.open(this.content, this.title, <WindowOption>{\r\n          isModal: true,\r\n          translationKey: this.i18n.reconciliation,\r\n          top: -100,\r\n          left: -900,\r\n          width: 800\r\n        });\r\n\r\n      } else {\r\n        // Bad API status\r\n        this.alertService.error('An unexpected error has occurred. Allocation cannot be created at this time.');\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  allocateEvenly(event: any) {\r\n    event.preventDefault();\r\n    this.calculationService\r\n      .Allocate(parseFloat(this.vm.allocationClientAsset[this.costField]), this.vm.allocationInventoryAssets.length)\r\n      .subscribe(res => {\r\n        for (let i = 0; i < res.length; i++) {\r\n          this.vm.allocationInventoryAssets[i].allocatedValue = parseFloat(res[i]);\r\n        }\r\n        this.updateTotal();\r\n      });\r\n  }\r\n\r\n  onSubmit(form) {\r\n    if (this.vm.isValidAllocation) {\r\n      const allocations: Array<ReconciliationAllocationDto> = new Array<ReconciliationAllocationDto>();\r\n      this.vm.allocationInventoryAssets.forEach(asset => {\r\n        // console.log('Asset ' + asset.assetId + ' allocation: ' + asset.allocatedValue);\r\n        const allocation: ReconciliationAllocationDto = {\r\n          assetRecordId: asset.assetId,\r\n          allocatedValue: asset.allocatedValue\r\n        };\r\n        allocations.push(allocation);\r\n      });\r\n      // Save Allocation\r\n      if (this.vm.isNewAllocation) {\r\n        this.createNewAllocation(allocations);\r\n      } else {\r\n        this.updateExistingAllocation(allocations);\r\n      }\r\n    }\r\n  }\r\n\r\n  private createNewAllocation(allocations: Array<ReconciliationAllocationDto>) {\r\n    this.reconcilationMatchService\r\n      .setAllocationMatch(this.vm.allocationClientAsset.assetId, allocations, this.matchCode)\r\n      .subscribe(result => {\r\n        if (result.code === ReconciliationStatus.Success) {\r\n          const assetsModified = this.mapAllocationResult(result.result);\r\n\r\n          this.allocation.emit(assetsModified);\r\n          this.alertService.success('Allocation match saved!');\r\n        } else {\r\n          this.alertService.error('An unexpected error occurred. Allocation cannot be created at this time.');\r\n        }\r\n        this.windowRef.close();\r\n      });\r\n  }\r\n\r\n  private updateExistingAllocation(allocations: Array<ReconciliationAllocationDto>) {\r\n    this.reconcilationMatchService\r\n      .updateAllocationMatch(\r\n        this.vm.allocationClientAsset.assetId,\r\n        allocations,\r\n        this.matchCode,\r\n        this.vm.parentAssetFileRecordId,\r\n        this.vm.matchId\r\n      )\r\n      .subscribe(result => {\r\n        if (result.code === ReconciliationStatus.Success) {\r\n          const assetsModified = this.mapAllocationResult(result.result);\r\n\r\n          this.allocation.emit(assetsModified);\r\n          this.alertService.success('Allocation match saved!');\r\n        } else {\r\n          this.alertService.error('An unexpected error occurred. Allocation cannot be created at this time.');\r\n        }\r\n        this.windowRef.close();\r\n      });\r\n  }\r\n\r\n  private mapAllocationResult(result: ReconciliationMatchDto): Array<AssetDto> {\r\n\r\n    const assetsModified = new Array<AssetDto>();\r\n\r\n    if (result && result.allocations.length > 0) {\r\n      result.allocations.forEach(a => {\r\n        const allocatedAsset = this.vm.allocationInventoryAssets.find(c => c.assetId === a.assetRecordId);\r\n        const res = this.mapAssetDto(allocatedAsset);\r\n        res.matchId = result.matchId;\r\n        res.matchCodeId = result.matchCodeId;\r\n        res.historicalCost = a.allocatedValue;\r\n\r\n        assetsModified.push(res);\r\n      });\r\n\r\n      const clientAsset = this.mapAssetDto(this.vm.allocationClientAsset);\r\n      clientAsset.matchId = result.matchId;\r\n      clientAsset.matchCodeId = result.matchCodeId;\r\n\r\n      assetsModified.push(clientAsset);\r\n    }\r\n\r\n    this.inventoryAssetsToRemove.forEach(asset => {\r\n      const assetDto = this.mapAssetDto(asset);\r\n      assetDto.matchCodeId = '';\r\n      assetDto.historicalCost = asset.historicalCost;\r\n      assetDto.matchId = '';\r\n      assetsModified.push(assetDto);\r\n    });\r\n    return assetsModified;\r\n  }\r\n\r\n  private mapAssetDto(asset: Asset): AssetDto {\r\n    const res = <AssetDto>{};\r\n    res.id = asset.assetId;\r\n    res.parentId = asset.parentId;\r\n    res.isParent = asset.isParent;\r\n    res.oldTagNumber = asset.oldTagNumber;\r\n    res.description = asset.description;\r\n    res.assetTagNumber = asset.assetTagNumber;\r\n    res.dataSource = asset.dataSource;\r\n    res.historicalCost = asset.historicalCost;\r\n    return res;\r\n  }\r\n\r\n  updateTotal() {\r\n    this.vm.isValidAllocation = true;\r\n    this.vm.allocationTotal = 0;\r\n    this.vm.allocationInventoryAssets.forEach(asset => {\r\n      if (asset.allocatedValue < 0) {\r\n        this.vm.isValidAllocation = false;\r\n      }\r\n      this.vm.allocationTotal += Number(asset.allocatedValue);\r\n    });\r\n    this.vm.allocationTotal = Number(this.vm.allocationTotal.toFixed(2));\r\n    this.remainingBalance = Number((this.vm.allocationClientAsset.historicalCost - this.vm.allocationTotal).toFixed(2));\r\n    if (this.vm.isValidAllocation) {\r\n      this.vm.isValidAllocation = this.vm.allocationTotal <= this.vm.allocationClientAsset[this.costField];\r\n    }\r\n  }\r\n\r\n  private isValidAssetSelectionForNewAllocation(matchedAssets: AssetDto[]): boolean {\r\n    let returnVal = true;\r\n    matchedAssets.forEach(asset => {\r\n      if (asset.matchId || asset.matchCodeId) {\r\n        returnVal = false;\r\n      }\r\n    });\r\n\r\n    if (!returnVal) {\r\n      this.alertService.error('The selected inventory items contain at least one asset that has already been allocated.');\r\n    }\r\n    if (returnVal) {\r\n      // console.log('Valid Asset selction for new Allocation');\r\n    }\r\n    return returnVal;\r\n  }\r\n\r\n  private isValidAssetSelectionForExistingAllocation(matchedAssets: AssetDto[]): boolean {\r\n    const clientAsset = this.selectedClientAssets[0];\r\n    const matchCodeId = clientAsset.matchCodeId;\r\n    const matchId = clientAsset.matchId;\r\n    if (!matchCodeId && !matchId) {\r\n      return false;\r\n    }\r\n\r\n    const clientAssetIndex = matchedAssets.findIndex(m => m.id === clientAsset.assetId);\r\n    if (clientAssetIndex === -1) {\r\n      return false;\r\n    }\r\n\r\n    this.selectedInventoryAssets.forEach(invAsset => {\r\n      if (invAsset.matchId && invAsset.matchCodeId) {\r\n        const matchedAssetIndex = matchedAssets.findIndex(m => m.id === invAsset.assetId);\r\n        if (matchedAssetIndex === -1) {\r\n          return false;\r\n        }\r\n        const matchAsset = matchedAssets[matchedAssetIndex];\r\n        if (matchAsset.matchCodeId !== matchCodeId || matchAsset.matchId !== matchId) {\r\n          return false;\r\n        }\r\n      }\r\n    });\r\n\r\n    matchedAssets.splice(clientAssetIndex, 1);\r\n    if (this.selectedInventoryAssets.length < matchedAssets.length) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private initializeViewModel() {\r\n    this.vm = {\r\n      allocationTotal: 0,\r\n      isNewAllocation: true,\r\n      allocationClientAsset: this.selectedClientAssets.slice(0)[0],\r\n      allocationInventoryAssets: this.selectedInventoryAssets.slice(),\r\n      isValidAllocation: true,\r\n      matchId: '',\r\n      parentAssetFileRecordId: ''\r\n    };\r\n    this.vm.allocationInventoryAssets.forEach(asset => {\r\n      asset.allocatedValue = 0;\r\n    });\r\n\r\n    this.allocationCost = this.setAllocationCost();\r\n  }\r\n\r\n  private setAllocationCost(): number {\r\n    if (this.costField === null) { return 0; }\r\n    if (!this.vm.allocationClientAsset[this.costField]) { return 0; }\r\n    return Number((this.vm.allocationClientAsset[this.costField] * 1).toFixed(2));\r\n  }\r\n\r\n  private initializeUpdateViewModel(matchedAssets: AssetDto[]) {\r\n    this.vm = {\r\n      allocationTotal: 0,\r\n      isNewAllocation: false,\r\n      allocationClientAsset: this.selectedClientAssets.slice(0)[0],\r\n      allocationInventoryAssets: this.selectedInventoryAssets.slice(),\r\n      isValidAllocation: true,\r\n      matchId: this.selectedClientAssets[0].matchId,\r\n      parentAssetFileRecordId: this.selectedClientAssets[0].parentId\r\n    };\r\n    this.vm.allocationInventoryAssets.forEach(asset => {\r\n      const allocation = matchedAssets.find(x => x.id === asset.assetId);\r\n      if (allocation !== undefined) { asset.allocatedValue = allocation.historicalCost; } else {\r\n        asset.allocatedValue = 0.0;\r\n      }\r\n    });\r\n    this.allocationCost = this.setAllocationCost();\r\n    this.updateTotal();\r\n  }\r\n\r\n  public unmatchRecord(event: any, assetId: string) {\r\n    event.preventDefault();\r\n    // Check if last allocation\r\n    if (this.vm.allocationInventoryAssets.length === 1) {\r\n      this.confirmHeader = 'Confirm';\r\n      this.confirmMessage = 'Are you sure you want to remove this allocation? This will delete the match for these records.';\r\n      this.isConfirmOpen = true;\r\n    }\r\n    const asset = this.vm.allocationInventoryAssets.find(i => i.assetId === assetId);\r\n    const index = this.vm.allocationInventoryAssets.indexOf(asset);\r\n    this.inventoryAssetsToRemove.push(asset);\r\n    this.vm.allocationInventoryAssets.splice(index, 1);\r\n    this.updateTotal();\r\n  }\r\n\r\n  cancel(): void {\r\n    this.windowRef.close();\r\n  }\r\n\r\n  public unmatchAll(event: any) {\r\n    event.preventDefault();\r\n    this.confirmHeader = 'Confirm';\r\n    this.confirmMessage = 'Are you sure you want to delete the match for these records?';\r\n    this.isConfirmOpen = true;\r\n  }\r\n\r\n  public onConfirmed(isConfirmed: boolean) {\r\n    this.isConfirmOpen = false;\r\n    if (isConfirmed) {\r\n      this.removeEntireAllocationMatch();\r\n    }\r\n  }\r\n\r\n  private removeEntireAllocationMatch() {\r\n    this.allocationUnmatchAll.emit();\r\n    this.windowRef.close();\r\n  }\r\n}\r\n","import { ReconcileMatchService } from '../services/reconcile-match.service';\r\nimport { ReconcileDataService } from '../services/reconcile-data.service';\r\nimport { UpsertAssetRecordComponent } from './upsert-asset-record.component';\r\nimport { ReconciliationInventoryService } from '../services/inventory.service';\r\n\r\nimport { ReconcileDataGridService } from '../services/reconcile-data-grid.service';\r\nimport { GridDataResult, SelectAllCheckboxState, GridComponent, SelectionEvent, DataStateChangeEvent } from '@progress/kendo-angular-grid';\r\nimport { HelperService } from '../../_core/services/helper.service';\r\nimport { ParentChildMatchDetailComponent } from './parent-child-match-detail.component';\r\nimport { ParentChildService } from '../services/parent-child.service';\r\nimport { SortDescriptor } from '@progress/kendo-data-query/dist/es/main';\r\nimport { AlertService } from '../../_core/services/alert.service';\r\nimport { AssetFileInfoService } from '../../_core/services/asset-file-info-service';\r\nimport { EditEvent } from '@progress/kendo-angular-grid';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { FamisGridService } from '../../_core/services/famis-grid.service';\r\nimport { UserGridService } from '../../_core/services/user-grid.service';\r\n\r\nimport { UserStore } from '../../_core/user/user.store';\r\nimport { CopyAssetRecordComponent } from '../../_shared/components/copy-asset-modal/copy-asset-record.component';\r\nimport { takeUntil, debounceTime } from 'rxjs/operators';\r\nimport { Component, OnInit, OnDestroy, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { SelectionChangeEvent } from '../../_models/selection-change-event.model';\r\nimport { MatchSelectionEvent } from '../../_models/match-selection-event.model';\r\nimport { Asset } from '../../_models/asset.model';\r\nimport { DataTargetName } from '../../_enums/data-target-name';\r\nimport { Subscription, Subject, forkJoin } from 'rxjs';\r\nimport { AssetFileSummaryDto } from '../../_api/dtos/asset-file-summary.dto';\r\nimport { FieldType } from '../../_enums/field-type';\r\nimport { State, CompositeFilterDescriptor, filterBy } from '@progress/kendo-data-query';\r\nimport { GridColumnHeader } from '../../_models/grid-column-header.model';\r\nimport { CascadedSelectOption } from '../../_models/cascaded-select-option.model';\r\nimport { FieldOption } from '../../_models/field-option.model';\r\nimport { DataItemValue } from '../../_models/data-item-value.model';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { IntlService } from '@progress/kendo-angular-intl';\r\nimport { AssetSortTermDto } from '../../_api/_runtime/dtos/asset-sort-term.dto';\r\nimport { AssetDto } from '../../_api/_runtime/dtos/asset.dto';\r\nimport { FormField } from '../../_models/form-field.model';\r\nimport { ColumnAddedEvent } from '../../_models/column-added-event.model';\r\nimport { FieldMetaDataDto } from '../../_api/_runtime/dtos/field-meta-data.dto';\r\nimport { GridReorderEvent } from '../../_models/shared/famis-grid-reorder-event.model';\r\n\r\n@Component({\r\n  selector: 'reconcile-data-grid',\r\n  templateUrl: './reconcile-data-grid.component.html'\r\n})\r\nexport class ReconcileDataGridComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  public formGroup: FormGroup;\r\n  private editedRowIndex: string;\r\n\r\n  @Input()\r\n  dataSource: number;\r\n  @Input()\r\n  selectedRows: Array<string>;\r\n  @Input()\r\n  fileName: string;\r\n\r\n  @Output()\r\n  selectionChanged = new EventEmitter<SelectionChangeEvent>();\r\n  @Output()\r\n  matchSelected = new EventEmitter<MatchSelectionEvent>();\r\n  @Output()\r\n  parentChildSelected = new EventEmitter<Asset>();\r\n  @Output()\r\n  clearSelection = new EventEmitter<DataTargetName>();\r\n\r\n  public sort: SortDescriptor[];\r\n\r\n  public groupId: string;\r\n  public loading: Subscription | boolean;\r\n  public dataLoaded = false;\r\n\r\n  public assetFileSummary = <AssetFileSummaryDto>{};\r\n\r\n  public fieldTypes = FieldType;\r\n\r\n  private gridScrollDebouncer: Subject<any> = new Subject();\r\n\r\n  // TODO: Unsubscribe after ngOnDestroy\r\n  public view: GridDataResult;\r\n\r\n  public state: State = {\r\n    skip: 0,\r\n    take: this.reconcileDataGridService.windowSize\r\n  };\r\n\r\n  @ViewChild(GridComponent, {static: false})\r\n  private grid: GridComponent;\r\n\r\n  @ViewChild(UpsertAssetRecordComponent, {static: false})\r\n  private upsertAssetRecord: UpsertAssetRecordComponent;\r\n\r\n  @ViewChild('parentChildMatchDetail', {static: false})\r\n  private parentChildMatchDetail: ParentChildMatchDetailComponent;\r\n\r\n  @ViewChild(CopyAssetRecordComponent, {static: false})\r\n  private copyAssetRecordComponent: CopyAssetRecordComponent;\r\n\r\n  public assets = new Array<Asset>();\r\n  public filterRoot: CompositeFilterDescriptor;\r\n  public showEditRecord = false;\r\n  public headers = new Array<GridColumnHeader>();\r\n  public selectedHeaders = new Array<GridColumnHeader>();\r\n  public updatedSelectedHeaders = new Array<string>();\r\n\r\n  public dataTargetName = DataTargetName;\r\n\r\n  public headersAvailable = new Array<GridColumnHeader>();\r\n\r\n  public gridDataTotal = 0;\r\n\r\n  public totalRecordCount = 0;\r\n\r\n  public unsavedEdits: Array<Asset> = new Array<Asset>();\r\n\r\n  public groupSiteInfo = new Array<CascadedSelectOption>();\r\n  public groupDepartments = new Array<FieldOption>();\r\n  public groupAccounts = new Array<FieldOption>();\r\n\r\n  public expandedMatchIndex: number = null;\r\n\r\n  public gridSettingsLoaded: boolean | undefined = undefined;\r\n  public allMatched = false;\r\n  public noFile = false;\r\n  public hasCustomColumns = false;\r\n\r\n  private isDebugMode = false;\r\n\r\n  public selectableSettings = {\r\n    checkboxOnly: false,\r\n    mode: 'multiple'\r\n  };\r\n\r\n  public cascadedSelectedOption: Array<CascadedSelectOption> = new Array<CascadedSelectOption>();\r\n\r\n  /* A Subject for monitoring the destruction of the component. */\r\n  private destroyed$ = new Subject<any>();\r\n\r\n  public editedRecords = new Array<DataItemValue>();\r\n  public editedRecordsWithErrors = new Array<DataItemValue>();\r\n\r\n  gridSettingsName: string | undefined = undefined;\r\n  userId: string | undefined = undefined;\r\n\r\n  public selectAllState: SelectAllCheckboxState = 'unchecked';\r\n\r\n  public allAssetIds = new Array<string>();\r\n  public mappedColumns: String[];\r\n  constructor(\r\n    private reconcileMatchService: ReconcileMatchService,\r\n    private reconcileDataService: ReconcileDataService,\r\n    private reconcileDataGridService: ReconcileDataGridService,\r\n    private inventoryService: ReconciliationInventoryService,\r\n    private route: ActivatedRoute,\r\n    private helperService: HelperService,\r\n    private parentChildService: ParentChildService,\r\n    private alertService: AlertService,\r\n    private assetFileInfoService: AssetFileInfoService,\r\n    private intl: IntlService,\r\n    private famisGridService: FamisGridService,\r\n    private userGridService: UserGridService,\r\n    private router: Router,\r\n    private userStore: UserStore\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    const s = this;\r\n\r\n    this.gridSettingsName = this.userGridService.createUserGridId(this.dataSource.toString(), this.router.url.toString());\r\n\r\n    this.loading = true;\r\n\r\n    this.groupId = this.route.parent.parent.snapshot.paramMap.get('groupId');\r\n\r\n    this.reconcileDataGridService.groupId = this.groupId;\r\n\r\n    const defaultSortTerms = [<AssetSortTermDto>{ termOrder: 0, sortDirection: 0, field: 'SerialNumber' }];\r\n\r\n    this.reconcileDataGridService.toggleShowMatchedRecords(true, this.dataSource);\r\n\r\n    this.editedRecords = new Array<DataItemValue>();\r\n\r\n    this.famisGridService.editedRecords$.subscribe(editedRecords => {\r\n      this.editedRecords = editedRecords;\r\n    });\r\n\r\n    this.editedRecordsWithErrors = new Array<DataItemValue>();\r\n\r\n    this.famisGridService.editedRecordsWithErrors$.subscribe(editedRecordsWithErrors => {\r\n      this.editedRecordsWithErrors = editedRecordsWithErrors;\r\n    });\r\n\r\n    const getInventoryRecords = this.reconcileDataGridService.search(\r\n      this.groupId,\r\n      this.dataSource,\r\n      this.state.skip,\r\n      this.state.take,\r\n      defaultSortTerms,\r\n      this.reconcileDataGridService.filterTerms[this.dataSource],\r\n      true\r\n    );\r\n\r\n    const getActivityCodes = this.reconcileDataGridService.getActivityCodes();\r\n\r\n    const getAssetFileSummary = this.inventoryService.getAssetFileSummary(this.groupId, this.dataSource);\r\n\r\n    this.reconcileDataGridService.clearSelections$.subscribe(result => {\r\n\r\n      this.selectAllState = 'unchecked';\r\n\r\n    });\r\n\r\n    forkJoin(getInventoryRecords, getAssetFileSummary, getActivityCodes)\r\n      .pipe(takeUntil(this.destroyed$))\r\n      .subscribe(\r\n        ([inventoryRecords, assetFileSummary, activityCodes]) => {\r\n          this.assetFileSummary = assetFileSummary;\r\n\r\n          if (!!this.assetFileSummary && this.dataSource === DataTargetName.client) {\r\n            this.hasCustomColumns = assetFileSummary.fields.findIndex(f => f.isCustom === true) !== -1;\r\n          }\r\n\r\n          this.assets = this.reconcileDataGridService.init(inventoryRecords, this.dataSource);\r\n          this.reconcileDataGridService.setCacheRecords(this.assets, this.dataSource, this.state.skip, this.totalRecordCount);\r\n          this.assetFileInfoService.updateReferenceData(activityCodes.result.enumOptions, 'ActivityCodes');\r\n          this.assets = this.assetFileInfoService.mapEnums(\r\n            null,\r\n            this.assets.map(asset => {\r\n              return asset;\r\n            }),\r\n            null\r\n          );\r\n\r\n          this.reconcileDataGridService.updateRecordCount(this.dataSource, inventoryRecords.totalInRecordSet);\r\n          this.totalRecordCount = inventoryRecords.totalInRecordSet;\r\n\r\n          this.view = this.mapGridDataResult();\r\n\r\n          this.headersAvailable =\r\n            this.helperService\r\n              .mapHeaders(\r\n                assetFileSummary.fields,\r\n                this.assetFileInfoService.GetInternalColumns(),\r\n                this.reconcileDataGridService.defaultHeaders\r\n              );\r\n\r\n          const defaultSort = true;\r\n\r\n          this.reconcileDataGridService.updateHeaders(this.headersAvailable, this.dataSource, defaultSort);\r\n\r\n          this.dataLoaded = inventoryRecords.totalInRecordSet > 0;\r\n\r\n          this.allAssetIds = inventoryRecords.allAssetIds;\r\n\r\n          this.userStore.user.subscribe(user => {\r\n            this.userId = user.profile.IdentityId.toString();\r\n            this.gridSettingsName = this.userId + this.gridSettingsName + this.dataTargetName;\r\n            this.userGridService\r\n              .getSettings(\r\n                this.userId,\r\n                this.gridSettingsName,\r\n                this.reconcileDataGridService.defaultHeaders.map(c => c.name))\r\n                .subscribe(result => {\r\n                  s.gridSettingsLoaded = true;\r\n                  s.state.filter = result.filters ? result.filters : null;\r\n                  if (result.gridSort) {\r\n                    s.sort = result.gridSort;\r\n                    s.state.sort = result.gridSort;\r\n                    s.reconcileDataGridService.currentSort[this.dataSource] = s.mapSortDto(result.gridSort);\r\n                  }\r\n                  s.reconcileDataGridService.updateSelectedHeaders(result.headers, this.dataSource);\r\n                  if (result.filters) {\r\n                    s.state.filter = result.filters;\r\n                  }\r\n                  if ((result.filters && result.gridSort) || result.filters) {\r\n                    s.filterChange(result.filters);\r\n                  } else if (!result.filters && result.gridSort) {\r\n                    s.sortChange(result.gridSort);\r\n                  }\r\n                  this.userGridService.saveSettings(\r\n                    this.gridSettingsName,\r\n                    result.headers,\r\n                    this.groupId,\r\n                    this.userId,\r\n                    result.kendoGridState ? result.kendoGridState : null,\r\n                    result.filters ? result.filters : null,\r\n                    result.columnSizes ? result.columnSizes : null,\r\n                    result.gridSort ? result.gridSort : null\r\n                  ).subscribe(updatedSetting => this.userGridService.updateUserSettingsCache(updatedSetting));\r\n                });\r\n          });\r\n          this.allMatched = inventoryRecords.totalInRecordSet === 0;\r\n          this.loading = false;\r\n        },\r\n        error => {\r\n          this.noFile = true;\r\n          this.loading = false;\r\n        }\r\n      );\r\n\r\n    this.reconcileDataGridService.selectedHeaders$.subscribe(result => {\r\n      if (result) {\r\n        this.updatedSelectedHeaders = result[s.dataSource];\r\n        this.headers = this.headersAvailable.filter(function(x) {\r\n          return result[s.dataSource].some(c => c === x.name);\r\n        });\r\n\r\n        let order = 0;\r\n        result[s.dataSource].forEach(headerName => {\r\n          const index = this.headers.findIndex(c => c.name === headerName);\r\n\r\n          if (index !== -1) {\r\n            this.headers[index].order = order++;\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    this.reconcileDataGridService.unsavedEdits$.subscribe(unsavedEdits => {\r\n      if (unsavedEdits[this.dataSource]) {\r\n        this.unsavedEdits = unsavedEdits[this.dataSource];\r\n      }\r\n    });\r\n\r\n    this.assetFileInfoService.getImportMappedColumns(this.reconcileDataGridService.groupId)\r\n    .subscribe(\r\n     result => {\r\n       const userSettingdto = result;\r\n       const index = 0;\r\n       if (userSettingdto.length > 0 && userSettingdto[index].settingJson) {\r\n         this.mappedColumns = userSettingdto[index].settingJson.importMappedColumns;\r\n       }\r\n     }\r\n   );\r\n\r\n    this.showEditRow();\r\n\r\n    this.filterRoot = { logic: 'and', filters: [] };\r\n\r\n    // Filter out Parent/Child matches\r\n    this.filterRoot.filters.push({\r\n      field: 'isChild',\r\n      operator: 'eq',\r\n      value: false\r\n    });\r\n\r\n    // this.showMatchedRecords(false);\r\n    this.collapseParentChild();\r\n\r\n    this.gridScrollDebouncer.pipe(debounceTime(500))\r\n    .subscribe(event => {\r\n      this.processPageChange(event);\r\n    });\r\n\r\n    this.reconcileDataService.groupSiteInfo$.subscribe(groupSiteInfo => {\r\n      this.groupSiteInfo = groupSiteInfo;\r\n    });\r\n\r\n    this.reconcileDataService.groupDepartmentInfo$.subscribe(departments => {\r\n      this.groupDepartments = departments;\r\n    });\r\n\r\n    this.reconcileDataService.groupAccountInfo$.subscribe(accounts => {\r\n      this.groupAccounts = accounts;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  public isDirty(): boolean {\r\n    return this.editedRecords.length + this.editedRecordsWithErrors.length !== 0;\r\n  }\r\n\r\n  public duplicateRecord(): void {\r\n    const assetToDuplicate = this.assets.find(c => c.assetId === this.selectedRows[0]);\r\n\r\n    if (assetToDuplicate) {\r\n      assetToDuplicate.assetId = null;\r\n\r\n      this.upsertAssetRecord.openCreateModal(this.groupId, this.dataSource, assetToDuplicate);\r\n      this.upsertAssetRecord.AssetUpsertComplete.subscribe(() => {\r\n        this.clearSelection.emit(this.dataSource);\r\n        this.updateCurrentView(true);\r\n      });\r\n    }\r\n  }\r\n\r\n  public onSelectedKeysChange(e) {\r\n    const len = this.selectedRows.length;\r\n\r\n    if (len === 0) {\r\n      this.selectAllState = 'unchecked';\r\n    } else if (len > 0 && len < this.totalRecordCount) {\r\n      this.selectAllState = 'indeterminate';\r\n    } else {\r\n      this.selectAllState = 'checked';\r\n    }\r\n  }\r\n\r\n  public onSelectAllChange(checkedState: SelectAllCheckboxState) {\r\n    if (checkedState === 'checked') {\r\n      this.selectedRows = this.allAssetIds;\r\n      this.selectAllState = 'checked';\r\n    } else {\r\n      this.selectedRows = [];\r\n      this.selectAllState = 'unchecked';\r\n    }\r\n  }\r\n\r\n  public gridSelectionChange(event: SelectionEvent) {\r\n\r\n    if (this.selectAllState === 'unchecked') {\r\n      const selectedAssets = new Array<Asset>();\r\n\r\n      this.allAssetIds.forEach(id => {\r\n        selectedAssets.push(<Asset>{ assetId: id, dataSource: this.dataSource});\r\n      });\r\n\r\n      const selectionChangeEvent = <SelectionChangeEvent>{\r\n        dataSource: this.dataSource,\r\n        itemsAdded: new Array<Asset>(),\r\n        itemsRemoved: selectedAssets\r\n      };\r\n\r\n      this.selectionChanged.emit(selectionChangeEvent);\r\n    }\r\n\r\n    if (this.selectAllState === 'checked') {\r\n      const selectedAssets = new Array<Asset>();\r\n\r\n      this.allAssetIds.forEach(id => {\r\n        selectedAssets.push(<Asset>{ assetId: id, dataSource: this.dataSource});\r\n      });\r\n\r\n      const selectionChangeEvent = <SelectionChangeEvent>{\r\n        dataSource: this.dataSource,\r\n        itemsAdded: selectedAssets,\r\n        itemsRemoved: new Array<Asset>()\r\n      };\r\n\r\n      this.selectionChanged.emit(selectionChangeEvent);\r\n    }\r\n\r\n    if (this.selectAllState !== 'checked') {\r\n      const selectionChangeEvent = <SelectionChangeEvent>{\r\n        dataSource: this.dataSource,\r\n        itemsAdded: <Asset[]>event.selectedRows.map(c => c.dataItem),\r\n        itemsRemoved: <Asset[]>event.deselectedRows.map(c => c.dataItem)\r\n      };\r\n\r\n      this.selectionChanged.emit(selectionChangeEvent);\r\n    }\r\n  }\r\n\r\n  public rowCallback = (context: any) => {\r\n    const id = context.dataItem.id;\r\n\r\n    let classes = '';\r\n\r\n    if (this.editedRecordsWithErrors && this.editedRecordsWithErrors.findIndex(c => c.itemId === id) !== -1) {\r\n      classes = 'withErrors ';\r\n    }\r\n\r\n    if (this.editedRecords && this.editedRecords.findIndex(c => c.itemId === id) !== -1) {\r\n      classes = classes + 'editedRow ';\r\n    }\r\n\r\n    if (context.dataItem.isMatched) {\r\n      classes = classes + 'isMatched ';\r\n    }\r\n\r\n    if (!context.dataItem.isMatched) {\r\n      classes = classes + 'isNotMatched ';\r\n    }\r\n\r\n    if (context.dataItem.isParent) {\r\n      classes = classes + 'isParent ';\r\n    }\r\n\r\n    if (context.dataItem.isEdited) {\r\n      classes = classes + 'isEdited ';\r\n    }\r\n\r\n    return classes;\r\n  }\r\n\r\n  public getHeaders(obj) {\r\n    const keys = Object.keys(obj).map(key => {\r\n      return { key: key };\r\n    });\r\n\r\n    return keys;\r\n  }\r\n\r\n  public saveEdits(): void {\r\n    let updateCount = 0;\r\n\r\n    this.unsavedEdits.forEach(asset => {\r\n      let assetDto = <AssetDto>{ id: asset.assetId };\r\n\r\n      delete asset.assetId;\r\n      delete asset.dataSource;\r\n      delete asset.isChild;\r\n      delete asset.isEdited;\r\n      delete asset.isParent;\r\n      delete asset.isMatched;\r\n      delete asset.imageCollection;\r\n\r\n      assetDto = Object.assign(assetDto, asset);\r\n\r\n      this.inventoryService.updateAssetRecord(assetDto.id, assetDto).subscribe(\r\n        result => {\r\n          if (result) {\r\n            updateCount = updateCount + 1;\r\n          }\r\n        },\r\n        error => {\r\n          this.updateCurrentView(true);\r\n          this.alertService.error(`Invalid data entered and data cannot be saved`);\r\n        },\r\n        () => {}\r\n      );\r\n    });\r\n\r\n    this.alertService.success(`${updateCount} Assets Updated`);\r\n\r\n    this.updateCurrentView(true);\r\n  }\r\n\r\n  public clearEdits(): void {\r\n    this.reconcileDataGridService.clearEditInProgress(this.dataSource);\r\n    this.updateCurrentView(true);\r\n  }\r\n\r\n  public editClick({ sender, rowIndex, columnIndex, dataItem, isEdited, originalEvent }) {\r\n    const header = this.headers[columnIndex - 4];\r\n\r\n    if (!isEdited && this.isEditable(header)) {\r\n      const fields = new Array<FormField>();\r\n\r\n      this.headers.forEach(h => {\r\n        fields.push(<FormField>{ id: h.name, displayName: h.displayName });\r\n      });\r\n\r\n      this.formGroup = this.helperService.toFormGroup(fields);\r\n\r\n      this.formGroup.patchValue(this.famisGridService.mapToTypedValues(dataItem, this.headers));\r\n\r\n      sender.editCell(rowIndex, columnIndex, this.formGroup);\r\n    }\r\n  }\r\n\r\n  public cellCloseHandler(args: any) {\r\n    const { formGroup, dataItem } = args;\r\n\r\n    if (!formGroup.valid) {\r\n      // prevent closing the edited cell if there are invalid values.\r\n      args.preventDefault();\r\n    } else if (formGroup.dirty) {\r\n      const currentAsset = this.assets.find(c => c.assetId === dataItem.assetId);\r\n\r\n      if (currentAsset) {\r\n        // tslint:disable-next-line:prefer-const\r\n        let updatedAsset = JSON.parse(JSON.stringify(Object.assign(currentAsset, formGroup.value)));\r\n\r\n        updatedAsset.id = updatedAsset.assetId;\r\n\r\n        delete updatedAsset.assetId;\r\n        delete updatedAsset.isParent;\r\n        delete updatedAsset.isMatched;\r\n        delete updatedAsset.isChild;\r\n        delete updatedAsset.dataSource;\r\n        delete updatedAsset.imageCollection;\r\n\r\n        this.famisGridService.addEditedRecord(updatedAsset.id, updatedAsset);\r\n      }\r\n    }\r\n  }\r\n\r\n  public inGridSave() {\r\n    const resultToSave = JSON.parse(JSON.stringify(this.editedRecords));\r\n\r\n    console.log(event, 'handleCellValueChanged');\r\n\r\n    resultToSave.forEach(editItem => {\r\n      delete editItem.dataItem.assetId;\r\n      delete editItem.dataItem.isParent;\r\n      delete editItem.dataItem.isMatched;\r\n      delete editItem.dataItem.isChild;\r\n      delete editItem.dataItem.dataSource;\r\n      delete editItem.dataItem.imageCollection;\r\n      delete editItem.dataItem.assetImages;\r\n\r\n      this.inventoryService.updateAssetRecord(editItem.itemId, editItem.dataItem).subscribe(\r\n        result => {\r\n          if (result) {\r\n            this.updateCurrentView(true);\r\n\r\n            this.alertService.success('Asset(s) edited successfuly');\r\n\r\n            this.famisGridService.removeEditedRecord(editItem.itemId);\r\n            this.famisGridService.removeRecordWithErrors(editItem.itemId);\r\n          }\r\n        },\r\n        error => {\r\n          this.updateCurrentView(true);\r\n          this.alertService.error('Invalid data entered and data cannot be saved');\r\n        },\r\n        () => {}\r\n      );\r\n    });\r\n  }\r\n\r\n  public toggleParentChildMatch(asset: Asset, rowIndex?: number) {\r\n    this.collapseParentChild();\r\n\r\n    this.reconcileMatchService.getMatchSummaryForAssetIds(this.groupId, [asset.assetId]).subscribe(x => {\r\n      const currentChildren = new Array<Asset>();\r\n\r\n      x.result.assetData\r\n        .filter(c => !!c.parentId && c.isParent === false)\r\n        .forEach(child => {\r\n          const a = <Asset>{\r\n            assetId: child.id,\r\n            oldTagNumber: child.oldTagNumber,\r\n            description: child.description,\r\n            parentId: child.parentId,\r\n            assetTagNumber: child.assetTagNumber,\r\n            serialNumber: child.serialNumber,\r\n            modelNumber: child.modelNumber,\r\n            buildingName: child.buildingName,\r\n            quantity: child.quantity,\r\n            historicalCost: child.historicalCost\r\n          };\r\n          currentChildren.push(a);\r\n        });\r\n\r\n      this.parentChildService.setChildren(currentChildren);\r\n    });\r\n\r\n    if (asset.isParent) {\r\n      if (this.expandedMatchIndex === null || rowIndex !== this.expandedMatchIndex) {\r\n        this.grid.expandRow(rowIndex);\r\n        this.expandedMatchIndex = rowIndex;\r\n      } else {\r\n        this.collapseParentChild(true);\r\n      }\r\n    } else {\r\n      // Current is not Parent/Child\r\n      this.collapseParentChild(true);\r\n    }\r\n\r\n    this.parentChildSelected.emit(asset);\r\n  }\r\n\r\n  public showMatchForAsset(asset: Asset) {\r\n    this.collapseParentChild();\r\n\r\n    const event = <MatchSelectionEvent>{ dataSource: this.dataSource, asset: asset };\r\n\r\n    this.matchSelected.emit(event);\r\n  }\r\n\r\n  public openAddRecord() {\r\n    this.upsertAssetRecord.openCreateModal(this.groupId, this.dataSource);\r\n    this.upsertAssetRecord.AssetUpsertComplete.subscribe(() => {\r\n      this.updateCurrentView();\r\n    });\r\n  }\r\n\r\n  public openEditRecordForm(asset: Asset) {\r\n    this.upsertAssetRecord.openEditModal(this.groupId, this.dataSource, asset);\r\n    this.upsertAssetRecord.AssetUpsertComplete.subscribe(() => {\r\n      this.updateCurrentView();\r\n    });\r\n  }\r\n\r\n  public updateCurrentView(clearCache: boolean = false) {\r\n    const s = this;\r\n\r\n    this.loading = true;\r\n\r\n    this.reconcileDataGridService\r\n      .update(\r\n        this.dataSource,\r\n        this.state.skip,\r\n        this.state.take,\r\n        this.totalRecordCount,\r\n        this.reconcileDataGridService.currentSort[this.dataSource],\r\n        clearCache)\r\n      .subscribe(result => {\r\n        this.loading = false;\r\n        if (result && result.assets.length > 0 && result.assets[0].dataSource === this.dataSource) {\r\n          this.dataLoaded = result.assets.length > 0;\r\n          this.assets = result.assets;\r\n          this.totalRecordCount = result.totalInRecordSet;\r\n          this.allAssetIds = result.allAssetIds;\r\n          this.assets.map(asset => {\r\n            asset.imageCollection = !!asset.assetImages ? asset.assetImages : [];\r\n          });\r\n          this.assets = this.assetFileInfoService.mapEnums(\r\n            null,\r\n            this.assets.map(asset => {\r\n              return asset;\r\n            }),\r\n            null\r\n          );\r\n          this.view = s.mapGridDataResult();\r\n        } else {\r\n          this.assets = new Array<Asset>();\r\n          this.view = s.mapGridDataResult();\r\n        }\r\n      });\r\n  }\r\n\r\n  public callGridScrollDebouncer(event) {\r\n    this.gridScrollDebouncer.next(event);\r\n  }\r\n\r\n  showMatchedRecords(showMatches: boolean) {\r\n    if (showMatches) {\r\n      this.allMatched = false;\r\n    }\r\n    this.reconcileDataGridService.toggleShowMatchedRecords(!showMatches, this.dataSource);\r\n\r\n    this.updateCurrentView(true);\r\n  }\r\n\r\n  public sortChange(sort: SortDescriptor[]): void {\r\n    const s = this;\r\n    this.sort = sort;\r\n    this.state.sort = sort;\r\n    this.loading = true;\r\n\r\n    this.userGridService.saveActiveSorts(\r\n      this.gridSettingsName,\r\n      this.state,\r\n      sort\r\n    );\r\n\r\n    const sortTerms = s.mapSortDto(sort);\r\n\r\n    this.reconcileDataGridService\r\n      .update(\r\n        this.dataSource,\r\n        this.state.skip,\r\n        this.state.take,\r\n        this.totalRecordCount,\r\n        sortTerms,\r\n        true).subscribe(\r\n          result => {\r\n            this.loading = false;\r\n            if (result.assets.length > 0 && result.assets[0].dataSource === this.dataSource) {\r\n              this.assets = result.assets;\r\n              this.totalRecordCount = result.totalInRecordSet;\r\n              this.assets = this.assetFileInfoService.mapEnums(\r\n                null,\r\n                this.assets.map(asset => {\r\n                  return asset;\r\n                }),\r\n                null\r\n              );\r\n              this.view = s.mapGridDataResult();\r\n            }\r\n          }\r\n        );\r\n  }\r\n\r\n  public filterGrid() {\r\n    // TODO: Revisit this\r\n    this.collapseParentChild(true);\r\n    this.showEditRow();\r\n  }\r\n\r\n  private mapSortDto(sort: SortDescriptor[]): Array<AssetSortTermDto> {\r\n    const sortTerms = new Array<AssetSortTermDto>();\r\n\r\n      const orderCount = 0;\r\n\r\n      sort.forEach(c => {\r\n        const sortTerm = <AssetSortTermDto>{\r\n          termOrder: orderCount,\r\n          sortDirection: c.dir === 'asc' ? 0 : 1,\r\n          field: c.field\r\n        };\r\n\r\n        sortTerms.push(sortTerm);\r\n      });\r\n      return sortTerms;\r\n  }\r\n\r\n  public filterChange(filter: CompositeFilterDescriptor) {\r\n    this.loading = true;\r\n    this.state.filter = filter;\r\n    let filterCleared = false;\r\n\r\n    if (this.state.filter.filters.length === 0) {\r\n      filterCleared = true;\r\n    }\r\n\r\n    // persist the filters\r\n    this.userGridService\r\n      .saveActiveFilters(this.gridSettingsName,\r\n        this.state,\r\n        filter);\r\n\r\n    this.reconcileDataGridService.mapFilterTerms(filter, this.dataSource).subscribe(filterTerms => {\r\n      if (filterTerms === true) {\r\n        this.reconcileDataGridService\r\n          .search(\r\n            this.groupId,\r\n            this.dataSource,\r\n            this.state.skip,\r\n            this.state.take,\r\n            this.reconcileDataGridService.currentSort[this.dataSource],\r\n            this.reconcileDataGridService.filterTerms[this.dataSource]\r\n          )\r\n          .pipe(takeUntil(this.destroyed$))\r\n          .subscribe(result => {\r\n            this.assets = this.reconcileDataGridService.init(result, this.dataSource);\r\n            this.totalRecordCount = result.totalInRecordSet;\r\n            this.assets = this.assetFileInfoService.mapEnums(\r\n              null,\r\n              this.assets.map(asset => {\r\n                return asset;\r\n              }),\r\n              null\r\n            );\r\n            this.view = this.mapGridDataResult();\r\n            this.loading = false;\r\n            this.allAssetIds = result.allAssetIds;\r\n          });\r\n      } else {\r\n        this.updateCurrentView(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  public showColumn(columnKey: string): boolean {\r\n    const hideColumn =\r\n      this.reconcileDataService.defaultColumns\r\n        .indexOf(columnKey) !== -1 || this.assetFileInfoService.GetInternalColumns().indexOf(columnKey) !== -1;\r\n    return hideColumn;\r\n  }\r\n\r\n  public onAssetFileColumnsAdded(event: ColumnAddedEvent) {\r\n    const s = this;\r\n\r\n    if (event.columns && event.columns.length > 0) {\r\n      event.columns.forEach(col => {\r\n        this.reconcileDataGridService.addHeader(col.columnName, event.dataSource);\r\n      });\r\n\r\n      const clearCache = true;\r\n\r\n      this.updateCurrentView(clearCache);\r\n\r\n      this.inventoryService.getAssetFileSummary(this.groupId, this.dataSource).subscribe(assetFileSummary => {\r\n        this.headersAvailable =\r\n          this.helperService.mapHeaders(\r\n            assetFileSummary.fields,\r\n            this.assetFileInfoService.GetInternalColumns(),\r\n            this.reconcileDataGridService.defaultHeaders);\r\n\r\n        this.reconcileDataGridService.updateHeaders(this.headersAvailable, this.dataSource, true);\r\n\r\n        this.headers = this.headersAvailable.filter(function(x) {\r\n          return s.updatedSelectedHeaders.some(c => c === x.name);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  public convertToNumber(value: string): Number {\r\n    return parseFloat(value);\r\n  }\r\n\r\n  public getColumnTitle(column: GridColumnHeader): string {\r\n    return this.helperService.getColumnTitle(this.i18n.asset, column);\r\n  }\r\n\r\n  private processPageChange(state: DataStateChangeEvent): void {\r\n    const s = this;\r\n    s.loading = true;\r\n\r\n    s.reconcileDataGridService\r\n      .update(this.dataSource, state.skip, state.take, s.totalRecordCount, s.reconcileDataGridService.currentSort[s.dataSource], true)\r\n      .subscribe(result => {\r\n          s.loading = false;\r\n          result.assets = this.assetFileInfoService.mapEnums(\r\n            null,\r\n          result.assets.map(asset => {\r\n              return asset;\r\n            }),\r\n            null\r\n          );\r\n          if (result.assets.length > 0 && result.assets[0].dataSource === s.dataSource) {\r\n            s.assets = result.assets;\r\n            s.view = s.mapGridDataResult();\r\n          } else {\r\n            s.assets = new Array<Asset>();\r\n            s.view = s.mapGridDataResult();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  private isEditable(dataItem: GridColumnHeader) {\r\n    return dataItem &&\r\n      (\r\n        (dataItem.name !== 'buildingName' && this.dataSource === DataTargetName.inventory) ||\r\n        (this.dataSource === DataTargetName.client && dataItem.isCustom)\r\n      );\r\n  }\r\n\r\n  private isCustomField(field: string): boolean {\r\n    return this.headers.find(c => c.name === field).isCustom;\r\n  }\r\n\r\n  private mapHeaders(fields: FieldMetaDataDto[]): GridColumnHeader[] {\r\n    const s = this;\r\n    const columnHeadings = new Array<GridColumnHeader>();\r\n\r\n    fields.forEach(field => {\r\n      const columnHeading = <GridColumnHeader>{\r\n        name: field.name,\r\n        displayName: field.displayName,\r\n        isSearchable: field.isSearchable,\r\n        isFilterable: field.isFacetable,\r\n        isSortable: field.isSortable,\r\n        isFacetable: field.isFacetable,\r\n        isKey: field.isKey,\r\n        isCustom: field.isCustom,\r\n        fieldType: this.mapKendoFilterType(field.fieldType),\r\n        format: s.mapHeaderFormat(field)\r\n      };\r\n\r\n      columnHeadings.push(columnHeading);\r\n    });\r\n\r\n    return columnHeadings;\r\n  }\r\n\r\n  private mapGridDataResult(recordCount?: number): GridDataResult {\r\n    const assets = this.mapEdits(this.assets);\r\n\r\n    const gridDataResult = <GridDataResult>{\r\n      data: filterBy(assets, this.filterRoot),\r\n      total: this.totalRecordCount\r\n    };\r\n\r\n    return gridDataResult;\r\n  }\r\n\r\n  public collapseParentChild(clearIndex?: boolean) {\r\n    if (this.grid) {\r\n      this.grid.collapseRow(this.expandedMatchIndex);\r\n    }\r\n\r\n    if (clearIndex) {\r\n      this.expandedMatchIndex = null;\r\n    }\r\n  }\r\n\r\n  private showEditRow() {\r\n    if (this.assetFileSummary.fields && this.dataSource === DataTargetName.client) {\r\n      this.showEditRecord = this.assetFileSummary.fields.findIndex(f => f.isCustom === true) !== -1;\r\n    } else {\r\n      this.showEditRecord = true;\r\n    }\r\n  }\r\n\r\n  public onAssetModified($event) {\r\n    this.updateCurrentView();\r\n  }\r\n\r\n  public onColumnReorder(event: any) {\r\n    event.preventDefault();\r\n\r\n\r\n    const reorderEvent: GridReorderEvent = event;\r\n\r\n    // Determine which way to start indexes so always positive\r\n    const increaseOrder = reorderEvent.oldIndex > reorderEvent.newIndex;\r\n    let startIndex = this.updatedSelectedHeaders.indexOf(reorderEvent.column.field);\r\n    let endIndex =\r\n      increaseOrder ? startIndex - (reorderEvent.oldIndex - reorderEvent.newIndex)\r\n      : startIndex + (reorderEvent.newIndex - reorderEvent.oldIndex);\r\n\r\n    if (increaseOrder) {\r\n      const temp = startIndex;\r\n      startIndex = endIndex;\r\n      endIndex = temp;\r\n    }\r\n\r\n    // ReOrder Column to precede a locked column (eg actions, selection)\r\n    if (startIndex < 0) {\r\n      return;\r\n    }\r\n\r\n    // Find the selected column and update it with the destinations column's order value\r\n    if (increaseOrder) {\r\n      this.headersAvailable\r\n        .filter(x => x.name === this.updatedSelectedHeaders[endIndex])\r\n          [0].order = this.headersAvailable\r\n          .filter(x => x.name === this.updatedSelectedHeaders[startIndex])[0].order;\r\n    } else {\r\n      this.headersAvailable\r\n        .filter(x => x.name === this.updatedSelectedHeaders[startIndex])\r\n          [0].order = this.headersAvailable\r\n          .filter(x => x.name === this.updatedSelectedHeaders[endIndex])[0].order;\r\n    }\r\n\r\n    // Iterate over all columns between the selcted start and end, and update they're value to increase or decrease by 1\r\n    this.updatedSelectedHeaders.slice(increaseOrder ? startIndex : startIndex + 1, increaseOrder ? endIndex : endIndex + 1)\r\n      .forEach(item => {\r\n        this.headersAvailable.filter(x => x.name === item)[0].order = increaseOrder\r\n          ? this.headersAvailable.filter(x => x.name === item)[0].order + 1\r\n          : this.headersAvailable.filter(x => x.name === item)[0].order - 1;\r\n      }\r\n    );\r\n\r\n    // Update the order of the selected headers, so they can match the next time around a reorder is done\r\n    let i = 0;\r\n    this.updatedSelectedHeaders.slice(increaseOrder ? startIndex : startIndex + 1, increaseOrder ? endIndex : endIndex + 1)\r\n      .forEach(item => {\r\n        if (increaseOrder) {\r\n          const temp = this.updatedSelectedHeaders[endIndex - i];\r\n          this.updatedSelectedHeaders[endIndex - i] = this.updatedSelectedHeaders[endIndex - i - 1];\r\n          this.updatedSelectedHeaders[endIndex - i - 1] = temp;\r\n        } else {\r\n          const temp = this.updatedSelectedHeaders[startIndex + i];\r\n          this.updatedSelectedHeaders[startIndex + i] = this.updatedSelectedHeaders[startIndex + i + 1];\r\n          this.updatedSelectedHeaders[startIndex + i + 1] = temp;\r\n        }\r\n        i = i + 1;\r\n      }\r\n    );\r\n\r\n    // Update the headers and selected headers\r\n    this.reconcileDataGridService.updateHeaders(this.headersAvailable, this.dataSource);\r\n    this.reconcileDataGridService.updateSelectedHeaders(this.updatedSelectedHeaders, this.dataSource);\r\n\r\n    this.loading = true;\r\n    this.userGridService.saveSettings(this.gridSettingsName, this.updatedSelectedHeaders, this.groupId, this.userId).subscribe(\r\n      saveResult => {\r\n        /*  .getSettings(this.userId, this.gridSettingsName, this.reconcileDataGridService.defaultHeaders.map(c => c.name))\r\n        .subscribe */\r\n\r\n        this.userGridService.getSettings(\r\n          this.userId,\r\n          this.gridSettingsName,\r\n          this.reconcileDataGridService.defaultHeaders\r\n          .map(c => c.name)).subscribe(\r\n            updateResult => {\r\n              this.loading = false;\r\n            },\r\n            () => {\r\n              this.alertService.error('Error saving columns update');\r\n              this.loading = false;\r\n            }\r\n          );\r\n        },\r\n        () => {\r\n          this.alertService.error('Error saving columns update');\r\n          this.loading = false;\r\n        }\r\n      );\r\n    }\r\n\r\n  navigateToImportData(event: any): void {\r\n    event.preventDefault();\r\n    this.router.navigate([`project-profile/${this.groupId}/DataImport`]);\r\n  }\r\n\r\n  public editHandler({ sender, rowIndex, dataItem }: EditEvent): void {\r\n    if (this.formGroup && !this.formGroup.valid) {\r\n      return;\r\n    }\r\n\r\n    const fields = new Array<FormField>();\r\n\r\n    this.headers.forEach(header => {\r\n      fields.push(<FormField>{ id: header.name, type: FieldType.String, displayName: header.displayName });\r\n    });\r\n\r\n    // this.saveRow();\r\n    this.formGroup = this.helperService.toFormGroup(fields);\r\n    this.editedRowIndex = dataItem.id;\r\n    sender.editRow(rowIndex, this.formGroup);\r\n  }\r\n\r\n  public toKendoDate(dateString: string): Date {\r\n    return this.intl.parseDate(dateString);\r\n  }\r\n\r\n  private mapEdits(assets: Array<Asset>): Array<Asset> {\r\n    this.unsavedEdits.forEach(unsavedEdit => {\r\n      const index = this.assets.findIndex(c => c.assetId === unsavedEdit.assetId);\r\n\r\n      if (index !== -1) {\r\n        const assetWithEdits = Object.assign(assets[index], unsavedEdit);\r\n        this.assets[index] = assetWithEdits;\r\n      }\r\n    });\r\n\r\n    return assets;\r\n  }\r\n\r\n  private mapHeaderFormat(header: FieldMetaDataDto): string {\r\n    switch (header.fieldType) {\r\n      case FieldType.Integer: {\r\n        return '{0}';\r\n      }\r\n\r\n      case FieldType.Double: {\r\n        return '{0:c}';\r\n      }\r\n\r\n      case FieldType.DateTime: {\r\n        return '{0:d}';\r\n      }\r\n\r\n      default: {\r\n        return '{0}';\r\n      }\r\n    }\r\n  }\r\n\r\n  private mapKendoFilterType(fieldType: FieldType): string {\r\n    switch (fieldType) {\r\n      case FieldType.String:\r\n        return 'string';\r\n      case FieldType.DateTime:\r\n        return 'date';\r\n      case FieldType.Double:\r\n        return 'numeric';\r\n      case FieldType.Integer:\r\n        return 'numeric';\r\n      case FieldType.String:\r\n        return 'string';\r\n      default:\r\n        return 'numeric';\r\n    }\r\n  }\r\n\r\n  mapFieldTypes(dataItem: Asset): Asset {\r\n    const props = Object.keys(dataItem);\r\n\r\n    const dateHeaders = this.headers.filter(c => c.fieldType === 'date');\r\n\r\n    const numericHeaders = this.headers.filter(c => c.fieldType === 'numeric');\r\n    props.forEach(property => {\r\n      if (dateHeaders.findIndex(c => c.name === property) !== -1) {\r\n        const date = this.intl.parseDate(dataItem[property]);\r\n\r\n        dataItem[property] = date;\r\n      }\r\n\r\n      if (numericHeaders.findIndex(c => c.name === property) !== -1) {\r\n        dataItem[property] = this.intl.parseNumber(dataItem[property], 'n2');\r\n      }\r\n    });\r\n\r\n    return dataItem;\r\n  }\r\n}\r\n","import { AlertService } from '../../_core/services/alert.service';\r\nimport { ReconciliationInventoryService } from '../services/inventory.service';\r\nimport { ReconcileMatchService } from '../services/reconcile-match.service';\r\nimport { AllocationService } from '../services/allocation.service';\r\nimport { ParentChildService } from '../services/parent-child.service';\r\nimport { ReconcileDataService } from '../services/reconcile-data.service';\r\n\r\nimport { ParentChildMatchComponent } from './parent-child-match.component';\r\nimport { ReconcileDataAllocationsComponent } from './reconcile-data-allocations.component';\r\nimport { ReconcileDataGridComponent } from './reconcile-data-grid.component';\r\nimport { OrderAssetColumnsComponent } from './order-asset-columns-component';\r\nimport { MassMatchService } from '../services/mass-match/mass-match.service';\r\nimport { ReconciliationValidationComponent } from './reconciliation-validation.component';\r\nimport { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { ReconcileDataGridService } from '../services/reconcile-data-grid.service';\r\nimport { BuildingInfoService } from '../../_core/services/building-info-service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { ConfirmModalComponent } from '../../_shared/components/confirm-modal.component';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ComponentCanDeactivate } from '../../_core/guards/component-can-deactivate';\r\nimport { CanDeactivateService } from '../../_core/guards/can-deactivate.service';\r\nimport { fadeInOutAnimation } from '../../_core/animations/fade-in-out.animation';\r\nimport { ReconciliationMatchType } from '../../_enums/reconciliation-match-type';\r\nimport { DataTargetName } from '../../_enums/data-target-name';\r\nimport { Asset } from '../../_models/asset.model';\r\nimport { GroupMatchCode } from '../../_models/group-match-code.model';\r\nimport { MatchCodesService } from '../../_api/services/reconciliation/match-codes.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SelectionChangeEvent } from '../../_models/selection-change-event.model';\r\nimport { ModalProperties } from '../../_models/modal-properties.model';\r\nimport { MatchSelectionEvent } from '../../_models/match-selection-event.model';\r\nimport { ApiServiceResult } from '../../_api/dtos/api-service-result.dto';\r\nimport { ReconciliationSummaryResult, AssetDto } from '../../_api/dtos/reconciliation/reconciliation-summary-result.dto';\r\n\r\nenum AssetFileType {\r\n  ClientFile,\r\n  ActualInventory\r\n}\r\n\r\n@Component({\r\n  selector: 'reconcile-data',\r\n  templateUrl: './reconcile-data.component.html',\r\n  animations: [fadeInOutAnimation]\r\n})\r\nexport class ReconcileDataComponent extends ComponentCanDeactivate implements OnInit, TranslatedComponent, AfterViewInit {\r\n\r\n\r\n  i18n = TranslationBaseKeys;\r\n  // Show/hide Asset Ids for debugging\r\n  public isDebugMode = true;\r\n\r\n  public matchTypes = ReconciliationMatchType;\r\n  public selectedMatchType: number;\r\n  public dataTargetName = DataTargetName;\r\n\r\n  public selectedClientFileItems: Array<Asset> = new Array<Asset>();\r\n  public selectedInventoryItems: Array<Asset> = new Array<Asset>();\r\n\r\n  selectedInventoryIds: Array<string> = new Array<string>();\r\n  selectedClientFileIds: Array<string> = new Array<string>();\r\n  public hasSelectedItems: boolean;\r\n  public showValidationErrors: boolean;\r\n\r\n  public selectedMatchCodeId = '';\r\n\r\n  public matchCodes: any;\r\n  public disabledMatchCodes: Array<GroupMatchCode>;\r\n\r\n  public selectedGroupId: string;\r\n\r\n  public canMassMatch = false;\r\n  public inventoryFileCount = 0;\r\n  public clientFileCount = 0;\r\n\r\n  public currentChildren = new Array<Asset>();\r\n\r\n  public isBusy = false;\r\n  public isMatchSummaryExpanded = false;\r\n\r\n  clientFileGridBusy: boolean;\r\n  inventoryGridBusy: boolean;\r\n\r\n  @ViewChild(ParentChildMatchComponent, {static: false}) parentChildMatchComponent: ParentChildMatchComponent;\r\n\r\n  @ViewChild(ReconcileDataAllocationsComponent, {static: false}) reconcileDataAllocationsComponent: ReconcileDataAllocationsComponent;\r\n\r\n  @ViewChild('clientFileGrid', {static: false}) private clientFileGrid: ReconcileDataGridComponent;\r\n  @ViewChild('inventoryGrid', {static: false}) private inventoryGrid: ReconcileDataGridComponent;\r\n  @ViewChild(OrderAssetColumnsComponent, {static: false}) orderClientAssetColumns: OrderAssetColumnsComponent;\r\n  @ViewChild(OrderAssetColumnsComponent, {static: false}) orderInventoryAssetColumns: OrderAssetColumnsComponent;\r\n  @ViewChild(ReconciliationValidationComponent, { static: false}) reconciliationValidationComponent: ReconciliationValidationComponent;\r\n  @ViewChild('acceptMatchForm', {static: false}) private acceptMatchForm: NgForm;\r\n\r\n  constructor(\r\n    private reconcileDataService: ReconcileDataService,\r\n    private reconcileMatchService: ReconcileMatchService,\r\n    private inventoryService: ReconciliationInventoryService,\r\n    private matchCodesService: MatchCodesService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private allocationService: AllocationService,\r\n    private alertService: AlertService,\r\n    private parentChildService: ParentChildService,\r\n    private massMatchService: MassMatchService,\r\n    private reconcileGridService: ReconcileDataGridService,\r\n    private buildingInfoService: BuildingInfoService,\r\n    private modalService: NgbModal,\r\n    private canDeactivateService: CanDeactivateService\r\n  ) { super(); }\r\n\r\n  ngOnInit() {\r\n    this.selectedGroupId = this.reconcileDataService.groupId;\r\n\r\n    this.reconcileDataService.validateReconciliation(false).subscribe(result => {\r\n      if (result.isReconciliationComplete) {\r\n        this.showValidationErrors = false;\r\n      } else {\r\n        this.showValidationErrors = true;\r\n      }\r\n    });\r\n\r\n    this.clientFileGridBusy = true;\r\n    this.inventoryGridBusy = true;\r\n\r\n    this.reconcileGridService.clearCachedRecords();\r\n    this.reconcileGridService.clearRecordCounts();\r\n    this.reconcileMatchService.clearCurrentMatch();\r\n    this.reconcileGridService.clearHeaders();\r\n    this.reconcileGridService.clearSelectedHeaders();\r\n    this.reconcileGridService.resetFilters(null, true);\r\n\r\n    this.reconcileMatchService.selectedMatch$.subscribe(matchedItems => {\r\n      this.selectedClientFileItems = matchedItems.filter(c => c.dataSource === DataTargetName.client);\r\n      this.selectedInventoryItems = matchedItems.filter(c => c.dataSource === DataTargetName.inventory);\r\n\r\n      this.selectedClientFileIds = this.selectedClientFileItems.map(c => c.assetId);\r\n      this.selectedInventoryIds = this.selectedInventoryItems.map(c => c.assetId);\r\n    });\r\n\r\n    this.allocationService.clearSelections();\r\n\r\n    this.matchCodesService.getGroupMatchCodes(this.selectedGroupId).subscribe(result => {\r\n      this.matchCodes = new Array<GroupMatchCode>();\r\n      this.disabledMatchCodes = new Array<GroupMatchCode>();\r\n      result.forEach(code => {\r\n        if (code.groupMatchCodeIsEnabled && code.matchCodeIsEnabled) {\r\n          this.matchCodes.push(code);\r\n        }\r\n        if (code.groupMatchCodeIsEnabled && !code.matchCodeIsEnabled) {\r\n          this.disabledMatchCodes.push(code);\r\n        }\r\n      });\r\n    });\r\n\r\n    this.reconcileGridService.recordCounts$.subscribe(counts => {\r\n      this.clientFileCount = counts[DataTargetName.client];\r\n      this.inventoryFileCount = counts[DataTargetName.inventory];\r\n\r\n      this.massMatchService.init(this.clientFileCount, this.inventoryFileCount);\r\n      this.canMassMatch = this.massMatchService.canMassMatch;\r\n    });\r\n\r\n    this.parentChildService.children$.subscribe(currentChildren => {\r\n      this.currentChildren = currentChildren;\r\n    });\r\n\r\n    this.buildingInfoService.getBuildingHierarchyByGroupId(this.selectedGroupId).subscribe(hierachy => {\r\n      this.reconcileDataService.updateGroupSiteInfo(this.buildingInfoService.mapSitesToSelectOptions(hierachy));\r\n    });\r\n\r\n    this.inventoryService.getGroupAccountOptions(this.selectedGroupId).subscribe(accountOptions => {\r\n      this.reconcileDataService.updateGroupAccountInfo(accountOptions);\r\n    });\r\n\r\n    this.inventoryService.getGroupDepartmentsOptions(this.selectedGroupId).subscribe(departmentOptions => {\r\n      this.reconcileDataService.updateGroupDepartmentInfo(departmentOptions);\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.reconciliationValidationComponent.noLongerBusy.subscribe((result) => {\r\n      console.log(result);\r\n      if (result) {\r\n        this.isBusy = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit(form: any) {\r\n    if (form.valid) {\r\n\r\n      let isEditingMatch = false;\r\n\r\n      let selectedMatchIds = new Array<string>();\r\n\r\n      selectedMatchIds = this.selectedClientFileItems.map(c => c.matchId).concat(this.selectedInventoryItems.map(c => c.matchId));\r\n\r\n      if (selectedMatchIds.length > 0) {\r\n        // Checking selected match ids if all the same then a one to one match is selected for editing\r\n        isEditingMatch = !!selectedMatchIds.every(c => !!c && c === selectedMatchIds[0]);\r\n      }\r\n\r\n      // console.log(isEditingMatch);\r\n\r\n      if (!isEditingMatch) {\r\n        const numSelectedClient = this.selectedClientFileItems.length;\r\n        const numSelectedInventory = this.selectedInventoryItems.length;\r\n\r\n        // Can't Create a match if the slected items are already matched\r\n        let isValidSelection = true;\r\n        this.selectedClientFileItems.forEach(asset => {\r\n          if (asset.isMatched) {\r\n            isValidSelection = false;\r\n            return;\r\n          }\r\n        });\r\n        this.selectedInventoryItems.forEach(asset => {\r\n          if (asset.isMatched) {\r\n            isValidSelection = false;\r\n            return;\r\n          }\r\n        });\r\n        if (!isValidSelection) {\r\n          this.alertService.error('Cannot match current asset selection.');\r\n          return;\r\n        }\r\n\r\n       if (numSelectedClient === 0 && numSelectedInventory > 0) {\r\n          // One item (only) selected in inventory file; save single match\r\n          // console.log('Saving Single Inventory Match');\r\n          this.saveSingleMatches(form, this.selectedInventoryItems.map(c => c.assetId), this.selectedMatchCodeId);\r\n        } else if (numSelectedInventory === 0 && numSelectedClient > 0) {\r\n          // One item (only) selected in client file; save single match\r\n          // console.log('Saving Single Client Match');\r\n          this.saveSingleMatches(form, this.selectedClientFileItems.map(c => c.assetId), this.selectedMatchCodeId);\r\n        } else if (numSelectedClient === numSelectedInventory) {\r\n          // Equal number of items selected in both lists; save simple matches\r\n          // console.log('Saving Simple Match(es)');\r\n          this.saveOneToOneMatches(\r\n            form,\r\n            this.selectedClientFileItems.map(c => c.assetId),\r\n            this.selectedInventoryItems.map(c => c.assetId),\r\n            this.selectedMatchCodeId\r\n          );\r\n        } else {\r\n          this.alertService.error('Cannot match current asset selection.');\r\n          return;\r\n        }\r\n      } else {\r\n        this.editMatchCode(form);\r\n      }\r\n    }\r\n  }\r\n\r\n  canDeactivate(): boolean {\r\n    const dirty = this.inventoryGrid.isDirty() && this.clientFileGrid.isDirty();\r\n    return this.canDeactivateService.canDeactivateComponent(dirty);\r\n  }\r\n\r\n  toggleShowMatchedRecords(show) {\r\n\r\n    this.clearSelectedMatch();\r\n\r\n    if (this.inventoryGrid) { this.inventoryGrid.showMatchedRecords(show); }\r\n    if (this.clientFileGrid) { this.clientFileGrid.showMatchedRecords(show); }\r\n  }\r\n\r\n  private editMatchCode(form: any) {\r\n    event.preventDefault();\r\n\r\n    const errors = new Array<string>();\r\n\r\n    this.selectedInventoryItems.concat(this.selectedClientFileItems).forEach(asset => {\r\n      asset.matchCodeId = this.selectedMatchCodeId;\r\n\r\n      this.reconcileMatchService.updateMatchCode(asset.matchId, this.selectedMatchCodeId).subscribe(dto => {\r\n        this.reconcileDataService.updateClientFile([asset]);\r\n        this.reconcileDataService.updateInventory([asset]);\r\n        this.toggleShowMatchedRecords(true);\r\n        this.alertService.success('Match saved successfully!');\r\n      });\r\n    });\r\n  }\r\n\r\n  onClearSelection(event: DataTargetName) {\r\n    this.clearAssetRecordSelection();\r\n  }\r\n\r\n  onSelectionChanged(event: SelectionChangeEvent, isClientFile: Boolean) {\r\n    const addedAssets = event.itemsAdded;\r\n    const removedAssets = event.itemsRemoved;\r\n\r\n    if (removedAssets) {\r\n      removedAssets.filter(asset => asset.isParent === true).forEach(parent => this.clientFileGrid.collapseParentChild(true));\r\n    }\r\n\r\n    // Check if valid Allocaiton Edit\r\n   if (this.selectedMatchType === this.matchTypes.allocationMatch && !isClientFile) {\r\n      addedAssets.forEach(asset => {\r\n        if (asset.isMatched === true) {\r\n          this.selectedMatchType = null;\r\n        }\r\n      });\r\n    } else {\r\n    this.selectedMatchType = null;\r\n   }\r\n\r\n    this.reconcileMatchService.updateCurrentMatch(event);\r\n\r\n    this.hasSelectedItems = this.selectedClientFileIds.length > 0 || this.selectedInventoryIds.length > 0;\r\n\r\n  }\r\n\r\n  /* Begin Reconcile Data Grid Events  */\r\n  onMatchSelected(event: MatchSelectionEvent) {\r\n    this.reconcileMatchService.getMatchSummaryForAssetIds(this.selectedGroupId, [event.asset.assetId]).subscribe(x => {\r\n      const matchAssets = new Array<Asset>();\r\n\r\n      if (x.result.assetData.length > 0) {\r\n        this.selectedMatchType = this.reconcileDataService.getMatchType(x.result);\r\n\r\n        this.selectedMatchCodeId = x.result.assetData.find(c => !!c.matchCodeId).matchCodeId;\r\n\r\n        x.result.assetData.forEach(a => {\r\n          const asset = this.reconcileDataService.mapAsset(a, this.getDataSource(a.allocationId, event.dataSource));\r\n\r\n          if (!asset.isChild) { matchAssets.push(asset); }\r\n        });\r\n      }\r\n\r\n      this.reconcileMatchService.clearCurrentMatch();\r\n      this.reconcileMatchService.setCurrentMatch(matchAssets);\r\n    });\r\n  }\r\n\r\n  onParentChildSelected(asset: Asset) {\r\n\r\n    this.selectedMatchType = this.matchTypes.parentChildMatch;\r\n\r\n    const matchedAssets = [asset];\r\n\r\n    this.reconcileMatchService.clearCurrentMatch();\r\n    this.reconcileMatchService.setCurrentMatch(matchedAssets);\r\n\r\n    const currentChildren = [].concat.apply(matchedAssets, matchedAssets.map(c => c.parentChildMatches));\r\n  }\r\n\r\n  clearAssetRecordSelection() {\r\n    const modal = this.modalService.open(ConfirmModalComponent);\r\n    const modalOptions = <ModalProperties>{\r\n        heading: {\r\n          key: 'Clear Selected Items'\r\n        },\r\n        body: {\r\n          key: `Are you sure you wish to clear all selected items?`\r\n        },\r\n        dismissText: {\r\n          key: 'Close',\r\n        },\r\n        successText: {\r\n          key: 'Clear'\r\n        },\r\n        translateBaseKey: this.i18n.common\r\n    };\r\n\r\n    modal.componentInstance.options = modalOptions;\r\n\r\n    modal.result.then(() => {\r\n      this.clearSelectedMatch();\r\n    }).catch(err => { });\r\n\r\n  }\r\n  /* End Reconcile Data Grid Events  */\r\n\r\n  /* Begin Parent/Child Events  */\r\n\r\n  onParentChildMatch(match: ApiServiceResult<ReconciliationSummaryResult[]>) {\r\n    let assetsToUpdate = new Array<AssetDto>();\r\n\r\n    match.result.forEach(m => {\r\n      assetsToUpdate = assetsToUpdate.concat(m.assetData);\r\n    });\r\n\r\n    if (match.code && match.code !== 0) {\r\n      this.alertService.error('Parent/Child match was not saved.');\r\n      return;\r\n    }\r\n    if (assetsToUpdate.length === 0) { return; }\r\n\r\n    this.reconcileGridService.updateCacheRecords(assetsToUpdate, ReconciliationMatchType.parentChildMatch);\r\n    this.clientFileGrid.updateCurrentView(true);\r\n\r\n    this.reconcileMatchService.clearCurrentMatch();\r\n    this.allocationService.clearSelections();\r\n    this.clearSelectedMatch();\r\n    this.applyGridFilters();\r\n    this.parentChildService.clearChildren();\r\n\r\n    this.alertService.success('Parent/Child saved successfully!');\r\n  }\r\n\r\n  onParentChildMatchRemoved(removedEntities: Array<string>) {\r\n    if (removedEntities == null || removedEntities.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // this.reconcileDataService.removeParentChildMatches(removedEntities);\r\n\r\n    const assetsToUpdate = removedEntities.map(id => {\r\n      const asset = <AssetDto>{\r\n        id: id,\r\n        isParent: false,\r\n        parentId: null\r\n      };\r\n      asset['isChild'] = false;\r\n      asset['isMatched'] = false;\r\n      asset['matchCodeId'] = null;\r\n      asset['matchId'] = null;\r\n      return asset;\r\n    });\r\n    this.reconcileGridService.updateCacheRecords(assetsToUpdate, ReconciliationMatchType.parentChildMatch);\r\n    this.clientFileGrid.updateCurrentView(true);\r\n\r\n    this.clearSelectedMatch();\r\n    this.applyGridFilters();\r\n    this.parentChildService.clearChildren();\r\n  }\r\n\r\n  onParentChildMatchClick(event: any) {\r\n    event.preventDefault();\r\n\r\n    const parentAndChildren = this.selectedClientFileItems.filter(c => c !== undefined);\r\n\r\n    if (parentAndChildren.length === 0) {\r\n      this.alertService.error('You have not selected any client assets.');\r\n      return;\r\n    }\r\n    if (parentAndChildren.length === 1 && !parentAndChildren[0].isParent) {\r\n      this.alertService.error('You only have 1 client asset selected.');\r\n      return;\r\n    }\r\n    if (this.selectedInventoryItems.length > 0) {\r\n      this.alertService.error('You can not use Parent/Child with items from the Actual Inventory table.');\r\n      return;\r\n    }\r\n    let matchCount = 0;\r\n    this.selectedClientFileItems.forEach(asset => {\r\n      if (asset.isMatched ) {\r\n        matchCount += 1;\r\n      }\r\n    });\r\n    if (matchCount > 1) {\r\n      this.alertService.error('You cannot create a Parent/Child with more than one matched record.');\r\n      return;\r\n    }\r\n\r\n    this.reconcileMatchService.getMatchSummaryForAssetIds(this.selectedGroupId, this.selectedClientFileIds).subscribe(x => {\r\n      const currentChildren = new Array<Asset>();\r\n\r\n      x.result.assetData.filter(c => !!c.parentId && c.isParent === false).forEach(child => {\r\n        const asset = <Asset>{\r\n          assetId: child.id,\r\n          oldTagNumber: child.oldTagNumber,\r\n          description: child.description,\r\n          parentId: child.parentId,\r\n          assetTagNumber: child.assetTagNumber\r\n        };\r\n        currentChildren.push(asset);\r\n      });\r\n\r\n      this.parentChildService.setChildren(currentChildren);\r\n\r\n      this.parentChildMatchComponent.assetsGridData = []\r\n        .concat(this.selectedClientFileItems)\r\n        .concat(this.selectedInventoryItems)\r\n        .concat(this.currentChildren);\r\n\r\n      this.parentChildMatchComponent.open(event);\r\n    });\r\n  }\r\n\r\n  /* End Parent/Child Events  */\r\n\r\n  /* Begin UnMatch Events  */\r\n\r\n  unmatchRecords(ignoreCheck: Boolean) {\r\n    const assetIds = [].concat(this.selectedClientFileIds, this.selectedInventoryIds);\r\n\r\n    if (assetIds.length <= 0) { return; }\r\n\r\n    this.reconcileMatchService.unmatchAssetRecords(assetIds).subscribe(dto => {\r\n      this.reconcileGridService.updateCacheRecords(dto.result.assetData, ReconciliationMatchType.unMatch);\r\n      this.alertService.success('Assets unmatched.');\r\n      this.applyGridFilters();\r\n      this.clearSelectedMatch();\r\n      this.clientFileGrid.updateCurrentView(true);\r\n      this.inventoryGrid.updateCurrentView(true);\r\n    });\r\n  }\r\n\r\n  private canUnmatch() {\r\n    const canUnmatch =\r\n      this.selectedClientFileItems.some(x => x.matchId != null) || this.selectedInventoryItems.some(x => x.matchId != null);\r\n    return canUnmatch;\r\n  }\r\n\r\n  /* End Unmatch Events  */\r\n\r\n  /* Begin Allocation Events  */\r\n\r\n  onEditAllocationMatchClick(event: any) {\r\n    this.allocationService.changeSelectedMatchCode(this.selectedMatchCodeId);\r\n\r\n    this.reconcileDataAllocationsComponent.open(event);\r\n    this.applyGridFilters();\r\n  }\r\n\r\n  onAllocation(allocatedAssets: AssetDto[]) {\r\n    this.reconcileGridService.updateCacheRecords(allocatedAssets, ReconciliationMatchType.allocationMatch);\r\n    this.clientFileGrid.updateCurrentView(true);\r\n    this.inventoryGrid.updateCurrentView(true);\r\n    this.applyGridFilters();\r\n    this.clearSelectedMatch();\r\n  }\r\n\r\n  /* End Allocation Events */\r\n\r\n  public navigateToMassMatch(event: any) {\r\n    event.preventDefault();\r\n    this.router.navigate([`project-profile/${this.selectedGroupId}/Reconciliation/mass-match`]);\r\n  }\r\n\r\n  private onMassMatchSaved(savedMatches: ReconciliationSummaryResult[], isOneToOne: Boolean) {\r\n\r\n    let assetsToUpdate = new Array<AssetDto>();\r\n    const inventoryAssets = new Array<AssetDto>();\r\n\r\n    savedMatches.forEach(m => {\r\n      assetsToUpdate = assetsToUpdate.concat(m.assetData);\r\n    });\r\n\r\n    // Force Grid to get updates from API to handle case where user matched assets not in the current page window.\r\n    this.clientFileGrid.updateCurrentView(true);\r\n    this.inventoryGrid.updateCurrentView(true);\r\n\r\n    this.clearSelectedMatch();\r\n  }\r\n\r\n  private clearSelectedMatch() {\r\n\r\n    this.reconcileGridService.clearSelectionsInProgress();\r\n\r\n    this.reconcileMatchService.clearCurrentMatch();\r\n    this.allocationService.clearSelections();\r\n\r\n    this.selectedMatchType = null;\r\n\r\n    this.hasSelectedItems = this.selectedClientFileIds.length > 0 || this.selectedInventoryIds.length > 0;\r\n  }\r\n\r\n  private saveSingleMatches(form: any, assetIds: string[], matchCodeId: string) {\r\n    this.reconcileMatchService.createMassSingleMatch(assetIds, matchCodeId).subscribe(dto => {\r\n      if (dto == null) {\r\n        this.alertService.error('Unexpected service error.');\r\n      }\r\n      if (dto.result == null) {\r\n        this.alertService.error('Unexpected error saving match.');\r\n      }\r\n      if (dto.invalidArguments.length > 0) {\r\n        this.alertService.error('The selected items cannot be saved as a mass single match.');\r\n      }\r\n\r\n      // console.log('Single match saved.');\r\n      // console.log(dto);\r\n\r\n      this.onMassMatchSaved(dto.result, false);\r\n      this.alertService.success('Single match(es) saved.');\r\n    });\r\n  }\r\n\r\n  private saveOneToOneMatches(form: any, clientAssetIds: string[], InventoryAssetIds: string[], matchCodeId: string) {\r\n    this.reconcileMatchService.createMassOneToOneMatch(clientAssetIds, InventoryAssetIds, matchCodeId).subscribe(dto => {\r\n      if (dto == null) {\r\n        this.alertService.error('Unexpected service error.');\r\n      }\r\n      if (dto.result == null) {\r\n        this.alertService.error('Unexpected error saving match.');\r\n      }\r\n      if (dto.invalidArguments.length > 0) {\r\n        this.alertService.error('The selected items cannot be saved as a mass one to one match.');\r\n      }\r\n\r\n      // console.log('One to one match saved.');\r\n      // console.log(dto);\r\n\r\n      this.onMassMatchSaved(dto.result, true);\r\n      this.alertService.success('One to one match(es) saved.');\r\n    });\r\n  }\r\n\r\n  private applyGridFilters() {\r\n    if (this.clientFileGrid) { this.clientFileGrid.filterGrid(); }\r\n    if (this.inventoryGrid) { this.inventoryGrid.filterGrid(); }\r\n  }\r\n\r\n  private getDataSource(allocationId: string, selectedMatchSource: DataTargetName): DataTargetName {\r\n    if (this.selectedMatchType !== ReconciliationMatchType.singleMatch) {\r\n      return allocationId ? DataTargetName.inventory : DataTargetName.client;\r\n    } else {\r\n      return selectedMatchSource;\r\n    }\r\n  }\r\n\r\n  public onAllocationMatchClick(event: any) {\r\n    event.preventDefault();\r\n\r\n    this.reconcileDataAllocationsComponent.launchAllocationModal();\r\n  }\r\n\r\n  onBack(event: any) {\r\n    this.router.navigate(['./setup'], {\r\n      relativeTo: this.route.parent\r\n    });\r\n  }\r\n\r\n  onContinue(event: any) {\r\n    this.isBusy = true;\r\n\r\n      this.reconcileDataService.validateReconciliation(false).subscribe(result => {\r\n        if (result.isReconciliationComplete) {\r\n          this.showValidationErrors = false;\r\n          this.router.navigate(['./define-layout'], {\r\n            relativeTo: this.route.parent\r\n          });\r\n        } else {\r\n          this.showValidationErrors = true;\r\n          this.reconciliationValidationComponent.open('./define-layout');\r\n        }\r\n      });\r\n  }\r\n\r\n  public onValidateReconciliation() {\r\n    this.isBusy = true;\r\n\r\n    this.reconcileDataService.validateReconciliation(false).subscribe(result => {\r\n      if (result.isReconciliationComplete) {\r\n        this.showValidationErrors = false;\r\n        this.alertService.success('Reconciliation is complete.');\r\n      } else {\r\n        this.showValidationErrors = true;\r\n        this.reconciliationValidationComponent.open();\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { ReconcileDataService } from '../services/reconcile-data.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { BreadCrumb } from '../../_models/breadcrumbs.model';\r\nimport { ActivatedRoute, Router, NavigationStart } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'reconciliation-form',\r\n  templateUrl: './reconciliation-form.component.html'\r\n})\r\nexport class ReconciliationFormComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  public moduleName = 'Reconciliation';\r\n\r\n  public reconciliationBreadcrumbs = Array<BreadCrumb>();\r\n  public massMatchBreadcrumbs = Array<BreadCrumb>();\r\n  public activeBreadcrumbs = Array<BreadCrumb>();\r\n\r\n  constructor(private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private reconcileDataService: ReconcileDataService,\r\n    private route: ActivatedRoute) {}\r\n\r\n  ngOnInit() {\r\n\r\n    this.reconcileDataService.groupId = this.route.parent.snapshot.paramMap.get('groupId');\r\n\r\n    // Init breadcrumbs for Reconcile Data and Mass match\r\n    this.reconciliationBreadcrumbs = [\r\n      <BreadCrumb>{ name: 'Setup', routerLink: 'setup' },\r\n      <BreadCrumb>{ name: 'Reconcile Data', routerLink: 'reconcile-data' },\r\n      <BreadCrumb>{ name: 'Define Layout', routerLink: 'define-layout' },\r\n      <BreadCrumb>{ name: 'Map Match Codes', routerLink: 'map-matchcodes' },\r\n      <BreadCrumb>{ name: 'Finalize Data', routerLink: 'finalize-data' }\r\n    ];\r\n\r\n    this.massMatchBreadcrumbs = [\r\n      <BreadCrumb>{ name: 'Reconcile Data', routerLink: 'reconcile-data' },\r\n      <BreadCrumb>{ name: 'Mass Match', routerLink: 'mass-match' },\r\n      <BreadCrumb>{ name: 'View Matches', routerLink: 'view-matches', isDisabled: true }\r\n    ];\r\n\r\n    // Active breadcrumbs are set to reconciliation breadcrumbs by default\r\n    this.activeBreadcrumbs = this.reconciliationBreadcrumbs;\r\n\r\n    // Suscribe to router events to set breadcrumb based on current router state\r\n    this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationStart) {\r\n        // Setting active breadcrumbs to mass match if current route contains 'mass-match' or 'view-matches'\r\n        if (event.url.match(/mass-match/g) || event.url.match(/view-matches/g) ) {\r\n          this.activeBreadcrumbs = this.massMatchBreadcrumbs;\r\n        } else {\r\n          this.activeBreadcrumbs = this.reconciliationBreadcrumbs;\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { AlertService } from '../../_core/services/alert.service';\r\nimport { ReconcileDataService } from '../services/reconcile-data.service';\r\nimport { NgbModalOptions, NgbModalRef, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AssetFileRecordDto } from '../../_api/dtos/asset-file-record-dto';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'reconciliation-validation',\r\n  templateUrl: './reconciliation-validation.component.html'\r\n})\r\nexport class ReconciliationValidationComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  title = 'Reconciliation Validation';\r\n  public showContinue = false;\r\n  public resolveErrorsToCommit = false;\r\n  private navigateTo: string;\r\n  public showMissingMatch = false;\r\n  public showAllocations = false;\r\n\r\n  outOfBalanceAllocationIds: string[];\r\n  missingMatchIds: string[];\r\n  assetFileRecords: AssetFileRecordDto[];\r\n  private modalRef: NgbModalRef;\r\n\r\n  private _noLongerBusy = new BehaviorSubject<boolean>(false);\r\n  public noLongerBusy = this._noLongerBusy.asObservable();\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private alertService: AlertService,\r\n    private reconciliationService: ReconcileDataService,\r\n  ) { }\r\n\r\n  @ViewChild('content', {static: false}) private content: any;\r\n\r\n  ngOnInit() {\r\n    this.outOfBalanceAllocationIds = [];\r\n    this.missingMatchIds = [];\r\n    this._noLongerBusy.next(false);\r\n  }\r\n\r\n  public open(passThroughRoute?: string): void {\r\n    this.reconciliationService.validateReconciliation(true).subscribe(\r\n      result => {\r\n          this.outOfBalanceAllocationIds = !result.isReconciliationComplete ? result.outOfBalanceAllocations : [];\r\n          this.missingMatchIds = !result.isReconciliationComplete ? result.missingMatches : [];\r\n\r\n          this.showContinue = passThroughRoute && passThroughRoute.length > 0;\r\n          this.navigateTo = this.showContinue ? passThroughRoute : '';\r\n          this.showMissingMatch = this.missingMatchIds.length > 0;\r\n          this.showAllocations = this.outOfBalanceAllocationIds.length > 0;\r\n          if (this.showAllocations) {\r\n            this.mapAllocationAssets(this.outOfBalanceAllocationIds, result.fullRecords);\r\n          }\r\n          const options: NgbModalOptions = {\r\n            size: 'lg'\r\n          };\r\n          this.modalRef = this.modalService.open(this.content, options);\r\n          this._noLongerBusy.next(true);\r\n        }\r\n    );\r\n  }\r\n\r\n  public continueAnyway() {\r\n    if (this.continueAnyway) {\r\n      this.modalRef.close();\r\n      this.router.navigate([this.navigateTo], {\r\n        relativeTo: this.route.parent\r\n      });\r\n    }\r\n  }\r\n\r\n  public mapAllocationAssets(ids: string[], assets: AssetFileRecordDto[]) {\r\n    this.assetFileRecords = [];\r\n    ids.forEach(id => {\r\n      const asset = assets.find(a => a.id === id);\r\n      if (asset) {\r\n        this.assetFileRecords.push(asset);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { AlertService } from '../../_core/services/alert.service';\r\nimport { ReconcileDataService } from '../services/reconcile-data.service';\r\nimport { ComponentCanDeactivate } from '../../_core/guards/component-can-deactivate';\r\nimport { CanDeactivateService } from '../../_core/guards/can-deactivate.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Group } from '../../_models/group';\r\nimport { MatchCode } from '../../_models/match-code.model';\r\nimport { AssetFieldDto } from '../../_api/dtos/asset-field.dto';\r\nimport { CostFieldsService } from '../../_api/services/reconciliation/cost-fields.service';\r\nimport { MatchCodesService } from '../../_api/services/reconciliation/match-codes.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { forkJoin } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'setup',\r\n  templateUrl: './setup.component.html'\r\n})\r\nexport class SetupComponent extends ComponentCanDeactivate  implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  @ViewChild('dataImportForm', {static: false}) currentForm: NgForm;\r\n\r\n  selectedGroupToCopyFrom: Group;\r\n  selectedMatchCodes: MatchCode[] = [];\r\n  selectedMatchCodeIds = new Array<string>();\r\n  costFields: Array<AssetFieldDto>;\r\n  selectedCostField: string;\r\n  success: boolean;\r\n  pendingChanges: boolean;\r\n\r\n  private selectedGroupId: string;\r\n\r\n  public isBusy = false;\r\n\r\n  constructor(\r\n    private costFieldsService: CostFieldsService,\r\n    private matchCodeService: MatchCodesService,\r\n    private alertService: AlertService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private reconcileDataService: ReconcileDataService,\r\n    private canDeactivateService: CanDeactivateService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.pendingChanges = false;\r\n    this.selectedGroupId = this.reconcileDataService.groupId;\r\n\r\n    this.costFieldsService.getTemplates().subscribe(templates => {\r\n      const templateId = templates.find(c => c.name === 'Client Inventory');\r\n\r\n      if (templateId) {\r\n        this.costFieldsService\r\n          .getCostFields(templateId.id)\r\n          .subscribe(result => {\r\n            if (result == null) {\r\n              return;\r\n            }\r\n            this.costFields = result.importTemplateColumns\r\n              .filter(c => c.destinationColumnName === 'HistoricalCost')\r\n              .map(field => new AssetFieldDto(field.name, field.destinationColumnName));\r\n\r\n            const historicalCostObj = this.costFields.find(field => field.value === 'HistoricalCost');\r\n\r\n            if (Object.keys(historicalCostObj).length) {\r\n              this.selectedCostField = historicalCostObj.value;\r\n            } else {\r\n              this.costFieldsService\r\n                .getGroupCostField(this.selectedGroupId)\r\n                .subscribe(assetAllocationField => {\r\n                  if (assetAllocationField != null) {\r\n                    this.selectedCostField = assetAllocationField.assetFileField;\r\n                  }\r\n              });\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit(form) {\r\n    this.pendingChanges = false;\r\n    // console.log(this.selectedCostField);\r\n    this.isBusy = true;\r\n    this.costFieldsService\r\n      .saveCostField(this.selectedGroupId, this.selectedCostField)\r\n      .subscribe(err => console.log(err));\r\n\r\n    this.matchCodeService\r\n      .saveGroupMatchCodesSelection(\r\n      this.selectedGroupId,\r\n      this.selectedMatchCodes\r\n      )\r\n      .subscribe(\r\n      result => {\r\n        this.router.navigate(['./reconcile-data'], {\r\n          relativeTo: this.route.parent\r\n        });\r\n        this.isBusy = false;\r\n      }\r\n      );\r\n  }\r\n\r\n  handleMatchCodes(emittedCustomFields: Array<any>) {\r\n    this.selectedMatchCodes = emittedCustomFields;\r\n    this.pendingChanges = true;\r\n  }\r\n  handleMatchCodesLoaded(codes: Array<any>) {\r\n    const getGroupMatchCodesSelection = this.matchCodeService.getGroupMatchCodesSelection(this.selectedGroupId);\r\n    const getGroupMatchCodes = this.matchCodeService.getGroupMatchCodes(this.selectedGroupId);\r\n    forkJoin(getGroupMatchCodesSelection, getGroupMatchCodes)\r\n    .subscribe(\r\n      ([matchCodeSelection, groupMatchCodes]) => {\r\n        if (matchCodeSelection != null) {\r\n          matchCodeSelection.forEach(id => {\r\n              if (this.isMatchCodeEnabled(id)) {\r\n                this.selectedMatchCodeIds.push(id);\r\n              }\r\n            });\r\n          }\r\n          if (groupMatchCodes.length > 0) {\r\n            this.setupMatchCodeSelection();\r\n          }\r\n      }\r\n    );\r\n  }\r\n\r\n  onGroupSelected(group: Group) {\r\n    this.selectedGroupToCopyFrom = group;\r\n    this.matchCodeService\r\n      .getGroupMatchCodesSelection(group.id)\r\n      .subscribe(ids => {\r\n        let addedCount = 0;\r\n        ids.forEach(id => {\r\n          const index = this.selectedMatchCodeIds.findIndex(s => s === id);\r\n          if (index === -1 && this.isMatchCodeEnabled(id)) {\r\n\r\n            this.selectedMatchCodeIds.push(id);\r\n            addedCount++;\r\n          }\r\n        });\r\n        if (addedCount > 0) {\r\n          this.setupMatchCodeSelection();\r\n          this.alertService.success('Successfully selected {{addedCount}} additional match codes.', null, {addedCount: addedCount});\r\n        } else {\r\n          this.alertService.success('No additional match codes added.');\r\n        }\r\n      });\r\n  }\r\n\r\n  canDeactivate(): boolean {\r\n    return this.canDeactivateService.canDeactivateFormAndComponent(this.currentForm, this.pendingChanges);\r\n  }\r\n\r\n  private isMatchCodeEnabled(id: string): boolean {\r\n    const matchCode = this.matchCodeService.cachedMatchCodes.find(mc => mc.id === id);\r\n    return (matchCode != null && matchCode.isEnabled);\r\n  }\r\n\r\n  setupMatchCodeSelection() {\r\n    // Deselect all matchcodes first\r\n    this.matchCodeService.cachedMatchCodes.forEach(m => {\r\n      m.isSelected = false;\r\n    });\r\n    this.selectedMatchCodes = [];\r\n    this.selectedMatchCodeIds.forEach(m => {\r\n      const matchCode = this.matchCodeService.cachedMatchCodes.find(x => x.id === m);\r\n      matchCode.isSelected = true;\r\n      this.selectedMatchCodes.push(matchCode);\r\n    });\r\n  }\r\n}\r\n","import { AlertService } from '../../_core/services/alert.service';\r\nimport { NgbModalOptions, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ReconcileDataGridService } from '../services/reconcile-data-grid.service';\r\n\r\nimport { AssetFileInfoService } from '../../_core/services/asset-file-info-service';\r\nimport { Component, OnInit, OnDestroy, Input, ViewChild, Output, EventEmitter } from '@angular/core';\r\nimport { NgForm, FormGroup } from '@angular/forms';\r\nimport { CanDeactivateService } from '../../_core/guards/can-deactivate.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { WindowManager } from '../../_core/services/window-manager.service';\r\nimport { ImageEntityType } from '../../_api/_runtime/enums/image-entity-type';\r\nimport { WindowRef } from '@progress/kendo-angular-dialog';\r\nimport { DataTargetName } from '../../_enums/data-target-name';\r\nimport { CascadedSelectOption } from '../../_models/cascaded-select-option.model';\r\nimport { FieldOption } from '../../_models/field-option.model';\r\nimport { Asset } from '../../_models/asset.model';\r\nimport { AssetFieldInput } from '../../_models/asset-field-input.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { InventoryService } from '../../_api/services/reconciliation/inventory.service';\r\nimport { AssetFileSummaryDto } from '../../_api/dtos/asset-file-summary.dto';\r\nimport { WindowOption } from '../../_models/window-option';\r\nimport { FormActionEvent } from '../../_models/form-action-event.model';\r\nimport { FormAction } from '../../_enums/form-action';\r\nimport { FieldMetaDataDto } from '../../_api/dtos/inventory/field-meta-data.dto';\r\nimport { FieldType } from '../../_enums/field-type';\r\nimport { CascadedSelectValue } from '../../_models/cascaded-select-value.model';\r\n\r\n@Component({\r\n  selector: 'upsert-asset-record-component',\r\n  templateUrl: './upsert-asset-record.component.html'\r\n})\r\nexport class UpsertAssetRecordComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  imageEntityType: ImageEntityType = ImageEntityType.Asset;\r\n\r\n  windowRef: WindowRef;\r\n\r\n  constructor(\r\n    private windowManager: WindowManager,\r\n    private alertService: AlertService,\r\n    private inventoryService: InventoryService,\r\n    private reconcileGridService: ReconcileDataGridService,\r\n    private assetFileInfoServie: AssetFileInfoService,\r\n    private canDeactivateService: CanDeactivateService,\r\n  ) {}\r\n\r\n  @Input() assetFileSummary: AssetFileSummaryDto;\r\n  @Input() fileType: DataTargetName;\r\n  @Input() groupSiteInfo: Array<CascadedSelectOption>;\r\n  @Input() groupAccounts: Array<FieldOption>;\r\n  @Input() groupDepartments: Array<FieldOption>;\r\n\r\n  // Inputs and Outputs\r\n  @ViewChild('content', {static: false}) private content: any;\r\n  @Output() AssetUpsertComplete = new EventEmitter();\r\n\r\n  public asset: Asset;\r\n\r\n  public isEdit: boolean;\r\n  public formFields: Array<AssetFieldInput>;\r\n  public isSaving = false;\r\n\r\n  // Private fields\r\n  private assetForm: NgForm;\r\n  private assetRecordId: string;\r\n  private modalRef: NgbModalRef;\r\n  private options: NgbModalOptions = {\r\n    size: 'lg',\r\n    backdrop: 'static',\r\n    beforeDismiss: () => {\r\n      return this.canDeactivate();\r\n    }\r\n  };\r\n  private toDestroy: Subscription;\r\n\r\n  private formSubmitted = false;\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnDestroy() {\r\n    if (this.toDestroy) {\r\n      this.toDestroy.unsubscribe();\r\n    }\r\n  }\r\n\r\n  openCreateModal(groupId: string, fileType: DataTargetName, duplicateSource?: Asset) {\r\n    // Re-pull asset file summary to account for new fields being added\r\n    this.toDestroy = this.inventoryService.getAssetFileSummary(groupId, fileType).subscribe(\r\n      result => {\r\n        this.assetFileSummary = result;\r\n      },\r\n      error => {},\r\n      () => {\r\n        // Get Form Fields\r\n        this.isSaving = false;\r\n        this.isEdit = false;\r\n\r\n        this.asset = duplicateSource ? duplicateSource : <Asset>{};\r\n\r\n        this.windowRef = this.windowManager.open(this.content, 'Add Asset Record', <WindowOption>{\r\n          isModal: true,\r\n          translationKey: this.i18n.reconciliation,\r\n          top: -300,\r\n          width: 800\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  openEditModal(groupId: string, fileType: DataTargetName, asset: Asset) {\r\n    // Re-pull asset file summary to account for new fields being added\r\n    this.toDestroy = this.inventoryService.getAssetFileSummary(groupId, fileType).subscribe(\r\n      result => {\r\n        this.assetFileSummary = result;\r\n      },\r\n      error => {},\r\n      () => {\r\n        this.isSaving = false;\r\n\r\n        this.assetRecordId = asset.assetId;\r\n        this.asset = asset;\r\n        this.assetForm = null;\r\n\r\n        this.windowRef = this.windowManager.open(this.content, 'Edit Asset Record', <WindowOption>{\r\n          isModal: true,\r\n          translationKey: this.i18n.reconciliation,\r\n          top: -300,\r\n          width: 800\r\n        });\r\n        this.isEdit = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  onFormActionEvent(event: FormActionEvent) {\r\n    switch (event.action) {\r\n      case FormAction.Cancel:\r\n        this.cancel();\r\n        break;\r\n      case FormAction.Save:\r\n        this.assetForm = event.form;\r\n        this.save(event.formGroup);\r\n        break;\r\n      case FormAction.ValueChange:\r\n        this.assetForm = event.form;\r\n        break;\r\n      default:\r\n        throw new Error(`Action ${event.action} not implemented.`);\r\n    }\r\n  }\r\n\r\n  canDeactivate(): boolean {\r\n    return this.canDeactivateService.canDeactivateForm(this.assetForm);\r\n  }\r\n\r\n  public getFormFields(): FieldMetaDataDto[] {\r\n    const s = this;\r\n\r\n    const fields = this.assetFileSummary.fields.filter(function(x) {\r\n      let internalFields = s.assetFileInfoServie.GetInternalColumns();\r\n      // Also filtering out the readonly & special fields that need to be handled differently\r\n      const extraFields: string[] = s.assetFileInfoServie.GetHiddenFields();\r\n      internalFields = internalFields.concat(extraFields);\r\n      return (\r\n        internalFields.findIndex(c => c === x.name) === -1 &&\r\n        x.name !== 'siteIdentifier' &&\r\n        x.name !== 'memberName' &&\r\n        x.name !== 'memberNumber' &&\r\n        x.name !== 'buildingName' &&\r\n        x.name !== 'buildingNumber' &&\r\n        x.name !== 'siteNumber' &&\r\n        x.name !== 'siteName' &&\r\n        x.name !== 'departmentNumber' &&\r\n        x.name !== 'accountDescription'\r\n      );\r\n    });\r\n\r\n    const buildingSelection = <FieldMetaDataDto>{\r\n      fieldType: FieldType.CascadingComboBox,\r\n      displayName: 'Member',\r\n      name: 'buildingId',\r\n      cascadedValues: [\r\n        <CascadedSelectValue>{ displayName: 'Member', name: 'member' },\r\n        <CascadedSelectValue>{ displayName: 'Site', name: 'siteId' },\r\n        <CascadedSelectValue>{ displayName: 'Building', name: 'buildingId' }\r\n      ],\r\n      cascadedValueOptions: this.groupSiteInfo,\r\n      required: true\r\n    };\r\n\r\n    fields.push(buildingSelection);\r\n\r\n    const departmentSelection = <FieldMetaDataDto>{\r\n      fieldType: FieldType.DropDown,\r\n      displayName: 'Department',\r\n      name: 'departmentId',\r\n      options: this.groupDepartments,\r\n    };\r\n    fields.push(departmentSelection);\r\n\r\n    const accountSelections = <FieldMetaDataDto>{\r\n      fieldType: FieldType.DropDown,\r\n      displayName: 'Account',\r\n      name: 'accountId',\r\n      options: this.groupAccounts,\r\n    };\r\n    fields.push(accountSelections);\r\n\r\n    const nonTranslatedFields = this.assetFileInfoServie.GetNonTranslatedFields();\r\n\r\n      fields.forEach(field => {\r\n          if (nonTranslatedFields.findIndex(x => x === field.name) === -1) {\r\n            field.translationKey = this.i18n.asset;\r\n          } else {\r\n            field.translationKey = this.i18n.noTranslate;\r\n          }\r\n        });\r\n\r\n    return this.fileType === DataTargetName.client ? fields.filter(c => c.isCustom === true) : fields;\r\n  }\r\n\r\n  private save(formGroup: FormGroup): void {\r\n    if (this.isEdit) {\r\n      // update Record\r\n\r\n      const assetDto = formGroup.value;\r\n\r\n      if (assetDto.buildingId) {\r\n        assetDto.buildingId = assetDto.buildingId.split(',')[2];\r\n      }\r\n\r\n      assetDto['id'] = this.assetRecordId;\r\n\r\n      delete assetDto['property'];\r\n\r\n      this.inventoryService.updateAssetRecord(this.assetRecordId, assetDto).subscribe(\r\n        result => {\r\n          this.reconcileGridService.updateCachedRecord(result, this.fileType).subscribe(res => {\r\n            this.alertService.success('Asset record updated.');\r\n            this.formSubmitted = true;\r\n            this.AssetUpsertComplete.emit();\r\n            this.windowManager.close();\r\n          });\r\n        },\r\n        error => {\r\n          this.windowManager.close();\r\n        },\r\n        () => {\r\n          this.windowManager.close();\r\n        }\r\n      );\r\n    } else {\r\n      // Create Record\r\n      this.inventoryService.createAssetRecord(this.assetFileSummary.id, formGroup.value).subscribe(\r\n        result => {\r\n          // Map to ui model and add AssetId\r\n          this.reconcileGridService.createCachedRecord(result, this.fileType).subscribe(() => {\r\n            this.AssetUpsertComplete.emit();\r\n            this.alertService.success('Asset record created');\r\n            this.windowManager.close();\r\n          });\r\n        },\r\n        error => {\r\n          this.windowManager.close();\r\n        },\r\n        () => {\r\n          this.windowManager.close();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  private cancel(): void {\r\n    if (this.canDeactivate()) {\r\n      this.windowManager.close();\r\n    }\r\n  }\r\n}\r\n","export class ReconciliationConstants {\r\n  public static readonly SystemMatchCategoryId = '1e838f1d-6d49-42e3-b3d4-1094c52d2e2b';\r\n  public static readonly ParentChildMatchCodeId = '0e48c183-9127-490d-8970-656482793b70';\r\n  public static readonly hiddenColumnsLayoutMapping = [\r\n    'historicalCost',\r\n    'siteId',\r\n    'buildingId',\r\n    'accountId',\r\n    'departmentId',\r\n    'accumulatedDepreciation',\r\n    'assetImages',\r\n    'displayId',\r\n    'buildingName',\r\n    'buildingNumber',\r\n    'memberName',\r\n    'memberNumber',\r\n    'memberId',\r\n    'siteName',\r\n    'siteNumber',\r\n    'depreciationAsOfDate',\r\n    'lifeMonths',\r\n    'depreciationBasis',\r\n    'periodDepreciation',\r\n    'sourceRecordId',\r\n    'accountNumber',\r\n    'accountDescription'\r\n  ];\r\n  public static readonly hiddenColumns = [\r\n    'assetId',\r\n    'isMatched',\r\n    'isParent',\r\n    'isChild',\r\n    'parentChildMatches',\r\n    'matchTypes',\r\n    'matches',\r\n    'matchCodeId',\r\n    'parentId',\r\n    'matchId',\r\n    'allocatedValue',\r\n    'allocationId',\r\n    'id',\r\n    'updatedTimeStamp',\r\n    'assetFileId',\r\n    'groupId'\r\n  ];\r\n}\r\n","import { DragulaModule } from 'ng2-dragula';\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\n\r\nimport { AlertService } from '../_core/services/alert.service';\r\nimport { SharedModule } from '../_shared/shared.module';\r\n\r\nimport { ReconcileDataGridComponent } from './components/reconcile-data-grid.component';\r\nimport { ReconcileDataAllocationsComponent } from './components/reconcile-data-allocations.component';\r\nimport { AllocationService } from './services/allocation.service';\r\nimport { ParentChildService } from './services/parent-child.service';\r\nimport { ParentChildMatchComponent } from './components/parent-child-match.component';\r\nimport { ParentChildMatchDetailComponent } from './components/parent-child-match-detail.component';\r\n\r\nimport { ReconcileDataService } from './services/reconcile-data.service';\r\nimport { ReconcileMatchService } from './services/reconcile-match.service';\r\nimport { ReconciliationInventoryService } from './services/inventory.service';\r\nimport { ConsolidationService } from './services/consolidation.service';\r\n\r\nimport { MassMatchService } from './services/mass-match/mass-match.service';\r\nimport { MassMatchComponent } from './components/mass-match/mass-match.component';\r\nimport { FilterCriteriaBuilderComponent } from './components/mass-match/filter-criteria-builder.component';\r\nimport { FieldMatchesComponent } from './components/mass-match/field-matches.component';\r\nimport { FilterOperationsService } from '../_core/services/filter-operations.service';\r\n\r\n\r\nimport { ReconcileDataComponent } from './components/reconcile-data.component';\r\nimport { ReconciliationFormComponent } from './components/reconciliation-form.component';\r\nimport { CopyInventoryComponent } from './components/copy-inventory.component';\r\nimport { CreateMatchCodeComponent } from './components/create-match-code.component';\r\nimport { MatchCodesComponent } from './components/match-codes.component';\r\nimport { SetupComponent } from './components/setup.component';\r\nimport { MapMatchCodesComponent } from './components/map-matchcodes.component';\r\nimport { DefineLayoutComponent } from './components/define-layout.component';\r\n\r\nimport { OrderAssetColumnsComponent } from './components/order-asset-columns-component';\r\nimport { DateInputsModule } from '@progress/kendo-angular-dateinputs';\r\nimport { ViewMatchesComponent } from './components/mass-match/view-matches.component';\r\n\r\nimport { UpsertAssetRecordComponent } from './components/upsert-asset-record.component';\r\nimport { AssetColumnSelectComponent } from './components/consolidated/asset-column-select.component';\r\nimport { AssetSelectedColumnsComponent } from './components/consolidated/asset-selected-columns.component';\r\nimport { ReconciliationValidationComponent } from './components/reconciliation-validation.component';\r\nimport { FinalizeDataComponent } from './components/finalize-data.component';\r\nimport { ConsolidationMatchCodeAssignmentComponent } from './components/consolidated/consolidation-match-code-assignment.component';\r\nimport { DynamicAssignmentFieldComponent } from './components/consolidated/dynamic-assignment-select.component';\r\nimport { ReconcileDataGridService } from './services/reconcile-data-grid.service';\r\nimport { DestinationColumnSelectorComponent } from './components/consolidated/destination-column-selector.component';\r\nimport { CoreModule } from '../_core/core.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GridModule } from '@progress/kendo-angular-grid';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DropDownsModule } from '@progress/kendo-angular-dropdowns';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { LaddaModule } from 'angular2-ladda';\r\nimport { RouterModule } from '@angular/router';\r\nimport { OrderModule } from 'ngx-order-pipe';\r\nimport { ApiService } from '../_api/services/api.service';\r\nimport { ReconciliationMatchService } from '../_api/services/reconciliation/reconcilation-match.service';\r\nimport { CostFieldsService } from '../_api/services/reconciliation/cost-fields.service';\r\nimport { MatchCodesService } from '../_api/services/reconciliation/match-codes.service';\r\nimport { InventorySearchRepository } from '../_api/services/inventory/inventory-search-repository.service';\r\nimport { InventoryApiService } from '../_api/_runtime/services/inventory-api.service';\r\nimport { CalculationApiService } from '../_api/_runtime/services/calculation-api.service';\r\nimport { SettingsApiService } from '../_api/_runtime/services/settings-api.service';\r\nimport { InventoryService } from '../_api/services/reconciliation/inventory.service';\r\nimport { LayoutModule } from '@progress/kendo-angular-layout';\r\nimport { OneToManyMatchComponent } from './components/mass-match/one-to-many-match.component';\r\nimport { ManyToOneMatchComponent } from './components/mass-match/many-to-one-match.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    GridModule,\r\n    CoreModule,\r\n    SharedModule,\r\n    BrowserModule,\r\n    NgbModule,\r\n    BrowserAnimationsModule,\r\n    CommonModule,\r\n    DragulaModule,\r\n    FormsModule,\r\n    DropDownsModule,\r\n    HttpClientModule,\r\n    LaddaModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    OrderModule,\r\n    CurrencyMaskModule,\r\n    DateInputsModule,\r\n    LaddaModule,\r\n    LayoutModule\r\n  ],\r\n  declarations: [\r\n    ReconcileDataComponent,\r\n    ReconciliationFormComponent,\r\n    CopyInventoryComponent,\r\n    CopyInventoryComponent,\r\n    CreateMatchCodeComponent,\r\n    ParentChildMatchComponent,\r\n    ParentChildMatchDetailComponent,\r\n    MatchCodesComponent,\r\n    SetupComponent,\r\n    ReconcileDataAllocationsComponent,\r\n    ReconcileDataGridComponent,\r\n    OrderAssetColumnsComponent,\r\n    MassMatchComponent,\r\n    FilterCriteriaBuilderComponent,\r\n    FieldMatchesComponent,\r\n    UpsertAssetRecordComponent,\r\n    ViewMatchesComponent,\r\n    FilterCriteriaBuilderComponent,\r\n    DefineLayoutComponent,\r\n    MapMatchCodesComponent,\r\n    AssetColumnSelectComponent,\r\n    AssetSelectedColumnsComponent,\r\n    ReconciliationValidationComponent,\r\n    FinalizeDataComponent,\r\n    ConsolidationMatchCodeAssignmentComponent,\r\n    DynamicAssignmentFieldComponent,\r\n    DestinationColumnSelectorComponent,\r\n    OneToManyMatchComponent,\r\n    ManyToOneMatchComponent\r\n  ],\r\n  entryComponents: [ReconciliationFormComponent, FilterCriteriaBuilderComponent, FieldMatchesComponent],\r\n  providers: [\r\n    ReconcileDataService,\r\n    ApiService,\r\n    ReconciliationMatchService,\r\n    ReconciliationInventoryService,\r\n    CostFieldsService,\r\n    MatchCodesService,\r\n    InventorySearchRepository,\r\n    ReconcileMatchService,\r\n    AllocationService,\r\n    AlertService,\r\n    InventoryService,\r\n    ParentChildService,\r\n    MassMatchService,\r\n    FilterOperationsService,\r\n    ParentChildService,\r\n    ConsolidationService,\r\n    ReconcileDataGridService,\r\n    InventoryApiService,\r\n    CalculationApiService,\r\n    SettingsApiService\r\n  ]\r\n})\r\nexport class ReconciliationModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Asset } from '../../_models/asset.model';\r\n\r\n@Injectable()\r\nexport class AllocationService {\r\n\r\n    private selectedInventoryAssets = new BehaviorSubject<Array<any>>(new Array<any>());\r\n    currentSelectedInventory = this.selectedInventoryAssets.asObservable();\r\n\r\n    private selectedClientAssets = new BehaviorSubject<Array<any>>(new Array<any>());\r\n    currentSelectedClientAsset = this.selectedClientAssets.asObservable();\r\n\r\n    private selectedMatchCode = new BehaviorSubject<string>('');\r\n    currentSelectedMatchCode = this.selectedMatchCode.asObservable();\r\n    constructor() { }\r\n\r\n    changeSelectedInventoryAssets(updatedSelection: Array<any>, isAdded: boolean){\r\n        this.addOrRemove(updatedSelection, isAdded, false);\r\n    }\r\n\r\n    changeSelectedClientAssets(updatedSelection: Array<any>, isAdded: boolean){\r\n        this.addOrRemove(updatedSelection, isAdded, true);\r\n    }\r\n\r\n    changeSelectedMatchCode(updatedSelection: string){\r\n        this.selectedMatchCode.next(updatedSelection);\r\n    }\r\n\r\n    setSelectedInventoryAssets(assets: Array<Asset>){\r\n\r\n    }\r\n\r\n    clearSelections(){\r\n        this.selectedMatchCode.next('');\r\n        this.selectedClientAssets.next(new Array<any>());\r\n        this.selectedInventoryAssets.next(new Array<any>());\r\n    }\r\n\r\n    private addOrRemove(updatedSelection: Array<any>, isAdded: boolean, isClient: boolean){\r\n        const current = isClient ? this.selectedClientAssets.getValue() : this.selectedInventoryAssets.getValue();\r\n        updatedSelection.forEach(row => {\r\n            if (isAdded) {\r\n                current.push(row);\r\n            } else {\r\n                current.splice(current.findIndex(c => c.Id === row.Id), 1);\r\n            }\r\n        });\r\n\r\n        if (isClient) {\r\n            this.selectedClientAssets.next(current);\r\n        } else {\r\n            this.selectedInventoryAssets.next(current);\r\n        }\r\n    }\r\n\r\n\r\n}","\r\nimport {map} from 'rxjs/operators';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { ReconciliationConstants } from '../reconciliation.constants';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConsolidationColumn } from '../../_models/reconciliation/consolidation-column.model';\r\nimport { ConsolidationColumnOverride } from '../../_models/reconciliation/consolidation-column-override.model';\r\nimport { DataTargetName } from '../../_enums/data-target-name';\r\nimport { InventoryService } from '../../_api/services/reconciliation/inventory.service';\r\nimport { AssetFileSummaryDto } from '../../_api/dtos/asset-file-summary.dto';\r\nimport { ConsolidatedFileColumnMapDto } from '../../_api/dtos/consolidated-file-column-map.dto';\r\nimport { FieldMetaDataDto } from '../../_api/dtos/inventory/field-meta-data.dto';\r\nimport { MatchCodeColumnMapDto } from '../../_api/dtos/reconciliation/match-code-column-map.dto';\r\nimport { MatchCodeColumnMappingOverrideDto } from '../../_api/dtos/reconciliation/match-code-column-mapping-override.dto';\r\nimport { ValidationResult } from '../../_models/validation-result.model';\r\nimport { FieldType } from '../../_enums/field-type';\r\nimport { SelectOption } from '../../_models/select-option.model';\r\n\r\n@Injectable()\r\nexport class ConsolidationService {\r\n\r\n  defineLayoutDirty = false;\r\n  mapMatchCodesDirty = false;\r\n\r\n  private _clientFieldList = new BehaviorSubject<Array<ConsolidationColumn>>(\r\n    new Array<ConsolidationColumn>()\r\n  );\r\n  public clientFields = this._clientFieldList.asObservable();\r\n\r\n  private _inventoryFieldList = new BehaviorSubject<\r\n    Array<ConsolidationColumn>\r\n  >(new Array<ConsolidationColumn>());\r\n  public inventoryFields = this._inventoryFieldList.asObservable();\r\n\r\n  private _selectedFieldList = new BehaviorSubject<\r\n    Array<ConsolidationColumn>\r\n  >(new Array<ConsolidationColumn>());\r\n  public selectedFields = this._selectedFieldList.asObservable();\r\n\r\n  private _columnOverrides = new BehaviorSubject<\r\n    Array<ConsolidationColumnOverride>\r\n  >(new Array<ConsolidationColumnOverride>());\r\n  public columnOverrides = this._columnOverrides.asObservable();\r\n\r\n  private _availableDestinationList = new BehaviorSubject<\r\n    Array<ConsolidationColumn>\r\n  >(new Array<ConsolidationColumn>());\r\n  public availableDestinationList = this._availableDestinationList.asObservable();\r\n  private _defaultColumns: Array<ConsolidationColumn> = [];\r\n\r\n  private hiddenColumns = new Array<string>();\r\n\r\n  private _groupId: string;\r\n  constructor(private inventoryService: InventoryService) {\r\n    this.hiddenColumns = ReconciliationConstants.hiddenColumns.concat(ReconciliationConstants.hiddenColumnsLayoutMapping);\r\n  }\r\n\r\n  public ExcludedMappedColumns = [\r\n    'historicalCost',\r\n    'customColumns',\r\n    'depreciationMethod',\r\n    'depreciationConvention'\r\n  ];\r\n\r\n  public initialize(groupId: string) {\r\n    this._groupId = groupId;\r\n    this.clearData();\r\n\r\n    this.inventoryService.getAssetFileSearchMetadata(DataTargetName.inventory)\r\n    .subscribe(availableColumns => {\r\n      this.loadAvailableColumns(availableColumns);\r\n\r\n      this.inventoryService\r\n      .getAssetFileSummary(this._groupId, DataTargetName.client)\r\n      .subscribe(clientResult => {\r\n        const clientColumns = this.mapColumnsToDisplayFromApiResult(clientResult, DataTargetName.client);\r\n\r\n        this.inventoryService\r\n          .getAssetFileSummary(groupId, DataTargetName.inventory)\r\n          .subscribe(inventoryResult => {\r\n            const inventoryColumns = this.mapColumnsToDisplayFromApiResult(inventoryResult, DataTargetName.inventory);\r\n\r\n            this.inventoryService.getConsolidatedColumnMappings(this._groupId)\r\n            .subscribe(mappingResults =>  {\r\n              this.saveSelectedMappingsFromApi(mappingResults.result, clientColumns, inventoryColumns);\r\n\r\n            });\r\n          });\r\n      });\r\n    });\r\n\r\n    this.inventoryService.getConsolidatedColumnAssignments(this._groupId)\r\n    .subscribe(overrideResult => {\r\n      const overrides = this.mapOverrideDtoToModel(overrideResult.result);\r\n      this._columnOverrides.next(overrides);\r\n    });\r\n  }\r\n\r\n  private clearData() {\r\n    this._clientFieldList.next([]);\r\n    this._inventoryFieldList.next([]);\r\n    this._selectedFieldList.next([]);\r\n    this._columnOverrides.next([]);\r\n    this._availableDestinationList.next([]);\r\n    this._defaultColumns = [];\r\n  }\r\n\r\n  private mapColumnsToDisplayFromApiResult(assetFileSummaryDto: AssetFileSummaryDto,\r\n    dataTarget: DataTargetName): ConsolidationColumn[] {\r\n    // tslint:disable-next-line:prefer-const\r\n    let columns = assetFileSummaryDto.fields\r\n      .map<ConsolidationColumn>(dto => this.mapFieldDtoToColumn(dto, dataTarget))\r\n      .filter(\r\n        column =>\r\n          !this.hiddenColumns.some(\r\n            h => h.toLowerCase() === column.sourceColumn.toLowerCase()\r\n          )\r\n      );\r\n    columns.push(this.getAccountColumn(dataTarget));\r\n    return columns;\r\n  }\r\n\r\n  private saveSelectedMappingsFromApi(\r\n    mappings: Array<ConsolidatedFileColumnMapDto>,\r\n    clientColumns: ConsolidationColumn[],\r\n    inventoryColumns: ConsolidationColumn[]\r\n  ) {\r\n    if (mappings && mappings.length > 0) {\r\n      mappings.forEach(map => {\r\n        let target: ConsolidationColumn[];\r\n        if (map.source === DataTargetName.client) {\r\n          target = clientColumns;\r\n        } else if (map.source === DataTargetName.inventory) {\r\n          target = inventoryColumns;\r\n        }\r\n\r\n        const index = target.findIndex(c => c.sourceColumn === map.name && c.sourceTarget === map.source);\r\n        if (index !== -1) {\r\n          target[index].id = map.id;\r\n          target[index].displayName = map.displayName;\r\n          target[index].selected = true;\r\n          target[index].destinationColumnName = map.destinationColumnName;\r\n        }\r\n      });\r\n\r\n    }\r\n\r\n    this._clientFieldList.next(clientColumns);\r\n    this._inventoryFieldList.next(inventoryColumns);\r\n\r\n    this.selectColumns(clientColumns.filter(column => column.selected));\r\n    this.selectColumns(inventoryColumns.filter(column => column.selected));\r\n\r\n    this.reconcileAvailableColumns();\r\n}\r\n\r\n  private mapFieldDtoToColumn(\r\n    fieldDto: FieldMetaDataDto,\r\n    dataTarget: DataTargetName\r\n  ): ConsolidationColumn {\r\n    const result: ConsolidationColumn = {\r\n      id: null,\r\n      selected: false,\r\n      sourceTarget: dataTarget,\r\n      sourceColumn: fieldDto.name,\r\n      destinationColumnName: null,\r\n      displayName: fieldDto.displayName,\r\n      fieldType: fieldDto.fieldType,\r\n      isCustom: fieldDto.isCustom\r\n    };\r\n    return result;\r\n  }\r\n\r\n  public getColumns(dataTarget: DataTargetName): Observable<Array<ConsolidationColumn>> {\r\n    if (dataTarget === DataTargetName.client) {\r\n      return this.clientFields;\r\n    } else if (dataTarget === DataTargetName.inventory) {\r\n      return this.inventoryFields;\r\n    }\r\n  }\r\n\r\n  public getSelectedColumns(): Observable<Array<ConsolidationColumn>> {\r\n    return this.selectedFields;\r\n  }\r\n\r\n  public getSelectedColumn(columnId: string): ConsolidationColumn {\r\n    return this._selectedFieldList.getValue().find(x => x.id === columnId);\r\n  }\r\n\r\n  public getDefaultColumns(): Array<ConsolidationColumn> {\r\n    const result = [];\r\n    this._defaultColumns.forEach(c => result.push(<ConsolidationColumn> {\r\n      id: c.id,\r\n      sourceTarget: c.sourceTarget,\r\n      sourceColumn: c.sourceColumn,\r\n      fieldType: c.fieldType,\r\n      displayName: c.displayName,\r\n      destinationColumnName: c.destinationColumnName\r\n    }));\r\n    return result;\r\n  }\r\n\r\n  private setDefaultColumns(columns: Array<ConsolidationColumn>): void {\r\n    this._defaultColumns = [];\r\n    columns.forEach(c => this._defaultColumns.push(<ConsolidationColumn> {\r\n      id: c.id,\r\n      sourceTarget: c.sourceTarget,\r\n      sourceColumn: c.sourceColumn,\r\n      fieldType: c.fieldType,\r\n      displayName: c.displayName,\r\n      destinationColumnName: c.destinationColumnName\r\n    }));\r\n  }\r\n\r\n  private updateColumn(column: ConsolidationColumn) {\r\n    const currentClient = this._clientFieldList.getValue();\r\n    const currentInventory = this._inventoryFieldList.getValue();\r\n\r\n    if (column.sourceTarget === DataTargetName.client) {\r\n      const clientIndex = currentClient.findIndex(\r\n        item => item.sourceColumn === column.sourceColumn && item.sourceTarget === column.sourceTarget\r\n      );\r\n      if (clientIndex !== -1) {\r\n        currentClient[clientIndex].selected = column.selected;\r\n      }\r\n      this._clientFieldList.next(currentClient);\r\n    }\r\n    if (column.sourceTarget === DataTargetName.inventory) {\r\n      const inventoryIndex = currentInventory.findIndex(\r\n        item => item.sourceColumn === column.sourceColumn && item.sourceTarget === column.sourceTarget\r\n      );\r\n      if (inventoryIndex !== -1) {\r\n        currentInventory[inventoryIndex].selected = column.selected;\r\n      }\r\n      this._inventoryFieldList.next(currentInventory);\r\n    }\r\n  }\r\n\r\n  public selectColumns(columns: ConsolidationColumn[]) {\r\n    let current = this._selectedFieldList.getValue();\r\n    columns.forEach(column => {\r\n      column.selected = true;\r\n      // add the items to the selected list\r\n      const selectedIndex = current.findIndex(\r\n        c => c.sourceColumn === column.sourceColumn && c.sourceTarget === column.sourceTarget\r\n      );\r\n      if (selectedIndex === -1) {\r\n        current.push(column);\r\n      }\r\n      this.updateColumn(column);\r\n    });\r\n\r\n    current = current.sort((a, b) => {\r\n      if (a.sourceColumn > b.sourceColumn) {\r\n        return 1;\r\n      }\r\n      if (a.sourceColumn < b.sourceColumn) {\r\n        return -1;\r\n      }\r\n      return a.sourceTarget - b.sourceTarget;\r\n    });\r\n    this._selectedFieldList.next(current);\r\n  }\r\n\r\n  public deselectColumns(columns: ConsolidationColumn[]) {\r\n    const current = this._selectedFieldList.getValue();\r\n    columns.forEach(column => {\r\n      const index = current.findIndex(\r\n        c => c.sourceColumn === column.sourceColumn && c.sourceTarget === column.sourceTarget\r\n      );\r\n      if (index !== -1) {\r\n        current.splice(index, 1);\r\n      }\r\n      column.selected = false;\r\n      column.destinationColumnName = null;\r\n      this.updateColumn(column);\r\n    });\r\n    this._selectedFieldList.next(current);\r\n    this.reconcileAvailableColumns();\r\n  }\r\n\r\n  public updateSelectedColumn(column: ConsolidationColumn) {\r\n    const current = this._selectedFieldList.getValue();\r\n    const index = current.findIndex(\r\n      c => c.sourceColumn === column.sourceColumn && c.sourceTarget === column.sourceTarget\r\n    );\r\n    if (index !== -1) {\r\n      current[index].displayName = column.displayName;\r\n    }\r\n  }\r\n\r\n  public saveColumnMappingSettings(): Observable<Array<ConsolidationColumn>> {\r\n    const columns = this._selectedFieldList.getValue().map(column => <ConsolidatedFileColumnMapDto> {\r\n      id: column.id == null ? null : column.id,\r\n      source: column.sourceTarget,\r\n      name: column.sourceColumn,\r\n      displayName: column.displayName,\r\n      destinationColumnName: column.destinationColumnName,\r\n      order: 0,\r\n    });\r\n    return this.inventoryService.updateConsolidatedColumnMappings(this._groupId, columns).pipe(\r\n    map(result => <ConsolidationColumn[]> result.result.map(column => <ConsolidationColumn> {\r\n      id: column.id,\r\n      sourceTarget: column.source,\r\n      sourceColumn: column.name,\r\n      displayName: column.displayName,\r\n      destinationColumnName: column.destinationColumnName\r\n    })));\r\n  }\r\n\r\n  public saveColumnMappingAssignments(): Observable<Array<ConsolidationColumnOverride>> {\r\n    const overrides = this._columnOverrides.getValue();\r\n    const dtos = this.mapOverrideModelToDto(this._selectedFieldList.getValue(), overrides);\r\n    const subscription = this.inventoryService.updateConsolidatedColumnAssignments(this._groupId, dtos).pipe(\r\n    map(apiResult => {\r\n      if (apiResult.code === 0) {\r\n        const results = this.mapOverrideDtoToModel(apiResult.result);\r\n        this._columnOverrides.next(results);\r\n        return results;\r\n      }\r\n      return [];\r\n    }));\r\n    return subscription;\r\n  }\r\n\r\n  private mapOverrideDtoToModel(dtos: Array<MatchCodeColumnMapDto>): Array<ConsolidationColumnOverride> {\r\n    const results = new Array<ConsolidationColumnOverride>();\r\n    dtos.forEach(column => {\r\n      column.matchCodeOverrides.forEach(override => {\r\n        results.push(<ConsolidationColumnOverride> {\r\n          id: override.id,\r\n          matchCodeId: override.matchCodeId,\r\n          columnName: override.name,\r\n          source: override.source,\r\n          consolidationColumnId: column.id,\r\n          });\r\n      });\r\n    });\r\n    return results;\r\n  }\r\n\r\n  private mapOverrideModelToDto(columns: Array<ConsolidationColumn>, overrides: Array<ConsolidationColumnOverride>)\r\n    : Array<MatchCodeColumnMapDto> {\r\n    return columns.map(field => <MatchCodeColumnMapDto> {\r\n      id: field.id,\r\n      source: field.sourceTarget,\r\n      name: field.sourceColumn,\r\n      order: 0,\r\n      displayName: field.displayName,\r\n      destinationColumnName: field.destinationColumnName,\r\n      matchCodeOverrides: overrides.filter(o => o.consolidationColumnId === field.id).map(x => <MatchCodeColumnMappingOverrideDto> {\r\n        id: x.id,\r\n        matchCodeId: x.matchCodeId,\r\n        source: x.source,\r\n        name: x.columnName\r\n      })\r\n    });\r\n  }\r\n\r\n  public setColumnDestination(column: ConsolidationColumn, destination: string): ValidationResult {\r\n    const fields = this._selectedFieldList.getValue();\r\n\r\n    if (destination != null && destination.length > 0) {\r\n      // check for duplicates\r\n      const duplicate = fields\r\n        .filter(x => x.destinationColumnName != null || x.destinationColumnName !== '')\r\n        .findIndex(x => (x.destinationColumnName != null && x.destinationColumnName.toLowerCase() === destination.toLowerCase())\r\n          && (x.sourceTarget !== column.sourceTarget || x.sourceColumn !== column.sourceColumn));\r\n      if (duplicate !== -1) {\r\n        return <ValidationResult> {\r\n          success: false,\r\n          message: `The column '${destination}' is already in use.`\r\n        };\r\n      }\r\n      const regex = new RegExp('^[a-zA-Z0-9_-]*$');\r\n      if (regex.test(destination) === false) {\r\n        return <ValidationResult> {\r\n          success: false,\r\n          message: 'Spaces and special characters are not allowed.'\r\n        };\r\n      }\r\n      if (destination.toLowerCase() === 'historicalcost') {\r\n        return <ValidationResult> {\r\n          success: false,\r\n          message: 'Historical Cost is not a valid custom column name.'\r\n        };\r\n      }\r\n\r\n    }\r\n\r\n    const original = fields.find(x =>  x.sourceTarget === column.sourceTarget && x.sourceColumn === column.sourceColumn);\r\n    if (original == null) {\r\n      return <ValidationResult> {\r\n        success: false,\r\n        message: 'Unknown column'\r\n       };\r\n    }\r\n    original.destinationColumnName = destination;\r\n\r\n    this._selectedFieldList.next(fields);\r\n    this.reconcileAvailableColumns();\r\n\r\n    return  <ValidationResult> { success: true };\r\n  }\r\n\r\n  private reconcileAvailableColumns() {\r\n    this._availableDestinationList.next(this.getDefaultColumns());\r\n\r\n    this._selectedFieldList.subscribe(fields => {\r\n      if (fields == null || fields.length === 0) {\r\n        return;\r\n      }\r\n      fields\r\n        .filter(x => x.destinationColumnName != null || x.destinationColumnName !== '')\r\n        .forEach(selected => { this.removeAvailableColumn(selected.destinationColumnName); });\r\n    });\r\n  }\r\n\r\n  private loadAvailableColumns(apiResult: AssetFileSummaryDto) {\r\n    // tslint:disable-next-line:prefer-const\r\n    let columns = apiResult.fields\r\n      .filter(column => !this.hiddenColumns.some(h => h.toLowerCase() === column.name.toLowerCase()))\r\n      .filter(column => this.ExcludedMappedColumns.indexOf(column.name) === -1)\r\n      .map(f => <ConsolidationColumn> {\r\n        id: null,\r\n        sourceTarget: DataTargetName.consolidated,\r\n        sourceColumn: f.name,\r\n        displayName: f.displayName,\r\n        fieldType: f.fieldType,\r\n        destinationColumnName: f.name,\r\n        isCustom: f.isCustom\r\n      });\r\n      columns.push(this.getAccountColumn(DataTargetName.consolidated));\r\n    this._availableDestinationList.next(columns);\r\n    this.setDefaultColumns(columns);\r\n    this.reconcileAvailableColumns();\r\n  }\r\n\r\n  private removeAvailableColumn(sourceColumnName: string) {\r\n    const columns = this._availableDestinationList.getValue();\r\n    const index = columns.findIndex(a => a.sourceColumn === sourceColumnName);\r\n    if (index !== -1) {\r\n      columns.splice(index, 1);\r\n      this._availableDestinationList.next(columns);\r\n    }\r\n  }\r\n\r\n\r\n  private autoMapColumn(column: ConsolidationColumn) {\r\n    const available = this._availableDestinationList.getValue();\r\n    const fields = this._selectedFieldList.getValue();\r\n    const index = available.findIndex(a => a.sourceColumn === column.sourceColumn);\r\n    if (index !== -1) {\r\n      const original = fields\r\n        .findIndex(f => f.sourceTarget === column.sourceTarget && f.sourceColumn === column.sourceColumn);\r\n      fields[original].destinationColumnName = available[index].destinationColumnName;\r\n      fields[original].displayName = available[index].displayName;\r\n      this.removeAvailableColumn(column.destinationColumnName);\r\n    }\r\n    this._selectedFieldList.next(fields);\r\n  }\r\n\r\n  private getAccountColumn(sourceTarget: DataTargetName): ConsolidationColumn {\r\n    return <ConsolidationColumn> {\r\n      id: null,\r\n      destinationColumnName: sourceTarget === DataTargetName.consolidated ? 'accountId' : null,\r\n      displayName: 'Account',\r\n      fieldType: FieldType.EmptySpace,\r\n      isCustom: false,\r\n      selected: false,\r\n      sourceColumn: 'accountId',\r\n      sourceTarget: sourceTarget\r\n    };\r\n  }\r\n\r\n  public autoMapCustomFields() {\r\n    const fields = this._selectedFieldList.getValue().filter(c => c.destinationColumnName === null || c.destinationColumnName === '');\r\n    fields.forEach(field => {\r\n      const name = (field.sourceTarget === DataTargetName.client ? 'CF_' : 'AI_') + field.displayName;\r\n      this.setColumnDestination(field, name);\r\n    });\r\n  }\r\n\r\n  public autoMapFields() {\r\n    const fields = this._selectedFieldList.getValue();\r\n    // try mapping inventory fields first (they take precednce)\r\n    fields\r\n      .filter(c => (c.destinationColumnName == null || c.destinationColumnName === '') && c.sourceTarget === DataTargetName.inventory)\r\n      .forEach(column => {this.autoMapColumn(column); } );\r\n\r\n    // try mapping inventory fields first (they take precednce)\r\n    fields\r\n      .filter(c => (c.destinationColumnName == null || c.destinationColumnName === '') && c.sourceTarget === DataTargetName.client)\r\n      .forEach(column => {this.autoMapColumn(column); } );\r\n\r\n    this.autoMapCustomFields();\r\n  }\r\n\r\n  public validateDestinations(): string {\r\n    const fields = this._selectedFieldList.getValue();\r\n    // Check that all fields have been specified\r\n    if (fields.some(x => x.destinationColumnName == null || x.destinationColumnName.length === 0)) {\r\n      return 'Not all columns have a destination specified.';\r\n    }\r\n    // check for duplicates\r\n    const uniq = fields.map((field) => ({count: 1, destination: field.destinationColumnName}))\r\n      .reduce((a, b) => {\r\n        a[b.destination] = (a[b.destination] || 0) + b.count;\r\n        return a;\r\n      }, {});\r\n    const duplicates = Object.keys(uniq).filter((a) => uniq[a] > 1);\r\n    if (duplicates.length > 0) {\r\n      return 'There are duplicate destinations specified.  Please review the columns.';\r\n    }\r\n    // don't allow historical cost to be set.\r\n    if (fields.some(x => x.destinationColumnName.toLowerCase() === 'historicalcost')) {\r\n      return 'You cannot specify the destination of HistoricalCost.';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  public getMapMatchCodeOptions(columnId: string): Array<SelectOption> {\r\n    // get the column, so that we know the type.\r\n    const column = this.getSelectedColumn(columnId);\r\n    if (column == null) {\r\n      return [];\r\n    }\r\n\r\n    const fields = this._clientFieldList.getValue()\r\n      .concat(this._inventoryFieldList.getValue())\r\n      .filter(x => x.fieldType === column.fieldType)\r\n      .map(f => <SelectOption> {\r\n        value: `${f.sourceTarget}_${f.sourceColumn}`,\r\n        label: `${f.displayName} - ${f.sourceTarget === DataTargetName.client ? 'CF' : 'AI'}`,\r\n        isCustom: f.isCustom\r\n      });\r\n\r\n      return fields;\r\n  }\r\n\r\n  public setColumnOverride(columnId: string, matchCodeId: string, target: DataTargetName, columnName: string): void {\r\n    const column = this._selectedFieldList.getValue().find(s => s.id === columnId);\r\n    if (column == null) {\r\n      return;\r\n    }\r\n\r\n    let overrides = this._columnOverrides.getValue();\r\n    const overrideIndex = overrides.findIndex(o => o.consolidationColumnId === columnId && o.matchCodeId === matchCodeId);\r\n    if (overrideIndex === -1) {\r\n      overrides.push(<ConsolidationColumnOverride> {\r\n        consolidationColumnId: columnId,\r\n        matchCodeId: matchCodeId,\r\n        source: target,\r\n        columnName: columnName\r\n      });\r\n    } else {\r\n      if (overrides[overrideIndex].source === target && overrides[overrideIndex].columnName === columnName) {\r\n        overrides = overrides.splice(overrideIndex, 1);\r\n      } else {\r\n        overrides[overrideIndex].source = target;\r\n        overrides[overrideIndex].columnName = columnName;\r\n      }\r\n    }\r\n\r\n    this._columnOverrides.next(overrides);\r\n  }\r\n}\r\n","import {map} from 'rxjs/operators';\r\nimport { ConsolidationColumn } from '../../_models/reconciliation/consolidation-column.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { InventoryApiService } from '../../_api/_runtime/services/inventory-api.service';\r\nimport { InventoryService as ReconInventoryService } from '../../_api/services/reconciliation/inventory.service';\r\nimport { Observable } from 'rxjs';\r\nimport { FieldOption } from '../../_models/field-option.model';\r\nimport { AssetFileRecordDto } from '../../_api/dtos/asset-file-record-dto';\r\nimport { Asset } from '../../_models/asset.model';\r\nimport { ConsolidatedFileColumnMapDto } from '../../_api/dtos/consolidated-file-column-map.dto';\r\nimport { AssetFileSummaryDto } from '../../_api/dtos/asset-file-summary.dto';\r\n\r\n@Injectable()\r\nexport class ReconciliationInventoryService {\r\n\r\n  constructor(\r\n    private inventoryService: ReconInventoryService,\r\n    private configService: ConfigService,\r\n    private inventoryApiService: InventoryApiService\r\n  ) {}\r\n\r\n  copyInventoryToGroup(sourceGroupId, targetGroupId): Observable<any> {\r\n    return this.inventoryService.copy(sourceGroupId, targetGroupId);\r\n  }\r\n\r\n  getGroupDepartmentsOptions(groupId): Observable<Array<FieldOption>> {\r\n    const options: Array<FieldOption> = new Array<FieldOption>();\r\n    return this.inventoryApiService.getDepartmentsByGroupId(groupId).pipe(map(result => {\r\n        result.forEach(department => {\r\n          options.push(<FieldOption>{\r\n            displayName : department.departmentNumber.concat(' - ', department.description),\r\n            key : department.id\r\n          });\r\n        });\r\n        return options;\r\n    }));\r\n  }\r\n\r\n  getGroupAccountOptions(groupId): Observable<Array<FieldOption>> {\r\n    const options: Array<FieldOption> = new Array<FieldOption>();\r\n    return this.inventoryApiService.getAccountsByGroupId(groupId).pipe(map(result => {\r\n      result.forEach(account => {\r\n        options.push(<FieldOption>{\r\n          displayName: account.accountNumber.concat(' - ', account.accountDescription),\r\n          key: account.id\r\n        });\r\n      });\r\n      return options;\r\n    }));\r\n  }\r\n\r\n  getContractGroupsWithInventory(groupId): Observable<any> {\r\n    return this.inventoryService.getContractGroupsWithInventory(groupId);\r\n  }\r\n\r\n  getAssetFileSummary(groupId: string, filetype: number): Observable<AssetFileSummaryDto> {\r\n    return this.inventoryService.getAssetFileSummary(groupId, filetype).pipe(\r\n    map(data => {\r\n      data.fields.sort((a, b) => this.stringComparator(a.name, b.name));\r\n      return data;\r\n    }));\r\n  }\r\n\r\n  getAssetFileSearchMetadata(filetype: number): Observable<AssetFileSummaryDto> {\r\n    return this.inventoryService.getAssetFileSearchMetadata(filetype).pipe(\r\n    map(data => {\r\n      data.fields.sort((a, b) => this.stringComparator(a.name, b.name));\r\n      return data;\r\n    }));\r\n  }\r\n\r\n  public getSearchMetadataByGroupId(groupId: string, fileType: number): Observable<AssetFileSummaryDto> {\r\n    return this.inventoryApiService.getSearchMetadataByGroupId(groupId, fileType);\r\n  }\r\n\r\n\r\n  createAssetRecord(fileId: string, recordDto: Object): Observable<AssetFileRecordDto> {\r\n    return this.inventoryService.createAssetRecord(fileId, recordDto).pipe(\r\n    map(asset => {\r\n      asset.id = asset['id'];\r\n      return asset;\r\n    }));\r\n  }\r\n\r\n  getAssetRecord(recordId: string): Observable<Asset> {\r\n    return this.inventoryService.getAssetRecord(recordId);\r\n  }\r\n\r\n  updateAssetRecord(recordId: string, recordDto: Object): Observable<Asset> {\r\n    return this.inventoryService.updateAssetRecord(recordId, recordDto).pipe(\r\n    map(asset => {\r\n      asset.assetId = asset['id'];\r\n      return asset;\r\n    }));\r\n  }\r\n\r\n  public copyAssetRecord(recordId: string): Observable<AssetFileRecordDto> {\r\n    return this.inventoryService.copyAssetRecord(recordId).pipe(\r\n    map(asset => {\r\n      asset.id = asset['id'];\r\n      return asset;\r\n    }));\r\n  }\r\n\r\n  public getConsolidatedColumnMappings(groupId: string): Observable<Array<ConsolidatedFileColumnMapDto>> {\r\n    return this.inventoryService.getConsolidatedColumnMappings(groupId).pipe(\r\n    map(result => result.result));\r\n  }\r\n\r\n  public updateConsolidatedColumnMappings(groupId: string, mappings: ConsolidationColumn[])\r\n  : Observable<Array<ConsolidatedFileColumnMapDto>> {\r\n    const dto = mappings.map(m => <ConsolidatedFileColumnMapDto> {\r\n      id: m.id,\r\n      source: m.sourceTarget,\r\n      name: m.sourceColumn,\r\n      displayName: m.displayName,\r\n      destinationColumnName: m.destinationColumnName,\r\n      order: 0\r\n    });\r\n    return this.inventoryService.updateConsolidatedColumnMappings(groupId, dto).pipe(\r\n    map(result => result.result));\r\n  }\r\n\r\n  private stringComparator(a, b): number {\r\n    if (a < b) {\r\n      return -1;\r\n    }\r\n    if (a > b) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n","import { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { SearchRequest } from '../../../_models/search-request.model';\r\nimport { FieldMatchDto } from '../../../_api/dtos/inventory/field-match.dto';\r\nimport { FilterDto } from '../../../_api/dtos/inventory/filter.dto';\r\nimport { SearchResponseDto } from '../../../_api/dtos/inventory/search-response.dto';\r\nimport { FieldMetaDataDto } from '../../../_api/_configuration/dtos/field-metadata.dto';\r\nimport { InventorySearchRepository } from '../../../_api/services/inventory/inventory-search-repository.service';\r\nimport { ReconciliationMatchService } from '../../../_api/services/reconciliation/reconcilation-match.service';\r\nimport { ReferenceDataApiService } from '../../../_api/_configuration/services/reference-data-api.service';\r\nimport { ReconcilationMassMatchDto } from '../../../_api/dtos/reconcilation-mass-match.dto';\r\nimport { ReconciliationSummaryResult } from '../../../_api/dtos/reconciliation/reconciliation-summary-result.dto';\r\nimport { ApiServiceResult } from '../../../_api/dtos/api-service-result.dto';\r\nimport { ReconciliationMatchSummaryDto } from '../../../_api/dtos/reconcilation-match-summary.dto';\r\nimport { EnumDto } from '../../../_api/_configuration/dtos/enum.dto';\r\nimport { MassMatchGridState } from '../../../_models/mass-match-grid-state';\r\nimport { SortTerm } from '../../../_api/_runtime/dtos/sort-term.dto';\r\n\r\n@Injectable()\r\nexport class MassMatchService {\r\n  private searchRequestSource = new BehaviorSubject<SearchRequest>(<SearchRequest>{\r\n    fieldMatchTerms: new Array<FieldMatchDto>(),\r\n    filterTerms: new Array<FilterDto>(),\r\n    excludeMatchedRecords: true\r\n  });\r\n  private inventoryMetadataSource = new BehaviorSubject<Array<Array<FieldMetaDataDto>>>(new Array<Array<FieldMetaDataDto>>());\r\n  private searchResponseSource = new BehaviorSubject<SearchResponseDto>(null);\r\n\r\n  private selectedInventoryHeadersSource = new BehaviorSubject<Array<string>>(new Array<string>());\r\n  private selectedClientHeadersSource = new BehaviorSubject<Array<string>>(new Array<string>());\r\n\r\n  public searchRequest$ = this.searchRequestSource.asObservable();\r\n  public searchResponse$ = this.searchResponseSource.asObservable();\r\n  public searchFilterTerms = new Array<FilterDto>();\r\n  public searchFieldMatchTerms = new Array<FieldMatchDto>();\r\n\r\n  public selectedInventoryHeaders$ = this.selectedInventoryHeadersSource.asObservable();\r\n  public selectedClientHeaders$ = this.selectedClientHeadersSource.asObservable();\r\n\r\n  public inventoryMetadata$ = this.inventoryMetadataSource.asObservable();\r\n\r\n  public canMassMatch = false;\r\n  public currentGroupId: string;\r\n  public selectedMatchCode: string;\r\n\r\n  constructor(private searchRepository: InventorySearchRepository,\r\n    private reconcileMatchRepository: ReconciliationMatchService,\r\n    private referenceDataApiService: ReferenceDataApiService) {}\r\n\r\n  public init(clientAssetCount: number, inventoryAssetCount: number) {\r\n    this.canMassMatch = clientAssetCount > 0 && inventoryAssetCount > 0;\r\n  }\r\n\r\n  public saveMassMatch(\r\n    massMatches: ReconcilationMassMatchDto[]\r\n  ): Observable<ApiServiceResult<ReconciliationSummaryResult[]>> {\r\n    return this.reconcileMatchRepository.setMassMatch(massMatches);\r\n  }\r\n\r\n  public updateSearchResponse(response: SearchResponseDto) {\r\n    this.searchResponseSource.next(response);\r\n  }\r\n\r\n  public updateInventoryMetadata(inventoryMetadata: Array<Array<FieldMetaDataDto>>): void {\r\n    this.inventoryMetadataSource.next(inventoryMetadata);\r\n  }\r\n\r\n  public initSearchResponse(groupId: string) {\r\n    const current = this.searchRequestSource.getValue();\r\n    current.groupId = groupId;\r\n    this.searchRequestSource.next(current);\r\n  }\r\n\r\n  public setSelectedMatch(matchCodeId: string) {\r\n    const current = this.searchRequestSource.getValue();\r\n    current.matchCodeId = matchCodeId;\r\n  }\r\n\r\n  public addOrUpdateFieldMatch(fieldMatch: FieldMatchDto): void {\r\n    const current = this.searchRequestSource.getValue();\r\n    const index = current.fieldMatchTerms.findIndex(d => d.id === fieldMatch.id);\r\n    if (index === -1) {\r\n      current.fieldMatchTerms.push(fieldMatch);\r\n    } else if (index >= 0) {\r\n      current.fieldMatchTerms[index] = fieldMatch;\r\n    }\r\n    this.searchRequestSource.next(current);\r\n  }\r\n\r\n  public addOrUpdateFilter(filter: FilterDto): void {\r\n    const current = this.searchRequestSource.getValue();\r\n    const index = current.filterTerms.findIndex(d => d.id === filter.id);\r\n    if (index === -1) {\r\n      current.filterTerms.push(filter);\r\n    } else if (index >= 0) {\r\n      current.filterTerms[index] = filter;\r\n    }\r\n    this.searchRequestSource.next(current);\r\n  }\r\n\r\n  public removeFieldMatch(fieldMatch: FieldMatchDto): void {\r\n    const current = this.searchRequestSource.getValue();\r\n    const index = current.fieldMatchTerms.findIndex(d => d.id === fieldMatch.id);\r\n    if (index >= 0) {\r\n      current.fieldMatchTerms.splice(index, 1);\r\n    }\r\n    this.searchRequestSource.next(current);\r\n  }\r\n\r\n  public removeFilter(filter: FilterDto): void {\r\n    const current = this.searchRequestSource.getValue();\r\n    const index = current.filterTerms.findIndex(d => d.id === filter.id);\r\n    if (index >= 0) {\r\n      current.filterTerms.splice(index, 1);\r\n    }\r\n    this.searchRequestSource.next(current);\r\n  }\r\n\r\n  public searchAssets(groupId: string, matchCodeId: string,\r\n                      gridState: MassMatchGridState = { skip: 0, take: 250 }): Observable<SearchResponseDto> {\r\n    const currentSearchRequest = this.searchRequestSource.getValue();\r\n\r\n    currentSearchRequest.matchCodeId = matchCodeId;\r\n    this.searchFilterTerms = currentSearchRequest.filterTerms;\r\n    this.searchFieldMatchTerms = currentSearchRequest.fieldMatchTerms;\r\n\r\n    currentSearchRequest.skip = gridState.skip;\r\n    currentSearchRequest.take = gridState.take;\r\n\r\n    const defaultSortTerm = <SortTerm> {\r\n      termOrder: 0,\r\n      field: 'Description',\r\n      sortDirection: 0\r\n    };\r\n\r\n    if (gridState.sortTerm) {\r\n      currentSearchRequest.sortTerms = [gridState.sortTerm];\r\n    } else {\r\n      currentSearchRequest.sortTerms = [defaultSortTerm];\r\n    }\r\n\r\n    return this.searchRepository.searchAssetsMassMatch(groupId, currentSearchRequest);\r\n  }\r\n\r\n  public clearSearch() {\r\n    this.searchRequestSource.next(<SearchRequest>{\r\n      fieldMatchTerms: new Array<FieldMatchDto>(),\r\n      filterTerms: new Array<FilterDto>(),\r\n      excludeMatchedRecords: true\r\n    });\r\n  }\r\n\r\n  public getCurrentMatchesForGroup(groupId: string): Observable<ReconciliationMatchSummaryDto[]> {\r\n    return this.reconcileMatchRepository.getReconciliationMatchSummary(groupId);\r\n  }\r\n\r\n  public updateSelectedClientHeaders(headers: Array<string>):  void {\r\n    return this.selectedClientHeadersSource.next(headers);\r\n  }\r\n\r\n  public updateSelectedInventoryHeaders(headers: Array<string>): void {\r\n    return this.selectedInventoryHeadersSource.next(headers);\r\n  }\r\n\r\n  public getActivityCodes(): Observable<ApiServiceResult<EnumDto>> {\r\n    return this.referenceDataApiService.getActivityCodes();\r\n  }\r\n}\r\n","\r\nimport {map} from 'rxjs/operators';\r\nimport { ReconcileMatchService } from './reconcile-match.service';\r\nimport { ReconcileDataService } from './reconcile-data.service';\r\nimport { ReconcileParentChild } from '../../_models/reconcile-parent-child.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Asset } from '../../_models/asset.model';\r\nimport { ReconciliationMatchService } from '../../_api/services/reconciliation/reconcilation-match.service';\r\nimport { ApiServiceResult } from '../../_api/dtos/api-service-result.dto';\r\nimport { ReconciliationSummaryResult } from '../../_api/dtos/reconciliation/reconciliation-summary-result.dto';\r\nimport { MatchOrAllocationResult } from '../../_api/dtos/reconciliation/match-or-allocation-result.dto';\r\nimport { ParentChildMatchEntity } from '../../_models/parent-child-match-result.model';\r\n\r\n@Injectable()\r\nexport class ParentChildService {\r\n  private selectedAssets = new BehaviorSubject<Array<ReconcileParentChild>>(new Array<ReconcileParentChild>());\r\n  public currentSelectedAssets = this.selectedAssets.asObservable();\r\n\r\n  private childrenSource = new BehaviorSubject<Array<Asset>>(new Array<Asset>());\r\n  public children$ = this.childrenSource.asObservable();\r\n\r\n  private validationErrors: string[];\r\n\r\n  constructor(\r\n    private reconciliationMatchService: ReconciliationMatchService,\r\n    private reconcileMatchService: ReconcileMatchService,\r\n    private reconcileDataService: ReconcileDataService\r\n  ) {}\r\n\r\n  changeSelectedAssets(updatedSelection: Array<any>, isAdded: boolean) {\r\n    updatedSelection.forEach(row => {\r\n      const model = this.mapAssetToParentChild(row);\r\n      if (isAdded) {\r\n        this.addSelectedAsset(model);\r\n      } else {\r\n        this.removeSelectedAsset(model);\r\n      }\r\n    });\r\n  }\r\n\r\n  setSelectedAssets(assets: Array<Asset>) {\r\n    this.clearSelectedAssets();\r\n\r\n    assets.forEach(asset => {\r\n      const model = this.mapAssetToParentChild(asset);\r\n      this.addSelectedAsset(model);\r\n    });\r\n  }\r\n\r\n  clearSelectedAssets() {\r\n    this.selectedAssets.next(new Array<ReconcileParentChild>());\r\n  }\r\n\r\n  private mapAssetToParentChild(asset: Asset): ReconcileParentChild {\r\n    if (asset == null) { return null; }\r\n    const result: ReconcileParentChild = {\r\n      assetId: asset.assetId,\r\n      isParent: asset.isParent, // TODO\r\n      parentId: asset.parentId, // TODO\r\n      assetTagNumber: asset.assetTagNumber,\r\n      oldTagNumber: asset.oldTagNumber,\r\n      description: asset.description,\r\n      serialNumber: asset.serialNumber,\r\n      historicalCost: asset.historicalCost\r\n    };\r\n    return result;\r\n  }\r\n\r\n  private addSelectedAsset(selection: ReconcileParentChild) {\r\n    const current = this.selectedAssets.getValue();\r\n    if (current.findIndex(d => d.assetId === selection.assetId) < 0) {\r\n      current.push(selection);\r\n    }\r\n    this.selectedAssets.next(current);\r\n  }\r\n\r\n  private removeSelectedAsset(selection: ReconcileParentChild) {\r\n    const current = this.selectedAssets.getValue();\r\n    const index = current.findIndex(d => d.assetId === selection.assetId);\r\n    if (index >= 0) {\r\n      current.splice(index, 1);\r\n    }\r\n    this.selectedAssets.next(current);\r\n  }\r\n\r\n  public isValidSelection(assets: Array<ReconcileParentChild>): Observable<boolean> {\r\n    const assetIds = assets.map(({ assetId }) => assetId);\r\n    const groupId = this.reconcileDataService.groupId;\r\n\r\n    this.validationErrors = [];\r\n\r\n    const isValid = this.reconciliationMatchService.getMatchSummaryForAssetIds(groupId, assetIds).pipe(map(({ result }) => {\r\n      if (result == null) {\r\n        this.validationErrors.push('Unknown service error.');\r\n        return false;\r\n      }\r\n\r\n      if (result.assetData.filter(c => c.isParent).length > 1) {\r\n        this.validationErrors.push('Matches from more than one parent/child relationship are not allowed.');\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    }));\r\n\r\n    return isValid;\r\n  }\r\n\r\n  public getValidationErrors(): string {\r\n    return this.validationErrors.join('<br>');\r\n  }\r\n\r\n  public getMatchSummaryForAssetIds(assetIds: string[]): Observable<ApiServiceResult<ReconciliationSummaryResult>> {\r\n    const groupId = this.reconcileDataService.groupId;\r\n    return this.reconciliationMatchService.getMatchSummaryForAssetIds(groupId, assetIds);\r\n  }\r\n\r\n  public setParentChildMatches(\r\n    parentId: string,\r\n    assetIds: string[]\r\n  ): Observable<ApiServiceResult<ReconciliationSummaryResult[]>> {\r\n    return this.reconciliationMatchService.setParentChildMatch(parentId, assetIds);\r\n  }\r\n\r\n  public updateParentChildMatches(\r\n    parentId: string,\r\n    assetIds: string[]\r\n  ): Observable<ApiServiceResult<ReconciliationSummaryResult[]>> {\r\n    return this.reconciliationMatchService.updateParentChildMatch(parentId, assetIds);\r\n  }\r\n\r\n  public removeChildMatches(assetIds: string[]): Observable<ApiServiceResult<MatchOrAllocationResult>> {\r\n    return this.reconciliationMatchService.unmatchAssetRecords(assetIds);\r\n  }\r\n\r\n  public setChildren(children: Array<Asset>) {\r\n    this.childrenSource.next(children);\r\n  }\r\n\r\n  public clearChildren() {\r\n    this.childrenSource.next(new Array<Asset>());\r\n  }\r\n\r\n  private mapResultToEntity(result: any): ParentChildMatchEntity[] {\r\n    const entities = new Array<ParentChildMatchEntity>();\r\n\r\n    result.forEach(r => {\r\n      const entity = <ParentChildMatchEntity>{\r\n        assetFileRecordId: r.assetFileRecordId,\r\n        matchCodeId: r.matchCodeId,\r\n        matchId: r.matchId,\r\n        parentAssetFileRecordId: r.parentAssetFileRecordId\r\n      };\r\n\r\n      entities.push(entity);\r\n    });\r\n\r\n    return entities;\r\n  }\r\n}\r\n","import { FilterOperationsService } from '../../_core/services/filter-operations.service';\r\nimport { of, BehaviorSubject, Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { Asset } from '../../_models/asset.model';\r\nimport { GridColumnHeader } from '../../_models/grid-column-header.model';\r\nimport { CreateAssetFileCustomColumnDto } from '../../_api/dtos/create-asset-file-custom-column.dto';\r\nimport { ReferenceDataApiService } from '../../_api/_configuration/services/reference-data-api.service';\r\nimport { AssetSearchResponseDto,\r\n  AssetSortTermDto, AssetFilterTermDto, AssetSearchDto, AssetSearchTermDto } from '../../_api/dtos/inventory/asset-search.dto';\r\nimport { InventoryService as ReconInventoryService } from '../../_api/services/reconciliation/inventory.service';\r\nimport { DataTargetName } from '../../_enums/data-target-name';\r\nimport { AssetFileRecordDto } from '../../_api/dtos/asset-file-record-dto';\r\nimport { AssetDto } from '../../_api/dtos/reconciliation/reconciliation-summary-result.dto';\r\nimport { ReconciliationMatchType } from '../../_enums/reconciliation-match-type';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { CompositeFilterDescriptor } from '@progress/kendo-data-query';\r\nimport { ApiServiceResult } from '../../_api/dtos/api-service-result.dto';\r\nimport { EnumDto } from '../../_api/_configuration/dtos/enum.dto';\r\n\r\n@Injectable()\r\nexport class ReconcileDataGridService {\r\n\r\n  private clearSelectionsSource = new BehaviorSubject<boolean>(false);\r\n\r\n  private unsavedEditsSource = new BehaviorSubject<Array<Array<Asset>>>(new Array<Array<Asset>>());\r\n\r\n  private cachedRecordsSource = new BehaviorSubject<Array<Array<Asset>>>(new Array<Array<Asset>>());\r\n  private recordCountSource = new BehaviorSubject<Array<number>>(new Array<number>());\r\n  private headersSource = new BehaviorSubject<Array<Array<GridColumnHeader>>>(new Array<Array<GridColumnHeader>>());\r\n  private selectedHeadersSource = new BehaviorSubject<Array<Array<string>>>(new Array<Array<string>>());\r\n  private excludeMatchSource = new BehaviorSubject<Array<boolean>>(new Array<boolean>());\r\n  private pendingCustomColumnsSouce = new BehaviorSubject<Array<Array<CreateAssetFileCustomColumnDto>>>(\r\n    new Array<Array<CreateAssetFileCustomColumnDto>>()\r\n  );\r\n  private availableColumnSource = new BehaviorSubject<Array<GridColumnHeader>>(new Array<GridColumnHeader>());\r\n\r\n  private lastCachedIndexSource = new Array<number>();\r\n\r\n  public clearSelections$ = this.clearSelectionsSource.asObservable();\r\n  public cachedRecords$ = this.cachedRecordsSource.asObservable();\r\n  public recordCounts$ = this.recordCountSource.asObservable();\r\n  public headers$ = this.headersSource.asObservable();\r\n  public selectedHeaders$ = this.selectedHeadersSource.asObservable();\r\n  public unsavedEdits$ = this.unsavedEditsSource.asObservable();\r\n  public pendingCustomColumns$ = this.pendingCustomColumnsSouce.asObservable();\r\n  public availableColumns$ = this.availableColumnSource.asObservable();\r\n  public groupId: string;\r\n\r\n  public windowSize = 100;\r\n  public cacheSize = 100;\r\n  public currentSort = new Array<Array<AssetSortTermDto>>();\r\n  public filterTerms = new Array<Array<AssetFilterTermDto>>();\r\n\r\n  public defaultHeaders = [\r\n    <GridColumnHeader>{ name: 'serialNumber', order: 1 },\r\n    <GridColumnHeader>{ name: 'assetTagNumber', order: 2 },\r\n    <GridColumnHeader>{ name: 'description', order: 3 },\r\n    <GridColumnHeader>{ name: 'modelNumber', order: 4 },\r\n    <GridColumnHeader>{ name: 'manufacturer', order: 5 },\r\n    <GridColumnHeader>{ name: 'buildingName', order: 6 },\r\n    <GridColumnHeader>{ name: 'floor', order: 7 },\r\n    <GridColumnHeader>{ name: 'quantity', order: 8 },\r\n    <GridColumnHeader>{ name: 'historicalCost', order: 9 }\r\n  ];\r\n\r\n  constructor(\r\n    private inventoryRepository: ReconInventoryService,\r\n    private filterOperationsService: FilterOperationsService,\r\n    private referenceDataApiService: ReferenceDataApiService) {\r\n    this.clearRecordCounts();\r\n    this.clearAllPendingColumns();\r\n  }\r\n\r\n  update(\r\n    dataSource: number,\r\n    skip: number,\r\n    take: number,\r\n    totalRecordCount: number,\r\n    sortTerms: AssetSortTermDto[],\r\n    clearCache: boolean = false\r\n  ): Observable<ReconcileDataGridResult> {\r\n    const s = this;\r\n\r\n    const lastCachedIndex = s.lastCachedIndexSource[dataSource] ? s.lastCachedIndexSource[dataSource] : 0;\r\n\r\n    return Observable.create(function(observer) {\r\n      const currentCachedRecords = s.cachedRecordsSource.getValue();\r\n\r\n      \r\n      s.search(s.groupId, dataSource, skip, s.cacheSize, sortTerms, s.filterTerms[dataSource]).subscribe(result => {\r\n        const assets = s.init(result, dataSource);\r\n\r\n        s.setCacheRecords(assets, dataSource, skip, totalRecordCount);\r\n\r\n        observer.next(\r\n          <ReconcileDataGridResult> { assets: assets, totalInRecordSet: result.totalInRecordSet, allAssetIds: result.allAssetIds });\r\n        observer.complete();\r\n      });\r\n    });\r\n  }\r\n\r\n  search(\r\n    groupId: string,\r\n    dataTarget: number,\r\n    skip: number,\r\n    take: number,\r\n    sortTerms: AssetSortTermDto[],\r\n    filters: AssetFilterTermDto[],\r\n    excludeMatches: boolean = false\r\n  ): Observable<AssetSearchResponseDto> {\r\n    const searchFilter = <AssetSearchDto>{\r\n      fieldMatchTerms: [],\r\n      fieldMatchConjunction: 'and',\r\n      filterTerms: filters,\r\n      filterConjunction: 'and',\r\n      excludeMatchedRecords: excludeMatches ? excludeMatches : this.excludeMatchSource.getValue()[dataTarget],\r\n      sortTerms: sortTerms,\r\n      skip: skip,\r\n      take: take,\r\n      includeAllAssetIds: true\r\n    };\r\n\r\n    this.currentSort[dataTarget] = sortTerms;\r\n\r\n    return this.inventoryRepository.search(groupId, searchFilter);\r\n  }\r\n\r\n  public init(searchResponse: AssetSearchResponseDto, dataSource: number): Array<Asset> {\r\n    const assets = new Array<Asset>();\r\n\r\n    if (!searchResponse.assets || searchResponse.assets.length === 0) {\r\n      return assets;\r\n    }\r\n\r\n    searchResponse.assets.forEach(a => {\r\n      const asset = <Asset>{\r\n        assetId: a.assetId,\r\n        dataSource: dataSource,\r\n        isMatched: !!a.matchCodeId,\r\n        isParent: a.parentId === a.assetId,\r\n        isChild: !!a.parentId && a.parentId !== a.assetId,\r\n        matchCodeId: a.matchCodeId,\r\n        matchCodeName: a.matchCodeName\r\n      };\r\n\r\n      for (const [key, value] of Object.entries(a.assetData)) {\r\n        asset[key] = value;\r\n        asset.imageCollection = !!asset.assetImages ? asset.assetImages : [];\r\n      }\r\n\r\n      assets.push(asset);\r\n    });\r\n\r\n    return assets;\r\n  }\r\n\r\n  setCacheRecords(assets: Array<Asset>, dataTarget: number, skip: number, recordCount: number) {\r\n    const current = this.cachedRecordsSource.getValue();\r\n    current[dataTarget] = assets;\r\n    this.cachedRecordsSource.next(current);\r\n    // TODO Remove ternary logic, skip + this.windowSize is all that is needed.\r\n    // If we keep this, create a private method updateCache that sets the last cached index value once.\r\n    this.lastCachedIndexSource[dataTarget] = skip + this.windowSize;\r\n  }\r\n\r\n  updateHeaders(headers: Array<GridColumnHeader>, dataTarget: number, defaultSort: boolean = false): void {\r\n    const current = this.headersSource.getValue();\r\n    current[dataTarget] = headers;\r\n    this.headersSource.next(current);\r\n  }\r\n\r\n  addHeader(name: string, dataSource: number) {\r\n    const current = this.headersSource.getValue();\r\n\r\n    const index = current[dataSource].findIndex(c => c.name === name);\r\n\r\n    if (index === -1) {\r\n      const column = <GridColumnHeader>{\r\n        name: name,\r\n        order: current[dataSource][current[dataSource].length - 1].order + 1,\r\n        isCustom: true\r\n      };\r\n      current[dataSource].push(column);\r\n    }\r\n\r\n    this.headersSource.next(current);\r\n  }\r\n\r\n  updateSelectedHeaders(selectedHeaders: Array<string>, dataTarget: number): void {\r\n    const current = this.selectedHeadersSource.getValue();\r\n\r\n    current[dataTarget] = selectedHeaders;\r\n\r\n    this.selectedHeadersSource.next(current);\r\n  }\r\n  updateAvailableColumns(availableColumns: Array<GridColumnHeader>, dataTarget: number): void {\r\n    this.availableColumnSource.next(availableColumns);\r\n  }\r\n  clearAvailableColumns(): void {\r\n     let currentHeaders = this.availableColumnSource.getValue();\r\n    currentHeaders = new Array<GridColumnHeader>();\r\n    this.availableColumnSource.next(currentHeaders);\r\n  }\r\n  clearHeaders(): void {\r\n    let currentHeaders = this.headersSource.getValue();\r\n\r\n    currentHeaders = new Array<Array<GridColumnHeader>>();\r\n\r\n    currentHeaders[DataTargetName.client] = new Array<GridColumnHeader>();\r\n    currentHeaders[DataTargetName.inventory] = new Array<GridColumnHeader>();\r\n\r\n    this.headersSource.next(currentHeaders);\r\n  }\r\n\r\n  addPendingColumn(dataTarget: number, column: CreateAssetFileCustomColumnDto) {\r\n    const currentCustomColumns = this.pendingCustomColumnsSouce.getValue();\r\n    currentCustomColumns[dataTarget].push(column);\r\n    this.pendingCustomColumnsSouce.next(currentCustomColumns);\r\n  }\r\n\r\n  clearPendingColumns(dataTarget: number) {\r\n    const currentPendingColumns = this.pendingCustomColumnsSouce.getValue();\r\n    currentPendingColumns[dataTarget] = new Array<CreateAssetFileCustomColumnDto>();\r\n    this.pendingCustomColumnsSouce.next(currentPendingColumns);\r\n  }\r\n\r\n  clearAllPendingColumns() {\r\n    let currentPendingColumns = this.pendingCustomColumnsSouce.getValue();\r\n    currentPendingColumns = new Array<Array<CreateAssetFileCustomColumnDto>>();\r\n    currentPendingColumns[DataTargetName.client] = new Array<CreateAssetFileCustomColumnDto>();\r\n    currentPendingColumns[DataTargetName.inventory] = new Array<CreateAssetFileCustomColumnDto>();\r\n    this.pendingCustomColumnsSouce.next(currentPendingColumns);\r\n  }\r\n\r\n  clearSelectedHeaders(): void {\r\n    let currentSelectedHeaders = this.selectedHeadersSource.getValue();\r\n\r\n    currentSelectedHeaders = new Array<Array<string>>();\r\n\r\n    currentSelectedHeaders[DataTargetName.client] = new Array<string>();\r\n    currentSelectedHeaders[DataTargetName.inventory] = new Array<string>();\r\n\r\n    this.selectedHeadersSource.next(currentSelectedHeaders);\r\n  }\r\n\r\n  public updateCachedRecord(asset: Asset, dataTarget: DataTargetName): Observable<boolean> {\r\n    const current = this.cachedRecordsSource.getValue();\r\n    if (asset && current[dataTarget]) {\r\n      const index = current[dataTarget].findIndex(i => i.assetId === asset.assetId);\r\n      if (index !== -1) {\r\n        for (const [key, value] of Object.entries(current[dataTarget][index])) {\r\n          if (key !== 'assetId' && key !== 'id' && asset[key]) {\r\n            current[dataTarget][index][key] = asset[key];\r\n\r\n            current[dataTarget][index].imageCollection = !!current[dataTarget][index].assetImages\r\n              ? current[dataTarget][index].assetImages\r\n              : [];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.cachedRecordsSource.next(current);\r\n    return of(true);\r\n  }\r\n\r\n  public createCachedRecord(asset: AssetFileRecordDto, dataTarget: DataTargetName): Observable<boolean> {\r\n    const current = this.cachedRecordsSource.getValue();\r\n\r\n    const newAsset = Object.assign({}, current[dataTarget][0]);\r\n    if (asset && current[dataTarget]) {\r\n      if (current[dataTarget][0]) {\r\n        for (const [key, value] of Object.entries(newAsset)) {\r\n          newAsset[key] = asset[key];\r\n        }\r\n      }\r\n\r\n      newAsset.isMatched = false;\r\n      newAsset.isChild = false;\r\n      newAsset.isParent = false;\r\n      newAsset.dataSource = dataTarget;\r\n      newAsset.assetId = asset.id;\r\n\r\n      current[dataTarget].unshift(newAsset);\r\n    }\r\n    this.cachedRecordsSource.next(current);\r\n    return of(true);\r\n  }\r\n\r\n  public retrieveCacheRecords(groupId: string, dataTarget: number, skip: number, recordCount: number) {\r\n    let take = this.cacheSize;\r\n\r\n    if (recordCount <= this.cacheSize) {\r\n      take = recordCount;\r\n    }\r\n\r\n    if (recordCount > this.cacheSize && skip === 0) {\r\n      take = this.cacheSize;\r\n    }\r\n\r\n    if (recordCount > this.cacheSize && skip > this.cacheSize) {\r\n      skip = skip - this.cacheSize / 2;\r\n      take = this.cacheSize;\r\n    }\r\n\r\n    return this.search(groupId, dataTarget, skip, take, this.currentSort[dataTarget], this.filterTerms[dataTarget]).subscribe(response => {\r\n      // const current = this.cachedRecordsSource.getValue();\r\n\r\n      // current[dataTarget] = this.init(response, dataTarget);\r\n\r\n      this.setCacheRecords(this.init(response, dataTarget), dataTarget, skip, recordCount);\r\n\r\n      // this.cachedRecordsSource.next(current);\r\n      // TODO Remove ternary logic, skip + take is all that is needed.\r\n      // If we keep this, create a private method updateCache that sets the last cached index value once.\r\n      // this.lastCachedIndexSource[dataTarget] = skip + take >= recordCount ? recordCount : skip + take;\r\n    });\r\n  }\r\n\r\n  public updateCacheRecords(entities: Array<AssetDto>, matchType: ReconciliationMatchType) {\r\n    const current = this.cachedRecordsSource.getValue();\r\n\r\n    if (entities && entities.length > 0) {\r\n      entities.forEach(entity => {\r\n        if (current[DataTargetName.client]) {\r\n          const clientIndex = current[DataTargetName.client].findIndex(c => c.assetId === entity.id);\r\n          if (clientIndex !== -1) {\r\n            current[DataTargetName.client][clientIndex] = this.mapAsset(\r\n              current[DataTargetName.client][clientIndex],\r\n              entity,\r\n              matchType\r\n            );\r\n          }\r\n        }\r\n\r\n        if (current[DataTargetName.inventory]) {\r\n          const inventoryIndex = current[DataTargetName.inventory].findIndex(c => c.assetId === entity.id);\r\n\r\n          if (inventoryIndex !== -1) {\r\n            current[DataTargetName.inventory][inventoryIndex] = this.mapAsset(\r\n              current[DataTargetName.inventory][inventoryIndex],\r\n              entity,\r\n              matchType\r\n            );\r\n          }\r\n        }\r\n      });\r\n\r\n      this.cachedRecordsSource.next(current);\r\n    }\r\n  }\r\n\r\n  public clearCachedRecords(): void {\r\n    this.cachedRecordsSource.next(new Array<Array<Asset>>());\r\n  }\r\n\r\n  public updateRecordCount(dataTarget: number, count: number) {\r\n    const current = this.recordCountSource.getValue();\r\n    current[dataTarget] = count;\r\n\r\n    this.recordCountSource.next(current);\r\n  }\r\n\r\n  public clearRecordCounts(): void {\r\n    const current = this.recordCountSource.getValue();\r\n\r\n    current[DataTargetName.client] = 0;\r\n    current[DataTargetName.inventory] = 0;\r\n\r\n    this.recordCountSource.next(current);\r\n  }\r\n\r\n  public resetFilters(dataTarget: number, clearBothGridFilters: boolean): void {\r\n    const current = this.filterTerms;\r\n    if (dataTarget !== null) {\r\n      if (dataTarget === DataTargetName.client) {\r\n        this.filterTerms[DataTargetName.client] = [\r\n          <AssetFilterTermDto>{ term: <AssetSearchTermDto>{ dataTarget: DataTargetName.client }, operation: 'noop' }\r\n        ];\r\n      } else if (dataTarget === DataTargetName.inventory) {\r\n        this.filterTerms[DataTargetName.inventory] = [\r\n          <AssetFilterTermDto>{ term: <AssetSearchTermDto>{ dataTarget: DataTargetName.inventory }, operation: 'noop' }\r\n        ];\r\n      }\r\n    } else {\r\n      if (clearBothGridFilters) {\r\n        this.filterTerms[DataTargetName.client] = [\r\n          <AssetFilterTermDto>{ term: <AssetSearchTermDto>{ dataTarget: DataTargetName.client }, operation: 'noop' }\r\n        ];\r\n        this.filterTerms[DataTargetName.inventory] = [\r\n          <AssetFilterTermDto>{ term: <AssetSearchTermDto>{ dataTarget: DataTargetName.inventory }, operation: 'noop' }\r\n        ];\r\n      }\r\n    }\r\n  }\r\n\r\n  public clearSelectionsInProgress(): void {\r\n    this.clearSelectionsSource.next(true);\r\n  }\r\n\r\n  public clearSelectionsComplete(): void {\r\n    this.clearSelectionsSource.next(false);\r\n  }\r\n\r\n\r\n  public clearEditInProgress(dataTarget: DataTargetName): void {\r\n    const current = this.unsavedEditsSource.getValue();\r\n\r\n    current[dataTarget] = new Array<Asset>();\r\n\r\n    this.unsavedEditsSource.next(current);\r\n  }\r\n\r\n  public saveEditInProgress(formGroup: FormGroup, asset: Asset, dataTarget: DataTargetName) {\r\n    const currentUnsavedEdits = this.unsavedEditsSource.getValue();\r\n    const currentCachedData = this.cachedRecordsSource.getValue();\r\n\r\n    const currentAsset = currentCachedData[dataTarget].find(c => c.assetId === asset.assetId);\r\n    const currentAssetIndex = currentCachedData[dataTarget].findIndex(c => c.assetId === asset.assetId);\r\n\r\n    if (currentAsset) {\r\n      const updatedAsset = Object.assign(currentAsset, formGroup.value);\r\n\r\n      updatedAsset.isEdited = true;\r\n\r\n      if (!currentUnsavedEdits[dataTarget]) {\r\n        currentUnsavedEdits[dataTarget] = new Array<Asset>();\r\n      }\r\n\r\n      const unsavedEditIndex = currentUnsavedEdits[dataTarget].findIndex(c => c.assetId === updatedAsset.assetId);\r\n\r\n      if (unsavedEditIndex === -1) {\r\n        currentUnsavedEdits[dataTarget].push(updatedAsset);\r\n        currentCachedData[dataTarget][currentAssetIndex] = updatedAsset;\r\n      } else {\r\n        currentUnsavedEdits[dataTarget][unsavedEditIndex] = updatedAsset;\r\n      }\r\n\r\n      this.unsavedEditsSource.next(currentUnsavedEdits);\r\n      this.cachedRecordsSource.next(currentCachedData);\r\n\r\n      // console.log(currentUnsavedEdits[dataTarget]);\r\n    }\r\n  }\r\n\r\n  private defaultSort(headers: GridColumnHeader[]): GridColumnHeader[] {\r\n    let orderCount = this.defaultHeaders[this.defaultHeaders.length - 1].order + 1;\r\n\r\n    this.defaultHeaders.forEach(defaultHeader => {\r\n      const index = headers.findIndex(c => c.name === defaultHeader.name);\r\n\r\n      if (index !== -1) {\r\n        headers[index] = defaultHeader;\r\n      }\r\n    });\r\n\r\n    headers.forEach(header => {\r\n      if (!header.order) {\r\n        header.order = orderCount;\r\n      }\r\n\r\n      orderCount++;\r\n    });\r\n\r\n    return headers;\r\n  }\r\n\r\n  public toggleShowMatchedRecords(excludeMatches: boolean, dataTarget: number): void {\r\n    const current = this.excludeMatchSource.getValue();\r\n\r\n    current[dataTarget] = excludeMatches;\r\n\r\n    this.excludeMatchSource.next(current);\r\n  }\r\n\r\n  public mapFilterTerms(kendoFilters: CompositeFilterDescriptor, dataTarget: number): Observable<boolean> {\r\n    const s = this;\r\n\r\n    s.resetFilters(dataTarget, false);\r\n\r\n    const tempFilter = this.filterTerms[dataTarget];\r\n    let success = false;\r\n\r\n    if (kendoFilters) {\r\n      const filters = <CompositeFilterDescriptor[]>kendoFilters.filters;\r\n\r\n      [].concat.apply([], filters.map(c => c.filters)).forEach(filter => {\r\n        filter.value.forEach(f => {\r\n          const assetFilterTerm = <AssetFilterTermDto>{\r\n            term: <AssetSearchTermDto>{\r\n              dataTarget: dataTarget,\r\n              field: f.field.toString(),\r\n              value: f.value\r\n            },\r\n            operation: f.operator.toString()\r\n          };\r\n\r\n          this.filterTerms[dataTarget].push(assetFilterTerm);\r\n          success = true;\r\n        });\r\n      });\r\n    }\r\n\r\n    return of(success);\r\n  }\r\n\r\n  public getActivityCodes(): Observable<ApiServiceResult<EnumDto>> {\r\n    return this.referenceDataApiService.getActivityCodes();\r\n  }\r\n\r\n  private mapAsset(source: Asset, updated: AssetDto, matchType: ReconciliationMatchType): Asset {\r\n    switch (matchType) {\r\n      case ReconciliationMatchType.parentChildMatch:\r\n        source.isParent = updated.isParent;\r\n        source.parentId = updated.parentId;\r\n        source.isChild = !!updated.parentId && updated.parentId !== updated.id;\r\n        break;\r\n      case ReconciliationMatchType.allocationMatch:\r\n        if (source.dataSource === DataTargetName.inventory) {\r\n          source.historicalCost = updated.historicalCost;\r\n        }\r\n        break;\r\n      default:\r\n        source.isMatched = !!updated.matchId;\r\n        source.matchId = updated.matchId;\r\n        source.matchCodeName = updated.matchCodeName;\r\n        if (source.dataSource === DataTargetName.inventory) {\r\n          source.historicalCost = updated.historicalCost;\r\n        }\r\n    }\r\n\r\n    return source;\r\n  }\r\n\r\n  private getKeys(obj) {\r\n    const keys = Object.keys(obj).map(key => {\r\n      return { key: key };\r\n    });\r\n\r\n    return keys;\r\n  }\r\n}\r\n\r\nexport interface ReconcileDataGridResult {\r\n  assets: Asset[];\r\n  totalInRecordSet: number;\r\n  allAssetIds: string[];\r\n}\r\n","\r\nimport {map} from 'rxjs/operators';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { AlertService } from '../../_core/services/alert.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { ReconciliationMatchSummaryDto } from '../../_api/dtos/reconcilation-match-summary.dto';\r\nimport { Asset } from '../../_models/asset.model';\r\nimport { CascadedSelectOption } from '../../_models/cascaded-select-option.model';\r\nimport { FieldOption } from '../../_models/field-option.model';\r\nimport { ReconciliationMatchService } from '../../_api/services/reconciliation/reconcilation-match.service';\r\nimport { InventoryService } from '../../_api/services/reconciliation/inventory.service';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { ReconciliationSummaryResult, AssetDto } from '../../_api/dtos/reconciliation/reconciliation-summary-result.dto';\r\nimport { ReconciliationMatchType } from '../../_enums/reconciliation-match-type';\r\nimport { DataTargetName } from '../../_enums/data-target-name';\r\nimport { ParentChildMatchResult } from '../../_models/parent-child-match-result.model';\r\nimport { ReconciliationMatchDto } from '../../_api/dtos/reconcilation-match.dto';\r\nimport { ReconciliationValidationDto } from '../../_api/dtos/reconciliation/reconciliation-validation-result.dto';\r\n\r\n@Injectable()\r\nexport class ReconcileDataService {\r\n  private matchedRecordsSource = new BehaviorSubject<Array<ReconciliationMatchSummaryDto>>(\r\n    new Array<ReconciliationMatchSummaryDto>()\r\n  );\r\n  private clientFileAssetsSource = new BehaviorSubject<Array<Asset>>(null);\r\n  private inventoryAssetsSource = new BehaviorSubject<Array<Asset>>(null);\r\n\r\n  public groupId: string;\r\n\r\n  private groupSiteInfoSource = new BehaviorSubject<Array<CascadedSelectOption>>(new Array<CascadedSelectOption>());\r\n  public groupSiteInfo$ = this.groupSiteInfoSource.asObservable();\r\n  public groupSiteInfo: CascadedSelectOption[];\r\n\r\n  private groupDepartmentInfoSource = new BehaviorSubject<Array<FieldOption>>(new Array<FieldOption>());\r\n  public groupDepartmentInfo$ = this.groupDepartmentInfoSource.asObservable();\r\n  public groupDepartmentInfo: FieldOption[];\r\n\r\n  private groupAccountInfoSource = new BehaviorSubject<Array<FieldOption>>(new Array<FieldOption>());\r\n  public groupAccountInfo$ = this.groupAccountInfoSource.asObservable();\r\n  public groupAccountInfo: FieldOption[];\r\n\r\n  public matchedRecords$ = this.matchedRecordsSource.asObservable();\r\n  public clientFileAssets$ = this.clientFileAssetsSource.asObservable();\r\n  public inventoryAssets$ = this.inventoryAssetsSource.asObservable();\r\n\r\n  public defaultColumns = ['assetTagNumber', 'oldTagNumber', 'description'];\r\n\r\n  constructor(\r\n    private reconcileMatchApiService: ReconciliationMatchService,\r\n  ) {}\r\n\r\n  public getMatchType(match: ReconciliationSummaryResult): ReconciliationMatchType {\r\n    let matchType = ReconciliationMatchType.singleMatch;\r\n\r\n    if (match.assetData.filter(c => c.allocationId !== null).length > 2) {\r\n      matchType = ReconciliationMatchType.allocationMatch;\r\n    }\r\n\r\n    if (match.assetData.filter(c => c.allocationId !== null).length === 2) {\r\n      matchType = ReconciliationMatchType.oneToOneMatch;\r\n    }\r\n\r\n    return matchType;\r\n  }\r\n\r\n  private updateMatchedRecords() {\r\n    this.reconcileMatchApiService.getReconciliationMatchSummary(this.groupId).subscribe(matches => {\r\n      this.matchedRecordsSource.next(matches);\r\n    });\r\n  }\r\n\r\n  public updateClientFile(assets: Asset[]) {\r\n    assets.forEach(asset => {\r\n      var current = this.clientFileAssetsSource.getValue();\r\n      if(current){\r\n        var index = current.findIndex(d => d.assetId == asset.assetId);\r\n        if (index >= 0) {\r\n          current[index] == asset;\r\n        }\r\n        this.clientFileAssetsSource.next(current);\r\n      }\r\n      this.updateMatchedRecords();\r\n    });\r\n  }\r\n\r\n  public updateInventory(assets: Asset[]) {\r\n    assets.forEach(asset => {\r\n      var current = this.inventoryAssetsSource.getValue();\r\n      if(current){\r\n        var index = current.findIndex(d => d.assetId == asset.assetId);\r\n        if (index >= 0) {\r\n          current[index] == asset;\r\n        }\r\n        this.inventoryAssetsSource.next(current);\r\n      }\r\n      this.updateMatchedRecords();\r\n    });\r\n  }\r\n\r\n  public updateInventoryAsset(updatedAsset: Asset) {\r\n    var currentInventory = this.inventoryAssetsSource.getValue();\r\n    var index = currentInventory.findIndex(d => d.assetId == updatedAsset.assetId);\r\n    if (index != -1) {\r\n      var currentAsset = currentInventory[index];\r\n\r\n      for (let [key, value] of Object.entries(updatedAsset)) {\r\n        currentAsset[key] = value;\r\n      }\r\n\r\n      currentInventory[index] = currentAsset;\r\n      this.inventoryAssetsSource.next(currentInventory);\r\n    }\r\n  }\r\n\r\n  public updateClientAsset(updatedAsset: Asset) {\r\n    var currentClientAssets = this.clientFileAssetsSource.getValue();\r\n    var index = currentClientAssets.findIndex(d => d.assetId == updatedAsset.assetId);\r\n    if (index != -1) {\r\n      var currentAsset = currentClientAssets[index];\r\n\r\n      for (let [key, value] of Object.entries(updatedAsset)) {\r\n        currentAsset[key] = value;\r\n      }\r\n\r\n      currentClientAssets[index] = currentAsset;\r\n      this.clientFileAssetsSource.next(currentClientAssets);\r\n    }\r\n  }\r\n\r\n  public addCreatedInventoryAsset(asset: Asset) {\r\n    asset.dataSource = DataTargetName.inventory;\r\n    var inventoryAssets = this.inventoryAssetsSource.getValue();\r\n\r\n    asset.parentChildMatches = new Array<Asset>();\r\n    asset.isMatched = false;\r\n    asset.isParent = false;\r\n    asset.isChild = false;\r\n    asset.parentId = '';\r\n\r\n    inventoryAssets.push(asset);\r\n    this.inventoryAssetsSource.next(inventoryAssets);\r\n  }\r\n\r\n  public updateParentChildMatch(result: ParentChildMatchResult) {\r\n    if (result.entities.length === 0) return;\r\n\r\n    let assetIds = new Array<string>();\r\n    assetIds.push(result.entities[0].parentAssetFileRecordId);\r\n    result.entities.forEach(e => assetIds.push(e.assetFileRecordId));\r\n  }\r\n\r\n  public getKeys(obj) {\r\n    let keys = Object.keys(obj).map(key => {\r\n      return { key: key };\r\n    });\r\n\r\n    return keys;\r\n  }\r\n\r\n  //\tCreates an array of Assets with dynamic custom properties\r\n  public mapAsset(assetDto: AssetDto, dataSource: number): Asset {\r\n    let asset = <Asset>{ assetId: assetDto.id };\r\n\r\n    let keys = this.getKeys(assetDto);\r\n\r\n    asset.dataSource = dataSource;\r\n    asset.isChild = assetDto.parentId && assetDto.isParent === false;\r\n\r\n    for (let [key, value] of Object.entries(assetDto)) {\r\n      asset[key] = value;\r\n    }\r\n\r\n    return asset;\r\n  }\r\n\r\n  public updateGroupSiteInfo(groupSiteInfo: Array<CascadedSelectOption>){\r\n    this.groupSiteInfoSource.next(groupSiteInfo);\r\n  }\r\n\r\n  public updateGroupDepartmentInfo(groupDepartmentsInfo: Array<FieldOption>){\r\n    this.groupDepartmentInfoSource.next(groupDepartmentsInfo);\r\n  }\r\n\r\n  public updateGroupAccountInfo(groupAccountsInfo: Array<FieldOption>){\r\n    this.groupAccountInfoSource.next(groupAccountsInfo);\r\n  }\r\n\r\n  //\tMaps match data to Assets\r\n  private initMatches(inventory: Array<Asset>, clientFile: Array<Asset>, dataSource: number): Array<Asset> {\r\n    let assets = dataSource === DataTargetName.client ? clientFile : inventory;\r\n\r\n    let matchedRecords = this.matchedRecordsSource.getValue();\r\n\r\n    assets.forEach(a => {\r\n      let asset = a;\r\n\r\n      asset.parentChildMatches = new Array<Asset>();\r\n\r\n      asset.isMatched = false;\r\n      asset.isParent = false;\r\n      asset.isChild = false;\r\n      asset.parentId = '';\r\n\r\n      let currentMatch = this.findMatchForAsset(asset.assetId);\r\n\r\n      if (currentMatch) {\r\n        let matchesForAsset = this.findMatchesForMatchId(currentMatch.matchId);\r\n\r\n        // if match is parent -> map child records\r\n        if (currentMatch.parent) {\r\n          asset.isParent = true;\r\n          matchedRecords.filter(c => c.parentAssetFileRecordId === currentMatch.assetId && !c.parent).forEach(child => {\r\n            let clientFileDataItem = clientFile.find(c => c.assetId == child.assetId);\r\n\r\n            if (clientFileDataItem) {\r\n              asset.parentChildMatches.push(clientFileDataItem);\r\n            }\r\n          });\r\n        }\r\n\r\n        if (currentMatch.matchId) {\r\n          asset.isMatched = true;\r\n\r\n          if (!currentMatch.parent && currentMatch.parentAssetFileRecordId && currentMatch.parentAssetFileRecordId.length > 0) {\r\n            asset.isChild = true;\r\n            asset.parentId = currentMatch.parentAssetFileRecordId;\r\n            asset.matchType = ReconciliationMatchType.parentChildMatch;\r\n          }\r\n\r\n          if (matchesForAsset.length === 1) {\r\n            asset.matchType = ReconciliationMatchType.singleMatch;\r\n          }\r\n\r\n          if (matchesForAsset.length > 2 && matchesForAsset.some(c => c.allocationId != null)) {\r\n            asset.matchType = ReconciliationMatchType.allocationMatch;\r\n          }\r\n\r\n          if (matchesForAsset.length === 2 && matchesForAsset.some(c => c.allocationId != null)) {\r\n            asset.matchType = ReconciliationMatchType.oneToOneMatch;\r\n          }\r\n        }\r\n\r\n        asset.matchId = currentMatch.matchId;\r\n        asset.matchCodeId = currentMatch.matchCodeId;\r\n        asset.allocatedValue = currentMatch.allocatedValue;\r\n        asset.allocationId = currentMatch.allocationId;\r\n      }\r\n    });\r\n\r\n    return assets;\r\n  }\r\n\r\n  private findMatchesForMatchId(matchId: string) {\r\n    let current = this.matchedRecordsSource.getValue();\r\n\r\n    return current.filter(c => c.matchId === matchId);\r\n  }\r\n\r\n  private findMatchForAsset(assetId: string): ReconciliationMatchSummaryDto {\r\n    let current = this.matchedRecordsSource.getValue();\r\n\r\n    return current.find(c => c.assetId === assetId);\r\n  }\r\n\r\n  private determineMatchType(match: ReconciliationMatchSummaryDto): ReconciliationMatchType {\r\n    // Check if this match is a child.\r\n    if (match.parentAssetFileRecordId && match.parentAssetFileRecordId.length > 0 && match.parentAssetFileRecordId !== match.assetId) {\r\n      return ReconciliationMatchType.parentChildMatch;\r\n    }\r\n\r\n    let matches = this.matchedRecordsSource.getValue();\r\n    let matchCount = matches.filter(m => m.matchId == match.matchId).length;\r\n\r\n    /// how many\r\n    if (matchCount == 0)\r\n      // This means we are probably a parent\r\n      return null;\r\n    if (matchCount == 1) return ReconciliationMatchType.singleMatch;\r\n    if (matchCount == 2) return ReconciliationMatchType.oneToOneMatch;\r\n\r\n    return ReconciliationMatchType.allocationMatch;\r\n  }\r\n\r\n  private determineIfParent(match: ReconciliationMatchSummaryDto): boolean {\r\n    if (match.parent === true) return true;\r\n\r\n    let matchesSource = this.matchedRecordsSource.getValue();\r\n    let children = matchesSource.filter(m => m.parentAssetFileRecordId === match.assetId && m.assetId !== match.assetId);\r\n    return children.length > 0;\r\n  }\r\n\r\n  private determineIfChild(match: ReconciliationMatchSummaryDto): boolean {\r\n    return match.parentAssetFileRecordId != null && match.assetId !== match.parentAssetFileRecordId;\r\n  }\r\n\r\n  private applyReconciliationMatch(asset: Asset, match: ReconciliationMatchDto): Asset {\r\n    asset.isMatched = true;\r\n    asset.matchId = match.matchId;\r\n    //asset.matchType = this.determineMatchType(match);\r\n    asset.matchCodeId = match.matchCodeId;\r\n    asset.parentId = match.parentAssetFileRecordId;\r\n\r\n    if (match.allocations == null || match.allocations.length == 0) return asset;\r\n\r\n    let inventoryRecords = this.inventoryAssetsSource.getValue();\r\n    match.allocations.forEach(a => {\r\n      let inventoryAsset = inventoryRecords.find(i => i.assetId == a.assetRecordId);\r\n      inventoryAsset.isMatched = true;\r\n      inventoryAsset.matchId = match.matchId;\r\n      //inventoryAsset.matchType = this.determineMatchType(match);\r\n      inventoryAsset.matchCodeId = match.matchCodeId;\r\n      inventoryAsset.parentId = match.parentAssetFileRecordId;\r\n    });\r\n  }\r\n\r\n  private isClientAsset(assetId: string): boolean {\r\n    var clientAssets = this.clientFileAssetsSource.getValue();\r\n    return clientAssets.findIndex(asset => asset.assetId == assetId) != -1;\r\n  }\r\n\r\n  private updateMatchRecords(matches: ReconciliationMatchSummaryDto[]) {\r\n    let matchSource = this.matchedRecordsSource.getValue();\r\n    matches.forEach(match => {\r\n      let index = matchSource.findIndex(m => m.assetId == match.assetId);\r\n      if (index != -1) {\r\n        matchSource.splice(index, 1);\r\n      }\r\n      match.parent = match.parentAssetFileRecordId\r\n        ? match.parentAssetFileRecordId == match.assetId\r\n        : matchSource.findIndex(m => m.parentAssetFileRecordId == match.assetId) > 0;\r\n      matchSource.push(match);\r\n    });\r\n    this.matchedRecordsSource.next(matchSource);\r\n  }\r\n\r\n  public applyMatchSummaryToAsset(match: ReconciliationMatchSummaryDto) {\r\n    if (this.isClientAsset(match.assetId)) this.refreshClientMatchData(match.assetId);\r\n    else this.refreshInventoryMatchData(match.assetId);\r\n  }\r\n\r\n  private clearMatchData(assets: Asset[], assetIndex: number) {\r\n    assets[assetIndex].isMatched = false;\r\n    assets[assetIndex].isParent = false;\r\n    assets[assetIndex].isChild = false;\r\n    delete assets[assetIndex].parentId;\r\n    assets[assetIndex].matchType = null;\r\n    delete assets[assetIndex].matchId;\r\n    delete assets[assetIndex].matchCodeId;\r\n    delete assets[assetIndex].allocatedValue;\r\n    delete assets[assetIndex].allocationId;\r\n  }\r\n\r\n  private applyMatchData(assets: Asset[], assetIndex: number, matchIndex: number) {\r\n    if (matchIndex == -1) {\r\n      this.clearMatchData(assets, assetIndex);\r\n      return;\r\n    }\r\n\r\n    let matches = this.matchedRecordsSource.getValue();\r\n    let match = matches[matchIndex];\r\n\r\n    assets[assetIndex].isMatched = match.matchId != null && match.matchId.length > 0;\r\n    assets[assetIndex].isParent = this.determineIfParent(match);\r\n    assets[assetIndex].isChild = this.determineIfChild(match);\r\n    if (match.parentAssetFileRecordId != null) assets[assetIndex].parentId = match.parentAssetFileRecordId;\r\n    else delete assets[assetIndex].parentId;\r\n    assets[assetIndex].matchType = this.determineMatchType(match);\r\n    if (match.matchId != null) assets[assetIndex].matchId = match.matchId;\r\n    else delete assets[assetIndex].matchId;\r\n    assets[assetIndex].matchCodeId = match.matchCodeId != null ? match.matchCodeId : '';\r\n    assets[assetIndex].allocatedValue = match.allocatedValue;\r\n    assets[assetIndex].allocationId = match.allocationId;\r\n    assets[assetIndex].parentChildMatches = [];\r\n    if (match.parent === true) {\r\n      let matchRecords = this.matchedRecordsSource.getValue();\r\n      let children = matchRecords.filter(m => m.parentAssetFileRecordId === match.assetId && m.assetId != match.assetId);\r\n      children.forEach(child => assets[assetIndex].parentChildMatches.push(assets.find(a => a.assetId == child.assetId)));\r\n    }\r\n  }\r\n\r\n  private refreshInventoryMatchData(assetId: string) {\r\n    let assets = this.inventoryAssetsSource.getValue();\r\n    let matches = this.matchedRecordsSource.getValue();\r\n    let assetIndex = assets.findIndex(asset => asset.assetId == assetId);\r\n    if (assetIndex == -1) {\r\n      console.error('refreshInventoryMatchData failed because of unknown assetId');\r\n      return;\r\n    }\r\n    let matchIndex = matches.findIndex(match => match.assetId == assetId);\r\n    this.applyMatchData(assets, assetIndex, matchIndex);\r\n    this.inventoryAssetsSource.next(assets);\r\n  }\r\n\r\n  private refreshClientMatchData(assetId: string): Observable<boolean> {\r\n    let assets = this.clientFileAssetsSource.getValue();\r\n    let matches = this.matchedRecordsSource.getValue();\r\n    let assetIndex = assets.findIndex(asset => asset.assetId == assetId);\r\n    if (assetIndex == -1) {\r\n      console.error('refreshInventoryMatchData failed because of unknown assetId');\r\n      return;\r\n    }\r\n    let matchIndex = matches.findIndex(match => match.assetId == assetId);\r\n    this.applyMatchData(assets, assetIndex, matchIndex);\r\n    this.clientFileAssetsSource.next(assets);\r\n  }\r\n\r\n  public saveReconciliationMatchDto(matches: ReconciliationMatchDto[]) {\r\n    let ids: Array<string> = [];\r\n    matches.forEach(match => {\r\n      ids.push(match.assetFileRecordId);\r\n      if (match.allocations != null) match.allocations.forEach(a => ids.push(a.assetRecordId));\r\n    });\r\n  }\r\n\r\n  public validateReconciliation(includeDetail: boolean): Observable<ReconciliationValidationDto> {\r\n    return this.reconcileMatchApiService.validateGroupReconciliation(this.groupId, includeDetail).pipe(map(result => result.result));\r\n  }\r\n}\r\n","import { ReconcileDataService } from './reconcile-data.service';\r\nimport { of, BehaviorSubject, Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { Asset } from '../../_models/asset.model';\r\nimport { ReconciliationMatchService } from '../../_api/services/reconciliation/reconcilation-match.service';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { SelectionChangeEvent } from '../../_models/selection-change-event.model';\r\nimport { SetSingleMatchCodeDto } from '../../_api/dtos/set-single-match-code.dto';\r\nimport { ReconciliationAllocationDto } from '../../_api/dtos/reconcilation-allocation.dto';\r\nimport { SetAllocationMatchCodeDto } from '../../_api/dtos/set-allocation-match.dto';\r\nimport { ApiServiceResult } from '../../_api/dtos/api-service-result.dto';\r\nimport { ReconciliationSummaryResult } from '../../_api/dtos/reconciliation/reconciliation-summary-result.dto';\r\nimport { ReconcilationMassMatchDto } from '../../_api/dtos/reconcilation-mass-match.dto';\r\nimport { ReconciliationMatchDto } from '../../_api/dtos/reconcilation-match.dto';\r\nimport { ReconcileMatchItem } from '../../_models/reconcile-match-item.model';\r\n\r\n@Injectable()\r\nexport class ReconcileMatchService {\r\n  private selectedMatchSource = new BehaviorSubject<Array<Asset>>(new Array<Asset>());\r\n  public selectedMatch$ = this.selectedMatchSource.asObservable();\r\n\r\n  constructor(\r\n    private reconcileDataService: ReconcileDataService,\r\n    private reconcileMatchService: ReconciliationMatchService,\r\n    private configService: ConfigService) {}\r\n\r\n  updateCurrentMatch(event: SelectionChangeEvent) {\r\n    if (event.itemsAdded.length > 0) {\r\n      const current = this.selectedMatchSource.getValue();\r\n\r\n      event.itemsAdded.forEach(selection => {\r\n        if (current.findIndex(d => d.assetId === selection.assetId) < 0) {\r\n          current.push(selection);\r\n        }\r\n      });\r\n\r\n      this.selectedMatchSource.next(current);\r\n    }\r\n\r\n    if (event.itemsRemoved.length > 0) {\r\n      const current = this.selectedMatchSource.getValue();\r\n\r\n      event.itemsRemoved.forEach(selection => {\r\n        const index = current.findIndex(d => d.assetId === selection.assetId);\r\n        if (index >= 0) {\r\n          current.splice(index, 1);\r\n        }\r\n      });\r\n\r\n      this.selectedMatchSource.next(current);\r\n    }\r\n  }\r\n\r\n  public setCurrentMatch(assets: Asset[]) {\r\n    this.selectedMatchSource.next(assets);\r\n  }\r\n\r\n  public clearCurrentMatch() {\r\n    this.selectedMatchSource.next(new Array<Asset>());\r\n  }\r\n\r\n  /* end refactor */\r\n\r\n  saveSingleMatch(dto: SetSingleMatchCodeDto): Observable<any> {\r\n    return of('id');\r\n  }\r\n\r\n  setSingleMatch(recordId: string, matchId: string): Observable<any> {\r\n    return this.reconcileMatchService.setSingleMatch(recordId, matchId);\r\n  }\r\n\r\n  createOneToOneMatch(clientRecordId: string, inventoryRecordId: string, matchId: string): Observable<any> {\r\n    const allocation: Array<ReconciliationAllocationDto> = [\r\n      <ReconciliationAllocationDto>{\r\n        assetRecordId: inventoryRecordId,\r\n        allocatedValue: null\r\n      }\r\n    ];\r\n\r\n    const dto = new SetAllocationMatchCodeDto(clientRecordId, matchId, allocation);\r\n\r\n    return this.reconcileMatchService.createOneToOneMatch(dto);\r\n  }\r\n\r\n  createMassSingleMatch(\r\n    selectedAssets: string[], matchCodeId: string): Observable<ApiServiceResult<ReconciliationSummaryResult[]>> {\r\n    const dtoAssets = new Array<ReconcilationMassMatchDto>();\r\n\r\n    selectedAssets.forEach(assetId => {\r\n      dtoAssets.push(new ReconcilationMassMatchDto(assetId, '00000000-0000-0000-0000-000000000000', false, matchCodeId));\r\n    });\r\n\r\n    return this.reconcileMatchService.setMassMatch(dtoAssets);\r\n  }\r\n\r\n  createMassOneToOneMatch(clientAssetIds: string[], inventoryAssetIds: string[], matchCodeId: string): Observable<any> {\r\n    const dtoAssets = new Array<ReconcilationMassMatchDto>();\r\n\r\n    for (let i = 0; i < clientAssetIds.length; i++) {\r\n      dtoAssets.push(new ReconcilationMassMatchDto(clientAssetIds[i], inventoryAssetIds[i], true, matchCodeId));\r\n    }\r\n    return this.reconcileMatchService.setMassMatch(dtoAssets);\r\n  }\r\n\r\n  setAllocationMatch(clientRecordId: string, allocatedRecords: ReconciliationAllocationDto[], matchId: string): Observable<any> {\r\n    const allocations: Array<ReconciliationAllocationDto> = [];\r\n    for (let i = 0; i < allocatedRecords.length; i++) {\r\n      allocations.push(<ReconciliationAllocationDto>{\r\n        assetRecordId: allocatedRecords[i].assetRecordId,\r\n        allocatedValue: allocatedRecords[i].allocatedValue\r\n      });\r\n    }\r\n    const dto = new SetAllocationMatchCodeDto(clientRecordId, matchId, allocations);\r\n    return this.reconcileMatchService.setAllocationMatch(dto);\r\n  }\r\n\r\n  updateAllocationMatch(\r\n    clientRecordId: string,\r\n    allocatedRecords: ReconciliationAllocationDto[], matchCodeId: string, parentAssetId: string, matchId: string): Observable<any> {\r\n    const allocations: Array<ReconciliationAllocationDto> = [];\r\n    for (let i = 0; i < allocatedRecords.length; i++) {\r\n      allocations.push(<ReconciliationAllocationDto>{\r\n        assetRecordId: allocatedRecords[i].assetRecordId,\r\n        allocatedValue: allocatedRecords[i].allocatedValue\r\n      });\r\n    }\r\n\r\n    const dto: ReconciliationMatchDto = {\r\n      allocations: allocations,\r\n      assetFileRecordId: clientRecordId,\r\n      matchCodeId: matchCodeId,\r\n      matchId: matchId,\r\n      parentAssetFileRecordId: parentAssetId\r\n    };\r\n\r\n    return this.reconcileMatchService.updateAllocationMatch(dto);\r\n  }\r\n\r\n  unmatchAssetRecords(inventoryRecordIds: string[]): Observable<any> {\r\n    return this.reconcileMatchService.unmatchAssetRecords(inventoryRecordIds);\r\n  }\r\n\r\n  getInventoryMatchRecords(assetFileId: string): Observable<any> {\r\n    return this.reconcileMatchService.getClientMatchRecords(assetFileId);\r\n  }\r\n\r\n  getReconciliationMatches(groupId: string): Observable<any> {\r\n    return this.reconcileMatchService.getReconciliationMatches(groupId);\r\n  }\r\n\r\n  getReconciliationMatchSummary(groupId: string): Observable<ReconciliationMatchDto[]> {\r\n    return this.reconcileMatchService.getReconciliationMatchSummary(groupId);\r\n  }\r\n\r\n  setParentChildMatch(parentAssetId: string, childAssetIds: string[]): Observable<any> {\r\n    return this.reconcileMatchService.setParentChildMatch(parentAssetId, childAssetIds);\r\n  }\r\n\r\n  updateMatchCode(matchId: string, matchCodeId: string): Observable<ReconciliationMatchDto> {\r\n    return this.reconcileMatchService.updateMatchCode(matchId, matchCodeId);\r\n  }\r\n  public getMatchRecordsForAsset(assetFileRecordId: string) {\r\n    return this.reconcileMatchService.getMatchRecordsForAsset(assetFileRecordId);\r\n  }\r\n\r\n  public getMatchSummaryForAssetIds(groupId: string,\r\n    assetIds: string[]): Observable<ApiServiceResult<ReconciliationSummaryResult>> {\r\n    return this.reconcileMatchService.getMatchSummaryForAssetIds(groupId, assetIds);\r\n  }\r\n\r\n  public mapReconcileMatches(dataItems: Array<Asset>, source: number): Array<ReconcileMatchItem> {\r\n    const mapped = new Array<ReconcileMatchItem>();\r\n    dataItems.forEach(item => {\r\n      mapped.push(<ReconcileMatchItem>{ assetId: item.assetId, asset: item, dataSource: source });\r\n    });\r\n\r\n    return mapped;\r\n  }\r\n\r\n  public editOneToOneMatch(clientRecordId: string, inventoryRecordId: string, matchId: string): any {\r\n    const allocation: Array<ReconciliationAllocationDto> = [\r\n      <ReconciliationAllocationDto>{\r\n        assetRecordId: inventoryRecordId,\r\n        allocatedValue: null\r\n      }\r\n    ];\r\n\r\n    const dto = new SetAllocationMatchCodeDto(clientRecordId, matchId, allocation);\r\n    return this.reconcileMatchService.createOneToOneMatch(dto);\r\n  }\r\n}\r\n","import { FieldType } from '../../_enums/field-type';\r\n\r\nexport const reportsHeaders = [\r\n  {\r\n    name: 'reportName',\r\n    displayName: 'Report Name',\r\n    fieldType: FieldType.String,\r\n    isCustom: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'requestedDateTime',\r\n    displayName: 'Requested Date',\r\n    fieldType: FieldType.DateTime,\r\n    isCustom: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'status',\r\n    displayName: 'Status',\r\n    fieldType: FieldType.String,\r\n    isCustom: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isEditable: false\r\n  },\r\n  {\r\n    name: 'fileName',\r\n    displayName: 'File Name',\r\n    fieldType: FieldType.String,\r\n    isCustom: false,\r\n    isFacetable: false,\r\n    isKey: false,\r\n    isSearchable: true,\r\n    isFilterable: true,\r\n    isSortable: true,\r\n    isEditable: false\r\n  }\r\n];\r\n","import { FormGroupDirective } from '@angular/forms';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { ReportsService } from '../services/reports.service';\r\nimport { Component, OnInit, OnDestroy, ViewChild, Input, EventEmitter } from '@angular/core';\r\nimport { ReportDto } from '../../_api/_runtime/dtos/reporting/report.dto';\r\nimport { FilterColumnOption, FilterColumnOperation,\r\n  ReportFilterValueDto, \r\n  ReportFilterOptionsDto,\r\n  DeliverableRequestDetailDto} from '../../_api/_runtime/dtos/reporting/report-filter-options.dto';\r\nimport { Subject } from 'rxjs';\r\nimport { FormActionEvent } from '../../_models/form-action-event.model';\r\nimport { ReportDeliverable } from '../../_api/_runtime/dtos/reporting/report-deliverable.dto';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { FormAction } from '../../_enums/form-action';\r\nimport { MetadataDto } from '../../_api/_runtime/dtos/reporting/report-metadata.dto';\r\nimport { SortDescriptor, orderBy, State, process } from '@progress/kendo-data-query/dist/es/main';\r\nimport { RowClassArgs, SelectionEvent, GridDataResult, PageChangeEvent, DataStateChangeEvent,\r\n  SelectableSettings } from '@progress/kendo-angular-grid';\r\n\r\n\r\n@Component({\r\n  selector: 'report-name-modal',\r\n  templateUrl: './report-name-modal.component.html'\r\n})\r\n\r\nexport class ReportNameModalComponent implements TranslatedComponent, OnInit, OnDestroy {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  @ViewChild('reportNameForm', {static: false}) form: FormGroupDirective;\r\n  @Input() ssrsReportId: string;\r\n  @Input() metadataList: Array<MetadataDto>;\r\n  @Input() translatedBaseKey: string;\r\n  public filterMetaData: Array<FilterColumnOption>;\r\n  public filterOperations: Array<FilterColumnOperation>;\r\n  public selectedMetadata = new Array<MetadataDto>();\r\n  public availableReports = new Array<ReportDto>();\r\n\r\n  private destroyed$ = new Subject();\r\n  isFilterEnabled = false;\r\n\r\n  formResponse = new EventEmitter<FormActionEvent>();\r\n\r\n  fileExtension: string;\r\n  requestedReport = <ReportDeliverable>{};\r\n  isNameEmpty = true;\r\n  validName = true;\r\n  loadingOptions = false;\r\n  canAddFilter = true;\r\n  isValid = false;\r\n  private maxParameters: number;\r\n\r\n  public reportFilters = new Array<ReportFilterValueDto>();\r\n\r\n  public selectableSettings = <SelectableSettings> {\r\n    checkboxOnly: true,\r\n    mode: 'multiple'\r\n  };\r\n\r\n  state: State = {\r\n    sort: <SortDescriptor[]>[{\r\n      dir: 'asc',\r\n      field: 'tagName'\r\n    }]\r\n\r\n  };\r\n\r\n  public sortSelectedAsc = false;\r\n  public sortSelectedDesc = false;\r\n  gridData : any[]\r\n\r\n  constructor(\r\n    private configService: ConfigService,\r\n    private reportsService: ReportsService,\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n    this.translatedBaseKey = this.i18n.reports;\r\n    this.maxParameters = this.configService.getSettings('reportParameterLimit');\r\n    this.gridData = process(this.metadataList, this.state);\r\n    this.reportsService.getReportOptionsByMetadata(false,this.selectedMetadata).subscribe(data => {\r\n      this.availableReports = data;\r\n });\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n  }\r\n \r\n  dataStateChange(state: DataStateChangeEvent): void {\r\n    this.state = state;\r\n    this.gridData = process(this.metadataList, this.state);\r\n  }\r\n\r\n  updateExtension (reportId: string) {\r\n    const selectedReport = this.availableReports.find(x => x.id === reportId);\r\n    this.fileExtension = selectedReport.fileExtension;\r\n    this.resetFilterOptions(selectedReport);\r\n  }\r\n\r\n  resetFilterOptions(report: ReportDto): void {\r\n    this.isFilterEnabled = (!report.isFixedAsset && !report.isInsurance) ? false : true;\r\n    if (!this.isFilterEnabled) { return; }\r\n    this.loadingOptions = true;\r\n    this.reportsService.getReportFilterMetadata(report.id)\r\n      .subscribe((reportOptions: ReportFilterOptionsDto) => {\r\n        this.filterMetaData = reportOptions.filterColumnOptions\r\n          .sort((a, b) => (a.columnName > b.columnName) ? 1 : -1);\r\n        this.filterOperations = reportOptions.filterColumnOperations\r\n          .sort((a, b) => (a.operationName > b.operationName) ? 1 : -1);\r\n        this.reportFilters = new Array<ReportFilterValueDto>();\r\n        this.loadingOptions = false;\r\n        this.canAddFilter = reportOptions.filterColumnOptions.length > 0;\r\n    });\r\n  }\r\n\r\n  formatFilterTermName(name: string, prefix: string): string {\r\n    const prefixLength = prefix.length;\r\n    const formattedName = name.charAt(prefixLength).toLocaleLowerCase() + name.substring(prefixLength + 1);\r\n    return formattedName;\r\n  }\r\n\r\n  dismiss() {\r\n    this.formResponse.emit({ action: FormAction.Cancel });\r\n  }\r\n\r\n  validateName(fileName: string) {\r\n    const validNamePattern = new RegExp('[\\\\/:\"*?<>|\\\\\\\\]+');\r\n    this.validName = !validNamePattern.test(fileName);\r\n  }\r\n\r\n  runReport() {\r\n    const reportRequest = {} as DeliverableRequestDetailDto;\r\n    reportRequest.fileName = this.requestedReport.fileName;\r\n    reportRequest.outputType = this.fileExtension;\r\n    reportRequest.reportFilters = this.reportFilters;\r\n    this.reportsService.requestDeliverable(this.ssrsReportId, reportRequest)\r\n        .subscribe(res => {\r\n          this.reportsService.clearTermsForFilterCriteria();\r\n          this.formResponse.emit({ action: FormAction.Save });\r\n      });\r\n  }\r\n  remove() {\r\n    this.reportFilters.pop();\r\n    this.canSubmit();\r\n  }\r\n\r\n  addFilter() {\r\n\r\n    const filterValue = {} as ReportFilterValueDto;\r\n    filterValue.filterColumnId = '';\r\n    filterValue.filterOperationId = '';\r\n    this.reportFilters.push(filterValue);\r\n    this.canAddFilter = this.reportFilters.length < this.maxParameters;\r\n    this.canSubmit();\r\n  }\r\n\r\n  canSubmit(): void {\r\n    if (this.reportFilters.length > 0) {\r\n      for (const filter of this.reportFilters) {\r\n        if (!filter.filterColumnId || !filter.filterOperationId || !filter.filterValue) {\r\n          this.isValid = false;\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    if (this.ssrsReportId && this.requestedReport.fileName) {\r\n      this.isValid = true;\r\n      return;\r\n    }\r\n    this.isValid = false;\r\n    return;\r\n  }\r\n\r\n  onCheckboxChange(metadata, event) {\r\n    if(event.target.checked) {\r\n      this.selectedMetadata.push(metadata);\r\n    } else {\r\n \r\n  this.selectedMetadata.forEach( (item, index) => {\r\n    if(item === metadata) this.selectedMetadata.splice(index,1);\r\n  });\r\n\r\n }\r\n  this.reportsService.getReportOptionsByMetadata(false,this.selectedMetadata).subscribe(data => {\r\n      this.availableReports = data;\r\n });\r\n}\r\n\r\nonSelectionChanged(args?: SelectionEvent) {\r\n  setTimeout(() => {\r\n    if(args.deselectedRows != null && args.deselectedRows.length > 0){\r\n    this.onDeselectedRows(args.deselectedRows);\r\n    this.reportsService.getReportOptionsByMetadata(false,this.selectedMetadata).subscribe(data => {\r\n      this.availableReports = data;\r\n });\r\n    }\r\n    if (args.selectedRows != null && args.selectedRows.length > 0) {\r\n      this.UpdateSelectedRows(args.selectedRows);\r\n      this.reportsService.getReportOptionsByMetadata(false,this.selectedMetadata).subscribe(data => {\r\n        this.availableReports = data;\r\n   });\r\n    }\r\n  \r\n  });\r\n}\r\n\r\nprivate onDeselectedRows(deselectedRows: Array<any>){\r\n  if (deselectedRows == null || deselectedRows.length === 0) {\r\n    return;\r\n  }\r\n\r\n   deselectedRows.forEach(value => {\r\n    const metadata = this.metadataList.find(c => c.id === value.dataItem.id);\r\n    this.selectedMetadata.forEach( (item, index) => {\r\n      if(item === metadata) this.selectedMetadata.splice(index,1);\r\n    });\r\n  });\r\n    \r\n}\r\n\r\nprivate UpdateSelectedRows(selectedRows: Array<any>) {\r\n  selectedRows.forEach(value => {\r\n    const metadataa = this.metadataList.find(c => c.id === value.dataItem.id);\r\n    this.selectedMetadata.push(metadataa);\r\n  });\r\n}\r\n\r\n}\r\n","import { ReportsService } from '../services/reports.service';\r\nimport { AlertService } from '../../_core/services/alert.service';\r\nimport { FamisGridComponent } from '../../_shared/components/famis-grid.component';\r\nimport { FamisGridService } from '../../_core/services/famis-grid.service';\r\nimport { reportsHeaders } from './default-reports-headers';\r\nimport { WindowRef } from '@agm/core/utils/browser-globals';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { HelperService } from '../../_core/services/helper.service';\r\nimport { ReportNameModalComponent } from './report-name-modal.component';\r\nimport { WindowManager } from '../../_core/services/window-manager.service';\r\nimport { ConfirmModalComponent } from '../../_shared/components/confirm-modal.component';\r\nimport { timer ,  Subscription ,  from, Subject } from 'rxjs';\r\nimport { ReportDeliverable } from '../../_api/_runtime/dtos/reporting/report-deliverable.dto';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Component, OnInit, OnDestroy, ViewChild, Input } from '@angular/core';\r\nimport { FamisGrid, FamisGridFeature } from '../../_models/shared/famis-grid-state.model';\r\nimport { ReportDto } from '../../_api/_runtime/dtos/reporting/report.dto';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { WindowOption } from '../../_models/window-option';\r\nimport { FormAction } from '../../_enums/form-action';\r\nimport { FamisGridActionEvent } from '../../_models/shared/famis-grid-action-event.model';\r\nimport { ModalProperties } from '../../_models/modal-properties.model';\r\nimport { MetadataDto } from '../../_api/_runtime/dtos/reporting/report-metadata.dto';\r\n\r\n@Component({\r\n  selector: 'reports-deliverables',\r\n  templateUrl: 'reports-deliverables.component.html'\r\n})\r\nexport class ReportsDeliverablesComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  private defaultColumns = [\r\n    'fileName',\r\n    'reportName',\r\n    'requestedDateTime',\r\n    'status',\r\n  ];\r\n  public deliverablesGrid: FamisGrid;\r\n  @ViewChild(FamisGridComponent, {static: false}) famisGrid: FamisGridComponent;\r\n  @Input() isReadOnly = true;\r\n\r\n  private windowSize = 500;\r\n  private destroyed$ = new Subject();\r\n  private groupId: string;\r\n  private timerSubscription: Subscription;\r\n  public isProcessing = false;\r\n  public ssrsReportId: string;\r\n  public availableReports = new Array<ReportDto>();\r\n  public metadataList = new Array<MetadataDto>();\r\n  public reportDeliverables = new Array<ReportDeliverable>();\r\n  public ssrsURL: string;\r\n\r\n  // intentionally \"any\" as the return type ApiServiceResult<Array<ReportDto>> does not accommodate \"exception\"\r\n  private reportOptionsResult: any;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private reportsService: ReportsService,\r\n    private alertService: AlertService,\r\n    private famisGridService: FamisGridService,\r\n    private windowRef: WindowRef,\r\n    private helperService: HelperService,\r\n    private configService: ConfigService,\r\n    private windowManager: WindowManager,\r\n    private modalService: NgbModal,\r\n  ) {\r\n    this.ssrsURL = this.configService.getSettings('ssrsURL');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.groupId = this.route.parent.snapshot.paramMap.get('groupId');\r\n    this.deliverablesGrid = <FamisGrid>{\r\n      height: 600,\r\n      gridId: this.famisGridService.createGrid(),\r\n      windowSize: this.windowSize,\r\n      totalRecordCount: 0,\r\n      name: 'deliverablesGrid',\r\n      supportedOperators: [FamisGridFeature.Sort],\r\n      actions: ['Download', 'Delete'],\r\n      translationBaseKey: this.i18n.reports,\r\n      hideTitle: true,\r\n      scrollingMode: 'normal'\r\n    };\r\n\r\n    this.reportsService.getReportMetadataByGroupId(this.groupId).subscribe((metadata: MetadataDto[])=> {\r\n      this.metadataList = metadata;\r\n \r\n    });\r\n\r\n    this.reportsService.getReportOptions(false).subscribe(data => {\r\n      this.reportOptionsResult = data;\r\n      this.availableReports = data.result;\r\n    });\r\n    this.refreshGridData();\r\n\r\n    timer(0, 60000).pipe(takeUntil(this.destroyed$))\r\n    .subscribe(() => {\r\n      this.refreshGridData();\r\n    });\r\n  }\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  openNameModal() {\r\n    if (this.reportOptionsResult && this.reportOptionsResult.code === 4) {\r\n      this.windowManager.open(this.reportOptionsResult.exception.Message, 'No Service Found Error', <WindowOption>{\r\n        isModal: true,\r\n      });\r\n      return;\r\n    }\r\n    this.isProcessing = true;\r\n    const modal = this.windowManager.open(ReportNameModalComponent, 'Run Report', <WindowOption> {\r\n      isModal: true,\r\n      width: 900\r\n    });\r\n    modal.content.instance.ssrsReportId = this.ssrsReportId;\r\n    //modal.content.instance.availableReports = this.availableReports;\r\n    modal.content.instance.metadataList = this.metadataList;\r\n    modal.content.instance.formResponse.subscribe(result => {\r\n      if (result.action === FormAction.Save) {\r\n            this.alertService.success('Report run submitted.');\r\n            this.refreshGridData();\r\n      }\r\n      modal.close();\r\n    });\r\n    this.isProcessing = false;\r\n  }\r\n\r\n  handleActionEvent(event: FamisGridActionEvent) {\r\n    const item = event.item as ReportDeliverable;\r\n\r\n    if (event.action === 'Download') {\r\n      if (item.isPending) {\r\n        this.alertService.warn('Report is not ready for download.');\r\n        return;\r\n      }\r\n      this.windowRef.getNativeWindow().open(item.downloadLink, '_blank');\r\n    }\r\n\r\n    if (event.action === 'Delete') {\r\n      this.deleteReport(item);\r\n    }\r\n  }\r\n\r\n  deleteReport(report: ReportDeliverable) {\r\n    const modal = this.modalService.open(ConfirmModalComponent);\r\n    const modalOptions = <ModalProperties>{\r\n      heading: {\r\n        key: 'Delete Report'\r\n      },\r\n      body: {\r\n        key: 'Are you sure you wish to delete {{report}}?',\r\n        params: {report: report.fileName}\r\n      },\r\n      dismissText: {\r\n        key: 'Cancel'\r\n      },\r\n      successText: {\r\n        key: 'Delete'\r\n      },\r\n      translateBaseKey: this.i18n.reports\r\n    };\r\n\r\n    modal.componentInstance.options = modalOptions;\r\n\r\n    modal.result.then(\r\n      confirm => {\r\n        this.reportsService.deleteReport(this.groupId, report.id).subscribe(result => {\r\n          this.alertService.success('{{filename}} has been deleted', null, {\r\n            filename: report.fileName\r\n          });\r\n          this.refreshGridData();\r\n      });\r\n    },\r\n      cancel => {}\r\n    );\r\n  }\r\n\r\n  refreshGridData() {\r\n    const sortField = 'requestedDateTime';\r\n    const sortDir = 'desc';\r\n    this.deliverablesGrid.loading = this.reportsService.getReportDeliverables()\r\n    .pipe(takeUntil(this.destroyed$))\r\n    .subscribe(data => {\r\n      data.forEach(deliverable => {\r\n        deliverable.status = deliverable.isPending ? 'Pending' : 'Ready';\r\n        deliverable.reportName =decodeURIComponent(deliverable.reportName).substr(decodeURIComponent(deliverable.reportName).lastIndexOf(\"/\") + 1);\r\n        deliverable.fileName = decodeURIComponent(deliverable.fileName);\r\n      });\r\n      this.deliverablesGrid.columnHeaders = reportsHeaders;\r\n      this.deliverablesGrid.selectedHeaders = this.defaultColumns;\r\n\r\n      this.famisGridService.setCacheRecords(\r\n        this.helperService.sortCollection(\r\n          data,\r\n          sortField,\r\n          sortDir\r\n        ),\r\n        this.deliverablesGrid.gridId,\r\n        this.famisGridService.defaultSkip,\r\n        data.length,\r\n        this.famisGridService.defaultTake);\r\n    });\r\n  }\r\n}\r\n","import { ReportsService } from '../services/reports.service';\r\nimport { PowerBIComponent } from '../../_shared/components/power-bi/power-bi.component';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { Component, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { ReportDto } from '../../_api/_runtime/dtos/reporting/report.dto';\r\n\r\n@Component({\r\n    selector: 'reports-power-bi',\r\n    templateUrl: 'reports-power-bi.component.html'\r\n})\r\nexport class ReportsPowerBiComponent implements OnInit, TranslatedComponent {\r\n    i18n = TranslationBaseKeys;\r\n\r\n    @ViewChild(PowerBIComponent, {static: false}) biEmbeded: PowerBIComponent;\r\n    @Input() isReadOnly = true;\r\n\r\n    public isProcessing = false;\r\n    public reportId: string;\r\n    public ssrsURL: string;\r\n    public availableReports = new Array<ReportDto>();\r\n    public report: ReportDto;\r\n\r\n    constructor(\r\n        private reportsService: ReportsService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.reportsService.getReportOptions(true).subscribe(data => {\r\n            this.availableReports = data.result;\r\n        });\r\n    }\r\n\r\n    runReport() {\r\n        this.isProcessing = true;\r\n        this.report = this.availableReports.find(r => r.id === this.reportId);\r\n        this.biEmbeded.report = this.report;\r\n        this.biEmbeded.displaySelectedReport();\r\n        this.isProcessing = false;\r\n    }\r\n}\r\n\r\n","import { ReportsService } from '../services/reports.service';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { ReportsPowerBiComponent } from './reports-power-bi.component';\r\nimport { ReportsDeliverablesComponent } from './reports-deliverables.component';\r\nimport { SystemPermissionsEnum } from '../../_core/user/permissions';\r\nimport { ReportModes } from '../report-modes';\r\nimport { UserStore } from '../../_core/user/user.store';\r\nimport { User } from '../../_core/user/user';\r\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'reports',\r\n  templateUrl: 'reports.component.html'\r\n})\r\nexport class ReportsComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  permissions = SystemPermissionsEnum;\r\n  user: User;\r\n  reportModes = ReportModes;\r\n  mode: ReportModes = ReportModes.Interactive;\r\n\r\n  @ViewChild(ReportsPowerBiComponent, {static: false})\r\n  reportsPowerBiComponent: ReportsPowerBiComponent;\r\n  @ViewChild(ReportsDeliverablesComponent, {static: false})\r\n  reportsDeliverablesComponent: ReportsDeliverablesComponent;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private reportsService: ReportsService,\r\n    private userStore: UserStore\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.reportsService.groupId = this.route.parent.snapshot.paramMap.get('groupId');\r\n    const selectedMode = this.route.snapshot.queryParams['mode'];\r\n      switch (selectedMode) {\r\n          case '0':\r\n              this.mode = ReportModes.Static;\r\n              break;\r\n          case '1':\r\n              this.mode = ReportModes.Interactive;\r\n              break;\r\n      }\r\n\r\n      this.userStore.user.subscribe(currentUser => {\r\n          this.user = currentUser;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n  toggleReportMode(mode: ReportModes) {\r\n    this.mode = mode;\r\n  }\r\n\r\n  userCanWriteData() {\r\n    let canWriteData = false;\r\n    if (this.user) {\r\n        const grantedPermissionIndex = this.user.permissions.permissionsGranted.findIndex(c => c === this.permissions.canWriteData);\r\n        canWriteData = grantedPermissionIndex > -1;\r\n    }\r\n    return canWriteData;\r\n  }\r\n\r\n}\r\n","export enum ReportModes {\r\n  Static,\r\n  Interactive\r\n}","import { SharedModule } from '../_shared/shared.module';\r\nimport { ReportsService } from './services/reports.service';\r\nimport { ReportsComponent } from './components/reports.component';\r\nimport { ReportsDeliverablesComponent } from './components/reports-deliverables.component';\r\nimport { ReportsApiService } from '../_api/_runtime/services/reports-api.service';\r\nimport { ReportsPowerBiComponent } from './components/reports-power-bi.component';\r\nimport { CoreModule } from '../_core/core.module';\r\nimport { ReportNameModalComponent } from './components/report-name-modal.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { LaddaModule } from 'angular2-ladda';\r\nimport { OrderModule } from 'ngx-order-pipe';\r\nimport { GridModule } from '@progress/kendo-angular-grid';\r\nimport { RouterModule } from '@angular/router';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CoreModule,\r\n    NgbModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    LaddaModule,\r\n    OrderModule,\r\n    GridModule,\r\n    RouterModule,\r\n    BrowserAnimationsModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    ReportsComponent,\r\n    ReportsDeliverablesComponent,\r\n    ReportsPowerBiComponent,\r\n    ReportNameModalComponent\r\n  ],\r\n  entryComponents: [\r\n    ReportNameModalComponent\r\n  ],\r\n  providers: [\r\n    ReportsService,\r\n    ReportsApiService\r\n  ]\r\n})\r\nexport class ReportsModule { }\r\n","import { ReportsApiService } from '../../_api/_runtime/services/reports-api.service';\r\nimport { FilterOperationsService } from '../../_core/services/filter-operations.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { AssetSortTermDto, AssetFilterTermDto, AssetSearchDto } from '../../_api/dtos/inventory/asset-search.dto';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { MassUpdateContext } from '../../_api/_runtime/dtos/mass-update-context.dto';\r\nimport { MassUpdateRequestDto } from '../../_api/_runtime/dtos/mass-update-request.dto';\r\nimport { ApiServiceResult } from '../../_api/dtos/api-service-result.dto';\r\nimport { ReportDto } from '../../_api/_runtime/dtos/reporting/report.dto';\r\nimport { ReportDeliverable } from '../../_api/_runtime/dtos/reporting/report-deliverable.dto';\r\nimport { ReportFilterOptionsDto, DeliverableRequestDetailDto } from '../../_api/_runtime/dtos/reporting/report-filter-options.dto';\r\nimport { ReportInfoDto } from '../../_api/_runtime/dtos/reporting/report-info.dto';\r\nimport { FilterDto } from '../../_api/dtos/inventory/filter.dto';\r\nimport { MetadataDto } from '../../_api/_runtime/dtos/reporting/report-metadata.dto';\r\nimport { GroupMetadataDto } from '../../_api/_runtime/dtos/reporting/report-group.metadata.dto';\r\n\r\n@Injectable()\r\nexport class ReportsService {\r\n\r\n  groupId: string;\r\n\r\n  constructor(\r\n    private reportsApiService: ReportsApiService,\r\n    private filterOperationsService: FilterOperationsService,\r\n  ) { }\r\n\r\n  public defaultSortTerms = [<AssetSortTermDto>{ termOrder: 0, sortDirection: 0, field: 'id' }];\r\n  public defaultFilterTerms = [<AssetFilterTermDto>{ operation: 'noop', term: {dataTarget: 0, field: '', value: ''}}];\r\n  private reportContextSource = new BehaviorSubject<MassUpdateContext>(<MassUpdateContext>{});\r\n  public reportContext$ = this.reportContextSource.asObservable();\r\n\r\n  private reportCriteriaSearchSource = new BehaviorSubject<AssetSearchDto>(<AssetSearchDto>{\r\n    fieldMatchTerms: [],\r\n    fieldMatchConjunction: 'and',\r\n    filterTerms : this.defaultFilterTerms,\r\n    filterConjunction: 'and',\r\n    excludeMatchedRecords: false,\r\n    sortTerms: this.defaultSortTerms,\r\n    skip: 0,\r\n    take: 0\r\n  });\r\n\r\n  public reportCriteriaSearch$ = this.reportCriteriaSearchSource.asObservable();\r\n\r\n    private reportRequestSource = new BehaviorSubject<MassUpdateRequestDto>(<MassUpdateRequestDto>{\r\n        field: '',\r\n        textReplaceValue: null,\r\n        filterTerms: this.defaultFilterTerms,\r\n        filterConjunction: 'and',\r\n        sortTerms: this.defaultSortTerms\r\n    });\r\n\r\n  public reportRequest$ = this.reportRequestSource.asObservable();\r\n\r\n\r\n  public getReportOptions(isPowerBi: boolean): Observable<ApiServiceResult<Array<ReportDto>>> {\r\n    return this.reportsApiService.getAvailableReportsByGroupId(this.groupId, isPowerBi);\r\n  }\r\n\r\n  public getReportDeliverables(): Observable<Array<ReportDeliverable>> {\r\n    return this.reportsApiService.getRequestedDeliverablesByGroupId(this.groupId);\r\n  }\r\n\r\n  public getReportOptionsByMetadata(isPowerBi: boolean, selectedMetadata: Array<MetadataDto>): Observable<Array<ReportDto>> {\r\n    return this.reportsApiService.getAvailableReportsByGroupIdAndMetadata(this.groupId,isPowerBi,selectedMetadata);\r\n  }\r\n\r\n  public getReportMetadata(groupId: string): Observable<MetadataDto[]> {\r\n    return this.reportsApiService.getReportMetadata(groupId);\r\n  }\r\n\r\n  public getReportMetadataByGroupId(groupId: string): Observable<MetadataDto[]> {\r\n    return this.reportsApiService.getReportMetadataByGroupId(groupId);\r\n  }\r\n\r\n  public getGropuMetadataByGroupId(groupId: string): Observable<GroupMetadataDto[]> {\r\n    return this.reportsApiService.getGropuMetadataByGroupId(groupId);\r\n  }\r\n  \r\n  public createGroupMetadata(groupId: string,metadata: Array<MetadataDto>): Observable<GroupMetadataDto[]> {\r\n    return this.reportsApiService.createGroupMetadata(groupId,metadata);\r\n  }\r\n\r\n  public deleteGroupMetadata(groupId: string,metadata: Array<MetadataDto>): Observable<GroupMetadataDto[]> {\r\n    return this.reportsApiService.deleteGroupMetadata(groupId,metadata);\r\n  }\r\n\r\n  public getReportFilterMetadata(reportId: string): Observable<ReportFilterOptionsDto> {\r\n    return this.reportsApiService.getReportFilterMetadata(this.groupId, reportId);\r\n  }\r\n\r\n  public requestDeliverable(reportId: string,\r\n    reportDetail: DeliverableRequestDetailDto): Observable<ReportDeliverable> {\r\n    return this.reportsApiService.requestDeliverable(this.groupId, reportId, reportDetail);\r\n  }\r\n\r\n  public deleteReport(groupId: string, reportId: string): Observable<ReportInfoDto> {\r\n    return this.reportsApiService.deleteReport(groupId, reportId);\r\n  }\r\n\r\n  public addOrUpdateFilter(filterModified: FilterDto): void {\r\n    const current = this.reportCriteriaSearchSource.getValue();\r\n    current.filterTerms = this.filterOperationsService.updateFilter\r\n    (filterModified, current.filterTerms);\r\n    this.reportCriteriaSearchSource.next(current);\r\n  }\r\n\r\n  public removeFilter(id: string): void {\r\n    const current = this.reportCriteriaSearchSource.getValue();\r\n    current.filterTerms = this.filterOperationsService.removeFilter(id, current.filterTerms);\r\n    this.reportCriteriaSearchSource.next(current);\r\n  }\r\n\r\n  public clearTermsForFilterCriteria() {\r\n      const current = this.reportCriteriaSearchSource.getValue();\r\n      current.filterTerms = [];\r\n\r\n      this.reportCriteriaSearchSource.next(current);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UserStore } from '../../_core/user/user.store';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { ConfigService } from '@ngx-config/core';\r\nimport { GroupApiService } from '../../_api/_runtime/services/group-api.service'\r\n\r\n@Component({\r\n  selector: 'support',\r\n  templateUrl: './support.component.html',\r\n})\r\nexport class SupportComponent implements OnInit, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n  public emailHref = '';\r\n  public contactName = '';\r\n  public contactEmail = '';\r\n  public contactSubject = '';\r\n  public contactMessage = '';\r\n  public supportEmailAddress: string;\r\n  private groupId: string;\r\n  public groupName: string;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private userStore: UserStore,\r\n    private configService: ConfigService,\r\n    private groupApiService: GroupApiService\r\n    ) {\r\n\r\n      this.supportEmailAddress = this.configService.getSettings('famisSupportEmailAddress');\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.groupId = this.route.parent.snapshot.paramMap.get('groupId');\r\n    this.route.queryParams.subscribe((params) => this.contactSubject = params.subject);\r\n        this.userStore.user.subscribe((user) => {\r\n          this.contactName =   `${user.profile.FirstName} ${user.profile.LastName}`;\r\n            this.contactEmail = user.profile.Email;\r\n        });\r\n    this.groupApiService.getContractGroup(this.groupId, false).subscribe(result => {\r\n      if(result) {\r\n        this.groupId = result.groupId;\r\n        this.groupName = result.groupName;\r\n      }\r\n    });    \r\n  }\r\n\r\n  public updateEmail(): void {\r\n    const message = this.contactMessage + '\\n\\n' + `Group Id: ${this.groupId}`+ '\\n'+ `Group Name: ${this.groupName}` + '\\n' + `Sent by ${this.contactName}` + '\\n' + `${this.contactEmail}`;\r\n    const body = encodeURI(message);\r\n\r\n    this.emailHref = `mailto:${this.supportEmailAddress}?subject=${this.contactSubject}&body=${body}`;\r\n}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CoreModule } from '../_core/core.module';\r\nimport { SharedModule } from '../_shared/shared.module';\r\nimport { SupportComponent } from './components/support.component';\r\nimport { ClientFileApiService } from '../_api/_runtime/services/client-files-api.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    // ng.GridModule,\r\n    SharedModule,\r\n    CoreModule,\r\n  ],\r\n  declarations: [\r\n    SupportComponent\r\n  ],\r\n  providers: [\r\n    ClientFileApiService\r\n  ]\r\n})\r\nexport class SupportModule { }\r\n","import { FamisGridComponent } from '../../_shared/components/famis-grid.component';\r\nimport { FamisGridService } from '../../_core/services/famis-grid.service';\r\nimport { AdministrationService } from '../../project-profile/services/administration.service';\r\nimport { TransactionsService } from '../services/transactions.service';\r\nimport { TransactionsInfoService } from '../../_core/services/transactions-info-service';\r\nimport { HelperService } from '../../_core/services/helper.service';\r\nimport { RevertComponent } from '../../_shared/components/grid-actions/revert.component';\r\nimport { transactionHeaders } from '../../processing/default-values/default-transaction-headers';\r\nimport { TranslatedComponent } from '../../_core/i18n/translated-component';\r\nimport { TranslationBaseKeys } from '../../_core/i18n/translation-base-keys';\r\nimport { WindowManager } from '../../_core/services/window-manager.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Component, OnInit, OnDestroy, EventEmitter, Output, ViewChild } from '@angular/core';\r\nimport { FamisGrid, FamisGridFeature } from '../../_models/shared/famis-grid-state.model';\r\nimport { Asset } from '../../_models/asset.model';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { BreadCrumb } from '../../_models/breadcrumbs.model';\r\nimport { FamisGridActionEvent } from '../../_models/shared/famis-grid-action-event.model';\r\nimport { WindowOption } from '../../_models/window-option';\r\nimport { FamisGridCacheResult } from '../../_models/shared/famis-grid-cache-result.model';\r\nimport { SelectionChangeEvent } from '../../_models/selection-change-event.model';\r\n\r\n@Component({\r\n  selector: 'transactions-grid',\r\n  templateUrl: 'transactions-grid.component.html'\r\n})\r\nexport class TransactionsGridComponent implements OnInit, OnDestroy, TranslatedComponent {\r\n  i18n = TranslationBaseKeys;\r\n\r\n  public transactionsGrid: FamisGrid;\r\n  public selectedAssets = new Array<Asset>();\r\n  public groupId: string;\r\n\r\n  @Output() gridSelections = new EventEmitter<Array<Asset>>();\r\n\r\n  @ViewChild(FamisGridComponent, {static: false}) famisGrid: FamisGridComponent;\r\n\r\n  private windowSize = 500;\r\n  private destroyed$ = new Subject();\r\n\r\n  breadCrumbs = [\r\n    <BreadCrumb>{ name: 'Administration', routerLink: '../' },\r\n    <BreadCrumb>{ name: 'Transactions', routerLink: 'Transactions', isDisabled: true }\r\n  ];\r\n\r\n  constructor(\r\n    private famisGridService: FamisGridService,\r\n    private transactionsService: TransactionsService,\r\n    private administrationService: AdministrationService,\r\n    private transactionsInfoService: TransactionsInfoService,\r\n    private helperService: HelperService,\r\n    private windowManager: WindowManager,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.administrationService.groupIdContext$.pipe(takeUntil(this.destroyed$))\r\n    .subscribe(context => {\r\n      this.groupId = context.groupId;\r\n    });\r\n\r\n    this.transactionsGrid = <FamisGrid>{\r\n      height: 600,\r\n      gridId: this.famisGridService.createGrid(),\r\n      windowSize: this.windowSize,\r\n      totalRecordCount: 0,\r\n      name: '',\r\n      dataSource: null,\r\n      supportedOperators: [FamisGridFeature.ColumnSelection, FamisGridFeature.Sort],\r\n      actions: ['Revert'],\r\n      translationBaseKey: this.i18n.transactions\r\n    };\r\n\r\n    this.transactionsGrid.loading = this.transactionsService\r\n      .getSearchTransactionsByGroupId(this.groupId, this.transactionsService.defaultSearchRequest)\r\n      .pipe(takeUntil(this.destroyed$))\r\n      .subscribe(() => {\r\n        this.transactionsGrid.columnHeaders = transactionHeaders;\r\n\r\n        this.transactionsGrid.selectedHeaders = this.transactionsInfoService.GetDefaultColumns();\r\n        this.transactionsGrid.loading = this.processCacheUpdate();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  handleActionEvent(event: FamisGridActionEvent) {\r\n    switch (event.action) {\r\n      case 'Revert':\r\n        const windowRef = this.windowManager.open(RevertComponent, 'Revert', <WindowOption>{\r\n          isModal: true,\r\n          width: 1500,\r\n        });\r\n\r\n        windowRef.content.instance.transactionId = event.item.transactionId;\r\n        windowRef.content.instance.activity = event.item.activity;\r\n        windowRef.content.instance.assetTagNumber = event.item.assetTagNumber;\r\n        windowRef.content.instance.submitSuccess.subscribe(() => {\r\n          this.updateCache();\r\n        });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  updateCache(request?: FamisGridCacheResult) {\r\n    this.transactionsGrid.cacheLoading = this.processCacheUpdate(request);\r\n  }\r\n\r\n  handleSelectionChanged(event: SelectionChangeEvent) {\r\n    event.itemsAdded.forEach(item => {\r\n      const index = this.selectedAssets.indexOf(item.dataItem);\r\n      if (index === -1) {\r\n        this.selectedAssets.push(<Asset>item.dataItem);\r\n      }\r\n    });\r\n\r\n    event.itemsRemoved.forEach(item => {\r\n      const index = this.selectedAssets.indexOf(item.dataItem);\r\n      if (index !== -1) {\r\n        this.selectedAssets.splice(index, 1);\r\n      }\r\n    });\r\n\r\n    this.gridSelections.emit(this.selectedAssets);\r\n  }\r\n\r\n  private processCacheUpdate(cacheUpdateRequest?: FamisGridCacheResult): Subscription {\r\n    const s = this;\r\n\r\n    return this.transactionsService\r\n      .updateTransactionsData(\r\n        this.groupId,\r\n        cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.skip : s.famisGridService.defaultSkip,\r\n        cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.take : s.famisGridService.defaultTake,\r\n        cacheUpdateRequest ? cacheUpdateRequest.sortTerms : null,\r\n        cacheUpdateRequest ? cacheUpdateRequest.filters : null\r\n      )\r\n      .subscribe(dto => {\r\n        this.transactionsGrid.totalRecordCount = dto.totalInRecordSet;\r\n\r\n        s.famisGridService.setCacheRecords(\r\n          dto.transactions,\r\n          s.transactionsGrid.gridId,\r\n          cacheUpdateRequest ? cacheUpdateRequest.cacheWindow.skip : s.famisGridService.defaultSkip,\r\n          dto.numberInThisPayload,\r\n          this.transactionsGrid.windowSize\r\n        );\r\n      });\r\n  }\r\n}\r\n","import { InsuranceApiService } from '../../_api/_runtime/services/insurance-api.service';\r\nimport { AdministrationService } from '../../project-profile/services/administration.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { AssetSortTermDto } from '../../_api/dtos/inventory/asset-search.dto';\r\nimport { TransactionFilterTermDto } from '../../_api/_runtime/dtos/transaction-filter-term.dto';\r\nimport { TransactionsSearchFilter } from '../../_api/_runtime/dtos/transactions-search-filter.dto';\r\nimport { SortTerm } from '../../_api/_runtime/dtos/sort-term.dto';\r\nimport { TransactionsDto } from '../../_api/_runtime/dtos/transactions.dto';\r\nimport { Observable } from 'rxjs';\r\nimport { RevertSummaryDto } from '../../_api/_runtime/dtos/transaction-revert-summary.dto';\r\n\r\n@Injectable()\r\nexport class TransactionsService {\r\n\r\n  groupId: string = this.administrationService.groupId;\r\n  public defaultSortTerms = [<AssetSortTermDto>{ termOrder: 0, sortDirection: 1, field: 'transactionDate' }];\r\n\r\n\r\n  defaultTransactionFilterTerms: Array<TransactionFilterTermDto> = [{\r\n    'term': {\r\n        'field': 'PostingType',\r\n        'value': '0'\r\n      },\r\n      'operation': 'eq'\r\n    },\r\n      {\r\n    'term': {\r\n      'field': 'PostingType',\r\n        'value': '1'\r\n    },\r\n    'operation': 'eq'\r\n  },\r\n  {\r\n    'term': {\r\n      'field': 'PostingType',\r\n        'value': '3'\r\n    },\r\n    'operation': 'eq'\r\n  },\r\n  {\r\n    'term': {\r\n      'field': 'PostingType',\r\n        'value': '4'\r\n    },\r\n    'operation': 'eq'\r\n  },\r\n  {\r\n    'term': {\r\n      'field': 'PostingType',\r\n        'value': '5'\r\n    },\r\n    'operation': 'eq'\r\n  }];\r\n\r\n  defaultSearchRequest = <TransactionsSearchFilter>{\r\n    filterTerms: this.defaultTransactionFilterTerms,\r\n    filterConjunction: 'or',\r\n    sortTerms: [],\r\n    skip: 0,\r\n    take: 0\r\n  };\r\n\r\n  constructor(\r\n    private insuranceApiService: InsuranceApiService,\r\n    private administrationService: AdministrationService\r\n  ) { }\r\n\r\n  public updateTransactionsData(\r\n    groupdId: string,\r\n    skip: number,\r\n    take: number,\r\n    sortTerms: Array<SortTerm> = new Array<SortTerm>(),\r\n    filterTerms: Array<TransactionFilterTermDto> = new Array<TransactionFilterTermDto>()\r\n  ): Observable<TransactionsDto> {\r\n\r\n    const searchRequest: TransactionsSearchFilter = {\r\n      filterTerms: !!filterTerms && filterTerms.length > 0 ? filterTerms : this.defaultTransactionFilterTerms,\r\n      filterConjunction: 'or',\r\n      sortTerms: !!sortTerms && sortTerms.length > 0 ? sortTerms : this.defaultSortTerms,\r\n      skip: skip,\r\n      take: 0\r\n    };\r\n\r\n    return this.getSearchTransactionsByGroupId(groupdId, searchRequest);\r\n  }\r\n\r\n  public getRevertSummary(transactionId: string): Observable<RevertSummaryDto> {\r\n    return this.insuranceApiService.getRevertSummary(transactionId);\r\n  }\r\n\r\n  public getSearchTransactionsByGroupId(groupdId: string,\r\n    searchRequest: TransactionsSearchFilter): Observable<TransactionsDto> {\r\n\r\n    return this.insuranceApiService.searchTransactionsByGroupId(groupdId, searchRequest);\r\n  }\r\n\r\n  public revertTransaction(transactionId: string): Observable<string> {\r\n    return this.insuranceApiService.revertTransaction(transactionId);\r\n  }\r\n\r\n}\r\n","import { TransactionsGridComponent } from './components/transactions-grid.component';\r\nimport { SharedModule } from '../_shared/shared.module';\r\nimport { TransactionsService } from './services/transactions.service';\r\nimport { CoreModule } from '../_core/core.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { LaddaModule } from 'angular2-ladda';\r\nimport { OrderModule } from 'ngx-order-pipe';\r\nimport { GridModule } from '@progress/kendo-angular-grid';\r\nimport { RouterModule } from '@angular/router';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgbModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    LaddaModule,\r\n    OrderModule,\r\n    GridModule,\r\n    RouterModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    SharedModule,\r\n    CoreModule\r\n  ],\r\n  declarations: [\r\n    TransactionsGridComponent\r\n  ],\r\n\r\n  providers: [TransactionsService]\r\n})\r\n\r\nexport class TransactionsModule { }\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n//   settingsEndpoint:'https://famis-dev.duffandphelps.com/api/settings',\r\n\r\nexport const environment = {\r\n  useAzureAppSettings: false,\r\n\r\n  // AAD Settings\r\n  adalTennant: '781802be-916f-42df-a204-78a2b3144934',\r\n  adalClientId: '3c581814-0bb2-4901-887a-fca4f4246ed5',\r\n  adalExpireOffsetSeconds: 1800,\r\n  adalEndpoints: 'https://duffandphelps.onmicrosoft.com/9bb8cde8-5f4e-4c68-a4ab-ee18bbb51703',\r\n  adalExtraQueryParameter: 'domain_hint=duffandphelps.com',\r\n\r\n  // B2C Settings\r\n  msalResetPasswordPolicy: '',\r\n  msalScope: '',\r\n  msalClient: '',\r\n  msalTenant: '',\r\n  msalSigninSignupPolicy: '',\r\n\r\n  authorizationApiEndpoint: 'https://costofcapital-dev-auth-api.duffandphelps.com',\r\n\r\n  // runtimeApiEndpoint: 'https://famis-dev-runtime-api.duffandphelps.com/api',\r\n  runtimeApiEndpoint: 'https://localhost:44331/api',\r\n  configurationApiEndpoint: 'https://famis-dev-config-api.duffandphelps.com/api',\r\n  // configurationApiEndpoint: 'https://localhost:44330/api',\r\n  settingsEndpoint: '/api/settings',\r\n  aiName: 'dev-us-famis-wa-01',\r\n  aiInstrumentationKey: 'df7e9ff6-0fc1-4f5d-925f-0501e911f62f',\r\n  googleMapAPIKey: 'AIzaSyB7qqtzyuD-W-khRwDYTJmVlnCxxnrR4ws',\r\n  bingMapAPIKey: 'AhGM8PKVdNbv97kMHJqodqc540dHqQ26Y0LU0uczb3WFr_ZPknV9GzmeVrwcIhUA',\r\n  acceptedFileTypes: ['.xlsx', '.docx', '.xls', '.doc', '.pdf', '.jpeg', '.jpg', '.tiff', '.gif', '.png', '.csv', '.zip', '.7z'],\r\n  ssrsURL: 'http://ssrsinternet.southcentralus.cloudapp.azure.com/Reports',\r\n  defaultLanguage: 'en-us',\r\n  reportParameterLimit: 5,\r\n  masterTemplateId: '42BC40FB-D8BF-4C3C-AFA2-D9FE17DD93A6',\r\n  /*\r\n    Adding an additional configurable offset time for the session timeout\r\n    The number \"n\" we add here will get us \"n\" second closer to the ADAL token renewal(forced)\r\n  */\r\n  additionalExpireOffsetSeconds: 900,\r\n  famisSupportEmailAddress: 'DP.FamisSupport@duffandphelps.com'\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.useAzureAppSettings) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","export default \"<button type=\\\"button\\\" [disabled]=\\\"isAddColumn\\\" (click)=\\\"showForm()\\\" class=\\\"btn btn-action btn-small custom-fields\\\">\\r\\n  <i class=\\\"fa fa-plus\\\"></i>\\r\\n</button>\\r\\n<strong> &nbsp; {{i18n.common + 'Add Custom Column' | dynamicTranslate }}</strong>\\r\\n\\r\\n\\r\\n<div *ngIf=\\\"isAddColumn\\\">\\r\\n    <div class=\\\"row buffer-row\\\">\\r\\n        <div class=\\\"col-md-5\\\">\\r\\n          <label>{{i18n.common + 'Column Name' | dynamicTranslate }} </label>\\r\\n          <input [(ngModel)]=\\\"name\\\" class=\\\"form-control\\\">\\r\\n          <div *ngIf=\\\"!isNameValid\\\" class=\\\"alert alert-danger\\\">\\r\\n            {{i18n.common + nameFieldError | dynamicTranslate }}\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-5\\\">\\r\\n          <label>\\r\\n            {{i18n.common + 'Data Type' | dynamicTranslate }}\\r\\n          </label>\\r\\n          <select [(ngModel)]=\\\"dataType\\\" class=\\\"form-control\\\">\\r\\n            <option disabled>Select custom field type</option>\\r\\n            <option *ngFor=\\\"let fieldType of this.dataTypes\\\"  [value]=\\\"fieldType.dataType\\\">{{i18n.common + fieldType.displayName | dynamicTranslate }}</option>\\r\\n          </select>\\r\\n          <div *ngIf=\\\"!isDataTypeValid\\\" class=\\\"alert alert-danger\\\">\\r\\n            {{i18n.common + 'Please select a data type' | dynamicTranslate }}\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n        \\r\\n          <button type=\\\"button\\\" id=\\\"Add-Button\\\" class=\\\"btn btn-small btn-primary form-control\\\" (click)=\\\"submit()\\\"><strong>Add</strong></button>\\r\\n        </div>\\r\\n      </div>\\r\\n</div>\\r\\n\"","export default \"\"","export default \"<div #bingMap style=\\\"position: relative; height: 400px;\\\"></div>\"","export default \"<modal-form [modalTitle]=\\\"modalTitle\\\" [hideSubmit]=\\\"hideSubmit\\\" (modalEvent)=\\\"handleModalEvent($event)\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <ngb-carousel *ngIf=\\\"imageUrlCollection\\\" [interval]=\\\"10000000\\\">\\r\\n                <ng-template ngbSlide *ngFor=\\\"let image of imageUrlCollection\\\">\\r\\n                    <img [src]=\\\"image\\\" alt=\\\"Image alt\\\" class=\\\"carousel-image\\\" />\\r\\n                </ng-template>\\r\\n            </ngb-carousel>\\r\\n        </div>\\r\\n    </div>\\r\\n</modal-form>\"","export default \"<div>\\r\\n    <div class=\\\"modal-title\\\">\\r\\n      <br />\\r\\n      <h1 class=\\\"text-center\\\">{{options.heading.key}}</h1>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <h4 class=\\\"text-center\\\">{{options.body.key}}</h4>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"activeModal.dismiss('false')\\\" *ngIf=\\\"!!options.dismissText\\\">{{options.dismissText.key}}</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-action\\\" (click)=\\\"activeModal.close('true')\\\" *ngIf=\\\"!!options.successText\\\">{{options.successText.key}}</button>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div>\\r\\n    <div class=\\\"modal-title\\\">\\r\\n      <br />\\r\\n      <h1 class=\\\"text-center\\\">{{i18n.common + confirmHeading | dynamicTranslate}}</h1>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <h4 class=\\\"text-center\\\">{{i18n.common + confirmationMessage | dynamicTranslate}}</h4>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"onCancel()\\\">{{i18n.common + 'Cancel' | dynamicTranslate}}</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-action\\\" (click)=\\\"onConfirmed()\\\">{{i18n.common + 'Continue' | dynamicTranslate}}</button>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<button class=\\\"ml-2 btn btn-primary add-record-button d-inline\\\" [disabled]=\\\"disabled\\\" (click)=\\\"open(content)\\\">{{i18n.common + 'Duplicate Record' | dynamicTranslate}}</button>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    {{i18n.common + 'Create duplicate record from selected asset?' | dynamicTranslate}}\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{i18n.common + 'Cancel' | dynamicTranslate }}</button>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"createCopy()\\\">{{i18n.common + 'Create' | dynamicTranslate}}</button>\\r\\n  </div>\\r\\n\\r\\n</ng-template>\\r\\n\"","export default \"\\r\\n  <div *ngIf=\\\"groupsGridBusy\\\">\\r\\n    <i class=\\\"fa fa-spinner fa-spin\\\" aria-hidden=\\\"true\\\"></i>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"groups-detail\\\">\\r\\n    <kendo-grid [resizable]=\\\"true\\\" *ngIf=\\\"!groupsGridBusy\\\" [data]=\\\"gridViewData\\\" [pageSize]=\\\"state.take\\\" [sortable]=\\\"false\\\" [pageable]=\\\"true\\\" [reorderable]=\\\"true\\\"\\r\\n      [pageSize]=\\\"state.take\\\" [skip]=\\\"state.skip\\\" (dataStateChange)=\\\"dataStateChange($event)\\\" [height]=\\\"height\\\" >\\r\\n\\r\\n      <kendo-grid-column [reorderable]=\\\"true\\\" field=\\\"groupName\\\" [title]=\\\"i18n.dashboard + 'Group Name' | dynamicTranslate\\\">\\r\\n      </kendo-grid-column>\\r\\n      <kendo-grid-column [reorderable]=\\\"true\\\" field=\\\"location\\\" [title]=\\\" i18n.dashboard + 'Location' | dynamicTranslate\\\">\\r\\n      </kendo-grid-column>\\r\\n      <kendo-grid-column [reorderable]=\\\"true\\\" field=\\\"groupNumber\\\" [title]=\\\"i18n.dashboard + 'Group Number' | dynamicTranslate\\\">\\r\\n      </kendo-grid-column>\\r\\n      <kendo-grid-column [reorderable]=\\\"true\\\" [title]=\\\"i18n.dashboard + 'Last Update' | dynamicTranslate\\\">\\r\\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n          {{dataItem.lastUpdated | localTime }}\\r\\n        </ng-template>\\r\\n      </kendo-grid-column>\\r\\n      <kendo-grid-column [reorderable]=\\\"true\\\" field=\\\"recordCounts\\\" [title]=\\\"i18n.dashboard + 'Record Count' | dynamicTranslate\\\">\\r\\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n          <div *ngFor=\\\"let recordCount of dataItem.recordCounts\\\">\\r\\n            <div class=\\\"record-count pull-left\\\">\\r\\n              <span>{{getTypeName(recordCount.type)}}: {{recordCount.count | localizedNumber}}</span>\\r\\n            </div>\\r\\n            <br />\\r\\n          </div>\\r\\n        </ng-template>\\r\\n      </kendo-grid-column>\\r\\n      <kendo-grid-column [reorderable]=\\\"false\\\" [title]=\\\"i18n.dashboard + 'Actions' | dynamicTranslate\\\">\\r\\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n          <a class=\\\"clickable-link\\\" (click)='navigateToProject(dataItem.id,$event)'>{{i18n.dashboard + 'View Project' | dynamicTranslate}}</a>\\r\\n        </ng-template>\\r\\n      </kendo-grid-column>\\r\\n    </kendo-grid>\\r\\n\"","export default \"<form [class.isModal]=\\\"isModal\\\" [formGroup]=\\\"formGroup\\\" #assetForm=\\\"ngForm\\\">\\r\\n\\r\\n  <div class=\\\"row form-body\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"generalFormFields.length > 0\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <h4 class=\\\"modal-title pb-3\\\">{{i18n.common + 'General Information' | dynamicTranslate }}</h4>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"generalFormFields.length > 0\\\">\\r\\n\\r\\n        <ng-container\\r\\n          *ngFor=\\\"let field of defaultFormFields | orderBy: 'order'; let i=index; let odd=odd; let even=even;\\\">\\r\\n          <div class=\\\"col-md-6\\\" *ngIf=\\\"even\\\">\\r\\n\\r\\n            <dynamic-field [sourceTranslationKey]=\\\"getTranslationKey(field.translationKey)\\\" [field]=\\\"field\\\" [form]=\\\"formGroup\\\"\\r\\n              [key]='field.displayName' [imageEntityType]=\\\"imageEntityType\\\" [entityId]=\\\"assetDto.id\\\"></dynamic-field>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-md-6\\\" *ngIf=\\\"odd\\\">\\r\\n\\r\\n            <dynamic-field [sourceTranslationKey]=\\\"getTranslationKey(field.translationKey)\\\" [field]=\\\"field\\\" [form]=\\\"formGroup\\\"\\r\\n              [key]='field.displayName' [imageEntityType]=\\\"imageEntityType\\\" [entityId]=\\\"assetDto.id\\\"></dynamic-field>\\r\\n\\r\\n          </div>\\r\\n\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container\\r\\n          *ngFor=\\\"let field of generalFormFields | orderBy: 'displayName'; let i=index; let odd=odd; let even=even;\\\">\\r\\n          <div class=\\\"col-md-6\\\" *ngIf=\\\"even\\\">\\r\\n\\r\\n            <dynamic-field [sourceTranslationKey]=\\\"getTranslationKey(field.translationKey)\\\" [field]=\\\"field\\\" [form]=\\\"formGroup\\\"\\r\\n              [key]='field.displayName' [imageEntityType]=\\\"imageEntityType\\\" [entityId]=\\\"assetDto.id\\\"></dynamic-field>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-md-6\\\" *ngIf=\\\"odd\\\">\\r\\n\\r\\n            <dynamic-field [sourceTranslationKey]=\\\"getTranslationKey(field.translationKey)\\\" [field]=\\\"field\\\" [form]=\\\"formGroup\\\"\\r\\n              [key]='field.displayName' [imageEntityType]=\\\"imageEntityType\\\" [entityId]=\\\"assetDto.id\\\"></dynamic-field>\\r\\n\\r\\n          </div>\\r\\n\\r\\n        </ng-container>\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"generalFormFields.length > 0\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <h4 class=\\\"modal-title pb-3\\\">{{i18n.common + 'Depreciation' | dynamicTranslate }}</h4>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"depreciationFields.length > 0\\\">\\r\\n        <ng-container\\r\\n          *ngFor=\\\"let field of depreciationFields | orderBy: 'displayName'; let i=index; let odd=odd; let even=even;\\\">\\r\\n          <div class=\\\"col-md-6\\\" *ngIf=\\\"even\\\">\\r\\n            <dynamic-field [sourceTranslationKey]=\\\"getTranslationKey(field.translationKey)\\\" [field]=\\\"field\\\" [form]=\\\"formGroup\\\"\\r\\n              [key]='field.displayName' [imageEntityType]=\\\"imageEntityType\\\" [entityId]=\\\"assetDto.id\\\"></dynamic-field>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6\\\" *ngIf=\\\"odd\\\">\\r\\n            <dynamic-field [sourceTranslationKey]=\\\"getTranslationKey(field.translationKey)\\\" [field]=\\\"field\\\" [form]=\\\"formGroup\\\"\\r\\n              [key]='field.displayName' [imageEntityType]=\\\"imageEntityType\\\" [entityId]=\\\"assetDto.id\\\"></dynamic-field>\\r\\n          </div>\\r\\n        </ng-container>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"customFormFields.length > 0\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <h4 class=\\\"modal-title pb-3\\\">{{i18n.common + 'Custom Fields' | dynamicTranslate }}</h4>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"customFormFields.length > 0\\\">\\r\\n\\r\\n        <ng-container\\r\\n          *ngFor=\\\"let field of customFormFields | orderBy: 'displayName'; let i=index; let odd=odd; let even=even;\\\">\\r\\n          <div class=\\\"col-md-6\\\" *ngIf=\\\"even\\\">\\r\\n\\r\\n            <dynamic-field [sourceTranslationKey]=\\\"i18n.customField\\\" [field]=\\\"field\\\" [form]=\\\"formGroup\\\"\\r\\n              [key]='field.displayName' [imageEntityType]=\\\"imageEntityType\\\" [entityId]=\\\"assetDto.id\\\" \\r\\n              (customFieldLabelChange)=\\\"handleCustomFieldLabelChange($event)\\\"></dynamic-field>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-md-6\\\" *ngIf=\\\"odd\\\">\\r\\n\\r\\n            <dynamic-field [sourceTranslationKey]=\\\"i18n.customField\\\" [field]=\\\"field\\\" [form]=\\\"formGroup\\\"\\r\\n              [key]='field.displayName' [imageEntityType]=\\\"imageEntityType\\\" [entityId]=\\\"assetDto.id\\\"\\r\\n              (customFieldLabelChange)=\\\"handleCustomFieldLabelChange($event)\\\"></dynamic-field>\\r\\n\\r\\n          </div>\\r\\n\\r\\n        </ng-container>\\r\\n      </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"footer\\\">\\r\\n    <ng-container *ngIf=\\\"isReadOnly === false\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn btn-default\\\"\\r\\n        (click)=\\\"cancel()\\\">{{i18n.common + 'Cancel' | dynamicTranslate }} </button>\\r\\n      <button *ngIf=\\\"isModal === false\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"keepFormOpen()\\\"\\r\\n        [ladda]=\\\"isSaving\\\">{{i18n.common + 'Save' | dynamicTranslate }} </button>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveAndClose()\\\"\\r\\n        [ladda]=\\\"isSaving\\\">{{i18n.common + 'Save And Close' | dynamicTranslate}}</button>\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\\"isReadOnly === true\\\">\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn btn-default\\\" (click)=\\\"cancel()\\\">{{i18n.common + 'Close' | dynamicTranslate }}\\r\\n      </button>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n</form>\"","export default \"<ng-container *ngFor=\\\"let value of valuesToSelect; index as i;\\\">\\r\\n\\r\\n    <ng-container *ngIf=\\\"i===0\\\">\\r\\n\\r\\n        <kendo-combobox [textField]=\\\"'displayName'\\\" [(ngModel)]=\\\"selectedItems[0]\\\" [valueField]=\\\"'key'\\\" [data]=\\\"options\\\" [suggest]=\\\"true\\\"\\r\\n            [placeholder]=\\\"\\\" (valueChange)=\\\"onComboboxChange(i, $event)\\\" ></kendo-combobox>\\r\\n        <div class=\\\"errorMessage\\\" *ngIf=\\\"required && !selectedItems[0]\\\"><b>{{i18n.cascading + 'required' |translate}}</b></div>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"i>0\\\">\\r\\n\\r\\n        <p class=\\\"mt-2\\\">{{i18n.cascading + value.displayName | dynamicTranslate}}</p>\\r\\n\\r\\n\\r\\n        <kendo-combobox *ngIf=\\\"selectedItems[i-1]\\\" [(ngModel)]=\\\"selectedItems[i]\\\" [textField]=\\\"'displayName'\\\" [valueField]=\\\"'key'\\\"\\r\\n            [data]=\\\"selectedItems[i-1].options\\\" [suggest]=\\\"true\\\" [placeholder]=\\\"\\\" (valueChange)=\\\"onComboboxChange(i, $event)\\\"></kendo-combobox>\\r\\n        <kendo-combobox [disabled]='true' *ngIf=\\\"!selectedItems[i-1]\\\"> </kendo-combobox>\\r\\n        <div class=\\\"errorMessage\\\" *ngIf=\\\"required && !selectedItems[i]\\\"><b>{{i18n.cascading + 'required' |translate}}</b></div>\\r\\n\\r\\n    </ng-container>\\r\\n    \\r\\n</ng-container>\"","export default \"<div class=\\\"form-group\\\" [formGroup]=\\\"form\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n\\r\\n\\r\\n      <label *ngIf=\\\"sourceTranslationKey !== i18n.customField\\\" [attr.for]=\\\"field.id\\\">{{sourceTranslationKey + field.displayName | dynamicTranslate }}</label>\\r\\n      <ng-container *ngIf=\\\"sourceTranslationKey === i18n.customField\\\">\\r\\n        <label [attr.for]=\\\"field.id\\\" contentEditable=\\\"true\\\" style=\\\"cursor: text;\\\" (blur)=\\\"customLabelChange($event, field)\\\">{{field.displayName}}</label>&nbsp;<i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\r\\n      </ng-container>\\r\\n\\r\\n      <div [ngSwitch]=\\\"field.type\\\">\\r\\n\\r\\n        <input type=\\\"hidden\\\" class=\\\"form-control\\\"  [formControlName]=\\\"field.id\\\" *ngSwitchCase=\\\"fieldTypes.Hidden\\\">\\r\\n\\r\\n\\r\\n        <div *ngSwitchCase=\\\"fieldTypes.Boolean\\\" [attr.disabled]=\\\"field.isReadOnly\\\" class=\\\"checkbox k-form-field\\\">\\r\\n          <input type=\\\"checkbox\\\" [attr.disabled]=\\\"field.isReadOnly\\\" [formControlName]=\\\"field.id\\\" [id]=\\\"field.id\\\"\\r\\n            [tabindex]=\\\"field.order\\\" [id]=\\\"field.id\\\" class=\\\"k-checkbox\\\">\\r\\n          <label class=\\\"k-checkbox-label\\\" [for]=\\\"field.id\\\"></label>\\r\\n        </div>\\r\\n\\r\\n        <image-upload-field [attr.disabled]=\\\"field.isReadOnly\\\" *ngSwitchCase=\\\"fieldTypes.Image\\\" [imageEntityType]=\\\"imageEntityType\\\"\\r\\n          [entityId]=\\\"entityId\\\"></image-upload-field>\\r\\n\\r\\n        <input class=\\\"form-control\\\" [attr.disabled]=\\\"field.isReadOnly\\\" *ngSwitchCase=\\\"fieldTypes.ReadOnly\\\"\\r\\n          [formControlName]=\\\"field.id\\\" [tabindex]=\\\"field.order\\\" [type]=\\\"field.type\\\" disabled=\\\"true\\\">\\r\\n\\r\\n        <input class=\\\"form-control\\\" [attr.disabled]=\\\"field.isReadOnly\\\" *ngSwitchCase=\\\"fieldTypes.String\\\"\\r\\n          [formControlName]=\\\"field.id\\\" [tabindex]=\\\"field.order\\\" [type]=\\\"field.type\\\">\\r\\n\\r\\n        <span *ngSwitchCase=\\\"fieldTypes.Integer\\\" class=\\\"hide-increment-controls\\\">\\r\\n          <kendo-numerictextbox [attr.disabled]=\\\"field.isReadOnly\\\" [formControlName]=\\\"field.id\\\"\\r\\n          [decimals]=\\\"0\\\" [format]=\\\"'G'\\\" [tabindex]=\\\"field.order\\\" [min]=\\\"field.min\\\"></kendo-numerictextbox>\\r\\n        </span>\\r\\n\\r\\n        <span *ngSwitchCase=\\\"fieldTypes.Double\\\" class=\\\"hide-increment-controls\\\">\\r\\n          <kendo-numerictextbox [attr.disabled]=\\\"field.isReadOnly\\\" [formControlName]=\\\"field.id\\\"\\r\\n          [decimals]=\\\"field.decimalLength\\\" [format]=\\\"field.format\\\" [style.width]=\\\"'250px'\\\"\\r\\n          [tabindex]=\\\"field.order\\\" [min]=\\\"field.min\\\"></kendo-numerictextbox>\\r\\n        </span>\\r\\n\\r\\n        <span *ngSwitchCase=\\\"fieldTypes.Percent\\\" class=\\\"hide-increment-controls\\\">\\r\\n          <kendo-numerictextbox [attr.disabled]=\\\"field.isReadOnly\\\" [formControlName]=\\\"field.id\\\"\\r\\n          [decimals]=\\\"field.decimalLength\\\" [format]=\\\"field.format\\\" [style.width]=\\\"'250px'\\\" [step]=\\\"1\\\" \\r\\n          [tabindex]=\\\"field.order\\\" [min]=\\\"field.min\\\"></kendo-numerictextbox>\\r\\n        </span>\\r\\n\\r\\n       <!--  <kendo-numerictextbox [attr.disabled]=\\\"field.isReadOnly\\\" *ngSwitchCase=\\\"fieldTypes.Percent\\\" [formControlName]=\\\"field.id\\\"\\r\\n         [decimals]=\\\"field.decimalLength\\\" [format]=\\\"field.format\\\" [style.width]=\\\"'250px'\\\"\\r\\n         [tabindex]=\\\"field.order\\\"></kendo-numerictextbox> -->\\r\\n\\r\\n\\r\\n        <div *ngSwitchCase=\\\"fieldTypes.DateTime\\\">\\r\\n           <kendo-datepicker *ngIf=\\\"!field.format\\\" [attr.disabled]=\\\"field.isReadOnly\\\" [formControlName]=\\\"field.id\\\" [tabindex]=\\\"field.order\\\" (valueChange)=\\\"onChange($event)\\\" [(ngModel)]=\\\"dateValue\\\"></kendo-datepicker>\\r\\n           <kendo-datepicker *ngIf=\\\"field.format\\\" [format]=\\\"field.format\\\" [attr.disabled]=\\\"field.isReadOnly\\\" [formControlName]=\\\"field.id\\\" [tabindex]=\\\"field.order\\\" (valueChange)=\\\"onChange($event)\\\" [(ngModel)]=\\\"dateValue\\\"></kendo-datepicker>\\r\\n        </div>\\r\\n\\r\\n        <cascading-combo-box *ngSwitchCase=\\\"fieldTypes.CascadingComboBox\\\" [attr.disabled]=\\\"field.isReadOnly\\\"\\r\\n          [formControlName]=\\\"field.id\\\" [valuesToSelect]=\\\"field.cascadedValues\\\" [options]=\\\"field.cascadedValueOptions\\\" [required]=\\\"field.required\\\"></cascading-combo-box>\\r\\n\\r\\n        <div *ngSwitchCase=\\\"fieldTypes.DropDown\\\">\\r\\n          <select [attr.disabled]=\\\"field.isReadOnly\\\" class=\\\"form-control\\\" [formControlName]=\\\"field.id\\\">\\r\\n            <option *ngFor=\\\"let option of field.options\\\" [value]=\\\"option.key\\\">{{sourceTranslationKey +\\r\\n              option.displayName | dynamicTranslate}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div *ngSwitchCase=\\\"fieldTypes.EmptySpace\\\">\\r\\n          &nbsp;\\r\\n       </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"errorMessage\\\" *ngIf=\\\"!isValid && field.required && field.type !== fieldTypes.CascadingComboBox\\\">{{sourceTranslationKey + field.displayName + '\\r\\n        is required.' | dynamicTranslate}}</div>\\r\\n      <div class=\\\"errorMessage\\\" *ngIf=\\\"!isValid && hasMinProperty\\\">\\r\\n        {{sourceTranslationKey + 'Field must have a minimum value of ' | dynamicTranslate}}{{field.min + '.'}}\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-2\\\">\\r\\n      <button *ngIf=\\\"canRemove\\\" (click)=\\\"remove()\\\" type=\\\"button\\\" class=\\\"btn btn-action btn-small\\\">\\r\\n        <i class=\\\"fa fa-minus\\\"></i>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<ng-container *ngIf=\\\"!disabled\\\">\\r\\n  <input type=\\\"file\\\" (change)=\\\"fileChange($event)\\\" name=\\\"file\\\" accept=\\\".png,.jpeg,.gif,.jpg,.bmp,.svg,.apng\\\" class=\\\"form-control-file\\\"\\r\\n    id=\\\"exampleInputFile\\\" aria-describedby=\\\"fileHelp\\\">\\r\\n  \\r\\n  <button type=\\\"button\\\" class=\\\"mt-3 mb-3\\\" (click)=\\\"upload()\\\" [disabled]=\\\"!uploadImageDto.file\\\"> {{i18n.common + 'Add Image' | dynamicTranslate }} </button>\\r\\n  <br>\\r\\n  <div class=\\\"row edit-image-row\\\">\\r\\n    <div class=\\\"col edit-image-thumbnail\\\" *ngFor=\\\"let image of images\\\">\\r\\n      <div class=\\\"edit-image-container\\\">\\r\\n        <a>\\r\\n          <img alt=\\\"Image alt\\\" width=\\\"250\\\" class=\\\"mt-3\\\" [src]='image.url' (click)=\\\"showImageCarouselOnClick(image.url)\\\" />\\r\\n        </a>\\r\\n      </div>\\r\\n      <div class=\\\"form-group edit-image-inputs\\\">\\r\\n        <input type=\\\"number\\\" value=\\\"{{image.index}}\\\" (blur)=\\\"onInputBlur($event, images.indexOf(image))\\\">\\r\\n        <input class=\\\"delete\\\" type=\\\"button\\\" value=\\\"Delete\\\" (click)=\\\"delete(image)\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-container>\\r\\n<ng-container *ngIf=\\\"disabled\\\">\\r\\n  <div class=\\\"tinted-white\\\">\\r\\n    <p>{{i18n.common + 'You can add images when the entity has been created' | dynamicTranslate }}.</p>\\r\\n  </div>\\r\\n</ng-container>\"","export default \"<div class=\\\"famis-grid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <h2 *ngIf=\\\"!famisGrid.hideTitle && famisGrid.name && famisGrid.name.length > 0\\\">{{ i18n.common + famisGrid.name | dynamicTranslate }}</h2>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n\\r\\n\\r\\n      <grid-column-selector-modal class=\\\"pull-right\\\"\\r\\n        *ngIf=\\\"selectedHeaders.length > 0 && canSelectColumns\\\"\\r\\n        [sourceTranslationKey]=\\\"famisGrid.translationBaseKey\\\"\\r\\n        [selectedColumns]=\\\"famisGrid.selectedHeaders\\\"\\r\\n        [headersAvailable]=\\\"famisGrid.columnHeaders\\\"\\r\\n        (columnSelectionEvent)=\\\"onColumnSelection($event)\\\"\\r\\n        [showAddCustomColumn]=\\\"showAddCustomColumn\\\"\\r\\n        [groupId]=\\\"famisGrid.groupId\\\"\\r\\n        [assetFileId]=\\\"famisGrid.fileId\\\"\\r\\n        [dataSource]=\\\"famisGrid.dataSource\\\">\\r\\n      </grid-column-selector-modal>\\r\\n\\r\\n      \\r\\n      <button *ngIf=\\\"canInGridEditCells\\\" type=\\\"button\\\" class=\\\"btn btn-sm btn-primary mb-2 pull-right save-in-grid-button\\\" (click)=\\\"inGridSave()\\\" [ladda]=\\\"isSaving\\\" [disabled]=\\\"editedRecords.length === 0\\\">\\r\\n        {{ i18n.common + 'Save Edits' | dynamicTranslate }}</button>\\r\\n\\r\\n        <span *ngIf=\\\"canInGridEditCells && editedRecordsWithErrors.length > 0\\\" class=\\\"edit-record-errors pull-right pr-3 pb-1\\\" (click)=\\\"viewInGridSaveErrors()\\\" >\\r\\n          {{ i18n.common + 'Edited records with errors: ' | dynamicTranslate }} {{editedRecordsWithErrors.length}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div>\\r\\n        <kendo-grid\\r\\n          *ngIf=\\\"gridSettingsLoaded\\\"\\r\\n          [data]=\\\"view | async\\\"\\r\\n          [rowHeight]=\\\"famisGrid.scrollingMode == 'virtual' ? 24 : null\\\"\\r\\n          [height]=\\\"famisGrid.height\\\"\\r\\n          [scrollable]=\\\"famisGrid.scrollingMode\\\"\\r\\n          [skip]=\\\"state.skip\\\"\\r\\n          [pageSize]=\\\"state.take\\\"\\r\\n          [reorderable]=\\\"true\\\"\\r\\n          [detailRowHeight]=\\\"famisGrid.scrollingMode == 'virtual' ? 24 : null\\\"\\r\\n          [rowClass]=\\\"rowCallback\\\"\\r\\n          \\r\\n          [sortable]=\\\"canSort\\\"\\r\\n          [sort]=\\\"sort\\\"\\r\\n          [filter]=\\\"state.filter\\\"\\r\\n          [filterable]=\\\"canFilter\\\"\\r\\n          [resizable]=\\\"true\\\"\\r\\n          (filterChange)=\\\"filterChange($event)\\\"\\r\\n          (sortChange)=\\\"sortChange($event)\\\"\\r\\n          [selectable]=\\\"canSelect\\\"\\r\\n          [kendoGridSelectBy]=\\\"famisGrid.columnToSelectBy\\\"\\r\\n          [selectedKeys]=\\\"selectedRows\\\"\\r\\n          (selectionChange)=\\\"gridSelectionChange($event)\\\"\\r\\n          (cellClick)=\\\"cellClick($event)\\\"\\r\\n          (cellClose)=\\\"cellClose($event)\\\"\\r\\n          (columnReorder)=\\\"onColumnReorder($event)\\\"\\r\\n          (columnResize)=\\\"onColumnResize($event)\\\"\\r\\n          [navigable]=\\\"true\\\"\\r\\n          (pageChange)=\\\"pageChange($event)\\\"\\r\\n          [loading]=\\\"dataLoading\\\"\\r\\n        >\\r\\n          <kendo-grid-checkbox-column *ngIf=\\\"canSelect\\\" [reorderable]=\\\"false\\\" [width]=\\\"25\\\"></kendo-grid-checkbox-column>\\r\\n\\r\\n          <ng-container *ngIf=\\\"showDashboarGroupSubGrid\\\">\\r\\n              <div *kendoGridDetailTemplate=\\\"let dataItem\\\"><dashboard-groups [id]=\\\"dataItem.id\\\"></dashboard-groups></div>\\r\\n          </ng-container>\\r\\n          \\r\\n          <div *ngIf=\\\"!showDashboarGroupSubGrid\\\">\\r\\n            <kendo-grid-column\\r\\n              [reorderable]=\\\"false\\\"\\r\\n              [width]=\\\"225\\\"\\r\\n              title=\\\"{{i18n.common + 'Actions' | dynamicTranslate }}\\\"\\r\\n              class=\\\"grid-actions\\\"\\r\\n              *ngIf=\\\"famisGrid.actions && famisGrid.actions.length > 0\\\"\\r\\n            >\\r\\n              <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                <div style=\\\"max-height: 19px\\\">\\r\\n                  <span class=\\\"grid-action-item\\\" *ngFor=\\\"let action of famisGrid.actions\\\">\\r\\n                    <a *ngIf=\\\"action !== 'Map' && action !== 'Image'\\\" (click)=\\\"actionClicked(rowIndex, dataItem, action)\\\">\\r\\n                      {{ i18n.common + action | dynamicTranslate }}\\r\\n                    </a>\\r\\n                  </span>\\r\\n\\r\\n                  <span class=\\\"grid-action-item\\\" *ngFor=\\\"let action of famisGrid.actions\\\">\\r\\n                    <a\\r\\n                      *ngIf=\\\"action === 'Map' && dataItem.latitude !== null && dataItem.longitude !== null\\\"\\r\\n                      (click)=\\\"actionClicked(rowIndex, dataItem, action)\\\"\\r\\n                    >\\r\\n                      {{ i18n.common + action | dynamicTranslate }}\\r\\n                    </a>\\r\\n\\r\\n                    <a class=\\\"disabled-action\\\" *ngIf=\\\"action === 'Map' && dataItem.latitude == null && dataItem.longitude == null\\\">\\r\\n                      {{ i18n.common + action | dynamicTranslate }}\\r\\n                    </a>\\r\\n\\r\\n                    <a *ngIf=\\\"action === 'Image'\\\"> <view-image [imageCollection]=\\\"dataItem.imageCollection\\\"></view-image> </a>\\r\\n                  </span>\\r\\n                </div>\\r\\n              </ng-template>\\r\\n            </kendo-grid-column>\\r\\n          </div>\\r\\n          \\r\\n          <ng-container *ngFor=\\\"let column of selectedHeaders\\\">\\r\\n            <kendo-grid-column\\r\\n              [reorderable]=\\\"true\\\"\\r\\n              [width]=\\\"225\\\"\\r\\n              *ngIf=\\\"column.fieldType === 'count'\\\"\\r\\n              field=\\\"{{column.name}}\\\"\\r\\n              format=\\\"{{column.format}}\\\"\\r\\n              title=\\\"{{getColumnTitle(column)}}\\\"\\r\\n              editable=\\\"{{column.isEditable}}\\\"\\r\\n            >\\r\\n              <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                <ng-template kendoGridFilterMenuTemplate let-filter let-column=\\\"column\\\" let-filterService=\\\"filterService\\\">\\r\\n                  <kendo-grid-numeric-filter-menu [column]=\\\"column\\\" [filter]=\\\"filter\\\" [filterService]=\\\"filterService\\\">\\r\\n                    <kendo-filter-eq-operator></kendo-filter-eq-operator>\\r\\n                    <kendo-filter-gt-operator></kendo-filter-gt-operator>\\r\\n                    <kendo-filter-lt-operator></kendo-filter-lt-operator>\\r\\n                    <kendo-filter-gte-operator></kendo-filter-gte-operator>\\r\\n                    <kendo-filter-lte-operator></kendo-filter-lte-operator>\\r\\n                    <kendo-filter-neq-operator></kendo-filter-neq-operator>\\r\\n                    <kendo-filter-isnull-operator></kendo-filter-isnull-operator>\\r\\n                    <kendo-filter-isnotnull-operator></kendo-filter-isnotnull-operator>\\r\\n                  </kendo-grid-numeric-filter-menu>\\r\\n                </ng-template>\\r\\n                \\r\\n                <div class=\\\"btn-circle\\\">{{ dataItem[column.name] }}</div>\\r\\n              </ng-template>\\r\\n            </kendo-grid-column>\\r\\n\\r\\n            <kendo-grid-column\\r\\n              [editor]=\\\"column.fieldType\\\"\\r\\n              [reorderable]=\\\"true\\\"\\r\\n              *ngIf=\\\"column.fieldType !== 'template' && column.fieldType !== 'buildingAttribute' && column.fieldType !== 'count'\\\"\\r\\n              field=\\\"{{column.name}}\\\"\\r\\n              [width]=\\\"column.width\\\"\\r\\n              format=\\\"{{column.format}}\\\"\\r\\n              title=\\\"{{getColumnTitle(column)}}\\\"\\r\\n              editable=\\\"{{column.isEditable}}\\\"\\r\\n            >\\r\\n              <ng-template kendoGridFilterMenuTemplate let-filter let-filterService=\\\"filterService\\\">\\r\\n                <grid-filter\\r\\n                  [fieldType]=\\\"column.fieldType\\\"\\r\\n                  [filter]=\\\"filter\\\"\\r\\n                  [textField]=\\\"column.name\\\"\\r\\n                  [valueField]=\\\"column.name\\\"\\r\\n                  [filterService]=\\\"filterService\\\"\\r\\n                  [enumOptions]=\\\"column.enumOptions\\\"\\r\\n                  [isNullable]=\\\"column.isNullable\\\"\\r\\n                >\\r\\n                </grid-filter>\\r\\n              </ng-template>\\r\\n\\r\\n              <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                <div style=\\\"max-height: 19px\\\">\\r\\n                  <ng-container *ngIf=\\\"column.fieldType === fieldTypes.String || column.fieldType === fieldTypes.DropDown\\\"> {{ dataItem[column.name] }} </ng-container>\\r\\n                  <div style=\\\"text-align:center\\\">\\r\\n                    <ng-container *ngIf=\\\"(column.fieldType === fieldTypes.Integer || column.fieldType === fieldTypes.Double) && (column.name==='displayId')\\\" >\\r\\n                      {{ dataItem[column.name] | localizedNumber }}\\r\\n                    </ng-container>\\r\\n                  </div>\\r\\n                  <div style=\\\"text-align:right\\\">\\r\\n                    <ng-container *ngIf=\\\"(column.fieldType === fieldTypes.Integer || column.fieldType === fieldTypes.Double) && (column.name!='displayId')\\\" >\\r\\n                      {{ dataItem[column.name] | localizedNumber }}\\r\\n                    </ng-container>\\r\\n                  </div>\\r\\n                  <ng-container *ngIf=\\\"column.fieldType === fieldTypes.DateTime\\\"> {{ dataItem[column.name] | localizedDate }} </ng-container>\\r\\n                  <ng-container *ngIf=\\\"column.fieldType === fieldTypes.DateWithTimeStamp\\\"> {{ dataItem[column.name] | localTime }} </ng-container>\\r\\n                  <ng-container *ngIf=\\\"column.fieldType === fieldTypes.Percent\\\"> {{ dataItem[column.name] | localizedPercent }} </ng-container>\\r\\n                </div>\\r\\n              </ng-template>\\r\\n            </kendo-grid-column>\\r\\n\\r\\n            <!-- TODO: Support passing template to shared grid component -->\\r\\n            <kendo-grid-column\\r\\n              [editor]=\\\"column.fieldType\\\"\\r\\n              [reorderable]=\\\"true\\\"\\r\\n              *ngIf=\\\"column.fieldType === 'template'\\\"\\r\\n              field=\\\"{{column.name}}\\\"\\r\\n              format=\\\"{{column.format}}\\\"\\r\\n              title=\\\"{{getColumnTitle(column)}}\\\"\\r\\n              [filter]=\\\"column.fieldType\\\"\\r\\n              editable=\\\"{{column.isEditable}}\\\"\\r\\n            >\\r\\n              <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                <div style=\\\"width:100%; margin: auto;  height:100%; white-space:normal;\\\">\\r\\n                  <div style=\\\"padding:20px; float:left; width:25%; height:100%;\\\">\\r\\n                    {{ i18n.building + dataItem[column.name].groupDescription | dynamicTranslate }} /\\r\\n                    {{ i18n.building + dataItem[column.name].categoryDescription | dynamicTranslate }} ({{ dataItem[column.name].categoryCode }})\\r\\n                    \\r\\n                  </div>\\r\\n                  \\r\\n                  <div style=\\\"float: left; width:75%; padding:20px;\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                          <h4>Criteria</h4>\\r\\n                          <span *ngFor=\\\"let criteria of dataItem[column.name].criteriaSummary\\\">\\r\\n                            <span>\\r\\n                              <strong>{{ i18n.building + criteria.description | dynamicTranslate }}</strong> <span *ngIf=\\\"criteria.value\\\">:</span>\\r\\n                              {{ criteria.value }}</span>\\r\\n                              <br />\\r\\n                            </span>\\r\\n                            <span *ngIf=\\\"dataItem[column.name].quantity\\\">\\r\\n                            <strong>{{i18n.building + 'Quantity' | dynamicTranslate }}</strong>: \\r\\n                            {{dataItem[column.name].quantity}}\\r\\n                          </span>\\r\\n                          </div>\\r\\n                      <div class=\\\"col-md-6\\\">\\r\\n                        <ng-container *ngIf=\\\"dataItem[column.name].adjustmentSummary && dataItem[column.name].adjustmentSummary.length > 0\\\">\\r\\n                          <h4>Adjustments</h4>\\r\\n                          <span *ngFor=\\\"let criteria of dataItem[column.name].adjustmentSummary\\\">\\r\\n                            <span *ngIf=\\\"criteria.value\\\">\\r\\n                              <strong>{{ i18n.building + criteria.description | dynamicTranslate }}</strong> \\r\\n                              <span *ngIf=\\\"criteria.value\\\">:</span>\\r\\n                              {{ criteria.value }}</span> \\r\\n                              <br />\\r\\n                            </span>\\r\\n                                  <span *ngIf=\\\"dataItem[column.name].adjustmentSummary\\\">\\r\\n                                    <strong>{{ i18n.building + 'Total Cost' | dynamicTranslate }}</strong>\\r\\n                                    <span *ngIf=\\\"dataItem[column.name].adjustmentSummary\\\">: </span>{{ dataItem[column.name].totalCost }}\\r\\n                          </span>\\r\\n                        </ng-container>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </ng-template>\\r\\n            </kendo-grid-column>\\r\\n\\r\\n            <kendo-grid-column\\r\\n              [editor]=\\\"column.fieldType\\\"\\r\\n              [reorderable]=\\\"true\\\"\\r\\n              *ngIf=\\\"column.fieldType === 'buildingAttribute'\\\"\\r\\n              field=\\\"{{column.name}}\\\"\\r\\n              format=\\\"{{column.format}}\\\"\\r\\n              title=\\\"{{getColumnTitle(column)}}\\\"\\r\\n              [filter]=\\\"column.fieldType\\\"\\r\\n              editable=\\\"{{column.isEditable}}\\\"\\r\\n            >\\r\\n              <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                <div class=\\\"building-attribute-values\\\">\\r\\n                  <div class=\\\"value-item\\\" *ngFor=\\\"let item of (dataItem['valueSummary'] | orderBy: 'description')\\\">\\r\\n                    <div class=\\\"value-item\\\">\\r\\n                      <span class=\\\"label\\\">{{ item.description }}</span> <span class=\\\"label\\\">Percent:</span> <span>{{ item.value }}</span>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </ng-template>\\r\\n            </kendo-grid-column>\\r\\n          </ng-container>\\r\\n\\r\\n          <div *ngIf=\\\"showDashboarGroupSubGrid\\\">\\r\\n            <kendo-grid-column\\r\\n              [reorderable]=\\\"false\\\"\\r\\n              [width]=\\\"225\\\"\\r\\n              title=\\\"{{i18n.common + 'Actions' | dynamicTranslate }}\\\"\\r\\n              class=\\\"grid-actions\\\"\\r\\n              *ngIf=\\\"famisGrid.actions && famisGrid.actions.length > 0\\\"\\r\\n            >\\r\\n              <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                <span class=\\\"grid-action-item\\\" *ngFor=\\\"let action of famisGrid.actions\\\">\\r\\n                  <a *ngIf=\\\"action === 'View Project' && action !== 'Map' && action !== 'Image'\\\" (click)=\\\"actionClicked(rowIndex, dataItem, action)\\\">\\r\\n                    {{ i18n.common + action | dynamicTranslate }}\\r\\n                  </a>\\r\\n                </span>\\r\\n              </ng-template>\\r\\n            </kendo-grid-column>\\r\\n          </div>\\r\\n          \\r\\n          <ng-container *ngIf=\\\"famisGrid.gridSubGridData && famisGrid.gridSubGridData.subGridData.length\\\">\\r\\n            <div *kendoGridDetailTemplate=\\\"let dataItem\\\">\\r\\n              <famis-sub-grid\\r\\n                [translationBaseKey]=\\\"famisGrid.translationBaseKey\\\"\\r\\n                [dataItem]=\\\"dataItem\\\"\\r\\n                [data]=\\\"famisGrid.gridSubGridData\\\"\\r\\n              ></famis-sub-grid>\\r\\n            </div>\\r\\n          </ng-container>\\r\\n\\r\\n          \\r\\n          <kendo-grid-translation> </kendo-grid-translation>\\r\\n        </kendo-grid>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col text-right\\\" *ngIf=\\\"!hideTableCounts\\\">\\r\\n      {{ i18n.common + 'Total Items' | dynamicTranslate }}: {{ famisGrid.totalRecordCount }}\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"\\r\\n\\r\\n<div class=\\\"groups-detail sub-grid\\\">\\r\\n  <kendo-grid [resizable]=\\\"true\\\" [data]=\\\"gridDataResult\\\" [pageSize]=\\\"state.take\\\" [sortable]=\\\"false\\\" [pageable]=\\\"true\\\"\\r\\n    [reorderable]=\\\"true\\\" [pageSize]=\\\"state.take\\\" [skip]=\\\"state.skip\\\" (dataStateChange)=\\\"dataStateChange($event)\\\">\\r\\n\\r\\n    <ng-container *ngFor=\\\"let column of columns\\\">\\r\\n      \\r\\n      <kendo-grid-column [reorderable]=\\\"true\\\" field=\\\"{{column.name}}\\\" [title]=\\\"getColumnTitle(column)\\\">\\r\\n        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n          {{dataItem[column.name]}}\\r\\n        </ng-template>\\r\\n      </kendo-grid-column>\\r\\n\\r\\n    </ng-container>\\r\\n\\r\\n  </kendo-grid>\\r\\n</div>\\r\\n\"","export default \"<div>\\r\\n  <div class=\\\"row p-1\\\" *ngIf=\\\"isAddingFile\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n          <input type=\\\"file\\\" name=\\\"file\\\" (change)=\\\"updateFile($event)\\\" class=\\\"file-upload\\\" id=\\\"fileInput\\\">\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"isInvalidFileType\\\">\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"alert alert-danger\\\">\\r\\n                          {{i18n.common + 'Please select a valid file type' | dynamicTranslate }}.\\r\\n                          <br />\\r\\n                          ({{i18n.common + supportedFileTypes | dynamicTranslate }})\\r\\n                  </div>\\r\\n              </div>\\r\\n              \\r\\n          </div>\\r\\n      </div>\\r\\n  </div>\\r\\n  \\r\\n  <div class=\\\"row p-1\\\" *ngIf=\\\"isAddingFile\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n          <button [disabled]=\\\"!isFileSelected\\\" type=\\\"button\\\" (click)=\\\"RequestFileUpload()\\\" class=\\\"btn btn-action btn-small\\\" id=\\\"uploadFile\\\">{{i18n.common + 'Upload' | dynamicTranslate }}</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-small\\\" (click)=\\\"CancelUpload($event)\\\">{{i18n.common + 'Cancel' | dynamicTranslate }}</button>\\r\\n      </div>\\r\\n  </div>\\r\\n  <div class=\\\"row p-1\\\" *ngIf=\\\"!isAddingFile\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n          <button type=\\\"button\\\" (click)=\\\"AddFileClicked($event)\\\" class=\\\"btn btn-action btn-small custom-fields\\\">\\r\\n              <i class=\\\"fa fa-plus\\\"></i>\\r\\n          </button>\\r\\n          <strong> &nbsp;{{i18n.common + fileInputLabel | dynamicTranslate }}</strong>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<div class=\\\"row pb-3\\\">\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <label>{{i18n.common + 'Field' | dynamicTranslate }}</label>\\r\\n    <select class=\\\"form-control form-control\\\" id=\\\"selectMatchCode\\\" [(ngModel)]=\\\"selectedField\\\" (change)=\\\"initOperationAndValue()\\\"\\r\\n      [name]=\\\"formFieldNames.selectedField\\\" #selectMatchCode=\\\"ngModel\\\" required>\\r\\n      <option *ngIf=\\\"!selectedField\\\" [ngValue]=\\\"selectedField\\\" disabled>{{i18n.common + 'Select Field' | dynamicTranslate }} </option>\\r\\n      <option *ngFor=\\\"let item of filterMetadata|orderBy:'displayName'\\\" [ngValue]=\\\"item\\\">{{translationKeyBase + item.displayName | dynamicTranslate }}</option>\\r\\n    </select>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-2\\\">\\r\\n    <label>{{i18n.common + 'Filter Type' | dynamicTranslate }} </label>\\r\\n    <select  class=\\\"form-control\\\" *ngIf=\\\"!selectedField\\\" disabled></select>\\r\\n\\r\\n    <select *ngIf=\\\"selectedField\\\" [(ngModel)]=\\\"filter.operation\\\" [name]=\\\"formFieldNames.selectedFilterType\\\" (change)=\\\"filterOperationChange()\\\"\\r\\n      class=\\\"form-control\\\">\\r\\n      <option *ngIf=\\\"!filter.operation\\\" [ngValue]=\\\"filter.operation\\\" disabled>{{i18n.common + 'Select Filter' | dynamicTranslate }} </option>\\r\\n      <option *ngFor=\\\"let item of operationsForSelectedTerm\\\" [value]=\\\"item.name\\\">{{i18n.asset + item.displayName | dynamicTranslate }}</option>\\r\\n    </select>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4\\\" *ngIf=\\\"filter.operation !== 'in' && filter.operation !== 'nin'\\\">\\r\\n    <label>{{i18n.common + 'Value' | dynamicTranslate }} </label>\\r\\n\\r\\n    <input *ngIf=\\\"!selectedField\\\" type=\\\"text\\\" disabled=\\\"true\\\" [name]=\\\"formFieldNames.value\\\" class=\\\"form-control\\\">\\r\\n\\r\\n    <input type=\\\"text\\\" *ngIf=\\\"selectedField && (selectedField.fieldType===fieldTypes.String || selectedField.fieldType===fieldTypes.DropDown || selectedField.fieldType === fieldTypes.Image)\\\" [(ngModel)]=\\\"filter.term.value\\\" [name]=\\\"formFieldNames.value\\\"\\r\\n      class=\\\"form-control\\\" (change)=\\\"criteriaChange()\\\">\\r\\n\\r\\n    <kendo-datepicker class=\\\"form-control\\\" *ngIf=\\\"selectedField && selectedField.fieldType===fieldTypes.DateTime\\\" [(ngModel)]=\\\"filter.term.value\\\"\\r\\n      [name]=\\\"formFieldNames.value\\\" (change)=\\\"criteriaChange()\\\"></kendo-datepicker>\\r\\n\\r\\n\\r\\n    <!-- TODO Hide stepper -->\\r\\n    <input type=\\\"number\\\" *ngIf=\\\"selectedField && (selectedField.fieldType===fieldTypes.Integer || selectedField.fieldType===fieldTypes.Double)\\\"\\r\\n      [(ngModel)]=\\\"filter.term.value\\\" [name]=\\\"formFieldNames.value\\\" class=\\\"form-control\\\" (change)=\\\"criteriaChange()\\\">\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"col-md-2 mt-4\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-3 pl-0 pr-0 pt-2\\\">\\r\\n        <button (click)=\\\"remove()\\\" type=\\\"button\\\" class=\\\"btn btn-action btn-small\\\">\\r\\n          <i class=\\\"fa fa-minus\\\"></i>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-9\\\">\\r\\n        <strong>{{i18n.common + 'Remove Filter' | dynamicTranslate }} </strong>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<ng-container class=\\\"google-map-action-container\\\">\\r\\n\\r\\n  <agm-map class=\\\"col-md-12\\\" [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\" [zoom]=\\\"googleMapZoom\\\" [disableDefaultUI]=\\\"false\\\" [zoomControl]=\\\"true\\\"\\r\\n   [mapTypeId]=\\\"'hybrid'\\\" [styles]=\\\"mapStyles\\\">\\r\\n\\r\\n    <agm-marker *ngFor=\\\"let m of mapMarkers; let i = index\\\" [latitude]=\\\"m.lat\\\" [longitude]=\\\"m.lng\\\"\\r\\n      [title]=\\\"m.label\\\" [markerDraggable]=\\\"m.draggable\\\" (dragEnd)=\\\"markerDragEnd(m, $event)\\\">\\r\\n\\r\\n      <agm-info-window>\\r\\n        <strong>{{m.label}}</strong>\\r\\n      </agm-info-window>\\r\\n\\r\\n    </agm-marker>\\r\\n\\r\\n\\r\\n\\r\\n  </agm-map>\\r\\n\\r\\n</ng-container>\"","export default \"<div *ngIf=\\\"transactionType\\\" class=\\\"modal-header\\\">\\r\\n  <h4 class=\\\"modal-title\\\">{{i18n.transactions + 'Revert ' + transactionType + ' for Asset' | dynamicTranslate}} {{assetTagNumber}}</h4>\\r\\n</div>\\r\\n\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\" >\\r\\n\\r\\n        <h2>{{i18n.transactions + 'Current' | dynamicTranslate}}</h2>\\r\\n        <kendo-grid  [data]=\\\"currentTransaction\\\" >\\r\\n          <kendo-grid-column [width]=\\\"minColWidth\\\" *ngFor=\\\"let column of headers\\\" field=\\\"{{column.source}}\\\" title=\\\"{{i18n.transactions + column.name | dynamicTranslate}}\\\">\\r\\n          \\r\\n          </kendo-grid-column>\\r\\n        </kendo-grid>\\r\\n\\r\\n        <!-- <kendo-grid [resizable]=\\\"true\\\" *ngIf=\\\"partialTransaction.length\\\" [data]=\\\"partialTransaction\\\" [height]=\\\"100\\\" [scrollable]=\\\"'none'\\\">\\r\\n          <kendo-grid-column *ngFor=\\\"let column of partialTransaction\\\" field=\\\"{{column.name}}\\\" title=\\\"{{i18n.transactions + column.name | dynamicTranslate}}\\\">\\r\\n            <ng-template kendoGridCellTemplate>\\r\\n              {{column.value}}\\r\\n            </ng-template>\\r\\n          </kendo-grid-column>\\r\\n        </kendo-grid> -->\\r\\n        \\r\\n        <h2>{{i18n.transactions + 'Revert back' | dynamicTranslate}}</h2>\\r\\n        <kendo-grid  [data]=\\\"previousTransaction\\\"  >\\r\\n          <kendo-grid-column [width]=\\\"minColWidth\\\" *ngFor=\\\"let column of headers\\\" field=\\\"{{column.source}}\\\" title=\\\"{{i18n.transactions + column.name | dynamicTranslate}}\\\">\\r\\n          </kendo-grid-column>\\r\\n        </kendo-grid>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"closeModalEvent()\\\">{{i18n.common + 'cancel' |\\r\\n        translate}}</button>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{i18n.transactions + 'Revert' | dynamicTranslate}}</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</form>\\r\\n\"","export default \"<i *ngIf=\\\"!imageCollection || imageCollection.length === 0\\\" class=\\\"fa fa-picture-o disabled-action\\\" aria-hidden=\\\"true\\\"></i>\\r\\n\\r\\n<img *ngIf=\\\"imageCollection && imageCollection.length > 0\\\" aria-hidden=\\\"false\\\" src=\\\"{{(imageCollection | orderBy : 'index')[0].url}}\\\" width=\\\"30\\\" (click)=\\\"showImageCarouselOnClick()\\\" [ngbPopover]=\\\"firstImage\\\" triggers=\\\"mouseenter:mouseleave\\\" container=\\\"body\\\"/>\\r\\n\\r\\n<ng-template #firstImage>\\r\\n  <img src=\\\"{{imageCollection[0].url}}\\\" class=\\\"popover-image\\\" />\\r\\n</ng-template>\"","export default \"<bing-map\\r\\n  [longitude]=\\\"longitude\\\"\\r\\n  [latitude]=\\\"latitude\\\"\\r\\n  [buildingName]=\\\"buildingName\\\"\\r\\n  [mapZoom]=\\\"15\\\"\\r\\n></bing-map>\\r\\n\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"closeModalEvent()\\\">{{i18n.common + 'Close' | dynamicTranslate}}</button>\\r\\n</div>\"","export default \"<div class=\\\"p-2 pull-right\\\">\\r\\n<div class=\\\"circle-div\\\" (click)=\\\"open(content)\\\"><span class=\\\"fa fa-ellipsis-h\\\"></span></div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n  \\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <grid-column-selector [sourceTranslationKey]=\\\"sourceTranslationKey\\\" [headersAvailable]='headersAvailable' [selectedColumns]='columnSelection'></grid-column-selector>\\r\\n    <div *ngFor=\\\"let column of customColumns\\\" class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-8\\\">{{i18n.common + 'Custom Field' | dynamicTranslate }} - {{column.name}}</div>\\r\\n      <div class=\\\"col-md-4\\\"><b><a (click)=\\\"removeCustomCol(column)\\\">{{i18n.common + 'Remove' | dynamicTranslate}}</a></b></div>    \\r\\n    </div>\\r\\n    <div *ngIf=\\\"showAddCustomColumn\\\">\\r\\n      <div *ngFor=\\\"let customColumn of pendingCustomColumns\\\" class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-8\\\">{{i18n.common + 'Custom Field' | dynamicTranslate }} - {{customColumn.columnName}}</div>\\r\\n        <div class=\\\"col-md-4\\\"><b><a (click)=\\\"removePendingColumn(customColumn)\\\">{{i18n.common + 'Remove' | dynamicTranslate}}</a></b></div>\\r\\n      </div>\\r\\n      <div class=\\\"row mt-2\\\">\\r\\n        <div class=\\\"col-md-10\\\">\\r\\n          <add-asset-column-component (onColumnAdded)=\\\"onColumnAdded($event)\\\" [knownColumnNames]=\\\"knownColumns\\\"></add-asset-column-component>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{i18n.common + 'Cancel' | dynamicTranslate }} </button>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">{{i18n.common + 'Save Changes' | dynamicTranslate }}</button>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</ng-template>\"","export default \"<kendo-grid [resizable]=\\\"true\\\" [data]=\\\"gridView\\\" [height]=\\\"350\\\" [selectable]=\\\"{\\r\\n  checkboxOnly: true\\r\\n}\\\" [kendoGridSelectBy]=\\\"'name'\\\"\\r\\n  [selectedKeys]=\\\"selectedColumns\\\" [sortable]=\\\"true\\\" [sort]=\\\"sort\\\" (sortChange)=\\\"sortChange($event)\\\" #grid>\\r\\n  <kendo-grid-checkbox-column [width]=\\\"40\\\">\\r\\n\\r\\n  </kendo-grid-checkbox-column>\\r\\n\\r\\n  <kendo-grid-column [width]=\\\"200\\\" field=\\\"name\\\" title=\\\"{{i18n.common + 'Column Name' | dynamicTranslate }}\\\">\\r\\n\\r\\n\\r\\n      <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n        <ng-container *ngIf=\\\"!dataItem.isCustom\\\">\\r\\n        {{sourceTranslationKey + dataItem.displayName | dynamicTranslate }}\\r\\n        </ng-container>  \\r\\n        <ng-container *ngIf=\\\"dataItem.isCustom\\\">\\r\\n            {{dataItem.name}}\\r\\n            </ng-container> \\r\\n        </ng-template>\\r\\n\\r\\n  </kendo-grid-column>\\r\\n\\r\\n</kendo-grid>\"","export default \"<div class=\\\"filter-list\\\" #filterList>\\r\\n  <div class=\\\"famis-grid-filter\\\" *ngFor=\\\"let f of filters; let i = index\\\" class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <button (click)=\\\"remove($event, i)\\\" class=\\\"remove-filter btn btn-small  pull-right\\\" *ngIf=\\\"i >= 1\\\">\\r\\n        <i class=\\\"fa fa-minus filter-element\\\"></i>\\r\\n      </button>\\r\\n\\r\\n      <select\\r\\n        [name]=\\\"formFieldNames.selectedFilterType\\\"\\r\\n        [(ngModel)]=\\\"f.operator\\\"\\r\\n        name=\\\"filterOperation\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        (change)=\\\"onChange($event)\\\"\\r\\n      >\\r\\n        <option disabled value=\\\"\\\">{{ i18n.common + 'Select Filter' | dynamicTranslate }} </option>\\r\\n        <option *ngFor=\\\"let item of operationsForSelectedTerm\\\" [value]=\\\"item.name\\\"> {{ i18n.asset + item.displayName | dynamicTranslate }}</option>\\r\\n      </select>\\r\\n\\r\\n      <div *ngIf=\\\"f.operator !== 'in' && f.operator !== 'nin'\\\" #filter>\\r\\n        <div [ngSwitch]=\\\"fieldType\\\">\\r\\n          <ng-template [ngSwitchCase]=\\\"fieldTypes.String\\\">\\r\\n            <input type=\\\"text\\\" (change)=\\\"onChange($event)\\\" [(ngModel)]=\\\"f.value\\\" name=\\\"filterValue\\\" class=\\\"form-control\\\" />\\r\\n          </ng-template>\\r\\n          <ng-template [ngSwitchCase]=\\\"fieldTypes.DateTime\\\">\\r\\n            <kendo-datepicker\\r\\n              class=\\\"form-control\\\"\\r\\n              (valueChange)=\\\"onChange($event)\\\"\\r\\n              [(ngModel)]=\\\"f.value\\\"\\r\\n              name=\\\"filterValue\\\"\\r\\n            ></kendo-datepicker>\\r\\n          </ng-template>\\r\\n          <ng-template [ngSwitchCase]=\\\"fieldTypes.Date\\\">\\r\\n            <kendo-datepicker\\r\\n              class=\\\"form-control\\\"\\r\\n              (valueChange)=\\\"onChange($event)\\\"\\r\\n              [(ngModel)]=\\\"f.value\\\"\\r\\n              name=\\\"filterValue\\\"\\r\\n            ></kendo-datepicker>\\r\\n          </ng-template>\\r\\n          <ng-template [ngSwitchCase]=\\\"fieldTypes.Double\\\">\\r\\n            <input type=\\\"number\\\" (change)=\\\"onChange($event)\\\" [(ngModel)]=\\\"f.value\\\" name=\\\"filterValue\\\" class=\\\"form-control\\\" />\\r\\n          </ng-template>\\r\\n          <ng-template [ngSwitchCase]=\\\"fieldTypes.Integer\\\">\\r\\n            <input type=\\\"number\\\" (change)=\\\"onChange($event)\\\" [(ngModel)]=\\\"f.value\\\" name=\\\"filterValue\\\" class=\\\"form-control\\\" />\\r\\n          </ng-template>\\r\\n          <ng-template [ngSwitchCase]=\\\"fieldTypes.DropDown\\\">\\r\\n            <select\\r\\n              *ngIf=\\\"enumOptions\\\"\\r\\n              [(ngModel)]=\\\"f.value\\\"\\r\\n              name=\\\"filterValue\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              (change)=\\\"onChange($event)\\\"              \\r\\n            >\\r\\n              <option disabled value=\\\"\\\">{{ i18n.common + 'Select Value' | dynamicTranslate }} </option>\\r\\n              <option *ngFor=\\\"let item of enumOptions\\\" [value]=\\\"item.name\\\"> {{ i18n.asset + item.displayName | dynamicTranslate }}</option>\\r\\n            </select>\\r\\n            <input *ngIf=\\\"!enumOptions\\\" type=\\\"text\\\" (change)=\\\"onChange($event)\\\" [(ngModel)]=\\\"f.value\\\" name=\\\"filterValue\\\" class=\\\"form-control\\\" />\\r\\n          </ng-template>\\r\\n          <ng-template *ngSwitchDefault>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              *ngIf=\\\"fieldType === fieldTypes.String\\\"\\r\\n              (change)=\\\"onChange($event)\\\"\\r\\n              [(ngModel)]=\\\"f.value\\\"\\r\\n              name=\\\"filterValue\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n            />\\r\\n          </ng-template>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <button type=\\\"button\\\" (click)=\\\"addFilter($event)\\\" class=\\\"btn btn-action btn-small\\\"><i class=\\\"fa fa-plus\\\"></i></button>\\r\\n\\r\\n  <strong>&nbsp;{{ i18n.common + 'Add Filter Criteria' | dynamicTranslate }}</strong>\\r\\n</div>\\r\\n\"","export default \"<type-ahead \\r\\n  [searching]=\\\"searching\\\" \\r\\n  [model]=\\\"model\\\" \\r\\n  [search]=\\\"search\\\" \\r\\n  (selectItem)=\\\"onSelectItem($event)\\\"\\r\\n  [resultFormatter]=\\\"getResultFormatter\\\" \\r\\n  [inputFormatter]=\\\"getInputFormatter\\\"></type-ahead>\"","export default \"<kendo-grid-messages [groupPanelEmpty]=\\\"i18n.kendo + 'groupPanelEmpty' | dynamicTranslate\\\" [noRecords]=\\\"i18n.kendo + 'noRecords' | dynamicTranslate\\\"\\r\\n  [pagerFirstPage]=\\\"i18n.kendo + 'pagerFirstPage' | dynamicTranslate\\\" [pagerPreviousPage]=\\\"i18n.kendo + 'pagerPreviousPage' | dynamicTranslate\\\"\\r\\n  [pagerNextPage]=\\\"i18n.kendo + 'pagerNextPage' | dynamicTranslate\\\" [pagerLastPage]=\\\"i18n.kendo + 'pagerLastPage' | dynamicTranslate\\\" [pagerPage]=\\\"i18n.kendo + 'pagerPage' | dynamicTranslate\\\"\\r\\n  [pagerOf]=\\\"i18n.kendo + 'pagerOf' | dynamicTranslate\\\" [pagerItems]=\\\"i18n.kendo + 'pagerItems' | dynamicTranslate\\\" [pagerItemsPerPage]=\\\"i18n.kendo + 'pagerItemsPerPage' | dynamicTranslate\\\"\\r\\n  [filter]=\\\"i18n.kendo + 'filter' | dynamicTranslate\\\" [filterEqOperator]=\\\"i18n.kendo + 'filterEqOperator' | dynamicTranslate\\\" [filterNotEqOperator]=\\\"i18n.kendo + 'filterNotEqOperator' | dynamicTranslate\\\"\\r\\n  [filterIsNullOperator]=\\\"i18n.kendo + 'filterIsNullOperator' | dynamicTranslate\\\" [filterIsNotNullOperator]=\\\"i18n.kendo + 'filterIsNotNullOperator' | dynamicTranslate\\\"\\r\\n  [filterIsEmptyOperator]=\\\"i18n.kendo + 'filterIsEmptyOperator' | dynamicTranslate\\\" [filterIsNotEmptyOperator]=\\\"i18n.kendo + 'filterIsNotEmptyOperator' | dynamicTranslate\\\"\\r\\n  [filterStartsWithOperator]=\\\"i18n.kendo + 'filterStartsWithOperator' | dynamicTranslate\\\" [filterContainsOperator]=\\\"i18n.kendo + 'filterContainsOperator' | dynamicTranslate\\\"\\r\\n  [filterNotContainsOperator]=\\\"i18n.kendo + 'filterNotContainsOperator' | dynamicTranslate\\\" [filterEndsWithOperator]=\\\"i18n.kendo + 'filterEndsWithOperator' | dynamicTranslate\\\"\\r\\n  [filterGteOperator]=\\\"i18n.kendo + 'filterGteOperator' | dynamicTranslate\\\" [filterGtOperator]=\\\"i18n.kendo + 'filterGtOperator' | dynamicTranslate\\\"\\r\\n  [filterLteOperator]=\\\"i18n.kendo + 'filterLteOperator' | dynamicTranslate\\\" [filterLtOperator]=\\\"i18n.kendo + 'filterLtOperator' | dynamicTranslate\\\"\\r\\n  [filterIsTrue]=\\\"i18n.kendo + 'filterIsTrue' | dynamicTranslate\\\" [filterIsFalse]=\\\"i18n.kendo + 'filterIsFalse' | dynamicTranslate\\\" [filterBooleanAll]=\\\"i18n.kendo + 'filterBooleanAll' | dynamicTranslate\\\"\\r\\n  [filterAfterOrEqualOperator]=\\\"i18n.kendo + 'filterAfterOrEqualOperator' | dynamicTranslate\\\" [filterAfterOperator]=\\\"i18n.kendo + 'filterAfterOperator' | dynamicTranslate\\\"\\r\\n  [filterBeforeOperator]=\\\"i18n.kendo + 'filterBeforeOperator' | dynamicTranslate\\\" [filterBeforeOrEqualOperator]=\\\"i18n.kendo + 'filterBeforeOrEqualOperator' | dynamicTranslate\\\"\\r\\n  [filterFilterButton]=\\\"i18n.kendo + 'filterFilterButton' | dynamicTranslate\\\" [filterClearButton]=\\\"i18n.kendo + 'filterClearButton' | dynamicTranslate\\\"\\r\\n  [filterAndLogic]=\\\"i18n.kendo + 'filterAndLogic' | dynamicTranslate\\\" [filterOrLogic]=\\\"i18n.kendo + 'filterOrLogic' | dynamicTranslate\\\"></kendo-grid-messages>\"","export default \"<!-- div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">{{modalTitle}}</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"dismiss()\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n</div>-->\\r\\n\\r\\n<div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <ng-content></ng-content>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"dismiss()\\\">Cancel</button>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"save()\\\" *ngIf=\\\"!hideSubmit\\\" >{{submitButtonName}}</button>\\r\\n    </div>\\r\\n</div>\"","export default \"<div id=\\\"reportContainer\\\"></div>\\r\\n<div class=\\\"text-center\\\" *ngIf=\\\"isLoading\\\">\\r\\n    <h2>Loading \\r\\n        <span>\\r\\n            <i class=\\\"fa fa-spinner fa-spin\\\" aria-hidden=\\\"true\\\"></i>\\r\\n        </span>\\r\\n    </h2>\\r\\n</div>\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <h3>{{i18n.common + 'Replace' | dynamicTranslate}}</h3>\\r\\n    </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"supportsAdvancedReplace\\\" class=\\\"row actions pt-2\\\">\\r\\n    <div class=\\\"col-md-3 btn-group\\\">\\r\\n        <button type=\\\"button\\\" [class.btn-default]=\\\"mode != replaceFieldModes.Text\\\" [class.btn-primary]=\\\"mode === replaceFieldModes.Text\\\" class=\\\"btn btn-primary\\\"\\r\\n            (click)=\\\"toggleAdvancedMode(replaceFieldModes.Text)\\\">{{i18n.common + 'Text' | dynamicTranslate}}</button>\\r\\n        <button type=\\\"button\\\" [class.btn-default]=\\\"mode != replaceFieldModes.Advanced\\\" [class.btn-primary]=\\\"mode === replaceFieldModes.Advanced\\\" class=\\\"btn btn-primary\\\"\\r\\n            (click)=\\\"toggleAdvancedMode(replaceFieldModes.Advanced)\\\">{{i18n.common + 'Advanced' | dynamicTranslate}}</button>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row pt-2\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n        <label>{{i18n.common + 'Field' | dynamicTranslate}}</label>\\r\\n        <select class=\\\"form-control\\\" [(ngModel)]=\\\"state.replacementField\\\" name=\\\"replaceFieldSelect\\\" id=\\\"replaceFieldSelect\\\" #replaceSourceField=\\\"ngModel\\\" (change)=\\\"updateModel()\\\" required>\\r\\n            <option value=\\\"\\\" disabled>\\r\\n                <span>{{i18n.common + 'Select a Field' | dynamicTranslate}}</span>\\r\\n            </option>\\r\\n            <option *ngFor=\\\"let field of state.collection\\\" [value]=\\\"field.name\\\">{{ translatedBaseKey + field.displayName | dynamicTranslate}}</option>\\r\\n        </select>\\r\\n        <div *ngIf=\\\"replaceSourceField.errors && form.submitted\\\" class=\\\"alert alert-danger\\\">\\r\\n            <div>\\r\\n                 {{i18n.common + 'Please select a replacement field.' | dynamicTranslate}}\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <label>{{i18n.common + 'New Value' | dynamicTranslate}}</label>\\r\\n\\r\\n      <input *ngIf=\\\"mode === replaceFieldModes.Text && !state.replacementField\\\" type=\\\"text\\\" disabled=\\\"true\\\" [name]=\\\"replacementValue\\\" class=\\\"form-control\\\">\\r\\n\\r\\n      <input type=\\\"text\\\" *ngIf=\\\"mode === replaceFieldModes.Text && state.replacementField && !checkFieldIsDate(state.replacementField)\\\" [(ngModel)]=\\\"state.replacementValue\\\" [name]=\\\"replacementValue\\\"\\r\\n             class=\\\"form-control\\\" (change)=\\\"updateModel()\\\" (blur)=\\\"updateModel()\\\">\\r\\n\\r\\n      <kendo-datepicker class=\\\"form-control\\\" *ngIf=\\\"mode === replaceFieldModes.Text && state.replacementField && checkFieldIsDate(state.replacementField) && !checkFieldIsSelection(state.replacementField)\\\" [(ngModel)]=\\\"state.replacementValue\\\"\\r\\n                        [name]=\\\"replacementValue\\\" (change)=\\\"updateModel()\\\"></kendo-datepicker>\\r\\n      \\r\\n      <select class=\\\"form-control\\\" *ngIf=\\\"mode === replaceFieldModes.Text && state.replacementField && checkFieldIsSelection(state.replacementField)\\\" \\r\\n        [(ngModel)]=\\\"state.replacementValue\\\" (change)=\\\"updateModel()\\\">\\r\\n        <option value=\\\"\\\">\\r\\n            <span></span>\\r\\n        </option>\\r\\n        <option *ngFor=\\\"let opt of currentSelectionOptions\\\" [value]=\\\"opt.value\\\">{{opt.name}}</option>\\r\\n      </select>\\r\\n\\r\\n      <div #replaceValue contenteditable=\\\"true\\\" class=\\\"form-control\\\" style=\\\"overflow-x: hidden\\\" (input)=\\\"state.replacementValue=$event.target.textContent\\\" *ngIf=\\\"mode === replaceFieldModes.Advanced\\\"\\r\\n           (blur)=\\\"updateModel()\\\" (keydown)=\\\"validateAdvancedReplacement($event)\\\" name=\\\"replaceValue\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4 actions\\\" *ngIf=\\\"mode === replaceFieldModes.Advanced\\\">\\r\\n        <label>&nbsp;</label><br/>\\r\\n        <div ngbDropdown class=\\\"d-inline-block\\\">\\r\\n            <button type=\\\"button\\\"  class=\\\"btn btn-primary\\\" id=\\\"Advanced\\\" ngbDropdownToggle>{{i18n.common + 'Insert Field' | dynamicTranslate}}</button>\\r\\n            <div class=\\\"dropdown-menu bottom-right\\\" ngbDropdownMenu aria-labelledby=\\\"SelectField\\\">\\r\\n                <ng-container *ngFor=\\\"let field of state.collection\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"dropdown-item\\\"  *ngIf=\\\"field.fieldType === fieldTypes.Integer || field.fieldType === fieldTypes.Double\\\" \\r\\n                        (click)=\\\"insertAdvancedField(field.name)\\\">{{translatedBaseKey + field.displayName | dynamicTranslate}}</button>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"input-group\\\">\\r\\n    <div class=\\\"input-group-addon\\\">\\r\\n        <span *ngIf=\\\"!searching\\\"><i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n        <span *ngIf=\\\"searching\\\"><i class=\\\"fa fa-spinner fa-spin\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n    </div>\\r\\n\\r\\n    <input id=\\\"groupSearchInput\\\"\\r\\n        type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n        [(ngModel)]=\\\"model\\\"\\r\\n        [ngbTypeahead]=\\\"search\\\"\\r\\n        (selectItem)=\\\"onSelectItem($event)\\\"\\r\\n        [resultFormatter]=\\\"resultFormatter\\\"\\r\\n        [inputFormatter]=\\\"inputFormatter\\\"/>\\r\\n\\r\\n</div>\"","export default \"<ng-template #windowTitleBar let-win>\\r\\n  <div class=\\\"k-window-title modal-window\\\">{{translationkey + title | dynamicTranslate}}</div>\\r\\n  <button kendoWindowCloseAction [window]=\\\"win\\\"></button>\\r\\n</ng-template>\\r\\n\"","export default \"<div class=\\\"backdrop\\\"></div>\\r\\n\"","export default \"<div class=\\\"container pull-left\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-2\\\">\\r\\n      <div class=\\\"sidebar\\\">\\r\\n        <ul class=\\\"menu list-unstyled\\\">\\r\\n          <li>\\r\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"users\\\" routerLinkActive=\\\"menu-active\\\" i18n=\\\"Admin menu Users@@sidenavUsers\\\">Users</a>\\r\\n          </li>\\r\\n          <li>\\r\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"teams\\\" routerLinkActive=\\\"menu-active\\\" i18n=\\\"Admin menu Teams@@sidenavTeams\\\">Teams</a>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-10\\\">\\r\\n      <div class=\\\"form-layout\\\">\\r\\n\\r\\n        <router-outlet></router-outlet>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<form (ngOnSubmit)=\\\"onSubmit(groupSaveForm)\\\" #groupSaveForm=\\\"ngForm\\\">\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <div class=\\\"row col-md-6\\\">\\r\\n        <table>\\r\\n          <label for=\\\"savePointNameText\\\">{{i18n.common + 'Name' | dynamicTranslate}}</label>\\r\\n          <tr>\\r\\n            <td>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"savePointNameText\\\" name=\\\"savePointNameText\\\" required [(ngModel)]=\\\"savePointName\\\">\\r\\n            </td>\\r\\n            <td>\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit(groupSaveForm)\\\"  style=\\\"padding: 0.5rem 0.75rem;\\\"> {{i18n.groupSave + 'Save' | dynamicTranslate}} </button>\\r\\n            </td>\\r\\n           \\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <div *ngIf=\\\"isDuplicateName\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div>\\r\\n                   {{i18n.admin + 'Save point name already exists under this group. Please enter a unique name.' | dynamicTranslate}}\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"saveClicked && !savePointName\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div>\\r\\n                   {{i18n.admin + 'A valid unique name is required to create a save point. Please enter a unique name.' | dynamicTranslate}}\\r\\n                </div>\\r\\n              </div>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </table>\\r\\n    </div>\\r\\n  </div>\\r\\n \\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <famis-grid *ngIf=\\\"true\\\" [famisGrid]=\\\"savePointGrid\\\" (actionEvent)=\\\"handleActionEvent($event)\\\" (updateCacheEvent)=\\\"updateCache($event)\\\"></famis-grid>\\r\\n    </div>\\r\\n  </div>\\r\\n  <restore-milestone (onAddOrUpdate)=\\\"handleAddOrUpdate($event)\\\" (onAction)=\\\"handleAction($event)\\\" ></restore-milestone>\\r\\n</form>\"","export default \"<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n  <form #restoreModal=\\\"ngForm\\\">\\r\\n    <div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n          <strong  *ngIf=\\\"!restoreInitiated\\\">{{i18n.admin + 'Restore To Savepoint' | dynamicTranslate}}</strong> <br/>\\r\\n        <div class=\\\"ml-3\\\" *ngIf=\\\"!restoreInitiated\\\">\\r\\n          <div>\\r\\n             {{i18n.admin + 'You are about to restore to the previous saved point' | dynamicTranslate}} <b> <i> {{restoreGroupSave.description}} </i>. </b>\\r\\n          </div>\\r\\n          <br/>\\r\\n          <div>\\r\\n             {{i18n.admin + 'This may take some time and cannot be cancelled once it has started' | dynamicTranslate}}\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!restoreComplete && restoreInitiated\\\">\\r\\n          <div style=\\\"text-align: center;\\\">\\r\\n              <strong>{{i18n.admin + 'Restoring...' | dynamicTranslate}}</strong> <br/> <br/> \\r\\n          </div>\\r\\n          <div style=\\\"text-align: center;\\\">\\r\\n            <b> <i> {{i18n.admin + 'Please refrain accessing this group until the restoration is complete' | dynamicTranslate}} </i> </b>\\r\\n          </div>\\r\\n          <div>\\r\\n            <span style=\\\"margin-left: 45%;\\\"><i class=\\\"fa fa-spinner fa-spin\\\" style=\\\"font-size: 5em;\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\" *ngIf=\\\"!restoreInitiated\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"cancel()\\\" style=\\\"padding: 0.5rem 0.75rem;\\\" >{{i18n.common + 'Cancel' | dynamicTranslate}}</button>                    \\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"restore()\\\" style=\\\"padding: 0.5rem 0.75rem;\\\" >{{i18n.common + 'Restore' | dynamicTranslate}}</button>                    \\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n  \\r\\n</ng-template>\"","export default \"<ol class=\\\"breadcrumb\\\">\\r\\n  <li *ngFor=\\\"let breadCrumb of breadCrumbs\\\" class=\\\"breadcrumb-item\\\" routerLinkActive=\\\"active\\\">\\r\\n    <a [class.disabled]=\\\"breadCrumb.isDisabled\\\" [routerLink]=\\\"breadCrumb.routerLink\\\">{{i18n.common + breadCrumb.name | dynamicTranslate}}</a>\\r\\n  </li>\\r\\n</ol>\\r\\n<form (ngSubmit)=\\\"onSubmit(removeDeactivatedForm)\\\" #removeDeactivatedForm=\\\"ngForm\\\">\\r\\n\\r\\n  <h1>{{ i18n.admin + 'Remove Deactivated  Assets & Buildings' | dynamicTranslate}}</h1>\\r\\n  <br/>\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <label for=\\\"typeSelect\\\">{{ i18n.admin + 'Select Type' | dynamicTranslate}}</label>\\r\\n      <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedType\\\" name=\\\"costFieldSelect\\\" id=\\\"typeSelect\\\" #typeSelectOptions=\\\"ngModel\\\" required >\\r\\n        <option value=\\\"0\\\">{{ i18n.admin + 'Both' | dynamicTranslate}}</option>\\r\\n        <option value=\\\"1\\\">{{ i18n.admin + 'Assets' | dynamicTranslate}}</option>\\r\\n        <option value=\\\"2\\\">{{ i18n.admin + 'Buildings' | dynamicTranslate}}</option>\\r\\n      </select>\\r\\n      <div *ngIf=\\\"typeSelectOptions.errors && removeDeactivatedForm.submitted\\\"\\r\\n      class=\\\"alert alert-danger\\\">\\r\\n       {{ i18n.common + 'Please select the type.' | dynamicTranslate}}\\r\\n    </div>\\r\\n      <label for=\\\"Datatarget\\\">{{ i18n.admin + 'Select data target' | dynamicTranslate}}</label>\\r\\n      <select [(ngModel)]=\\\"selectedDatatarget\\\" class=\\\"form-control\\\" #DatatargetSelectOptions=\\\"ngModel\\\" name=\\\"SelectDatatarget\\\" id=\\\"selectDatatarget\\\">\\r\\n        <option value=\\\"\\\" selected=\\\"true\\\">{{ i18n.admin + 'All' | dynamicTranslate}}</option>\\r\\n        <option value=\\\"0\\\">{{ i18n.admin + 'Client' | dynamicTranslate}}</option>\\r\\n        <option value=\\\"1\\\">{{ i18n.admin + 'Inventory' | dynamicTranslate}}</option>\\r\\n        <option value=\\\"2\\\">{{ i18n.admin + 'Consolidated' | dynamicTranslate}}</option>\\r\\n       </select>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n \\r\\n  <div class=\\\"form-group\\\">\\r\\n<button class=\\\"btn btn-primary\\\">{{ i18n.common + 'Apply' | dynamicTranslate}}</button>\\r\\n  </div>\\r\\n\\r\\n</form>\"","export default \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <p><span><strong><ng-container i18n=\\\"Name@@teameditName\\\">Name</ng-container>:</strong></span>&nbsp;{{team.Name}}</p>\\r\\n    <p><span><strong><ng-container i18n=\\\"Active@@teameditActive\\\">Active</ng-container>:</strong></span>&nbsp;{{team.Active}}</p>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col col-lg-6\\\">\\r\\n      <team-list></team-list>\\r\\n    </div>\\r\\n    <div class=\\\"col col-lg-6\\\">\\r\\n      <team-edit></team-edit>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<kendo-grid [resizable]=\\\"true\\\" [data]=\\\"teams\\\" [selectable]=\\\"true\\\" [rowSelected]=\\\"isRowSelected\\\" (selectionChange)=\\\"selectRow($event)\\\">\\r\\n  <kendo-grid-column field=\\\"Name\\\" i18n-title=\\\"Grid-Name col@@teamgridNameCol\\\" title=\\\"Name\\\" [width]=\\\"150\\\"></kendo-grid-column>\\r\\n  <kendo-grid-column field=\\\"Active\\\" i18n-title=\\\"Grid-Active col@@teamgridActiveCol\\\" title=\\\"Active\\\" [width]=\\\"40\\\">\\r\\n    <ng-template kendoGridCellTemplate let-user>\\r\\n\\r\\n      <div class=\\\"checkbox k-form-field\\\">\\r\\n        <input type=\\\"checkbox\\\" class=\\\"k-checkbox\\\" id=\\\"userActive\\\" [checked]=\\\"user.Active\\\" disabled>\\r\\n        <label class=\\\"k-checkbox-label\\\" for=\\\"userActive\\\"></label>\\r\\n      </div>\\r\\n\\r\\n    </ng-template>\\r\\n  </kendo-grid-column>\\r\\n</kendo-grid>\\r\\n<div *ngIf=\\\"selectedTeam\\\">\\r\\n  <h2>{{selectedTeam.Name}} </h2>\\r\\n  <div>\\r\\n    <label>\\r\\n      <ng-container i18n=\\\"Name label@@teamlistName\\\">Name</ng-container>: </label>\\r\\n    <input [(ngModel)]=\\\"selectedTeam.Name\\\" i18n-placeholder=\\\"Name placeholder for team name@@teamlistNamePlaceholder\\\" placeholder=\\\"name\\\"\\r\\n    />\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"container\\\">\\r\\n\\r\\n  <div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-10\\\">\\r\\n        <h1>{{i18n.templateManagement + 'Template Management' | dynamicTranslate }}</h1>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-2 text-right\\\">\\r\\n        <button type=\\\"button\\\" routerLink=\\\"/admin/templates/builder\\\" class=\\\"btn btn-primary\\\">{{i18n.templateManagement + 'Create New' | dynamicTranslate }}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <br />\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div>\\r\\n        <kendo-grid [resizable]=\\\"true\\\" [data]=\\\"gridData\\\" [pageSize]=\\\"state.take\\\" [skip]=\\\"state.skip\\\" [sort]=\\\"state.sort\\\" [filter]=\\\"state.filter\\\" [sortable]=\\\"true\\\"\\r\\n                    [pageable]=\\\"true\\\" [filterable]=\\\"true\\\" (dataStateChange)=\\\"dataStateChange($event)\\\" [rowClass]=\\\"isDisabled\\\" (filterChange)=\\\"handleFilterChange($event)\\\">\\r\\n          <kendo-grid-column field=\\\"name\\\" title=\\\"{{i18n.templateManagement + 'Template Name' | dynamicTranslate }}\\\" width=\\\"20%\\\">\\r\\n              <ng-template kendoGridFilterCellTemplate let-filter let-column=\\\"column\\\">\\r\\n                  <kendo-grid-string-filter-cell\\r\\n                    [column]=\\\"column\\\"\\r\\n                    [filter]=\\\"filter\\\">\\r\\n                      <kendo-filter-eq-operator></kendo-filter-eq-operator>\\r\\n                      <kendo-filter-neq-operator></kendo-filter-neq-operator>\\r\\n                      <kendo-filter-startswith-operator></kendo-filter-startswith-operator>\\r\\n                      <kendo-filter-contains-operator></kendo-filter-contains-operator>\\r\\n                      <kendo-filter-not-contains-operator></kendo-filter-not-contains-operator>\\r\\n                      <kendo-filter-isnull-operator></kendo-filter-isnull-operator>\\r\\n                      <kendo-filter-isnotnull-operator></kendo-filter-isnotnull-operator>\\r\\n                  </kendo-grid-string-filter-cell>\\r\\n              </ng-template>\\r\\n          </kendo-grid-column>\\r\\n          <!--Todo: Get CountryName, DateCreate and LastUsed added to GetTemplateDTO -->\\r\\n          <kendo-grid-column field=\\\"officeName\\\" title=\\\"{{i18n.templateManagement + 'Office' | dynamicTranslate }}\\\" width=\\\"20%\\\">\\r\\n              <ng-template kendoGridFilterCellTemplate let-filter let-column=\\\"column\\\">\\r\\n                  <kendo-grid-string-filter-cell\\r\\n                    [column]=\\\"column\\\"\\r\\n                    [filter]=\\\"filter\\\">\\r\\n                      <kendo-filter-eq-operator></kendo-filter-eq-operator>\\r\\n                      <kendo-filter-neq-operator></kendo-filter-neq-operator>\\r\\n                      <kendo-filter-startswith-operator></kendo-filter-startswith-operator>\\r\\n                      <kendo-filter-contains-operator></kendo-filter-contains-operator>\\r\\n                      <kendo-filter-not-contains-operator></kendo-filter-not-contains-operator>\\r\\n                      <kendo-filter-isnull-operator></kendo-filter-isnull-operator>\\r\\n                      <kendo-filter-isnotnull-operator></kendo-filter-isnotnull-operator>\\r\\n                  </kendo-grid-string-filter-cell>\\r\\n              </ng-template>\\r\\n          </kendo-grid-column>\\r\\n          <kendo-grid-column field=\\\"lastUsed\\\" [filterable]=\\\"false\\\" title=\\\"{{i18n.templateManagement + 'Last Used' | dynamicTranslate }}\\\" width=\\\"20%\\\">\\r\\n            <ng-template kendoGridCellTemplate let-dataItem>\\r\\n              <div *ngIf=\\\"dataItem.lastUsed != null\\\">{{ dataItem.lastUsed | localTime }}</div>\\r\\n            </ng-template>\\r\\n          </kendo-grid-column>\\r\\n          <kendo-grid-column field=\\\"isRetired\\\" title=\\\"{{i18n.templateManagement + 'Status' | dynamicTranslate }}\\\" [filterable]=\\\"false\\\" width=\\\"20%\\\">\\r\\n            <ng-template kendoGridCellTemplate let-dataItem>\\r\\n              <div>{{i18n.common + (dataItem.isRetired ? 'Enable' : 'Disable') | dynamicTranslate }}</div>\\r\\n            </ng-template>\\r\\n          </kendo-grid-column>\\r\\n          <kendo-grid-column field=\\\"Actions\\\" [filterable]=\\\"false\\\" title=\\\"{{i18n.templateManagement + 'Actions' | dynamicTranslate }}\\\" width=\\\"20%\\\">\\r\\n            <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n              <a href=\\\"#\\\" routerLink=\\\"/admin/templates/builder/{{dataItem.id}}\\\">{{i18n.common + 'Edit' | dynamicTranslate }}</a>\\r\\n              <a href=\\\"#\\\" (click)=\\\"handleCopy(dataItem.id, $event)\\\">{{i18n.common + 'Copy' | dynamicTranslate }}</a>\\r\\n              <a (click)=\\\"toggleIsRetired(dataItem.id, $event)\\\" href=\\\"#\\\">{{i18n.common + (dataItem.isRetired ? 'Enable' : 'Disable') | dynamicTranslate }}</a>\\r\\n            </ng-template>\\r\\n          </kendo-grid-column>\\r\\n\\r\\n        </kendo-grid>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"custom-field-form\\\">\\r\\n    <h4 class=\\\"page-header\\\">{{i18n.common + 'Custom Field.' | dynamicTranslate }}</h4>\\r\\n  \\r\\n    <form [formGroup]=\\\"form\\\">\\r\\n      <div formArrayName=\\\"customFields\\\">\\r\\n  \\r\\n        <div *ngFor=\\\"let itemrow of this.formArray.controls; let i=index;\\\">\\r\\n          <div formGroupName=\\\"{{i}}\\\">\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <input formControlName=\\\"name\\\" class=\\\"form-control\\\">\\r\\n                <div *ngIf=\\\"isNameFieldDirty(itemrow)\\\" class=\\\"alert alert-danger\\\">\\r\\n                   {{i18n.projectProfile + GetNameFieldErrors(itemrow) | dynamicTranslate }}\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <select formControlName=\\\"fieldType\\\" class=\\\"form-control\\\" required >\\r\\n                  <option disabled>{{i18n.templateManagement + 'Select custom field type' | dynamicTranslate }}</option>\\r\\n                  <option>{{i18n.common + 'String' | dynamicTranslate }}</option>\\r\\n                  <option>{{i18n.common + 'Integer' | dynamicTranslate }}</option>\\r\\n                  <option>{{i18n.common + 'Double' | dynamicTranslate }}</option>\\r\\n                  <option>{{i18n.common + 'Date' | dynamicTranslate }}</option>\\r\\n                  <option>{{i18n.common + 'Boolean' | dynamicTranslate }}</option>\\r\\n                </select>\\r\\n                <div *ngIf=\\\"isSelectFieldDirty(itemrow)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  {{i18n.templateManagement + 'Please select a custom field type.' | dynamicTranslate }}\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\" *ngIf=\\\"!isEditTemplate\\\">\\r\\n                <button (click)=\\\"deleteRow(itemrow)\\\" type=\\\"button\\\" class=\\\"btn btn-action btn-small\\\"><i class=\\\"fa fa-minus\\\"></i></button> &nbsp; {{i18n.templateManagement + 'Remove Field' | dynamicTranslate }}\\r\\n              </div>\\r\\n            </div>\\r\\n            \\r\\n          </div>\\r\\n        </div>\\r\\n  \\r\\n      </div>\\r\\n  \\r\\n    </form>\\r\\n  \\r\\n    <button type=\\\"button\\\" (click)=\\\"addNewRow()\\\" class=\\\"btn btn-action btn-small\\\">\\r\\n      <i class=\\\"fa fa-plus\\\"></i>\\r\\n    </button> &nbsp; {{i18n.templateManagement + 'Add New Custom Field' | dynamicTranslate }}\\r\\n  </div>\"","export default \"<form (ngSubmit)=\\\"onSubmit(dataImportForm)\\\" #dataImportForm=\\\"ngForm\\\" (keydown)=\\\"handleKeyDown($event)\\\">\\r\\n\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <div *ngIf=\\\"!templateWizard.isEditingForGroup\\\" class=\\\"col-6\\\">\\r\\n      <label for=\\\"inputTemplateName\\\">{{i18n.templateManagement + 'Template Name' | dynamicTranslate }}</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTemplateName\\\" aria-describedby=\\\"inputTemplateName\\\" [(ngModel)]=\\\"template.name\\\"\\r\\n        name=\\\"Name\\\" required #inputTemplateName=\\\"ngModel\\\" (input)=\\\"onInputChange($event.target.value)\\\">\\r\\n\\r\\n      <div *ngIf=\\\"isDuplicate\\\" class=\\\"alert alert-danger\\\">\\r\\n         {{i18n.templateManagement + 'This name is already in use.' | dynamicTranslate }}\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"inputTemplateName.errors && (inputTemplateName.dirty || inputTemplateName.touched || dataImportForm.submitted)\\\"\\r\\n        class=\\\"alert alert-danger\\\">\\r\\n        <div [hidden]=\\\"!inputTemplateName.errors.required\\\">\\r\\n           {{i18n.templateManagement + 'Please create a template name.' | dynamicTranslate }}\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <div *ngIf=\\\"templateWizard.isEditingForGroup\\\" class=\\\"col-6\\\">\\r\\n      <label for=\\\"inputTemplateName\\\">{{i18n.templateManagement + 'Template Name' | dynamicTranslate }}</label>\\r\\n      <input readonly type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTemplateName\\\" aria-describedby=\\\"inputTemplateName\\\" [(ngModel)]=\\\"template.name\\\"\\r\\n        name=\\\"Name\\\" #inputTemplateName=\\\"ngModel\\\">\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <label for=\\\"selectOffice\\\">{{i18n.projectProfile + 'Office' | dynamicTranslate }}</label>\\r\\n      <select class=\\\"form-control\\\" [(ngModel)]=\\\"template.officeId\\\" name=\\\"Office\\\" id=\\\"selectOffice\\\" required #selectOffice=\\\"ngModel\\\">\\r\\n        <option disabled>{{i18n.templateManagement + 'Select an office' | dynamicTranslate }}</option>\\r\\n        <option *ngFor=\\\"let opt of offices | orderBy: 'name'\\\" [value]=\\\"opt.id\\\">{{i18n.projectProfile + 'Office_' + opt.name | dynamicTranslate }}</option>\\r\\n      </select>\\r\\n\\r\\n      <div *ngIf=\\\"selectOffice.errors && (selectOffice.dirty || selectOffice.touched || dataImportForm.submitted)\\\" class=\\\"alert alert-danger\\\">\\r\\n        <div [hidden]=\\\"!selectOffice.errors.required\\\">\\r\\n           {{i18n.templateManagement + 'Please select an office.' | dynamicTranslate }}\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n\\r\\n      <label for=\\\"multiSelectModule\\\">{{i18n.templateManagement + 'Module Selection' | dynamicTranslate }}</label>\\r\\n      <select multiple class=\\\"form-control\\\" id=\\\"multiSelectModule\\\" [(ngModel)]=\\\"selectedModuleIds\\\" name=\\\"Module\\\" required #multiSelectModule=\\\"ngModel\\\">\\r\\n        <option selected [disabled]=\\\"opt.isRequired\\\" *ngFor=\\\"let opt of modules | orderBy: 'order'\\\" [value]=\\\"opt.id\\\">{{i18n.common + opt.name | dynamicTranslate }}</option>\\r\\n\\r\\n      </select>\\r\\n      <small class=\\\"text-muted\\\">\\r\\n        {{i18n.templateManagement + 'Ctrl + click to select all fields that apply' | dynamicTranslate }}\\r\\n      </small>\\r\\n\\r\\n      <div *ngIf=\\\"multiSelectModule.errors && (multiSelectModule.dirty || multiSelectModule.touched || dataImportForm.submitted)\\\"\\r\\n        class=\\\"alert alert-danger\\\">\\r\\n        <div [hidden]=\\\"!multiSelectModule.errors.required\\\">\\r\\n           {{i18n.templateManagement + 'Please select at least one module.' | dynamicTranslate }}\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"!templateWizard.isEditingForGroup\\\" class=\\\"form-check\\\">\\r\\n\\r\\n\\r\\n    <input type=\\\"checkbox\\\" class=\\\"k-checkbox\\\" id=\\\"isMasterTemplate\\\" [(ngModel)]=\\\"template.isMasterTemplate\\\" name=\\\"isMasterTemplate\\\">\\r\\n    <label class=\\\"k-checkbox-label\\\" for=\\\"isMasterTemplate\\\">{{i18n.templateManagement + 'Save as Master Template' | dynamicTranslate }}</label>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"wizard-actions\\\">\\r\\n\\r\\n\\r\\n    <button class=\\\"btn btn-default\\\" (click)='onCancel($event)'>{{i18n.common + 'Cancel' | dynamicTranslate }}</button>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{i18n.common + 'Continue' | dynamicTranslate }}</button>\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n</form>\"","export default \"<form (ngSubmit)=\\\"onSubmit(dataImportForm)\\\" #dataImportForm=\\\"ngForm\\\" (keydown)=\\\"handleKeyDown($event)\\\">\\r\\n\\r\\n  <div class=\\\"form-group row\\\" *ngFor=\\\"let module of selectedModules | orderBy: 'order'\\\">\\r\\n\\r\\n    <ng-container *ngIf=\\\"!isModuleOnly(module)\\\">\\r\\n      <div class=\\\"col-8\\\">\\r\\n\\r\\n        <h2>{{i18n.common + module.name | dynamicTranslate }}</h2>\\r\\n        <label for=\\\"multiSelectModule\\\">{{i18n.templateManagement + 'Available Fields for Template' | dynamicTranslate }}</label>\\r\\n        <select multiple class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModuleFieldIds[module.id]\\\" name=\\\"selectedModuleFieldIds{{module.id}}\\\">\\r\\n          <option *ngFor=\\\"let item of module.moduleFields | orderBy: 'order'\\\" [value]=\\\"item.id\\\">\\r\\n             {{i18n.projectProfile + item.name | dynamicTranslate }}\\r\\n          </option>\\r\\n        </select>\\r\\n        <small class=\\\"text-muted\\\">\\r\\n          {{i18n.templateManagement + 'Ctrl + click to select all fields that apply' | dynamicTranslate }}\\r\\n        </small>\\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"col-12\\\">\\r\\n        <app-custom-field [moduleId]=\\\"module.id\\\" (customFieldAdded)='addCustomField($event)' (customFieldRemoved)='removeCustomField($event)'\\r\\n          [customFields]='customFields' [invalidFieldTypeIndexes]='invalidCustomFieldDataTypes' [invalidFieldNameIndexes]='invalidCustomFieldNames'\\r\\n          [isEditTemplate]=\\\"isEdit\\\">\\r\\n        </app-custom-field>\\r\\n      </div>\\r\\n\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"isModuleOnly(module)\\\">\\r\\n\\r\\n        <div class=\\\"col-8\\\">\\r\\n\\r\\n          <h2>{{i18n.common + module.name | dynamicTranslate }}</h2>\\r\\n          <label for=\\\"multiSelectModule\\\">{{i18n.templateManagement + 'Enabled for Template' | dynamicTranslate }}</label>\\r\\n        </div>\\r\\n    </ng-container>\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n  <div class=\\\"wizard-actions\\\">\\r\\n\\r\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"navigateBack($event)\\\">{{i18n.common + 'Back' | dynamicTranslate }}</button>\\r\\n\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{i18n.common + 'Continue' | dynamicTranslate }}</button>\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n</form>\"","export default \"<div id=\\\"formBuilderDropArea\\\">\\r\\n  <form (ngSubmit)=\\\"onSubmit(dataImportForm)\\\" #dataImportForm=\\\"ngForm\\\" (keydown)=\\\"handleKeyDown($event)\\\">\\r\\n\\r\\n\\r\\n    <ng-container *ngFor=\\\"let module of selectedModules\\\">\\r\\n\\r\\n      <div class=\\\"py-2\\\" *ngIf=\\\"isModuleOnly(module)\\\">\\r\\n        <h2>{{i18n.common + module.name | dynamicTranslate }}</h2>\\r\\n\\r\\n        <div class='drag-drop-container'>\\r\\n        \\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n               <h4>{{i18n.templateManagement + 'Enabled for Template' | dynamicTranslate }}\\r\\n                </h4>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      <div class=\\\"py-2\\\" *ngIf=\\\"!isModuleOnly(module)\\\">\\r\\n\\r\\n\\r\\n        <ng-container *ngIf=\\\"formLayouts[module.id].hasSelectedFields\\\">\\r\\n\\r\\n          <h2>{{i18n.common + module.name | dynamicTranslate }}</h2>\\r\\n\\r\\n\\r\\n\\r\\n          <div class='parent'>\\r\\n            <div class='drag-drop-container field-bank' *ngIf=\\\"formLayouts[module.id].customFieldsAvailable.length > 0\\\">\\r\\n              <h4>\\r\\n                <em>{{i18n.templateManagement + 'Drag Custom Field(s) to Form Layout in Desired Order' | dynamicTranslate }}</em>\\r\\n              </h4>\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\" [dragula]='module.id' [dragulaModel]='formLayouts[module.id].customFieldsAvailable'>\\r\\n                  <div class='template-field' *ngFor=\\\"let field of formLayouts[module.id].customFieldsAvailable\\\">\\r\\n                     {{field.name}}\\r\\n                    <div class=\\\"pull-right draggable-arrow\\\">\\r\\n                      <i class=\\\"fa fa-arrows\\\"></i>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class='drag-drop-container'>\\r\\n              <h3>{{i18n.templateManagement + 'Form Layout' | dynamicTranslate }}</h3>\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\" attr.data-moduleid=\\\"{{module.id}}\\\" [dragula]='module.id' [dragulaModel]='formLayouts[module.id].oddOrderedFields'>\\r\\n                  <div class='template-field' *ngFor=\\\"let field of formLayouts[module.id].oddOrderedFields\\\">\\r\\n                    <ng-container *ngIf=\\\"!field.isCustomField\\\">\\r\\n                    {{i18n.projectProfile + field.name | dynamicTranslate }}\\r\\n                  </ng-container>\\r\\n                  <ng-container *ngIf=\\\"field.isCustomField\\\">\\r\\n                      {{field.name}}\\r\\n                    </ng-container>\\r\\n                    <div class=\\\"pull-right draggable-arrow\\\">\\r\\n                      <i class=\\\"fa fa-arrows\\\"></i>\\r\\n                    </div>\\r\\n\\r\\n                  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                </div>\\r\\n\\r\\n\\r\\n\\r\\n                <div class=\\\"col-md-6\\\" attr.data-moduleid=\\\"{{module.id}}\\\" [dragula]='module.id' [dragulaModel]='formLayouts[module.id].evenOrderedFields'>\\r\\n                  <div class='template-field' *ngFor=\\\"let field of formLayouts[module.id].evenOrderedFields\\\">\\r\\n                      <ng-container *ngIf=\\\"!field.isCustomField\\\">\\r\\n                          {{i18n.projectProfile + field.name | dynamicTranslate }}\\r\\n                        </ng-container>\\r\\n                        <ng-container *ngIf=\\\"field.isCustomField\\\">\\r\\n                            {{field.name}}\\r\\n                          </ng-container>                    <div class=\\\"pull-right draggable-arrow\\\">\\r\\n                      <i class=\\\"fa fa-arrows\\\"></i>\\r\\n                    </div>\\r\\n\\r\\n                  </div>\\r\\n\\r\\n\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        </ng-container>\\r\\n      </div>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"wizard-actions\\\">\\r\\n\\r\\n      <button class=\\\"btn btn-default\\\" (click)=\\\"navigateBack($event)\\\">{{i18n.common + 'Back' | dynamicTranslate }}</button>\\r\\n\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{i18n.common + 'Continue' | dynamicTranslate }}</button>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </form>\\r\\n</div>\"","export default \"<form (ngSubmit)=\\\"onSubmit()\\\" #dataImportForm=\\\"ngForm\\\" (keydown)=\\\"handleKeyDown($event)\\\">\\r\\n\\r\\n  <div class=\\\"module-layout-preview\\\" *ngFor=\\\"let module of selectedModules\\\">\\r\\n\\r\\n    <ng-container *ngIf=\\\"module.moduleFields.length === 0\\\">\\r\\n      <h2>{{i18n.common + module.name | dynamicTranslate }}</h2>\\r\\n\\r\\n      <h4>Enabled for Template</h4>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"isModuleOnly(module)\\\">\\r\\n        <h2>{{i18n.common + module.name | dynamicTranslate }}</h2>\\r\\n        <p>Enabled for Template</p>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!isModuleOnly(module) && module.moduleFields.length > 0\\\">\\r\\n      <h2>{{i18n.common + module.name | dynamicTranslate }}</h2>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div class=\\\"form-group\\\" *ngFor=\\\"let field of formLayouts[module.id].oddOrderedFields\\\">\\r\\n\\r\\n            <label for=\\\"input[field.Id]\\\">{{field.name}}</label>\\r\\n            <input disabled type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"input[field.Id]\\\" aria-describedby=\\\"input[field.Id]\\\" placeholder=\\\"\\\">\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div class=\\\"form-group\\\" *ngFor=\\\"let field of formLayouts[module.id].evenOrderedFields\\\">\\r\\n\\r\\n\\r\\n            <label for=\\\"input[field.Id]\\\">{{field.name}}</label>\\r\\n            <input disabled type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"input[field.id]\\\" aria-describedby=\\\"input[field.id]\\\" placeholder=\\\"\\\">\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </ng-container>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"wizard-actions\\\">\\r\\n\\r\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"navigateBack($event)\\\">{{i18n.common + 'Back' | dynamicTranslate }}</button>\\r\\n\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{i18n.common + 'Continue' | dynamicTranslate }}</button>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</form>\"","export default \"\\r\\n<div [class.container]=\\\"!isEditingForGroup\\\">\\r\\n\\r\\n  <h1 appTooltip=\\\"test\\\">{{i18n.templateManagement + name | dynamicTranslate }}</h1>\\r\\n\\r\\n  <ngb-tabset (tabChange)=\\\"beforeChange($event)\\\" type=\\\"pills\\\" #tabs>\\r\\n    <ngb-tab id=\\\"step-1\\\">\\r\\n      <ng-template ngbTabTitle><span>{{i18n.templateManagement + 'Step 1' | dynamicTranslate }}</span><em>{{i18n.templateManagement + 'Setup & Choose Modules' | dynamicTranslate }}</em></ng-template>\\r\\n      <ng-template ngbTabContent>\\r\\n        \\r\\n        <app-template-builder-step1 [template]='template' [templates]='templates' [modules]='modules' [offices]='offices' [selectedModules]='selectedModules' (templateUpdated)='onTemplateUpdated($event)' ></app-template-builder-step1>\\r\\n\\r\\n      </ng-template>\\r\\n    </ngb-tab>\\r\\n    <ngb-tab id=\\\"step-2\\\" [disabled]=\\\"isActive('step-2')\\\">\\r\\n      <ng-template ngbTabTitle ><span>{{i18n.templateManagement + 'Step 2' | dynamicTranslate }}</span><em>{{i18n.templateManagement + 'Choose Fields Per Module' | dynamicTranslate }}</em></ng-template>\\r\\n      <ng-template ngbTabContent>\\r\\n      \\r\\n        <app-template-builder-step2   [template]='template' [modules]='modules' [selectedModules]='selectedModules' (templateUpdated)='onTemplateUpdated($event)'></app-template-builder-step2>\\r\\n\\r\\n      </ng-template>\\r\\n    </ngb-tab>\\r\\n\\r\\n    <ngb-tab id=\\\"step-3\\\" [disabled]=\\\"isActive('step-3')\\\">\\r\\n      <ng-template ngbTabTitle><span>{{i18n.templateManagement + 'Step 3' | dynamicTranslate }}</span><em>{{i18n.templateManagement + 'Create Form Layout' | dynamicTranslate }}</em></ng-template>\\r\\n      <ng-template ngbTabContent>\\r\\n        \\r\\n        <app-template-builder-step3 [template]='template' [modules]='modules' [selectedModules]='selectedModules'></app-template-builder-step3>\\r\\n\\r\\n\\r\\n      </ng-template>\\r\\n    </ngb-tab>\\r\\n    <ngb-tab id=\\\"step-4\\\" [disabled]=\\\"isActive('step-4')\\\">\\r\\n      <ng-template ngbTabTitle><span>{{i18n.templateManagement + 'Step 4' | dynamicTranslate }}</span><em>{{i18n.templateManagement + 'Review & Finish' | dynamicTranslate }}</em></ng-template>\\r\\n      <ng-template ngbTabContent>\\r\\n        \\r\\n        <app-template-builder-step4 [template]='template' [modules]='modules' [selectedModules]='selectedModules'></app-template-builder-step4>\\r\\n\\r\\n      </ng-template>\\r\\n    </ngb-tab>\\r\\n \\r\\n\\r\\n  </ngb-tabset>\\r\\n  \\r\\n\\r\\n\\r\\n\\r\\n</div>\"","export default \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n      <p><span><strong><ng-container i18n=\\\"Username@@usereditUsername\\\">Username</ng-container>:</strong></span>&nbsp;{{user.Username}}</p>\\r\\n    <p><span><strong><ng-container i18n=\\\"Name@@usereditName\\\">Name</ng-container>:</strong></span>&nbsp;{{user.Name}}</p>\\r\\n    <p><span><strong><ng-container i18n=\\\"Active@@usereditActive\\\">Active</ng-container>:</strong></span>&nbsp;{{user.Active}}</p>\\r\\n    <p><span><strong><ng-container i18n=\\\"Date Added@@usereditDateAdded\\\">Date Added</ng-container>: </strong>&nbsp;{{user.DateAdded | kendoDate }}</span></p>\\r\\n    <p><span><strong><ng-container i18n=\\\"Donation amount@@usereditDonation\\\">Donation Amount</ng-container>: </strong>&nbsp;{{user.DonationAmount | kendoNumber:'c' }}</span></p>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col col-lg-6\\\">\\r\\n    <user-list></user-list>\\r\\n  </div>\\r\\n  <div class=\\\"col col-lg-6\\\">\\r\\n    <user-edit></user-edit>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col col-lg-6\\\">\\r\\n    <kendo-grid [resizable]=\\\"true\\\" [data]=\\\"users\\\" [selectable]=\\\"true\\\" [rowSelected]=\\\"isRowSelected\\\" (selectionChange)=\\\"selectRow($event)\\\">\\r\\n      <kendo-grid-column field=\\\"Username\\\" i18n-title=\\\"User list Username col@@userlistUsernameCol\\\" title=\\\"Username\\\" [width]=\\\"100\\\"></kendo-grid-column>\\r\\n      <kendo-grid-column field=\\\"Name\\\" i18n-title=\\\"User list Name col@@userlistNameCol\\\" title=\\\"Name\\\" [width]=\\\"150\\\"></kendo-grid-column>\\r\\n      <kendo-grid-column field=\\\"Active\\\" i18n-title=\\\"User list Active col@@userlistActiveCol\\\" title=\\\"Active\\\" [width]=\\\"40\\\">\\r\\n        <ng-template kendoGridCellTemplate let-user>\\r\\n\\r\\n          <div class=\\\"checkbox k-form-field\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"k-checkbox\\\" id=\\\"userActive\\\" [checked]=\\\"user.Active\\\" disabled>\\r\\n            <label class=\\\"k-checkbox-label\\\" for=\\\"userActive\\\"></label>\\r\\n          </div>\\r\\n    \\r\\n\\r\\n        </ng-template>\\r\\n      </kendo-grid-column>\\r\\n    </kendo-grid>\\r\\n    <div *ngIf=\\\"selectedUser\\\">\\r\\n      <h2>{{selectedUser.Name}} </h2>\\r\\n      <div><label><ng-container i18n=\\\"User list username label@@userlistUsername\\\"></ng-container>{{i18n.common + 'Username:' | dynamicTranslate}}&nbsp; </label>{{selectedUser.Username}}</div>\\r\\n      <div>\\r\\n        <label><ng-container i18n=\\\"User list name label@@userlistName\\\">{{i18n.common + 'Name' | dynamicTranslate}}</ng-container>: </label>\\r\\n        <input [(ngModel)]=\\\"selectedUser.Name\\\" i18n-placeholder=\\\"User list name placeholder@@userlistinputNamePlaceholder\\\" placeholder=\\\"name\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col col-lg-6\\\">\\r\\n    <user-edit [user]=\\\"selectedUser\\\"></user-edit>\\r\\n  </div>\\r\\n  <button (click)=\\\"delete()\\\" i18n=\\\"User list delete all users button text@@userlistDeleteAllButton\\\">{{i18n.admin + 'Delete All Users' | dynamicTranslate}}</button>\\r\\n</div>\"","export default \"<div [class.isBusy]=\\\"isBusy\\\" class=\\\"wrapper\\\">\\r\\n\\r\\n    <div class=\\\"spinner\\\">\\r\\n        <div class=\\\"dot1\\\"></div>\\r\\n        <div class=\\\"dot2\\\"></div>\\r\\n      </div>\\r\\n\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\\r\\n<ng-container *ngIf=\\\"!isBusy && userIsActive == false && isAuthError != true\\\">\\r\\n\\r\\n  <div class=\\\"container error-pages\\\">\\r\\n    <!-- Jumbotron -->\\r\\n    <div class=\\\"jumbotron\\\">\\r\\n      <h1>You Are Logged Out</h1>\\r\\n      <p class=\\\"lead\\\">Your session has expired and you have been logged out.</p>\\r\\n      <!-- <p>Detail: {{errorMessage}}</p> -->\\r\\n      <p>\\r\\n        <a i18n=\\\"\\\" class=\\\"\\\" href=\\\"#\\\" [routerLink]=\\\"['/dashboard']\\\">Take me to the Dashboard</a>\\r\\n      </p>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</ng-container>\\r\\n\\r\\n\"","export default \"<div id=\\\"ProjectProfile\\\" class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <nav class=\\\"col-sm-3 col-md-2 hidden-xs-down bg-faded sidebar\\\" *ngIf=\\\"!isCollapsed\\\" [@inOutFromLeftSideAnimation]>\\r\\n            <ul class=\\\"menu list-unstyled\\\">\\r\\n                <li>\\r\\n                    <a class=\\\"nav-link\\\" href=\\\"#\\\" [routerLink]=\\\"['/dashboard/all-projects']\\\" routerLinkActive=\\\"active\\\">{{'dashboard.home.leftnav.All Projects' | dynamicTranslate}}</a>\\r\\n                </li>\\r\\n            </ul>\\r\\n            \\r\\n        </nav>\\r\\n\\r\\n        <main [ngClass]=\\\"{'col-sm-9 offset-sm-3 col-md-10 offset-md-2 menu-expanded' : isCollapsed === false, 'col-sm-12 ml-2 pt-3 mr-2' : isCollapsed === true}\\\">\\r\\n            <router-outlet></router-outlet>\\r\\n        </main>\\r\\n    </div>\\r\\n</div>\"","export default \"<div id=\\\"DashboardModule\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <br />\\r\\n    <div class=\\\"col-md-10 pull-left\\\">\\r\\n      <h1>{{ i18n.common + 'All Projects' | dynamicTranslate }}</h1>\\r\\n    </div>\\r\\n  </div>\\r\\n  <br />\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12 actions pb-2\\\">\\r\\n      <button *ngIf=\\\"headers.length > 0 && !defaultFilterSet\\\" class=\\\"btn btn-sm btn-secondary float-right\\\" type=\\\"button\\\" (click)=\\\"saveDefaultFilter()\\\">{{i18n.common + 'Save Default Filter' | dynamicTranslate}}</button>\\r\\n      <button *ngIf=\\\"headers.length > 0 && defaultFilterSet\\\" class=\\\"btn btn-sm btn-primary float-right\\\" type=\\\"button\\\" (click)=\\\"clearDefaultFilter()\\\">{{i18n.common + 'Clear Default Filter' | dynamicTranslate}}</button>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div>\\r\\n        <kendo-grid\\r\\n          *ngIf=\\\"headers.length > 0\\\"\\r\\n          [selectable]=\\\"true\\\"\\r\\n          [data]=\\\"gridViewData\\\"\\r\\n          [filter]=\\\"state.filter\\\"\\r\\n          [filterable]=\\\"true\\\"\\r\\n          [pageSize]=\\\"state.take\\\"\\r\\n          [reorderable]=\\\"true\\\"\\r\\n          [sortable]=\\\"true\\\"\\r\\n          [sort]=\\\"state.sort\\\"\\r\\n          [pageable]=\\\"true\\\"\\r\\n          [pageSize]=\\\"state.take\\\"\\r\\n          [skip]=\\\"state.skip\\\"\\r\\n          (sortChange)=\\\"sortChange($event)\\\"\\r\\n          (filterChange)=\\\"filterChange($event)\\\"\\r\\n          (dataStateChange)=\\\"dataStateChange($event)\\\" (columnReorder)=\\\"onColumnReorder($event)\\\"\\r\\n        >\\r\\n          <ng-container *ngFor=\\\"let column of headers | orderBy: 'order'\\\">\\r\\n            <kendo-grid-column #grid\\r\\n              [reorderable]=\\\"true\\\"\\r\\n              field=\\\"{{column.name}}\\\"\\r\\n              format=\\\"{{column.format}}\\\"\\r\\n              title=\\\"{{getColumnTitle(column)}}\\\"\\r\\n              editable=\\\"{{column.isEditable}}\\\"\\r\\n            >\\r\\n              <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                <ng-template kendoGridFilterMenuTemplate let-filter let-column=\\\"column\\\" let-filterService=\\\"filterService\\\">\\r\\n                  <kendo-grid-string-filter-cell [column]=\\\"column\\\" [filter]=\\\"filter\\\">\\r\\n                    <kendo-filter-eq-operator></kendo-filter-eq-operator>\\r\\n                    <kendo-filter-neq-operator></kendo-filter-neq-operator>\\r\\n                    <kendo-filter-startswith-operator></kendo-filter-startswith-operator>\\r\\n                    <kendo-filter-contains-operator></kendo-filter-contains-operator>\\r\\n                    <kendo-filter-not-contains-operator></kendo-filter-not-contains-operator>\\r\\n                    <kendo-filter-isnull-operator></kendo-filter-isnull-operator>\\r\\n                    <kendo-filter-isnotnull-operator></kendo-filter-isnotnull-operator>\\r\\n                  </kendo-grid-string-filter-cell>\\r\\n                </ng-template>\\r\\n\\r\\n                <div class=\\\"btn-circle\\\">{{ dataItem[column.name] }}</div>\\r\\n              </ng-template>\\r\\n            </kendo-grid-column>\\r\\n          </ng-container>\\r\\n\\r\\n        \\r\\n\\r\\n          <kendo-grid-column [reorderable]=\\\"false\\\" [title]=\\\"i18n.common + 'Actions' | dynamicTranslate\\\" width=\\\"100\\\">\\r\\n            <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n              <a class=\\\"clickable-link\\\" (click)=\\\"navigateToProject(dataItem.primaryGroupId, $event)\\\">{{\\r\\n                i18n.dashboard + 'View Project' | dynamicTranslate\\r\\n              }}</a>\\r\\n            </ng-template>\\r\\n          </kendo-grid-column>\\r\\n\\r\\n          <div *kendoGridDetailTemplate=\\\"let dataItem\\\"><dashboard-groups [id]=\\\"dataItem.id\\\"></dashboard-groups></div>\\r\\n\\r\\n        </kendo-grid>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<button type=\\\"button\\\" (click)=\\\"open($event)\\\" class=\\\"btn btn-action btn-small custom-fields\\\">\\r\\n    <i class=\\\"fa fa-plus\\\"></i>\\r\\n</button>\\r\\n<strong> &nbsp; {{ i18n.common + 'Add Custom Column' | dynamicTranslate }}</strong>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\r\\n    <form (ngSubmit)=\\\"onSubmit(createCustomColumnForm)\\\" #createCustomColumnForm=\\\"ngForm\\\">\\r\\n\\r\\n        <div class=\\\"modal-body\\\">\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"columnNameInput\\\">{{i18n.common + 'Name' | dynamicTranslate}}\\r\\n                    <span class=\\\"required-indicator\\\">*</span>\\r\\n                </label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"columnName\\\" id=\\\"columnNameInput\\\" required #columnNameInput=\\\"ngModel\\\" [(ngModel)]=\\\"name\\\"\\r\\n                    pattern=\\\"^[a-zA-Z_$][a-zA-Z_$0-9]*$\\\">\\r\\n\\r\\n                <div *ngIf=\\\"columnNameInput.errors && (columnNameInput.dirty || columnNameInput.touched || columnNameInput.submitted)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div [hidden]=\\\"!columnNameInput.errors.required\\\">\\r\\n                        {{i18n.common + 'Field name is required.' | dynamicTranslate }}.\\r\\n                    </div>\\r\\n                    <div [hidden]=\\\"!columnNameInput.errors?.pattern\\\">{{i18n.common + 'customcolumnscannotcontainspacesorspecialcharacters.' | dynamicTranslate }}.</div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"!isNameValid\\\" class=\\\"alert alert-danger\\\">\\r\\n                    {{i18n.common + 'Field name must be unique.' | dynamicTranslate }}.      \\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"customColumnDataTypeSelect\\\">{{i18n.common + 'Data Type' | dynamicTranslate}}</label>\\r\\n                <select class=\\\"form-control\\\" [(ngModel)]=\\\"dataType\\\" name=\\\"customColumnDataType\\\" id=\\\"customColumnDataTypeSelect\\\" required\\r\\n                    #customColumnDataTypeSelect=\\\"ngModel\\\">\\r\\n                    <option value=\\\"\\\" disabled selected>{{i18n.common + 'Select Data Type' | dynamicTranslate }}</option>\\r\\n                    <option *ngFor=\\\"let opt of customColumnDataTypes\\\" [value]=\\\"opt.dataType\\\">{{i18n.common + opt.displayName | dynamicTranslate }}</option>\\r\\n                </select>\\r\\n\\r\\n                <div *ngIf=\\\"customColumnDataTypeSelect.errors && (customColumnDataTypeSelect.dirty || customColumnDataTypeSelect.touched || customColumnDataTypeSelect.submitted)\\\"\\r\\n                    class=\\\"alert alert-danger\\\">\\r\\n                    <div [hidden]=\\\"!customColumnDataTypeSelect.errors.required\\\">\\r\\n                        {{i18n.common + 'Please select a data type' | dynamicTranslate }}.\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{i18n.common + 'Cancel' | dynamicTranslate}}</button>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{i18n.common + action | dynamicTranslate}}</button>\\r\\n        </div>\\r\\n\\r\\n    </form>\\r\\n</ng-template>\"","export default \"<div *ngIf=\\\"!isError\\\">\\r\\n    <ngb-alert type=\\\"success\\\" [dismissible]=\\\"false\\\">\\r\\n      <b>{{i18n.dataImport + 'Copy Successful' | dynamicTranslate }}</b>\\r\\n      <br> {{rowsCopied}} {{  i18n.dataImport + 'records were successfully copied to the' | dynamicTranslate }} {{dataTargetName}} {{  i18n.dataImport + 'Asset File' | dynamicTranslate}}\\r\\n    </ngb-alert>\\r\\n</div>\\r\\n<div *ngIf=\\\"isError\\\">\\r\\n    <ngb-alert type=\\\"danger\\\" [dismissible]=\\\"false\\\">\\r\\n        <b>{{i18n.dataImport + 'Copy Failed' | dynamicTranslate }}</b>\\r\\n        <br />\\r\\n        <br />\\r\\n        <div *ngIf=\\\"errorMessage?.length\\\">\\r\\n            {{i18n.dataImport + 'Details' | dynamicTranslate }}:\\r\\n            <br />\\r\\n            {{errorMessage}}\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!errorMessage?.length\\\">\\r\\n            {{i18n.dataImport + 'Details' | dynamicTranslate }}:\\r\\n            <br />\\r\\n            {{i18n.dataImport + 'An unknown error has occurred during the Data Copy proccess' | dynamicTranslate }}.\\r\\n        </div>\\r\\n    </ngb-alert>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"wizard-actions\\\">\\r\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"finish($event)\\\">{{ i18n.dataImport + 'Finish' | dynamicTranslate }}</button>\\r\\n</div>\"","export default \"<div class=\\\"form-group row\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n        <label for=\\\"AvailableDataTargets\\\">{{i18n.dataImport + 'Destination Data Options' | dynamicTranslate}}</label>\\r\\n        <select class=\\\"form-control\\\" id=\\\"AvailableDataTargets\\\" [(ngModel)]=\\\"dataTargetName\\\" name=\\\"selectedDataTarget\\\"\\r\\n        #inputAvailableDataTargets=\\\"ngModel\\\" (ngModelChange)=\\\"dataTargetChanged($event)\\\" required>\\r\\n            <option value=\\\"\\\" disabled>{{ i18n.dataImport + 'Select a Data Option' | dynamicTranslate }}</option>\\r\\n            <option *ngFor=\\\"let opt of availableDataTargets\\\" [value]=\\\"opt.name\\\">{{i18n.dataImport + opt.name | dynamicTranslate }}</option>\\r\\n        </select>\\r\\n\\r\\n        <div *ngIf=\\\"inputAvailableDataTargets.errors && (inputAvailableDataTargets.dirty || inputAvailableDataTargets.touched)\\\"\\r\\n            class=\\\"alert alert-danger\\\">\\r\\n            <div [hidden]=\\\"!inputAvailableDataTargets.errors.required\\\">\\r\\n                {{ i18n.dataImport + 'Please select a data option' | dynamicTranslate }}\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"dataTargetName?.length && dataAlreadyExists\\\" class=\\\"alert alert-warning\\\">\\r\\n            {{i18n.dataImport + 'Warning: The' | dynamicTranslate }} {{i18n.dataImport + dataTargetName | dynamicTranslate}} {{i18n.dataImport + 'Asset File already contains data' | dynamicTranslate }}\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row pt-3\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"radio-inline pr-2\\\">\\r\\n                    <input type=\\\"radio\\\" [(ngModel)]=\\\"model.copyType\\\"  (click)=\\\"updateCopyType($event)\\\" name=\\\"copyType\\\" value='replace' [checked]=\\\"model.copyType==='replace'\\\">\\r\\n                        {{i18n.dataImport + 'Replace' | dynamicTranslate}}\\r\\n                </label>\\r\\n                <label class=\\\"radio-inline pl-2\\\">\\r\\n                    <input type=\\\"radio\\\" (click)=\\\"updateCopyType($event)\\\" [(ngModel)]=\\\"model.copyType\\\"  name=\\\"copyType\\\" value='append' [checked]=\\\"model.copyType==='append'\\\">\\r\\n                        {{i18n.dataImport + 'Append' | dynamicTranslate }}\\r\\n                </label>\\r\\n            </div>\\r\\n            <div #selections></div>\\r\\n            <button type=\\\"button\\\" (click)=\\\"addSelection()\\\" class=\\\"btn btn-action btn-small\\\">\\r\\n                <i class=\\\"fa fa-plus\\\"></i>\\r\\n            </button>\\r\\n            <strong>&nbsp;{{i18n.dataImport + 'Add Selection' | dynamicTranslate}}</strong>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n    <div *ngIf=\\\"selectionErrors\\\" class=\\\"row pt-3 pl-3\\\">\\r\\n        <div class=\\\"alert alert-danger\\\">\\r\\n            <div>\\r\\n                {{ i18n.dataImport + 'Please be sure to choose a Destination as well as a Contract and Group for each selection' | dynamicTranslate }}\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"form-group pt-4\\\">\\r\\n        <button [disabled]=\\\"!hasSelections()\\\" class=\\\"btn btn-primary\\\" (click)=\\\"copyData()\\\">{{ i18n.dataImport + 'Copy Data to Group' | dynamicTranslate }}</button>\\r\\n    </div>\\r\\n   \"","export default \"<div id=\\\"DataImport\\\">\\r\\n    <ngb-tabset type=\\\"pills\\\" #copytabs>\\r\\n      <ngb-tab id=\\\"step-1-copy\\\">\\r\\n        <ng-template ngbTabTitle>\\r\\n          <span>{{i18n.dataImport + 'Step 1' | dynamicTranslate }}</span>\\r\\n          <em>{{i18n.dataImport + 'Copy Data' | dynamicTranslate }}</em>\\r\\n        </ng-template>\\r\\n        <ng-template ngbTabContent>\\r\\n  \\r\\n          <app-data-copy-groups></app-data-copy-groups>\\r\\n  \\r\\n        </ng-template>\\r\\n      </ngb-tab>\\r\\n      <ngb-tab id=\\\"step-2-copy\\\" [disabled]=\\\"isActive('step-2-copy')\\\">\\r\\n        <ng-template ngbTabTitle>\\r\\n          <span>{{i18n.dataImport + 'Step 2' | dynamicTranslate }}</span>\\r\\n          <em>{{i18n.dataImport + 'Finish Copy' | dynamicTranslate }}</em>\\r\\n        </ng-template>\\r\\n        <ng-template ngbTabContent>\\r\\n\\r\\n          <app-data-copy-finish></app-data-copy-finish>\\r\\n\\r\\n        </ng-template>\\r\\n      </ngb-tab>\\r\\n  \\r\\n    </ngb-tabset>\\r\\n  </div>\"","export default \"<div *ngIf=\\\"!isError\\\">\\r\\n  <ngb-alert type=\\\"success\\\" [dismissible]=\\\"false\\\">\\r\\n    <b>{{i18n.dataImport + 'Upload Successful' | dynamicTranslate}}</b>\\r\\n    <br>{{importResult.rowsAdded}} {{i18n.dataImport + dataImport.spreadsheetUpload.dataTargetName | dynamicTranslate}} records were successfully added.\\r\\n    <span><br>{{importResult.rowsUpdated}} {{i18n.dataImport + dataImport.spreadsheetUpload.dataTargetName | dynamicTranslate}} records were successfully updated.</span>\\r\\n  </ngb-alert>\\r\\n    \\r\\n</div>\\r\\n<div *ngIf=\\\"isError\\\">\\r\\n  <ngb-alert type=\\\"danger\\\" [dismissible]=\\\"false\\\">\\r\\n    <b>{{i18n.dataImport + 'Upload Failed' | dynamicTranslate }}</b>\\r\\n    <br /> \\r\\n    {{i18n.dataImport + 'The selected spreadsheet was not able to be imported.  Please verify column mapping and/or spreadsheet data format' | dynamicTranslate }}\\r\\n    <br />\\r\\n    <br />\\r\\n    {{i18n.dataImport + 'Details' | dynamicTranslate}}:\\r\\n    <br />\\r\\n    <span *ngFor=\\\"let error of importResult.errors\\\">\\r\\n      {{error}}\\r\\n      <br />\\r\\n    </span>\\r\\n  </ngb-alert>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"wizard-actions\\\">\\r\\n  <button *ngIf=\\\"isError\\\" (click)=\\\"back($event)\\\" class=\\\"btn btn\\\">{{ i18n.common + 'Back' | dynamicTranslate }}</button>\\r\\n\\r\\n  <button class=\\\"btn btn-primary\\\" (click)=\\\"onSave($event)\\\">{{ i18n.dataImport + 'Finish' | dynamicTranslate}}</button>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"row\\\" style=\\\"margin-bottom:20px;\\\">\\r\\n  <div class=\\\"col-md-8 d-inline\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-small btn-primary\\\" data-toggle=\\\"button\\\" aria-pressed=\\\"false\\\" autocomplete=\\\"off\\\" (click)=\\\"toggleAutoMapped()\\\">\\r\\n      {{i18n.dataImport + showHideAutoMappedText | dynamicTranslate }}\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-small btn-primary\\\" data-toggle=\\\"button\\\" aria-pressed=\\\"false\\\" autocomplete=\\\"off\\\" (click)=\\\"toggleCategories()\\\">\\r\\n      {{i18n.dataImport + showHideCategoriesText | dynamicTranslate }}\\r\\n    </button>\\r\\n    <select *ngIf=\\\"!activeReplace && !isBuilding\\\" class=\\\"float-right form-control-sm\\\" (change)=\\\"onKeyFieldSelect()\\\" [(ngModel)]=\\\"keyFieldId\\\">\\r\\n      <option value=\\\"\\\" disabled>Select Key Field</option>\\r\\n      <ng-container *ngFor=\\\"let option of keyFields | orderBy: 'name'\\\">\\r\\n        <option [value]=\\\"option.id\\\">{{option.name}}</option>\\r\\n      </ng-container>\\r\\n    </select>\\r\\n    <label *ngIf=\\\"isBuilding\\\"class=\\\"float-right\\\">Using Display ID as key field</label>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <h4><span>{{i18n.dataImport + 'mappedColumns' | dynamicTranslate}}</span><span> {{mappedSpreadsheetColumns}}</span></h4>\\r\\n    <h4><span>{{i18n.dataImport + 'unmappedColumns' | dynamicTranslate}}</span><span> {{unmappedSpreadsheetColumns}}</span></h4>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<form (ngSubmit)=\\\"onSubmit(dataMappingForm)\\\" #dataMappingForm=\\\"ngForm\\\" (change)=\\\"updateMappedTotals()\\\">\\r\\n  <div class=\\\"form-group data-map-table\\\">\\r\\n    <table class=\\\"table table-striped table-bordered\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\">\\r\\n            {{ i18n.common + 'Destination' | dynamicTranslate }}: {{i18n.dataImport + dataTargetName | dynamicTranslate }}\\r\\n          </th>\\r\\n          <th scope=\\\"col\\\">\\r\\n            {{ i18n.common + 'Source' | dynamicTranslate }}: {{sourceSpreadsheetName}}\\r\\n          </th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <ng-container *ngIf=\\\"hideCategories\\\">\\r\\n          <tr *ngFor=\\\"let map of (mapping | showAutoMapped:hideAutoMapped)\\\" [ngClass]=\\\"{'is-mapped':map.spreadsheetColumn.name}\\\">\\r\\n            <td> {{i18n.dataImport + map.dataTargetField | dynamicTranslate }} ( {{map.columnDataType }}{{map.colLength==0 ? '': ', ' + map.colLength  }} )</td>\\r\\n            <td>\\r\\n              <select class=\\\"form-control form-control-sm data-mapping\\\" id=\\\"DataMapping\\\" name=\\\"{{map.importTemplateColumnId}}\\\" (change)=\\\"updateAvailableOptions($event)\\\"\\r\\n                [(ngModel)]=\\\"map.spreadsheetColumn.name\\\">\\r\\n                <option value=\\\"\\\"></option>\\r\\n                <ng-container *ngFor=\\\"let option of spreadsheetColumnsAvail\\\">\\r\\n                  <option *ngIf=\\\"option.column.name === map.spreadsheetColumn.name\\\" [value]=\\\"option.column.name\\\">{{option.column.title}}</option>\\r\\n                  <option *ngIf=\\\"!option.isMapped\\\" [value]=\\\"option.column.name\\\">{{option.column.title}}</option>\\r\\n                </ng-container>\\r\\n              </select>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n        <ng-container *ngIf=\\\"!hideCategories\\\">\\r\\n          <ng-container *ngFor=\\\"let columnCategory of columnCategories\\\">\\r\\n            <tr *ngIf=\\\"(columnCategory.columnMap | showAutoMapped:hideAutoMapped)?.length > 0\\\">\\r\\n              <td colspan=\\\"2\\\" style=\\\"background-color: #465661; font-size: 1.2rem; text-align: center; color: #ffffff;\\\">\\r\\n                {{ i18n.dataImport + columnCategory.categoryName | dynamicTranslate }}\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr *ngFor=\\\"let map of (columnCategory.columnMap | showAutoMapped:hideAutoMapped)\\\" [ngClass]=\\\"{'is-mapped':map.spreadsheetColumn.name}\\\">\\r\\n              <td> {{i18n.dataImport + map.dataTargetField | dynamicTranslate }} ( {{map.columnDataType }}{{map.colLength==0 ? '': ', ' + map.colLength  }} )</td>\\r\\n              <td>\\r\\n                <select class=\\\"form-control form-control-sm data-mapping\\\" id=\\\"DataMapping\\\" name=\\\"{{map.importTemplateColumnId}}\\\" (change)=\\\"updateAvailableOptions($event)\\\"\\r\\n                  [(ngModel)]=\\\"map.spreadsheetColumn.name\\\">\\r\\n                  <option value=\\\"\\\"></option>\\r\\n                  <ng-container *ngFor=\\\"let option of spreadsheetColumnsAvail\\\">\\r\\n                    <option *ngIf=\\\"option.column.name === map.spreadsheetColumn.name\\\" [value]=\\\"option.column.name\\\">{{option.column.title}}</option>\\r\\n                    <option *ngIf=\\\"!option.isMapped\\\" [value]=\\\"option.column.name\\\">{{option.column.title}}</option>\\r\\n                  </ng-container>\\r\\n                </select>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-container>          \\r\\n        </ng-container>\\r\\n      </tbody>\\r\\n    </table>\\r\\n    <create-custom-column  [columnNames]=\\\"columnNames\\\" (onAddCustomColumn)=\\\"handleCreatedCustomColumn($event)\\\"></create-custom-column>\\r\\n  </div>\\r\\n  <ngb-alert type=\\\"danger\\\" (close)=\\\"closeAlert()\\\" *ngIf=\\\"showMappingAlert\\\">\\r\\n    {{ i18n.dataImport + 'Please map data fields before continuing' | dynamicTranslate}} </ngb-alert>\\r\\n  <ngb-alert type=\\\"danger\\\" (close)=\\\"closeAlert()\\\" *ngIf=\\\"showKeyFieldMappingAlert\\\">\\r\\n    {{ i18n.dataImport + 'Please select a key field to update' | dynamicTranslate}}</ngb-alert>\\r\\n  <ngb-alert type=\\\"danger\\\" (close)=\\\"closeAlert()\\\" *ngIf=\\\"!hasDisplayIdColumn && isBuilding\\\">\\r\\n    {{ i18n.dataImport + 'Spreadsheet does not contain Display Id column' | dynamicTranslate}}</ngb-alert>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <button (click)=\\\"back($event)\\\" class=\\\"btn btn\\\">{{ i18n.common + 'Back' | dynamicTranslate}}</button>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [ladda]=\\\"isLoading\\\">{{ i18n.common + 'Continue' | dynamicTranslate}}</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","export default \"<h1 appTooltip=\\\"test\\\">{{i18n.dataImport + 'Import Data' | dynamicTranslate}}</h1>\\r\\n\\r\\n<ngb-tabset type=\\\"pills\\\" id=\\\"parent-tabs\\\">\\r\\n  <ngb-tab id=\\\"option-1\\\">\\r\\n    <ng-template ngbTabTitle>\\r\\n      <span>{{i18n.dataImport + 'Upload Data' | dynamicTranslate}}</span>\\r\\n    </ng-template>\\r\\n    <ng-template ngbTabContent>\\r\\n\\r\\n      <app-data-import></app-data-import>\\r\\n\\r\\n    </ng-template>\\r\\n  </ngb-tab>\\r\\n  <ngb-tab id=\\\"option-2\\\" [disabled]=\\\"dataImportService.importResult.success\\\">\\r\\n    <ng-template ngbTabTitle>\\r\\n      <span>{{i18n.dataImport + 'Copy Data' | dynamicTranslate}}</span>\\r\\n    </ng-template>\\r\\n    <ng-template ngbTabContent>\\r\\n\\r\\n      <app-data-copy></app-data-copy>\\r\\n\\r\\n    </ng-template>\\r\\n  </ngb-tab>\\r\\n  <ngb-tab id=\\\"option-3\\\">\\r\\n    <ng-template ngbTabTitle>\\r\\n      <span>{{i18n.dataImport + 'PROS Renewal' | dynamicTranslate}}</span>\\r\\n    </ng-template>\\r\\n    <ng-template ngbTabContent>\\r\\n\\r\\n      <pros-renewal-wizard></pros-renewal-wizard>\\r\\n\\r\\n    </ng-template>\\r\\n  </ngb-tab>\\r\\n</ngb-tabset>\"","export default \"<ngb-alert type=\\\"danger\\\" [dismissible]=\\\"false\\\" *ngIf=\\\"spreadsheetHasErrors\\\">\\r\\n    <b>{{ i18n.dataImport + 'Upload Failed: ' + APIError | dynamicTranslate}}</b>\\r\\n    <br> {{ i18n.dataImport + 'Please validate spreadsheet data' | dynamicTranslate}}</ngb-alert>\\r\\n\\r\\n<form (ngSubmit)=\\\"onSubmit(dataImportForm)\\\" #dataImportForm=\\\"ngForm\\\">\\r\\n\\r\\n  <kendo-grid [resizable]=\\\"true\\\" [data]=\\\"sampleData\\\" [reorderable]=\\\"true\\\">\\r\\n\\r\\n    <ng-container *ngFor=\\\"let column of headers\\\">\\r\\n      <kendo-grid-column [width]=\\\"200\\\" field=\\\"{{column.key}}\\\" title=\\\"{{i18n.dataImport + column.key | dynamicTranslate }}\\\"\\r\\n        *ngIf=\\\"column.key != 'Id'\\\"></kendo-grid-column>\\r\\n    </ng-container>\\r\\n\\r\\n  </kendo-grid>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <button (click)=\\\"back($event)\\\" class=\\\"btn btn\\\">{{ i18n.common + 'Back' | dynamicTranslate }}</button>\\r\\n\\r\\n    <button type=\\\"submit\\\" [disabled]=\\\"spreadsheetHasErrors\\\" [ngStyle]=\\\"{'cursor': spreadsheetHasErrors ? 'not-allowed' : 'pointer'}\\\" [ladda]=\\\"isLoading\\\" class=\\\"btn btn-primary\\\">{{i18n.common + 'Import Records' | dynamicTranslate }}</button>\\r\\n  </div>\\r\\n\\r\\n</form>\"","export default \"<ngb-alert type=\\\"danger\\\" [dismissible]=\\\"false\\\" *ngIf=\\\"showMissingFileAlert\\\">\\r\\n  <b>{{ i18n.dataImport + 'Upload Failed: ' + APIError | dynamicTranslate}}</b>\\r\\n  <br> {{ i18n.dataImport + 'Please upload a valid Excel file (.xlsx)' | dynamicTranslate}}</ngb-alert>\\r\\n\\r\\n<form (ngSubmit)=\\\"onSubmit(dataImportForm)\\\" #dataImportForm=\\\"ngForm\\\">\\r\\n\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <label for=\\\"AvailableDataOptions\\\">{{i18n.dataImport + 'Available Data Options' | dynamicTranslate}}</label>\\r\\n      <select class=\\\"form-control\\\" id=\\\"AvailableDataOptions\\\" [(ngModel)]=\\\"dto.dataTargetId\\\" name=\\\"selectedDataOption\\\" required\\r\\n        #inputAvailableDataOptions=\\\"ngModel\\\">\\r\\n        <option value=\\\"\\\" disabled>{{i18n.dataImport + 'Select a Data Option' | dynamicTranslate}}</option>\\r\\n        <option *ngFor=\\\"let opt of availableDataTargets\\\" [value]=\\\"opt.id\\\">{{ i18n.dataImport + opt.name | dynamicTranslate}}</option>\\r\\n\\r\\n      </select>\\r\\n\\r\\n      <div *ngIf=\\\"inputAvailableDataOptions.errors && (inputAvailableDataOptions.dirty || inputAvailableDataOptions.touched || dataImportForm.submitted)\\\"\\r\\n        class=\\\"alert alert-danger\\\">\\r\\n        <div [hidden]=\\\"!inputAvailableDataOptions.errors.required\\\">\\r\\n          {{i18n.dataImport + 'Please select a data option' | dynamicTranslate}}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n<div *ngIf=\\\"dataImportService.dataImportHistory\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label *ngIf=\\\"!dataImportService.reconciliationStarted && !isConsolidatedSelected()\\\" class=\\\"radio-inline pr-2\\\">\\r\\n      <input type=\\\"radio\\\" name=\\\"replace\\\" (change)=\\\"buttonChange('replace')\\\" [checked]=\\\"replace && isButtonSelected\\\">\\r\\n      {{i18n.dataImport + 'Replace' | dynamicTranslate}}\\r\\n    </label>\\r\\n    <label class=\\\"radio-inline pl-2\\\">\\r\\n      <input type=\\\"radio\\\" name=\\\"append\\\" (change)=\\\"buttonChange('append')\\\" [checked]=\\\"!replace && isButtonSelected\\\">\\r\\n      {{i18n.dataImport + 'Append' | dynamicTranslate}}</label>\\r\\n    <div *ngIf=\\\"!isButtonSelected && dataImportForm.submitted\\\" class=\\\"alert alert-danger\\\">\\r\\n      <div [hidden]=\\\"isButtonSelected\\\">\\r\\n        {{i18n.dataImport + 'Please select an import option' | dynamicTranslate}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <label for=\\\"exampleInputFile\\\" id=\\\"label\\\">{{i18n.dataImport + 'Upload Spreadsheet' | dynamicTranslate}}</label>\\r\\n\\r\\n      <input *ngIf=\\\"!dataImport.spreadsheetUpload\\\" type=\\\"file\\\" (change)=\\\"fileChange($event)\\\" name=\\\"file\\\" accept=\\\".xlsx\\\" class=\\\"form-control-file\\\" id=\\\"exampleInputFile\\\"\\r\\n        aria-describedby=\\\"fileHelp\\\">\\r\\n\\r\\n        <div *ngIf=\\\"dataImport.spreadsheetUpload\\\">\\r\\n            <button type=\\\"button\\\" (click)=\\\"clear()\\\">{{i18n.common + 'Clear File' | dynamicTranslate}}</button>\\r\\n            {{ dto.fileName }}\\r\\n        </div>\\r\\n      \\r\\n      <small id=\\\"fileHelp\\\" class=\\\"form-text text-muted\\\">{{i18n.dataImport + 'Upload a valid .xlsx file' | dynamicTranslate}}</small>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <button [disabled]=\\\"!dto.file\\\" [ladda]=\\\"isLoading\\\" type=\\\"submit\\\" (click)=\\\"importAfterReconciliation && !isConsolidatedSelected() ? displayPostReconcilModal($event, dataImportForm) : true\\\"\\r\\n      class=\\\"btn btn-primary\\\">{{i18n.dataImport + 'Upload &amp; Continue' | dynamicTranslate}}</button>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</form>\"","export default \"<div id=\\\"DataImport-Module\\\">\\r\\n\\r\\n  <ngb-tabset type=\\\"pills\\\" #tabs *ngIf=\\\"canDataImport && !isLoading\\\">\\r\\n    <ngb-tab id=\\\"step-1\\\" [disabled]=\\\"isActive('') || !!dataImportService.importResult.success\\\">\\r\\n      <ng-template ngbTabTitle>\\r\\n        <span>{{i18n.dataImport + 'Step 1' | dynamicTranslate}}</span>\\r\\n        <em>{{i18n.dataImport + 'Import Spreadsheet Data' | dynamicTranslate }}</em>\\r\\n      </ng-template>\\r\\n      <ng-template ngbTabContent>\\r\\n\\r\\n        <app-data-import-upload></app-data-import-upload>\\r\\n\\r\\n      </ng-template>\\r\\n    </ngb-tab>\\r\\n    <ngb-tab id=\\\"step-2\\\" [disabled]=\\\"isActive('step-2') || !!dataImportService.importResult.success\\\">\\r\\n      <ng-template ngbTabTitle>\\r\\n        <span>{{i18n.dataImport + 'Step 2' | dynamicTranslate }}</span>\\r\\n        <em>{{i18n.dataImport + 'Map Source to Destination' | dynamicTranslate }}</em>\\r\\n      </ng-template>\\r\\n      <ng-template ngbTabContent>\\r\\n\\r\\n        <app-data-import-mapping></app-data-import-mapping>\\r\\n\\r\\n      </ng-template>\\r\\n    </ngb-tab>\\r\\n    <ngb-tab id=\\\"step-3\\\" [disabled]=\\\"isActive('step-3') || !!dataImportService.importResult.success\\\">\\r\\n      <ng-template ngbTabTitle>\\r\\n        <span>{{i18n.dataImport + 'Step 3' | dynamicTranslate}}</span>\\r\\n        <em>{{i18n.dataImport + 'Review Data' | dynamicTranslate }}</em>\\r\\n      </ng-template>\\r\\n      <ng-template ngbTabContent>\\r\\n        <app-data-import-review></app-data-import-review>\\r\\n      </ng-template>\\r\\n    </ngb-tab>\\r\\n    <!--TODO: Determine why a ExpressionChangedAfterItHasBeenCheckedError is thrown when we get to step-4 -->\\r\\n        <ngb-tab id=\\\"step-4\\\">\\r\\n      <ng-template ngbTabTitle>\\r\\n        <span>{{i18n.dataImport + 'Step 4' | dynamicTranslate}}</span>\\r\\n        <em>{{i18n.dataImport + 'Finish Import' | dynamicTranslate}}</em>\\r\\n      </ng-template>\\r\\n      <ng-template ngbTabContent>\\r\\n        <app-data-import-finish></app-data-import-finish>\\r\\n      </ng-template>\\r\\n    </ngb-tab>\\r\\n\\r\\n  </ngb-tabset>\\r\\n\\r\\n  \\r\\n  <div class=\\\"row buffer-row\\\" *ngIf=\\\"!canDataImport  && !isLoading\\\">\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      <div class=\\\"alert alert-danger\\\">\\r\\n        {{errorMessage || i18n.dataImport + 'Data import is not allowed as consolidated file exists' | dynamicTranslate}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\"","export default \"<div class=\\\"form-group row\\\">\\r\\n  <div class=\\\"col-6\\\">\\r\\n      <label for=\\\"AvailableDataTargets\\\">{{i18n.dataImport + 'Destination Data Options' | dynamicTranslate}}</label>\\r\\n      <select class=\\\"form-control\\\" id=\\\"AvailableDataTargets\\\" [(ngModel)]=\\\"dataTargetName\\\" name=\\\"selectedDataTarget\\\"\\r\\n      #inputAvailableDataTargets=\\\"ngModel\\\" (ngModelChange)=\\\"dataTargetChanged($event)\\\" required>\\r\\n          <option value=\\\"\\\" disabled>{{ i18n.dataImport + 'Select a Data Option' | dynamicTranslate }}</option>\\r\\n          <option *ngFor=\\\"let opt of availableDataTargets\\\" [value]=\\\"opt.name\\\">{{i18n.dataImport + opt.name | dynamicTranslate }}</option>\\r\\n      </select>\\r\\n\\r\\n      <div *ngIf=\\\"inputAvailableDataTargets.errors && (inputAvailableDataTargets.dirty || inputAvailableDataTargets.touched)\\\"\\r\\n          class=\\\"alert alert-danger\\\">\\r\\n          <div [hidden]=\\\"!inputAvailableDataTargets.errors.required\\\">\\r\\n              {{ i18n.dataImport + 'Please select a data option' | dynamicTranslate }}\\r\\n          </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"dataTargetName?.length && dataAlreadyExists\\\" class=\\\"alert alert-warning\\\">\\r\\n          {{i18n.dataImport + 'Warning: The' | dynamicTranslate }} {{i18n.dataImport + dataTargetName | dynamicTranslate}} {{i18n.dataImport + 'Asset File already contains data' | dynamicTranslate }}\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row pt-3\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"radio-inline pr-2\\\">\\r\\n                  <input type=\\\"radio\\\" [(ngModel)]=\\\"model.copyType\\\"  (click)=\\\"updateCopyType($event)\\\" name=\\\"copyType\\\" value='replace' [checked]=\\\"model.copyType==='replace'\\\">\\r\\n                      {{i18n.dataImport + 'Replace' | dynamicTranslate}}\\r\\n              </label>\\r\\n              <label class=\\\"radio-inline pl-2\\\">\\r\\n                  <input type=\\\"radio\\\" (click)=\\\"updateCopyType($event)\\\" [(ngModel)]=\\\"model.copyType\\\"  name=\\\"copyType\\\" value='append' [checked]=\\\"model.copyType==='append'\\\">\\r\\n                      {{i18n.dataImport + 'Append' | dynamicTranslate }}\\r\\n              </label>\\r\\n          </div>\\r\\n          <div #selections></div>\\r\\n          <button type=\\\"button\\\" (click)=\\\"addSelection()\\\" class=\\\"btn btn-action btn-small\\\">\\r\\n              <i class=\\\"fa fa-plus\\\"></i>\\r\\n          </button>\\r\\n          <strong>&nbsp;{{i18n.dataImport + 'Add Selection' | dynamicTranslate}}</strong>\\r\\n      </div>\\r\\n  </div>\\r\\n  \\r\\n  <div *ngIf=\\\"selectionErrors\\\" class=\\\"row pt-3 pl-3\\\">\\r\\n      <div class=\\\"alert alert-danger\\\">\\r\\n          <div>\\r\\n              {{ i18n.dataImport + 'Please be sure to choose a Destination as well as a Contract and Group for each selection' | dynamicTranslate }}\\r\\n          </div>\\r\\n      </div>\\r\\n  </div>\\r\\n  \\r\\n  <div class=\\\"form-group pt-4\\\">\\r\\n      <button [disabled]=\\\"!hasSelections()\\\" class=\\\"btn btn-primary\\\" (click)=\\\"prosRenewal()\\\" >{{ i18n.dataImport + 'PROS Renewal' | dynamicTranslate }}</button>\\r\\n  </div>\\r\\n \"","export default \"<div id=\\\"DataImport\\\">\\r\\n  <ngb-tabset type=\\\"pills\\\" #prostabs>\\r\\n    <ngb-tab id=\\\"step-1-copy\\\">\\r\\n      <ng-template ngbTabTitle>\\r\\n        <span>{{i18n.dataImport + 'Step 1' | dynamicTranslate }}</span>\\r\\n        <em>{{i18n.dataImport + 'Copy Data' | dynamicTranslate }}</em>\\r\\n      </ng-template>\\r\\n      <ng-template ngbTabContent>\\r\\n\\r\\n        <app-data-pros-renewal></app-data-pros-renewal>\\r\\n\\r\\n      </ng-template>\\r\\n    </ngb-tab>\\r\\n    <ngb-tab id=\\\"step-2-copy\\\" [disabled]=\\\"isActive('step-2-copy')\\\">\\r\\n      <ng-template ngbTabTitle>\\r\\n        <span>{{i18n.dataImport + 'Step 2' | dynamicTranslate }}</span>\\r\\n        <em>{{i18n.dataImport + 'Finish Renewal' | dynamicTranslate }}</em>\\r\\n      </ng-template>\\r\\n      <ng-template ngbTabContent>\\r\\n\\r\\n        <app-data-copy-finish></app-data-copy-finish>\\r\\n\\r\\n      </ng-template>\\r\\n    </ngb-tab>\\r\\n\\r\\n  </ngb-tabset>\\r\\n</div>\"","export default \"<div class=\\\"container error-pages\\\">\\r\\n  <!-- Jumbotron -->\\r\\n  <div class=\\\"jumbotron\\\">\\r\\n    <h1>Access Denied</h1>\\r\\n    <p class=\\\"lead\\\">You do not have permissions to access the requested resource.</p>\\r\\n    <p>\\r\\n      <a i18n=\\\"\\\" class=\\\"\\\" href=\\\"/dashboard\\\" >Take me to the Dashboard</a>\\r\\n    </p>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"container error-pages\\\">\\r\\n  <div class=\\\"jumbotron\\\">\\r\\n    <h1>\\r\\n      <span class=\\\"glyphicon glyphicon-fire \\\"></span> {{i18n.common + 'Conflict' | dynamicTranslate}}\\r\\n    </h1>\\r\\n    <p class=\\\"lead\\\">{{i18n.common + 'The web server is returning a 409 conflict.' | dynamicTranslate}}</p>\\r\\n    <p class=\\\"lead\\\">{{i18n.common + 'To Resolve: Revert the latest transaction with identical displayId.' | dynamicTranslate}}</p>\\r\\n    <p>\\r\\n      <a (click)=\\\"backToPrevious()\\\">\\r\\n        <u>{{i18n.common + 'Go back to previous page.' | dynamicTranslate}}</u>\\r\\n      </a>\\r\\n    </p>\\r\\n    <p>\\r\\n      <a [routerLink]=\\\"['/dashboard']\\\">\\r\\n        <u>{{i18n.common + 'Take me to the Dashboard' | dynamicTranslate}}</u>\\r\\n      </a>\\r\\n    </p>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"container error-pages\\\">\\r\\n  <!-- Jumbotron -->\\r\\n  <div class=\\\"jumbotron\\\">\\r\\n    <h1><span class=\\\"glyphicon glyphicon-fire \\\"></span>Internal Server Error</h1>\\r\\n    <p class=\\\"lead\\\">The web server is returning an internal error.</p>\\r\\n    <a i18n=\\\"\\\" href=\\\"#\\\" (click)=\\\"reload($event)\\\">Take me to the Dashboard</a>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"container error-pages\\\">\\r\\n  <!-- Jumbotron -->\\r\\n  <div class=\\\"jumbotron\\\">\\r\\n    <h1>Not Found </h1>\\r\\n    <p class=\\\"lead\\\">We couldn't find what you're looking for.</p>\\r\\n    <p>\\r\\n      <a i18n=\\\"\\\" class=\\\"\\\" href=\\\"#\\\" [routerLink]=\\\"['/dashboard']\\\">Take me to the Dashboard</a>\\r\\n    </p>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"container error-pages\\\">\\r\\n  <!-- Jumbotron -->\\r\\n  <div class=\\\"jumbotron\\\">\\r\\n    <h1>Access Denied</h1>\\r\\n    <p class=\\\"lead\\\">You do not have permissions to login</p>\\r\\n    <p>\\r\\n      <a i18n=\\\"\\\" class=\\\"\\\" href=\\\"#\\\" [routerLink]=\\\"['/dashboard']\\\">Take me to the Dashboard</a>\\r\\n    </p>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"pb-4\\\">\\r\\n  <h1>{{ i18n.fileUpload + 'File Upload' | dynamicTranslate }}</h1>\\r\\n</div>\\r\\n<div>\\r\\n  <famis-grid *ngIf=\\\"!!finalizedDocumentsGrid.loading && !!finalizedDocumentsGrid.selectedHeaders\\\"\\r\\n    [famisGrid]=\\\"finalizedDocumentsGrid\\\" (sortChanged)=\\\"handleSortChanged($event)\\\" (actionEvent)=\\\"handleFinalizedFilesActionEvent($event)\\\">\\r\\n  </famis-grid>\\r\\n  <div *ngIf=\\\"!isUploading\\\">\\r\\n    <div class=\\\"checkbox k-form-field ml-1\\\">\\r\\n      <input [id]=\\\"'isInternal'\\\" [(ngModel)]=\\\"isInternalDocument\\\" class=\\\"k-checkbox\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\r\\n      <label class=\\\"k-checkbox-label\\\" [for]=\\\"'isInternal'\\\">{{ i18n.fileUpload + 'Do not publish to portal' | dynamicTranslate }}</label>\\r\\n    </div>\\r\\n    <file-upload-control [supportedFileTypes]=\\\"acceptedFileTypes\\\" (onFileUploadRequested)=\\\"uploadFile($event)\\\"></file-upload-control>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"isUploading\\\">\\r\\n     <h3>{{ i18n.fileUpload + 'Uploading' | dynamicTranslate }} <i class=\\\"fa fa-circle-o-notch fa-spin\\\"></i></h3> \\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","export default \"<app-template-builder-wizard *ngIf=\\\"templateId\\\" [editingTemplateForGroupId]=\\\"templateId\\\" [groupId]=\\\"groupId\\\"></app-template-builder-wizard>\\r\\n\"","export default \"<router-outlet></router-outlet>\\r\\n\"","export default \"<button type=\\\"button\\\" (click)=\\\"open()\\\" class=\\\"btn btn-action btn-small\\\"><i class=\\\"fa fa-plus\\\"></i></button>\\r\\n<strong> &nbsp; {{i18n.common + 'Add Group' | dynamicTranslate}}</strong>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    \\r\\n    <form (ngSubmit)=\\\"onSubmit(manageGroupForm)\\\" #manageGroupForm=\\\"ngForm\\\">\\r\\n    <div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"nameInput\\\">{{i18n.common + 'Name' | dynamicTranslate}}</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"request.groupName\\\" name=\\\"nameInput\\\" #nameInput=\\\"ngModel\\\" required />\\r\\n\\r\\n                <div *ngIf=\\\"nameInput.errors && manageGroupForm.submitted\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div>\\r\\n                         {{i18n.common + 'Please enter a name.' | dynamicTranslate}}\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"uniqueNameError && manageGroupForm.submitted\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div>\\r\\n                       {{selectedGroupName}} {{i18n.common + 'already exists. Please enter a unique name.' | dynamicTranslate}}\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"\\\">{{i18n.common + 'Select Template' | dynamicTranslate}}</label>\\r\\n                <type-ahead \\r\\n                    [searching]=\\\"searching\\\" \\r\\n                    [model]=\\\"model\\\" \\r\\n                    [search]=\\\"search\\\" \\r\\n                    (selectItem)=\\\"onSelectItem($event)\\\"\\r\\n                    [resultFormatter]=\\\"getResultFormatter\\\" \\r\\n                    [inputFormatter]=\\\"getInputFormatter\\\"></type-ahead>\\r\\n\\r\\n                <div *ngIf=\\\"!request.templateId && manageGroupForm.submitted\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div>\\r\\n                        {{i18n.common + 'Please select a template.' | dynamicTranslate}}\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" (click)=\\\"windowManager.close()\\\" class=\\\"btn btn-default\\\">{{i18n.common + 'Cancel' | dynamicTranslate}}</button>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{i18n.common + 'Save' | dynamicTranslate}}</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    </form>\\r\\n\\r\\n</ng-template>\"","export default \"<h1>{{i18n.common + 'Group Management' | dynamicTranslate}}</h1>\\r\\n\\r\\n<div class=\\\"row buffer-row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <!-- Add loading indicator -->\\r\\n        <div id=\\\"group-management-grid\\\">\\r\\n            <kendo-grid [data]=\\\"gridData\\\" [pageSize]=\\\"state.take\\\" [skip]=\\\"state.skip\\\" [sort]=\\\"state.sort\\\"\\r\\n                [filter]=\\\"state.filter\\\" [sortable]=\\\"true\\\" [pageable]=\\\"true\\\" [filterable]=\\\"true\\\" (filterChange)=\\\"handleFilterChange($event)\\\"\\r\\n                (dataStateChange)=\\\"dataStateChange($event)\\\" filterable=\\\"menu\\\">\\r\\n                <kendo-grid-column class=\\\"grid-actions\\\" field=\\\"Actions\\\" [filterable]=\\\"false\\\"\\r\\n                    title=\\\"{{i18n.dashboard + 'actions' | dynamicTranslate}}\\\" width=\\\"20%\\\">\\r\\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                        <a (click)=\\\"handleActionEvent(dataItem, 'Edit')\\\">{{i18n.common + 'Edit' | dynamicTranslate}}</a>\\r\\n                        <a (click)=\\\"handleActionEvent(dataItem, 'Delete')\\\">{{i18n.common + 'Delete' | dynamicTranslate}}</a>\\r\\n                    </ng-template>\\r\\n                </kendo-grid-column>\\r\\n\\r\\n                <kendo-grid-column field=\\\"groupName\\\" title=\\\"{{i18n.dashboard + 'groupname' |dynamicTranslate}}\\\" width=\\\"40%\\\">\\r\\n                    <ng-template kendoGridFilterMenuTemplate let-filter let-column=\\\"column\\\">\\r\\n                        <kendo-grid-string-filter-menu [column]=\\\"column\\\" [filter]=\\\"filter\\\">\\r\\n                            <kendo-filter-eq-operator></kendo-filter-eq-operator>\\r\\n                            <kendo-filter-neq-operator></kendo-filter-neq-operator>\\r\\n                            <kendo-filter-startswith-operator></kendo-filter-startswith-operator>\\r\\n                            <kendo-filter-contains-operator></kendo-filter-contains-operator>\\r\\n                            <kendo-filter-not-contains-operator></kendo-filter-not-contains-operator>\\r\\n                            <kendo-filter-isnull-operator></kendo-filter-isnull-operator>\\r\\n                            <kendo-filter-isnotnull-operator></kendo-filter-isnotnull-operator>\\r\\n                        </kendo-grid-string-filter-menu>\\r\\n                    </ng-template>\\r\\n                </kendo-grid-column>\\r\\n\\r\\n                <kendo-grid-column field=\\\"templateName\\\" title=\\\"{{i18n.dashboard+'templatename' | dynamicTranslate}}\\\" width=\\\"40%\\\">\\r\\n                    <ng-template kendoGridFilterMenuTemplate let-filter let-column=\\\"column\\\">\\r\\n                        <kendo-grid-string-filter-menu [column]=\\\"column\\\" [filter]=\\\"filter\\\">\\r\\n                            <kendo-filter-eq-operator></kendo-filter-eq-operator>\\r\\n                            <kendo-filter-neq-operator></kendo-filter-neq-operator>\\r\\n                            <kendo-filter-startswith-operator></kendo-filter-startswith-operator>\\r\\n                            <kendo-filter-contains-operator></kendo-filter-contains-operator>\\r\\n                            <kendo-filter-not-contains-operator></kendo-filter-not-contains-operator>\\r\\n                            <kendo-filter-isnull-operator></kendo-filter-isnull-operator>\\r\\n                            <kendo-filter-isnotnull-operator></kendo-filter-isnotnull-operator>\\r\\n                        </kendo-grid-string-filter-menu>\\r\\n                    </ng-template>\\r\\n                </kendo-grid-column>\\r\\n            </kendo-grid>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <group-management-modal [contractId]=\\\"contractId\\\" [groupNames]=\\\"groupNames\\\"\\r\\n            (onAddorUpdateGroup)=\\\"handleCreateorModifiedGroup($event)\\\" (onAction)=\\\"handleAction($event)\\\">\\r\\n        </group-management-modal>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row pt-5\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"wizard-actions\\\">\\r\\n            <button class=\\\"btn btn-default\\\" type=\\\"button\\\"\\r\\n                (click)=\\\"back()\\\">{{i18n.common + 'Back to Main Profile' | dynamicTranslate}}</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<button type=\\\"button\\\" (click)=\\\"open()\\\" class=\\\"btn btn-action btn-small\\\">\\r\\n        <i class=\\\"fa fa-plus\\\"></i>\\r\\n    </button>\\r\\n    <strong> &nbsp; {{i18n.headerManagement + 'Add Account' | dynamicTranslate}}</strong>\\r\\n    \\r\\n    <ng-template #content>\\r\\n        <form (ngSubmit)=\\\"onSubmit(accountUpsertForm)\\\" #accountUpsertForm=\\\"ngForm\\\">\\r\\n            <div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"nameInput\\\">{{i18n.projectProfile + 'Account Description' | dynamicTranslate}}</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"request.accountDescription\\\" name=\\\"description\\\" #description=\\\"ngModel\\\" required />\\r\\n    \\r\\n                                <div *ngIf=\\\"description.errors && accountUpsertForm.submitted\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div>\\r\\n                                        {{i18n.headerManagement + 'Please enter a account description.' | dynamicTranslate}}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"nameInput\\\">{{i18n.projectProfile + 'Account Number' | dynamicTranslate}}</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"request.accountNumber\\\" name=\\\"accountNumber\\\" #accountNumber=\\\"ngModel\\\" required />\\r\\n    \\r\\n                                <div *ngIf=\\\"accountNumber.errors && accountUpsertForm.submitted\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div>\\r\\n                                        {{i18n.headerManagement + 'Please enter a account number.' | dynamicTranslate}}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"windowManager.close()\\\">{{i18n.common + 'Cancel' | dynamicTranslate}}</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{i18n.common + 'Save' | dynamicTranslate}}</button>\\r\\n                </div>\\r\\n            </div>\\r\\n    \\r\\n        </form>\\r\\n    </ng-template>\"","export default \"<button type=\\\"button\\\" (click)=\\\"open()\\\" class=\\\"btn btn-action btn-small\\\">\\r\\n        <i class=\\\"fa fa-plus\\\"></i>\\r\\n    </button>\\r\\n    <strong> &nbsp; {{i18n.headerManagement + 'Add Department' | dynamicTranslate}}</strong>\\r\\n    \\r\\n    <ng-template #content>\\r\\n    \\r\\n        <form (ngSubmit)=\\\"onSubmit(departmentUpsertForm)\\\" #departmentUpsertForm=\\\"ngForm\\\">\\r\\n            <div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"nameInput\\\">{{i18n.dataImport + 'Department Name' | dynamicTranslate}}</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"request.description\\\" name=\\\"description\\\" #description=\\\"ngModel\\\" required />\\r\\n    \\r\\n                                <div *ngIf=\\\"description.errors && departmentUpsertForm.submitted\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div>\\r\\n                                        {{i18n.headerManagement + 'Please enter a member name.' | dynamicTranslate}}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"nameInput\\\">{{i18n.dataImport + 'Department Number' | dynamicTranslate}}</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"request.departmentNumber\\\" name=\\\"departmentNumber\\\" #departmentNumber=\\\"ngModel\\\" required />\\r\\n    \\r\\n                                <div *ngIf=\\\"departmentNumber.errors && departmentUpsertForm.submitted\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div>\\r\\n                                        {{i18n.headerManagement + 'Please enter a member number.' | dynamicTranslate}}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"windowManager.close()\\\">{{i18n.common + 'Cancel' | dynamicTranslate}}</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{i18n.common + 'Save' | dynamicTranslate}}</button>\\r\\n                </div>\\r\\n            </div>\\r\\n    \\r\\n        </form>\\r\\n    </ng-template>\"","export default \"<button type=\\\"button\\\" (click)=\\\"open()\\\" class=\\\"btn btn-action btn-small\\\">\\r\\n    <i class=\\\"fa fa-plus\\\"></i>\\r\\n</button>\\r\\n<strong> &nbsp; {{i18n.headerManagement + 'Add Member' | dynamicTranslate}}</strong>\\r\\n\\r\\n<ng-template #content>\\r\\n    <form (ngSubmit)=\\\"onSubmit(memberUpsertForm)\\\" #memberUpsertForm=\\\"ngForm\\\">\\r\\n        <div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nameInput\\\">{{i18n.dataImport + 'Member Name' | dynamicTranslate}}</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"request.memberName\\\" name=\\\"memberName\\\" #memberName=\\\"ngModel\\\" required />\\r\\n\\r\\n                            <div *ngIf=\\\"memberName.errors && memberUpsertForm.submitted\\\" class=\\\"alert alert-danger\\\">\\r\\n                                <div>\\r\\n                                    {{i18n.headerManagement + 'Please enter a member name.' | dynamicTranslate}}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"isNameTaken\\\" class=\\\"alert alert-danger\\\">\\r\\n                                <div>\\r\\n                                    {{i18n.headerManagement + 'Member name already exists for this group. Please enter a unique value.' | dynamicTranslate}}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nameInput\\\">{{i18n.dataImport + 'Member Number' | dynamicTranslate}}</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"request.memberNumber\\\" name=\\\"memberNumber\\\" #memberNumber=\\\"ngModel\\\" />\\r\\n\\r\\n                            <div *ngIf=\\\"memberNumber.errors && memberUpsertForm.submitted\\\" class=\\\"alert alert-danger\\\">\\r\\n                                <div>\\r\\n                                    {{i18n.headerManagement + 'Please enter a member number.' | dynamicTranslate}}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                           \\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"windowManager.close()\\\">{{i18n.common + 'Cancel' | dynamicTranslate}}</button>\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{i18n.common + 'Save' | dynamicTranslate}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </form>\\r\\n</ng-template>\"","export default \"<button type=\\\"button\\\" (click)=\\\"open()\\\" class=\\\"btn btn-action btn-small\\\">\\r\\n        <i class=\\\"fa fa-plus\\\"></i>\\r\\n    </button>\\r\\n    <strong> &nbsp; {{i18n.headerManagement + 'Add Site' | dynamicTranslate}}</strong>\\r\\n    \\r\\n    <ng-template #content>\\r\\n        <form (ngSubmit)=\\\"onSubmit(siteUpsertForm)\\\" #siteUpsertForm=\\\"ngForm\\\">\\r\\n            <div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"nameInput\\\">{{i18n.projectProfile + 'Site Name' | dynamicTranslate}}</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"request.siteName\\\" name=\\\"siteName\\\" #siteName=\\\"ngModel\\\" required />\\r\\n    \\r\\n                                <div *ngIf=\\\"siteName.errors && siteUpsertForm.submitted\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div>\\r\\n                                        {{i18n.headerManagement + 'Please enter a site name.' | dynamicTranslate}}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"isNameTaken\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div>\\r\\n                                        {{i18n.headerManagement + 'Site name already exists under this member. Please enter a unique value for this member.' | dynamicTranslate}}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"nameInput\\\">{{i18n.dataImport + 'Site Number' | dynamicTranslate}}</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"request.siteNumber\\\" name=\\\"siteNumber\\\" #siteNumber=\\\"ngModel\\\" required />\\r\\n    \\r\\n                                <div *ngIf=\\\"siteNumber.errors && siteUpsertForm.submitted\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div>\\r\\n                                        {{i18n.headerManagement + 'Please enter a site number' | dynamicTranslate}}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"isNumberTaken\\\" class=\\\"alert alert-danger\\\">\\r\\n                                  <div>\\r\\n                                      {{i18n.headerManagement + 'Site number already exists under this member. Please enter a unique value for this member.' | dynamicTranslate}}\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"nameInput\\\">{{i18n.dataImport + 'Member Associated' | dynamicTranslate}}</label>\\r\\n                                <select class=\\\"form-control\\\" [(ngModel)]=\\\"request.memberId\\\" name=\\\"memberId\\\" #memberId=\\\"ngModel\\\" required>\\r\\n                                    <option value=\\\"\\\" disabled>{{i18n.headerManagement + 'Select a Member' | dynamicTranslate}}</option>\\r\\n                                    <option *ngFor=\\\"let member of members\\\" [value]=\\\"member.id\\\">{{member.memberName}}</option>\\r\\n                                </select>\\r\\n    \\r\\n                                <div *ngIf=\\\"memberId.errors && siteUpsertForm.submitted\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div>\\r\\n                                        {{i18n.headerManagement + 'Please enter a member number.' | dynamicTranslate}}\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"windowManager.close()\\\">{{i18n.common + 'Cancel' | dynamicTranslate}}</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{i18n.common + 'Save' | dynamicTranslate}}</button>\\r\\n                </div>\\r\\n            </div>\\r\\n    \\r\\n        </form>\\r\\n    </ng-template>\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <famis-grid style=\\\"font-weight:normal;\\\" *ngIf=\\\"!!dataGrid.selectedHeaders\\\" [famisGrid]=\\\"dataGrid\\\" (updateCacheEvent)=\\\"updateCache($event)\\\" (actionEvent)=\\\"handleActionEvent($event)\\\"></famis-grid>\\r\\n    </div>\\r\\n</div>\\r\\n<account-upsert (onAddorUpdate)=\\\"handleCreateorModified($event)\\\" (onAction)=\\\"handleAction($event)\\\"></account-upsert>\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <famis-grid style=\\\"font-weight:normal;\\\" *ngIf=\\\"!!dataGrid.selectedHeaders\\\" [famisGrid]=\\\"dataGrid\\\" (updateCacheEvent)=\\\"updateCache($event)\\\" (actionEvent)=\\\"handleActionEvent($event)\\\"></famis-grid>\\r\\n    </div>\\r\\n</div>\\r\\n<department-upsert (onAddorUpdate)=\\\"handleCreateorModified($event)\\\" (onAction)=\\\"handleAction($event)\\\"></department-upsert>\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <famis-grid style=\\\"font-weight:normal;\\\" *ngIf=\\\"!!dataGrid.selectedHeaders\\\" [famisGrid]=\\\"dataGrid\\\" (updateCacheEvent)=\\\"updateCache($event)\\\" (actionEvent)=\\\"handleActionEvent($event)\\\"></famis-grid>\\r\\n    </div>\\r\\n</div>\\r\\n<member-upsert (onAddorUpdate)=\\\"handleCreateorModified($event)\\\" (onAction)=\\\"handleAction($event)\\\"></member-upsert>\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <famis-grid style=\\\"font-weight:normal;\\\" *ngIf=\\\"!!dataGrid.selectedHeaders\\\" [famisGrid]=\\\"dataGrid\\\" (updateCacheEvent)=\\\"updateCache($event)\\\" (actionEvent)=\\\"handleActionEvent($event)\\\"></famis-grid>\\r\\n    </div>\\r\\n</div>\\r\\n<site-upsert (onAddorUpdate)=\\\"handleCreateorModified($event)\\\" (onAction)=\\\"handleAction($event)\\\"></site-upsert>\"","export default \"<div id=\\\"HeaderManagement\\\">\\r\\n    <h1>{{ i18n.common + 'Header Management' | dynamicTranslate}}</h1>\\r\\n\\r\\n    <ngb-tabset type=\\\"pills\\\" #tabs *ngIf=\\\"!isLoading\\\" class=\\\"ribbon\\\">\\r\\n        <ngb-tab id=\\\"member\\\">\\r\\n            <ng-template ngbTabTitle>\\r\\n                <span>{{i18n.common + 'Member' | dynamicTranslate}}</span>\\r\\n            </ng-template>\\r\\n            <ng-template ngbTabContent>\\r\\n\\r\\n                <header-management-member></header-management-member>\\r\\n\\r\\n            </ng-template>\\r\\n        </ngb-tab>\\r\\n        <ngb-tab id=\\\"site\\\">\\r\\n            <ng-template ngbTabTitle>\\r\\n                <span>{{i18n.common + 'Site' | dynamicTranslate}}</span>\\r\\n            </ng-template>\\r\\n            <ng-template ngbTabContent>\\r\\n\\r\\n                <header-management-site></header-management-site>\\r\\n\\r\\n            </ng-template>\\r\\n        </ngb-tab>\\r\\n        <ngb-tab id=\\\"account\\\">\\r\\n            <ng-template ngbTabTitle>\\r\\n                <span>{{i18n.common + 'Account' | dynamicTranslate}}</span>\\r\\n            </ng-template>\\r\\n            <ng-template ngbTabContent>\\r\\n\\r\\n                <header-management-account></header-management-account>\\r\\n\\r\\n            </ng-template>\\r\\n        </ngb-tab>\\r\\n        <ngb-tab id=\\\"department\\\">\\r\\n            <ng-template ngbTabTitle>\\r\\n                <span>{{i18n.common + 'Department' | dynamicTranslate}}</span>\\r\\n            </ng-template>\\r\\n            <ng-template ngbTabContent>\\r\\n\\r\\n                <header-management-department></header-management-department>\\r\\n\\r\\n            </ng-template>\\r\\n        </ngb-tab>\\r\\n\\r\\n    </ngb-tabset>\\r\\n</div>\"","export default \"\\r\\n\\r\\n\\r\\n<ng-container *ngIf=\\\"userHasPermissions\\\">\\r\\n\\r\\n\\r\\n\\r\\n  <nav id=\\\"accountNav\\\" class=\\\"navbar navbar-expand-md fixed-top\\\">\\r\\n    <button\\r\\n      class=\\\"navbar-toggler\\\"\\r\\n      type=\\\"button\\\"\\r\\n      data-toggle=\\\"collapse\\\"\\r\\n      data-target=\\\"#navbarsExampleDefault\\\"\\r\\n      aria-controls=\\\"navbarsExampleDefault\\\"\\r\\n      aria-expanded=\\\"false\\\"\\r\\n      aria-label=\\\"Toggle navigation\\\"\\r\\n    >\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    <a class=\\\"navbar-brand navbar-expand-lg\\\" href=\\\"#\\\" [routerLink]=\\\"['/dashboard/all-projects']\\\">\\r\\n      <img src=\\\"/client-src/assets/images/DP_logo_4c.png\\\" width=\\\"200\\\" alt=\\\"Duff & Phelps\\\" />\\r\\n    </a>\\r\\n\\r\\n    <div class=\\\"collapse navbar-collapse justify-content-end navbar-expand-lg\\\" id=\\\"navbarsExampleDefault\\\">\\r\\n      <ul class=\\\"navbar-nav\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a *ngIf=\\\"!!userName && userName !== 'Unknown'\\\" class=\\\"nav-link\\\" href=\\\"#\\\">{{ userName }}</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </nav>\\r\\n  <nav id=\\\"mainNav\\\" class=\\\"navbar navbar-expand-md fixed-top navbar-inverse\\\">\\r\\n    <button\\r\\n      class=\\\"navbar-toggler\\\"\\r\\n      type=\\\"button\\\"\\r\\n      data-toggle=\\\"collapse\\\"\\r\\n      data-target=\\\"#navbarsExampleDefault\\\"\\r\\n      aria-controls=\\\"navbarsExampleDefault\\\"\\r\\n      aria-expanded=\\\"false\\\"\\r\\n      aria-label=\\\"Toggle Navigation\\\"\\r\\n    >\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\">\\r\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <div (click)=\\\"toggleNavClicked()\\\" class=\\\"nav-link  nav-menu-toggle\\\" style=\\\"cursor:pointer\\\">\\r\\n            <span class=\\\"fa fa-bars\\\"></span>\\r\\n          </div>\\r\\n        </li>\\r\\n\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\" [routerLink]=\\\"['/dashboard/all-projects']\\\">{{ i18n.home + 'Dashboard' | dynamicTranslate }}</a>\\r\\n        </li>\\r\\n\\r\\n        <li [showIfCanAccess]=\\\"permissions.canManageTemplates\\\" class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/admin/templates\\\" routerLinkActive=\\\"menu-active\\\">{{\\r\\n            i18n.home + 'Template Management' | dynamicTranslate\\r\\n          }}</a>\\r\\n        </li>\\r\\n\\r\\n        <li [showIfCanAccess]=\\\"permissions.canManagePortal\\\" class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/portal-management\\\" routerLinkActive=\\\"menu-active\\\">{{\\r\\n            i18n.home + 'Portal Management' | dynamicTranslate\\r\\n          }}</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </nav>\\r\\n\\r\\n  <div class=\\\"wrapper\\\">\\r\\n    <!-- Restore once loading indicator styles are complete -->\\r\\n    <!--<div class=\\\"linear-activity\\\" *ngIf=\\\"isBusy\\\">\\r\\n      <div class=\\\"indeterminate\\\"></div>\\r\\n    </div>-->\\r\\n\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</ng-container>\\r\\n\\r\\n\\r\\n\\r\\n<alert></alert>\\r\\n\\r\\n<div class=\\\"spinner\\\">\\r\\n    <div class=\\\"dot1\\\"></div>\\r\\n    <div class=\\\"dot2\\\"></div>\\r\\n  </div>\"","export default \"<modal-form [modalTitle]=\\\"modalTitle\\\" (modalEvent)=\\\"handleModalEvent($event)\\\">\\r\\n  <form (ngSubmit)=\\\"addPortalGroup(portalGroupForm)\\\" #portalGroupForm=\\\"ngForm\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label>{{i18n.common + 'Select Contract' | dynamicTranslate}}</label>\\r\\n        <type-ahead \\r\\n                    [searching]=\\\"searching\\\" \\r\\n                    [model]=\\\"model\\\" \\r\\n                    [search]=\\\"search\\\" \\r\\n                    (selectItem)=\\\"onSelectItem($event)\\\"\\r\\n                    [resultFormatter]=\\\"getResultFormatter\\\" \\r\\n                    [inputFormatter]=\\\"getInputFormatter\\\"></type-ahead>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"accountNameInput\\\">{{i18n.common + 'Account Description' | dynamicTranslate}}</label>\\r\\n      <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedAccountId\\\" id=\\\"accountNameInput\\\" name=\\\"account\\\" required>\\r\\n        <option value=\\\"\\\">\\r\\n          <span>Select Account</span>\\r\\n        </option>\\r\\n        <option *ngFor=\\\"let account of accounts\\\" [value]=\\\"account.id\\\">{{account.groupName}}</option>\\r\\n      </select>\\r\\n    </div>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"displayErrors\\\">\\r\\n      {{i18n.common + 'Select a contract and assign portal account description.' | dynamicTranslate}}\\r\\n    </div>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"contractExists\\\">\\r\\n      {{i18n.common + apiError | dynamicTranslate}}\\r\\n    </div>\\r\\n  </form>\\r\\n</modal-form>\"","export default \"<type-ahead \\r\\n  [searching]=\\\"searching\\\" \\r\\n  [model]=\\\"model\\\" \\r\\n  [search]=\\\"search\\\" \\r\\n  (selectItem)=\\\"onSelectItem($event)\\\"\\r\\n  [resultFormatter]=\\\"getResultFormatter\\\" \\r\\n  [inputFormatter]=\\\"getInputFormatter\\\"></type-ahead>\"","export default \"<div class=\\\"form-group row pb-1\\\">\\r\\n\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n        <label>{{i18n.common + 'Contract' | dynamicTranslate}}</label>\\r\\n        <contract-search (selectContract)=\\\"contractChanged($event)\\\" [model]=\\\"selectedContract\\\"></contract-search>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"col-md-3\\\">\\r\\n        <label>{{i18n.common + 'Group' | dynamicTranslate}}</label>\\r\\n        <select class=\\\"form-control form-control\\\" id=\\\"selectGroup\\\" [(ngModel)]=\\\"selectedGroup\\\" (ngModelChange)=\\\"groupChanged($event)\\\" required>\\r\\n          <option *ngIf=\\\"!selectedGroup || selectedGroup == null\\\" [ngValue]=\\\"selectedGroup\\\" disabled>{{i18n.common + 'Select Group' | dynamicTranslate}}</option>\\r\\n          <option *ngFor=\\\"let group of groups|orderBy:'groupName'\\\" [ngValue]=\\\"group\\\">{{group.groupName}}</option>\\r\\n        </select>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"col-md-2\\\" *ngIf=\\\"selectedGroup\\\">\\r\\n        <label>{{i18n.common + 'Member' | dynamicTranslate}}</label>\\r\\n        <select class=\\\"form-control form-control\\\" id=\\\"selectMember\\\" [(ngModel)]=\\\"selectedMember\\\" (ngModelChange)=\\\"memberChanged($event)\\\">\\r\\n          <option *ngIf=\\\"!selectedMember || selectedMember == null\\\" [ngValue]=\\\"selectedMember\\\" disabled>{{i18n.common + 'Select Member' | dynamicTranslate}}</option>\\r\\n          <option *ngFor=\\\"let member of members|orderBy:'name'\\\" [ngValue]=\\\"member\\\">{{member.name}}</option>\\r\\n        </select>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"col-md-2\\\" *ngIf=\\\"selectedMember\\\">\\r\\n        <label>{{i18n.common + 'Site' | dynamicTranslate}}</label>\\r\\n        <select class=\\\"form-control form-control\\\" id=\\\"selectSite\\\" [(ngModel)]=\\\"selectedSite\\\">\\r\\n          <option *ngIf=\\\"!selectedSite || selectedSite == null\\\" [ngValue]=\\\"selectedSite\\\" disabled>{{i18n.common + 'Select Site' | dynamicTranslate}}</option>\\r\\n          <option *ngFor=\\\"let site of sites|orderBy:'name'\\\" [ngValue]=\\\"site\\\">{{site.name}}</option>\\r\\n        </select>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-2 mt-4\\\">\\r\\n        <button (click)=\\\"remove()\\\" type=\\\"button\\\" class=\\\"btn btn-action btn-small\\\">\\r\\n            <i class=\\\"fa fa-minus\\\"></i>\\r\\n        </button>\\r\\n        <strong>{{i18n.common + 'Remove' | dynamicTranslate}}</strong>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-2\\\">\\r\\n  </div>\\r\\n  <div class=\\\"col-md-8\\\">\\r\\n    <div class=\\\"row pt-5 pb-3\\\">\\r\\n        <h1>{{i18n.common + 'Portal Management' | dynamicTranslate}}</h1>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n          <label for=\\\"portalGroupPicker\\\">{{i18n.common + 'Select Existing Account/Portal' | dynamicTranslate}}</label>\\r\\n          <select  name=\\\"portalGroupPicker\\\" class=\\\"form-control\\\" id=\\\"portalGroupPicker\\\" [(ngModel)]=\\\"selectedContractId\\\" (change)=\\\"setSelectedGroup()\\\">\\r\\n            <option *ngFor=\\\"let opt of portalContracts\\\" [value]=\\\"opt.id\\\">{{opt.client}}</option>\\r\\n          </select>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <button class=\\\"btn btn-primary mt-2 pt-3 pb-3\\\" (click)=\\\"launchAddPortalModal()\\\">{{i18n.common + 'Add Account/Portal Access' | dynamicTranslate}}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"col-md-2\\\">\\r\\n    \\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row pt-5\\\" *ngIf=\\\"selectedGroup\\\">\\r\\n    <div class=\\\"col-md-2\\\"></div>\\r\\n    <div class=\\\"col-md-8\\\"><setup-portal [group]=\\\"selectedGroup\\\"></setup-portal></div>\\r\\n    \\r\\n</div>\"","export default \"<div class=\\\"row pt-5\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n      <h3>{{i18n.common + 'Account Portal Access' | dynamicTranslate}}</h3>\\r\\n  </div>\\r\\n   \\r\\n</div>\\r\\n<div class=\\\"row pt-2 pl-3\\\">\\r\\n  <div class=\\\"col-md-2\\\">\\r\\n      <div class=\\\"form-check form-check-inline\\\">\\r\\n          <input class=\\\"form-check-input\\\" (change)=\\\"toggleStatus()\\\" [checked]=\\\"!group.isDisabled\\\" type=\\\"radio\\\" name=\\\"enabledOption\\\" id=\\\"enabledOption\\\" value=\\\"enabled\\\">\\r\\n          <label class=\\\"form-check-label\\\" for=\\\"enabledOption\\\">{{i18n.common + 'Enabled' | dynamicTranslate}}</label>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-2\\\">\\r\\n        <div class=\\\"form-check form-check-inline\\\">\\r\\n            <input class=\\\"form-check-input\\\" (change)=\\\"toggleStatus()\\\" [checked]=\\\"group.isDisabled\\\" type=\\\"radio\\\" name=\\\"disabledOption\\\" id=\\\"disabledOption\\\" value=\\\"disabled\\\">\\r\\n            <label class=\\\"form-check-label\\\" for=\\\"disabledOption\\\">{{i18n.common + 'Disabled' | dynamicTranslate}}</label>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\" *ngIf=\\\"group.isDisabled\\\">\\r\\n  <div class=\\\"col-md-8\\\">\\r\\n      <h5>{{i18n.common + 'Portal Access for this contract has been disabled.' | dynamicTranslate}}</h5>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","export default \"<div class=\\\"row pt-3\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"radio-inline pr-2\\\"><input type=\\\"radio\\\" name=\\\"replace\\\" [(ngModel)]=\\\"replace\\\" [value]=\\\"true\\\">{{i18n.common + 'Replace' | dynamicTranslate}}</label>\\r\\n            <label class=\\\"radio-inline pl-2\\\"><input type=\\\"radio\\\" name=\\\"append\\\" [(ngModel)]=\\\"replace\\\" [value]=\\\"false\\\">{{i18n.common + 'Append' | dynamicTranslate}}</label>\\r\\n        </div>\\r\\n        <div #selections></div>\\r\\n        <button type=\\\"button\\\" (click)=\\\"addSelection()\\\" class=\\\"btn btn-action btn-small\\\">\\r\\n            <i class=\\\"fa fa-plus\\\"></i>\\r\\n        </button>\\r\\n        <strong>&nbsp;{{i18n.common + 'Add Selection' | dynamicTranslate}}</strong>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"selectionErrors\\\" class=\\\"row pt-3 pl-3\\\">\\r\\n    <div class=\\\"alert alert-danger\\\">\\r\\n        <div>\\r\\n            {{i18n.common + 'Please be sure to choose at least a Contract and Group for each selection.' | dynamicTranslate}}\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"form-group pt-4\\\">\\r\\n    <button [disabled]=\\\"!hasSelections()\\\" class=\\\"btn btn-primary\\\" (click)=\\\"copyGroups()\\\">{{i18n.common + 'Copy' | dynamicTranslate}}</button>\\r\\n</div>\"","export default \"<div class=\\\"row pt-3\\\">\\r\\n  <img [src]=\\\"imageUrl\\\" style=\\\"max-height:45px\\\"/>\\r\\n</div>\\r\\n<div class=\\\"row pt-3\\\">\\r\\n  <div class= \\\"col-md-5\\\">\\r\\n      <div *ngIf=\\\"!isUploading\\\" class=\\\"pt-4\\\">\\r\\n          <file-upload-control   [supportedFileTypes]=\\\"acceptedFileTypes\\\" (onFileUploadRequested)=\\\"uploadFile($event)\\\" [fileInputLabel]=\\\"'Replace Image'\\\"></file-upload-control>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"isUploading\\\" class=\\\"pt-4\\\">\\r\\n          <h3>{{ i18n.fileUpload + 'Uploading' | dynamicTranslate }} <i class=\\\"fa fa-circle-o-notch fa-spin\\\"></i></h3> \\r\\n        </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-7\\\">\\r\\n    <button [disabled]=\\\"!canRemove\\\" class=\\\"btn btn-primary mt-3 mb-3\\\" (click)=\\\"removeImage()\\\">{{i18n.common + 'Remove' | dynamicTranslate}}</button>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <div>\\r\\n      <div id=\\\"high-density\\\">\\r\\n        <kendo-grid  [data]=\\\"gridData\\\" [sortable]=\\\"true\\\" [height]=\\\"200\\\"  [selectable]=\\\"selectableSettings\\\"\\r\\n           [reorderable]=\\\"false\\\" [kendoGridSelectBy]=\\\"'id'\\\" [selectedKeys]=\\\"selectedMetadataIds\\\"\\r\\n          (selectionChange)=\\\"onSelectionChanged($event)\\\"   (dataStateChange)=\\\"dataStateChange($event)\\\"\\r\\n          >\\r\\n          <kendo-grid-checkbox-column [reorderable]=\\\"false\\\" width=\\\"5%\\\">\\r\\n            <ng-template kendoGridHeaderTemplate let-dataItem>\\r\\n              <div style=\\\"width: 10%; cursor: pointer;\\\" >\\r\\n                <a class=\\\"clickable-link\\\">{{Selected}}</a>\\r\\n               </div>\\r\\n            </ng-template>\\r\\n          </kendo-grid-checkbox-column>\\r\\n          <kendo-grid-column [reorderable]=\\\"false\\\" field=\\\"tagName\\\" [title]=\\\"'common_Category' | dynamicTranslate\\\" width=\\\"95%\\\">\\r\\n          </kendo-grid-column>\\r\\n        </kendo-grid>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<h2>{{portalLabel}}</h2>\\r\\n<div class=\\\"row pt-4 pl-2 btn-group\\\">\\r\\n  <button (click)=\\\"toggleSetupMode(setupModes.SetupAccess)\\\" type=\\\"button\\\" \\r\\n    [class.btn-default]=\\\"this.setupMode!==setupModes.SetupAccess\\\" [class.btn-primary]=\\\"this.setupMode===setupModes.SetupAccess\\\" \\r\\n    class=\\\"btn btn-primary\\\">{{i18n.common + 'Portal Access' | dynamicTranslate}}</button>\\r\\n  \\r\\n   <button (click)=\\\"toggleSetupMode(setupModes.SetupData)\\\" type=\\\"button\\\"\\r\\n   [class.btn-default]=\\\"this.setupMode !== setupModes.SetupData\\\" [class.btn-primary]=\\\"this.setupMode === setupModes.SetupData\\\"\\r\\n   class=\\\"btn btn-default\\\">{{i18n.common + 'Portal Data' | dynamicTranslate}}</button>\\r\\n\\r\\n   <button (click)=\\\"toggleSetupMode(setupModes.SetupImage)\\\" type=\\\"button\\\"\\r\\n   [class.btn-default]=\\\"this.setupMode !== setupModes.SetupImage\\\" [class.btn-primary]=\\\"this.setupMode === setupModes.SetupImage\\\"\\r\\n   class=\\\"btn btn-default\\\">{{i18n.common + 'Portal Image' | dynamicTranslate}}</button>\\r\\n\\r\\n   <button (click)=\\\"toggleSetupMode(setupModes.SetupMetadata)\\\" type=\\\"button\\\"\\r\\n   [class.btn-default]=\\\"this.setupMode !== setupModes.SetupMetadata\\\" [class.btn-primary]=\\\"this.setupMode === setupModes.SetupMetadata\\\"\\r\\n   class=\\\"btn btn-default\\\">{{i18n.common + 'Portal Report Filters' | dynamicTranslate}}</button>\\r\\n\\r\\n</div>\\r\\n<div class=\\\"row\\\" *ngIf=\\\"this.setupMode===setupModes.SetupAccess\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n      <setup-access [group]=\\\"group\\\"></setup-access>\\r\\n  </div>\\r\\n  \\r\\n</div>\\r\\n<div class=\\\"row\\\" *ngIf=\\\"this.setupMode===setupModes.SetupData\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <setup-data [group]=\\\"group\\\"></setup-data>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\" *ngIf=\\\"this.setupMode===setupModes.SetupImage\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <setup-image [group]=\\\"group\\\"></setup-image>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\" *ngIf=\\\"this.setupMode===setupModes.SetupMetadata\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <setup-metadata [group]=\\\"group\\\"></setup-metadata>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"form-group row\\\">\\r\\n        <div class=\\\"col-md-12 py-2 processing-summary\\\">\\r\\n                <div class=\\\"success pull-left\\\">\\r\\n                        {{i18n.common + 'Assets' | dynamicTranslate }} {{i18n.common + processingSummary.processingVerb | dynamicTranslate}}: {{processingSummary.successCount}}\\r\\n                </div>\\r\\n                <div class=\\\"mx-2 error pull-left\\\">{{i18n.common + 'Errors' | dynamicTranslate }}: {{processingSummary.errorCount}}\\r\\n                </div>\\r\\n        </div>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<h1>{{i18n.common + 'Depreciation' | dynamicTranslate }}</h1>\\r\\n\\r\\n\\r\\n<div class=\\\"row buffer-row\\\" *ngIf=\\\"!isReadyForProcessing  && !isLoading\\\">\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      <div class=\\\"action-link \\\">\\r\\n        {{ i18n.common + 'No data loaded - ' | dynamicTranslate }}&nbsp;\\r\\n        <a href=\\\"\\\" (click)=\\\"navigateToImportData($event)\\\">{{ i18n.common + 'Import Data' | dynamicTranslate }}</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n<ng-container *ngIf=\\\"isReadyForProcessing  && !isLoading\\\">\\r\\n\\r\\n<ol class=\\\"breadcrumb\\\">\\r\\n    <li *ngFor=\\\"let breadCrumb of breadCrumbs\\\" class=\\\"breadcrumb-item\\\" routerLinkActive=\\\"active\\\">\\r\\n      <a [class.disabled]=\\\"breadCrumb.isDisabled\\\" [routerLink]=\\\"breadCrumb.routerLink\\\" >{{i18n.common + breadCrumb.name | dynamicTranslate}}</a>\\r\\n    </li>\\r\\n  </ol>\\r\\n\\r\\n  <router-outlet></router-outlet>\\r\\n\\r\\n</ng-container>\"","export default \"<form (ngSubmit)=\\\"onSubmit(depreciationSetupForm)\\\" #depreciationSetupForm=\\\"ngForm\\\">\\r\\n  <div class=\\\"form-row\\\">\\r\\n    <div class=\\\"form-group col-md-4\\\">\\r\\n      <label>{{i18n.depreciation + 'As of Date'| dynamicTranslate}} </label>\\r\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" [value]=\\\"getSubProfileFieldValue('As of Date') | localizedDate\\\" readonly>\\r\\n    </div>\\r\\n    <div class=\\\"form-group col-md-4\\\">\\r\\n      <label>{{i18n.depreciation + 'Fiscal End Date'| dynamicTranslate}}</label>\\r\\n\\r\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" [value]=\\\"getSubProfileFieldValue('Fiscal Year End') | localizedDate\\\" readonly>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <h2>{{i18n.depreciation + 'Capitalization Policies'| dynamicTranslate}}</h2>\\r\\n  <div class=\\\"form-row\\\">\\r\\n    <div class=\\\"form-group col-md-2\\\">\\r\\n      <label>{{i18n.depreciation + 'Land'| dynamicTranslate}}</label>\\r\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" [value]=\\\"getSubProfileFieldValue('Capitalization Policy - Land') | localizedNumber\\\" readonly>\\r\\n    </div>\\r\\n    <div class=\\\"form-group col-md-2\\\">\\r\\n      <label>{{i18n.depreciation + 'LI'| dynamicTranslate}}</label>\\r\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" [value]=\\\"getSubProfileFieldValue('Capitalization Policy - LI') | localizedNumber\\\" readonly>\\r\\n    </div>\\r\\n    <div class=\\\"form-group col-md-2\\\">\\r\\n      <label>{{i18n.depreciation + 'Bldgs'| dynamicTranslate}}</label>\\r\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" [value]=\\\"getSubProfileFieldValue('Capitalization Policy - Bldgs') | localizedNumber\\\" readonly>\\r\\n    </div>\\r\\n    <div class=\\\"form-group col-md-2\\\">\\r\\n      <label>{{i18n.depreciation + 'M&E'| dynamicTranslate}}</label>\\r\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" [value]=\\\"getSubProfileFieldValue('Capitalization Policy - M&E') | localizedNumber\\\" readonly>\\r\\n    </div>\\r\\n    <div class=\\\"form-group col-md-2\\\">\\r\\n      <label>{{i18n.depreciation + 'Infrastructure'| dynamicTranslate}} </label>\\r\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" [value]=\\\"getSubProfileFieldValue('Capitalization Policy - Infrastructure') | localizedNumber\\\" readonly>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-row\\\">\\r\\n    <div class=\\\"form-group col-md-4\\\">\\r\\n      <label>{{i18n.depreciation + 'Depreciation Method'| dynamicTranslate}}</label>\\r\\n      <select class=\\\"form-control\\\" [(ngModel)]=\\\"depreciationRequest.method\\\" name=\\\"method\\\" #selectDepreciationMethod=\\\"ngModel\\\" required>\\r\\n        <option disabled>\\r\\n          <span>{{i18n.depreciation + 'Select a Depreciation Method'| dynamicTranslate}}</span>\\r\\n        </option>\\r\\n        <ng-container *ngFor=\\\"let method of depreciationMethods\\\">\\r\\n          <option *ngIf=\\\"!method.isResultsOnly\\\" [value]=\\\"method.value\\\">{{i18n.depreciation + method.displayName | dynamicTranslate }}</option>\\r\\n        </ng-container>\\r\\n\\r\\n      </select>\\r\\n\\r\\n      <div *ngIf=\\\"selectDepreciationMethod.errors && depreciationSetupForm.submitted\\\" class=\\\"alert alert-danger\\\">\\r\\n        <div>\\r\\n          {{i18n.depreciation + 'Please select a depreciation method'| dynamicTranslate}}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group col-md-4\\\">\\r\\n      <label> {{i18n.depreciation + 'Starting Convention'| dynamicTranslate}}</label>\\r\\n      <select class=\\\"form-control\\\" [(ngModel)]=\\\"depreciationRequest.convention\\\" name=\\\"convention\\\" #convention=\\\"ngModel\\\" required>\\r\\n        <option disabled>\\r\\n          <span>{{i18n.depreciation + 'Select an Starting Convention'| dynamicTranslate}}</span>\\r\\n        </option>\\r\\n        <option *ngFor=\\\"let method of conventions\\\" [value]=\\\"method.value\\\">{{i18n.depreciation + method.displayName | dynamicTranslate }}</option>\\r\\n\\r\\n      </select>\\r\\n      <div *ngIf=\\\"convention.errors && depreciationSetupForm.submitted\\\" class=\\\"alert alert-danger\\\">\\r\\n        <div>\\r\\n          {{i18n.depreciation + 'Please select a starting convention' | dynamicTranslate }} \\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <h2> {{i18n.depreciation + 'Filter Criteria' | dynamicTranslate }} </h2>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\"></div>\\r\\n    </div>\\r\\n    <div #filterCriteria></div>\\r\\n\\r\\n    <button type=\\\"button\\\" (click)=\\\"addFilter()\\\" class=\\\"btn btn-action btn-small\\\">\\r\\n      <i class=\\\"fa fa-plus\\\"></i>\\r\\n    </button>\\r\\n    <strong>&nbsp;{{i18n.depreciation + 'Add Filter Criteria' | dynamicTranslate }}</strong>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-row\\\">\\r\\n    <div class=\\\"form-group col-md-2\\\">\\r\\n\\r\\n      <p>{{i18n.depreciation + 'Day 1 Calc' | dynamicTranslate }}</p>\\r\\n\\r\\n      <input type=\\\"checkbox\\\" class=\\\"k-checkbox\\\" id=\\\"isDayOneCalc\\\" [(ngModel)]=\\\"depreciationRequest.dayOneCalc\\\" name=\\\"dayOneCalc\\\">\\r\\n      <label class=\\\"k-checkbox-label\\\" for=\\\"isDayOneCalc\\\"></label>\\r\\n      \\r\\n    </div>\\r\\n    <div class=\\\"form-group col-md-2\\\">\\r\\n      <label>{{i18n.depreciation + 'Advanced Depreciation Years' | dynamicTranslate }}</label>\\r\\n      <input type=\\\"number\\\" min=\\\"1\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"depreciationRequest.futureYears\\\" name=\\\"futureYears\\\" #futureYears=\\\"ngModel\\\">\\r\\n\\r\\n      <div *ngIf=\\\"futureYears.errors?.min && depreciationSetupForm.submitted\\\" class=\\\"alert alert-danger\\\">\\r\\n        <div>\\r\\n          {{i18n.depreciation + 'Please enter a value greater than zero' | dynamicTranslate }}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <button [ladda]=\\\"isProcessing\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{i18n.depreciation + 'Run' | dynamicTranslate }}</button>\\r\\n</form>\"","export default \"<processing-summary [processingSummary]=\\\"processingSummary\\\"></processing-summary>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"form-group row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n\\r\\n                <famis-grid [isPersistentGrid]=\\\"false\\\" *ngIf=\\\"!!successGrid.loading\\\" [famisGrid]=\\\"successGrid\\\" (updateCacheEvent)=\\\"updateCache($event)\\\"></famis-grid>\\r\\n        </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"form-group row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n                <famis-grid [isPersistentGrid]=\\\"false\\\" class=\\\"errors-grid\\\" *ngIf=\\\"!!errorGrid.loading\\\" [famisGrid]=\\\"errorGrid\\\" (updateCacheEvent)=\\\"updateCache($event)\\\"></famis-grid>\\r\\n        </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n                <div class=\\\"wizard-actions\\\">\\r\\n                        <button class=\\\"btn btn-default\\\" (click)=\\\"back()\\\">{{i18n.common + 'Back' | dynamicTranslate }}</button>\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"commit()\\\">{{i18n.common + 'Commit' | dynamicTranslate }}</button>\\r\\n                </div>\\r\\n        </div>\\r\\n</div>\"","export default \"<h1>{{i18n.common + 'Trending' | dynamicTranslate }}</h1>\\r\\n\\r\\n<div class=\\\"row buffer-row\\\" *ngIf=\\\"!isReadyForProcessing && !isLoading\\\">\\r\\n  <div class=\\\"col-md-8\\\">\\r\\n    <div class=\\\"action-link \\\">\\r\\n      {{ i18n.common + 'No data loaded - ' | dynamicTranslate }}&nbsp;\\r\\n      <a href=\\\"\\\" (click)=\\\"navigateToImportData($event)\\\">{{ i18n.common + 'Import Data' | dynamicTranslate }}</a>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<ng-container *ngIf=\\\"isReadyForProcessing && !isLoading\\\">\\r\\n  <ol class=\\\"breadcrumb\\\">\\r\\n    <li *ngFor=\\\"let breadCrumb of breadCrumbs\\\" class=\\\"breadcrumb-item\\\" routerLinkActive=\\\"active\\\">\\r\\n      <a [class.disabled]=\\\"!!breadCrumb.isDisabled && breadCrumb.isDisabled\\\" [routerLink]=\\\"breadCrumb.routerLink\\\" >{{i18n.common + breadCrumb.name | dynamicTranslate }}</a>\\r\\n    </li>\\r\\n  </ol>\\r\\n\\r\\n  <router-outlet></router-outlet>\\r\\n</ng-container>\"","export default \"<form (ngSubmit)=\\\"onSubmit(trendingSetupForm)\\\" #trendingSetupForm=\\\"ngForm\\\">\\r\\n\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <!-- Type ahead component here -->\\r\\n      <h4>{{ i18n.trending + 'Trend Table' | dynamicTranslate }}</h4>\\r\\n      <type-ahead \\r\\n      [searching]=\\\"searching\\\" \\r\\n      [model]=\\\"model\\\" \\r\\n      [search]=\\\"search\\\" \\r\\n      (selectItem)=\\\"onSelectItem($event)\\\"\\r\\n      [resultFormatter]=\\\"getResultFormatter\\\" \\r\\n      [inputFormatter]=\\\"getInputFormatter\\\"></type-ahead>\\r\\n\\r\\n      <div *ngIf=\\\"!trendingRequest.trendingTableId && trendingSetupForm.submitted\\\" class=\\\"alert alert-danger\\\">\\r\\n        <div>\\r\\n          {{ i18n.trending + 'Please select a trend table' | dynamicTranslate }} .\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n        <h4>{{ i18n.trending + 'Starting Value' | dynamicTranslate }} </h4>\\r\\n        <select class=\\\"form-control\\\" [(ngModel)]=\\\"trendingRequest.sourceField\\\" name=\\\"sourceFieldSelect\\\" id=\\\"sourceFieldSelect\\\" #selectSourceField=\\\"ngModel\\\" required>\\r\\n          <option disabled>\\r\\n            <span>{{ i18n.trending + 'Select a Starting Value' | dynamicTranslate }}</span>\\r\\n          </option>\\r\\n          <option *ngFor=\\\"let field of startingValueOptions | orderBy: 'displayName'\\\" [value]=\\\"field.name\\\">{{i18n.asset + field.displayName | dynamicTranslate }}</option>\\r\\n        </select>\\r\\n\\r\\n        <div *ngIf=\\\"selectSourceField.errors && trendingSetupForm.submitted\\\" class=\\\"alert alert-danger\\\">\\r\\n          <div>\\r\\n            {{ i18n.trending + 'Please select a starting value' | dynamicTranslate }}.\\r\\n          </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n        <h4>{{ i18n.trending + 'Ending Value' | dynamicTranslate }} </h4>\\r\\n        <select class=\\\"form-control\\\" [(ngModel)]=\\\"trendingRequest.destinationField\\\" name=\\\"destinationFieldSelect\\\" id=\\\"destinationFieldSelect\\\" #selectDestinationField=\\\"ngModel\\\" required>\\r\\n          <option disabled>\\r\\n            <span>{{ i18n.trending + 'Select an Ending Value' | dynamicTranslate }} </span>\\r\\n          </option>\\r\\n          <option *ngFor=\\\"let field of endingValueOptions | orderBy: 'displayName'\\\" [value]=\\\"field.name\\\">{{ i18n.asset + field.displayName | dynamicTranslate }}</option>\\r\\n        </select>\\r\\n\\r\\n        <div *ngIf=\\\"selectDestinationField.errors && trendingSetupForm.submitted\\\" class=\\\"alert alert-danger\\\">\\r\\n          <div>\\r\\n            {{ i18n.asset + 'Please select an ending value' | dynamicTranslate }}.\\r\\n          </div>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <h2>{{ i18n.common + 'Filter Criteria' | dynamicTranslate }} </h2>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\"></div>\\r\\n    </div>\\r\\n    <div #filterCriteria></div>\\r\\n\\r\\n    <button type=\\\"button\\\" (click)=\\\"addFilter()\\\" class=\\\"btn btn-action btn-small\\\">\\r\\n      <i class=\\\"fa fa-plus\\\"></i>\\r\\n    </button><strong>&nbsp; {{ i18n.common + 'Add Filter Criteria' | dynamicTranslate }}</strong>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n        <h4>{{ i18n.common + 'Types of Rounding' | dynamicTranslate }}</h4>\\r\\n        <select class=\\\"form-control\\\" [(ngModel)]=\\\"trendingRequest.rounding\\\" name=\\\"roundingSelect\\\" id=\\\"roundingSelect\\\" #selectRounding=\\\"ngModel\\\" required>\\r\\n          <option disabled>\\r\\n            <span>{{ i18n.common + 'Select a Rounding Type' | dynamicTranslate }} </span>\\r\\n          </option>\\r\\n          <option *ngFor=\\\"let type of roundingTypeOptions\\\" [value]=\\\"type.value\\\">{{i18n.trending + type.displayName | dynamicTranslate }}</option>\\r\\n        </select>\\r\\n\\r\\n        <div *ngIf=\\\"selectRounding.errors && trendingSetupForm.submitted\\\" class=\\\"alert alert-danger\\\">\\r\\n          <div>\\r\\n            {{ i18n.common + 'Please select a rounding type' | dynamicTranslate }}.\\r\\n          </div>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <button [ladda]=\\\"isProcessing\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"> {{ i18n.common + 'Run' | dynamicTranslate }} </button>\\r\\n</form>\"","export default \"<processing-summary [processingSummary]=\\\"processingSummary\\\"></processing-summary>\\r\\n\\r\\n<div class=\\\"form-group row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n\\r\\n                <famis-grid *ngIf=\\\"!!successGrid.loading\\\" [famisGrid]=\\\"successGrid\\\" (updateCacheEvent)=\\\"updateCache($event)\\\"></famis-grid>\\r\\n        </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"form-group row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n                <famis-grid [isPersistentGrid]=\\\"false\\\" class=\\\"errors-grid\\\" *ngIf=\\\"!!errorGrid.loading\\\" [famisGrid]=\\\"errorGrid\\\" (updateCacheEvent)=\\\"updateCache($event)\\\"></famis-grid>\\r\\n        </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n<div class=\\\"col-sm-12\\\">\\r\\n        <div class=\\\"wizard-actions\\\">\\r\\n                <button class=\\\"btn btn-default\\\" (click)=\\\"back()\\\">{{i18n.common + 'Back' | dynamicTranslate }}</button>\\r\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"commit()\\\">{{i18n.common + 'Commit' | dynamicTranslate }}</button>\\r\\n        </div>\\r\\n</div>\\r\\n</div>\"","export default \"<router-outlet></router-outlet>\"","export default \"<form (ngSubmit)=\\\"onSubmit(administrationForm)\\\" #administrationForm=\\\"ngForm\\\">\\r\\n\\r\\n  <h1>{{ i18n.admin + 'Administration' | dynamicTranslate}}</h1>\\r\\n  <br/>\\r\\n\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <label for=\\\"costFieldSelect\\\">{{ i18n.admin + 'Select Action' | dynamicTranslate}}</label>\\r\\n      <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedAction\\\" name=\\\"costFieldSelect\\\" id=\\\"costFieldSelect\\\" required\\r\\n      #inputAvailableDataOptions=\\\"ngModel\\\">\\r\\n        <option disabled>\\r\\n          <span i18n=\\\"Select for administration: select an action@@hintSelectAnAction\\\">{{ i18n.admin + 'Select an Action' | dynamicTranslate}}</span>\\r\\n        </option>\\r\\n        <option value=\\\"DeleteReconciledData\\\">{{ i18n.admin + 'Delete Reconciled Data' | dynamicTranslate}}</option>\\r\\n        <option value=\\\"RollbackConsolidatedFile\\\">{{ i18n.admin + 'Rollback Consolidated File' | dynamicTranslate}}</option>\\r\\n        <option value=\\\"RollbackTransactionData\\\">{{ i18n.admin + 'Rollback Transaction Data' | dynamicTranslate}}</option>\\r\\n        <option value=\\\"GroupSave\\\">{{ i18n.admin + 'Group Save & Restore' | dynamicTranslate}}</option>\\r\\n        <option value=\\\"DeactivateItems\\\">{{ i18n.admin + 'Remove Deactivated  Assets & Buildings' | dynamicTranslate}}</option>\\r\\n      </select>\\r\\n\\r\\n      <div *ngIf=\\\"inputAvailableDataOptions.errors && (inputAvailableDataOptions.dirty || inputAvailableDataOptions.touched || administrationForm.submitted)\\\"\\r\\n        class=\\\"alert alert-danger\\\">\\r\\n        <div [hidden]=\\\"!inputAvailableDataOptions.errors.required\\\">\\r\\n          {{ i18n.common + 'Please select an action.' | dynamicTranslate}}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n<button class=\\\"btn btn-primary\\\" i18n=\\\"Continue button text@@reconContinue\\\">{{ i18n.common + 'Continue' | dynamicTranslate}}</button>\\r\\n  </div>\\r\\n\\r\\n</form>\\r\\n\\r\\n \\r\\n\"","export default \"<div class=\\\"form-group\\\" [formGroup]=\\\"form\\\">\\r\\n  <label *ngIf=\\\"!field.isCustomField\\\" [attr.for]=\\\"field.key\\\">{{i18n.projectProfile + field.label | dynamicTranslate }}</label>\\r\\n  <label *ngIf=\\\"field.isCustomField\\\" [attr.for]=\\\"field.key\\\">{{field.label }}</label>\\r\\n\\r\\n  \\r\\n\\r\\n   <div [ngSwitch]=\\\"field.controlType\\\">\\r\\n    <div *ngSwitchCase=\\\"'boolean'\\\" class=\\\"checkbox k-form-field\\\">\\r\\n      <input type=\\\"checkbox\\\" [formControlName]=\\\"field.key\\\" [id]=\\\"field.key\\\" [tabindex]=\\\"field.order\\\"  class=\\\"k-checkbox\\\">\\r\\n      <label class=\\\"k-checkbox-label\\\" [for]=\\\"field.key\\\"></label>\\r\\n    </div>\\r\\n\\r\\n    <textarea [id]=\\\"field.key\\\" class=\\\"form-control\\\" *ngSwitchCase=\\\"'textarea'\\\" [formControlName]=\\\"field.key\\\" [tabindex]=\\\"field.order\\\" rows=\\\"6\\\"></textarea>\\r\\n    <input [id]=\\\"field.key\\\" class=\\\"form-control\\\" *ngSwitchCase=\\\"'text'\\\" [formControlName]=\\\"field.key\\\" [tabindex]=\\\"field.order\\\" [type]=\\\"field.controlType\\\">\\r\\n    <input [id]=\\\"field.key\\\" class=\\\"form-control\\\" *ngSwitchCase=\\\"'wholenumber'\\\" [formControlName]=\\\"field.key\\\" [tabindex]=\\\"field.order\\\" type=\\\"number\\\"\\r\\n      step=\\\"1\\\">\\r\\n    <input [id]=\\\"field.key\\\" class=\\\"form-control\\\" *ngSwitchCase=\\\"'decimalnumber'\\\" [formControlName]=\\\"field.key\\\" [tabindex]=\\\"field.order\\\" type=\\\"number\\\"\\r\\n      step=\\\"0.01\\\">\\r\\n    <div *ngSwitchCase=\\\"'date'\\\">\\r\\n      <kendo-datepicker *ngIf=\\\"field.fieldName !== 'Created from Salesforce'\\\" [id]=\\\"field.key\\\" [formControlName]=\\\"field.key\\\" [tabindex]=\\\"field.order\\\"></kendo-datepicker>\\r\\n      <kendo-datepicker *ngIf=\\\"field.fieldName === 'Created from Salesforce'\\\" [format]=\\\"'MM/dd/yyyy HH:mm'\\\" [id]=\\\"field.key\\\" [formControlName]=\\\"field.key\\\" [tabindex]=\\\"field.order\\\"></kendo-datepicker>\\r\\n    </div>\\r\\n\\r\\n    <div *ngSwitchCase=\\\"'peoplePicker'\\\">\\r\\n      <input [id]=\\\"field.key\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"field.fieldName\\\" [(ngModel)]=\\\"selectedEmployee\\\" [value]=\\\"fieldValueString\\\"\\r\\n        [ngbTypeahead]=\\\"search\\\" placeholder=\\\"Employee Search\\\" (selectItem)=\\\"onSelectItem($event)\\\" [inputFormatter]=\\\"getImputFormatter\\\"\\r\\n        [resultFormatter]=\\\"getResultFormatter\\\" [tabindex]=\\\"field.order\\\" [formControlName]=\\\"field.key\\\"/>\\r\\n        <span *ngIf=\\\"searching\\\">searching...</span>\\r\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"searchFailed\\\">Sorry, suggestions could not be loaded.</div>\\r\\n    </div>\\r\\n\\r\\n    <select class=\\\"form-control\\\" [id]=\\\"field.key\\\" *ngSwitchCase=\\\"'dropdown'\\\" [tabindex]=\\\"field.order\\\" [formControlName]=\\\"field.key\\\"\\r\\n      [(ngModel)]=\\\"field.value\\\">\\r\\n      <option value=\\\"\\\" disabled selected>{{i18n.common + '-- Select Option --' | dynamicTranslate }}</option>\\r\\n      <option *ngFor=\\\"let opt of field.dropDownOptions\\\" [value]=\\\"opt.key\\\">{{i18n.projectProfile+ field.label + '_' + opt.value | dynamicTranslate }}</option>\\r\\n    </select>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"errorMessage\\\" *ngIf=\\\"!isValid\\\">{{i18n.projectProfile+ field.label | dynamicTranslate }} is required.</div>\\r\\n</div>\"","export default \"<div id=\\\"ProjectProfile\\\" class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\" style=\\\"margin-left: auto; margin-right: auto;\\\">\\r\\n    <nav *ngIf=\\\"!isCollapsed\\\" [@inOutFromLeftSideAnimation]\\r\\n    class=\\\"col-sm-3 col-md-2 hidden-xs-down bg-faded sidebar\\\">\\r\\n\\r\\n      <div class=\\\"sidebar-project\\\">\\r\\n        <h3>{{accountName}}</h3>\\r\\n        <h2>{{groupName}}</h2>\\r\\n\\r\\n        <select *ngIf=\\\"groups.length > 1\\\" name=\\\"GroupSelector\\\" class=\\\"mx-1 form-control\\\" id=\\\"GroupSelector\\\" (change)=\\\"onGroupSelected($event.target.value)\\\">\\r\\n          <option selected=\\\"true\\\" disabled>\\r\\n            <span>{{i18n.common + 'Switch Group' | dynamicTranslate }}</span>\\r\\n          </option>\\r\\n          <option *ngFor=\\\"let group of groups | orderBy:'groupName'\\\" [value]=\\\"group.id\\\">{{group.groupName}}</option>\\r\\n        </select>\\r\\n\\r\\n      </div>\\r\\n      <ul class=\\\"menu list-unstyled\\\">\\r\\n        <li>\\r\\n          <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/project-profile', currentGroupId,'MainProfile']\\\">{{i18n.common + 'Main Profile' | dynamicTranslate }}</a>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"isEnabled('Sub-Profile')\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/project-profile', currentGroupId,'SubProfile']\\\">{{i18n.common + 'Sub Profile' | dynamicTranslate }}</a>\\r\\n        </li>\\r\\n        <li [showIfCanAccess]='permissions.canWriteData'>\\r\\n          <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/project-profile', currentGroupId,'DataImport']\\\">{{i18n.common + 'Data Import' | dynamicTranslate }}</a>\\r\\n        </li>\\r\\n        <li [showIfCanAccess]='permissions.canWriteData' *ngIf=\\\"isEnabled('Reconciliation')\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/project-profile', currentGroupId,'Reconciliation']\\\">{{i18n.common + 'Reconciliation' | dynamicTranslate }} </a>\\r\\n        </li>\\r\\n        <li [showIfCanAccess]='permissions.canWriteData' *ngIf=\\\"isEnabled('Trending')\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/project-profile', currentGroupId,'Trending']\\\">{{i18n.common + 'Trending' | dynamicTranslate }}</a>\\r\\n        </li>\\r\\n        <li [showIfCanAccess]='permissions.canWriteData' *ngIf=\\\"isEnabled('Depreciation')\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/project-profile', currentGroupId,'Depreciation']\\\">{{i18n.common + 'Depreciation' | dynamicTranslate }}</a>\\r\\n        </li>\\r\\n        <li>\\r\\n          <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/project-profile', currentGroupId,'QualityControl']\\\">{{i18n.common + 'Quality Control' | dynamicTranslate }}</a>\\r\\n        </li>\\r\\n\\r\\n        <li [showIfCanAccess]='permissions.canAdminProjects'>\\r\\n          <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/project-profile', currentGroupId,'Administration']\\\">{{i18n.common + 'Administration' | dynamicTranslate }}</a>\\r\\n        </li>\\r\\n        <li [showIfCanAccess]='permissions.canAdminProjects'>\\r\\n          <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/project-profile', currentGroupId,'HeaderManagement']\\\">{{i18n.common + 'Header Management' | dynamicTranslate }}</a>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"isEnabled('Recipients')\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/project-profile', currentGroupId,'Recipients']\\\">{{i18n.common + 'Recipients' | dynamicTranslate }}</a>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"isEnabled('Reporting')\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/project-profile', currentGroupId, 'Reports']\\\">{{i18n.common + 'Reports' | dynamicTranslate}}</a>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"isEnabled('File Upload')\\\">\\r\\n          \\r\\n          <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/project-profile', currentGroupId, 'FileUpload']\\\">{{i18n.common + 'File Upload' | dynamicTranslate}}</a>\\r\\n        </li>\\r\\n        <li >\\r\\n          <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/project-profile', currentGroupId, 'Support']\\\">{{i18n.common + 'Support' | dynamicTranslate}}</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </nav>\\r\\n    <main [ngClass]=\\\"{'col-sm-9 offset-sm-3 col-md-10 offset-md-2 menu-expanded' : isCollapsed === false, 'col-sm-12 ml-2 pt-3 mr-2' : isCollapsed === true}\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n    </main>\\r\\n  </div>\\r\\n</div>\"","export default \"<ng-template #modalContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">Edit Task</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <form #editTaskFormForm=\\\"ngForm\\\">\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"selectAssignedTo\\\">Assigned To</label>\\r\\n        <select class=\\\"form-control\\\" id=\\\"selectAssignedTo\\\" [(ngModel)]=\\\"dto.assignedUserId\\\" name=\\\"assignedUserId\\\" required #selectAssignedTo=\\\"ngModel\\\">\\r\\n          <option></option>\\r\\n          <option *ngFor=\\\"let opt of users\\\" [value]=\\\"opt.id\\\">{{opt.name}}</option>\\r\\n        </select>\\r\\n\\r\\n\\r\\n        <div *ngIf=\\\"selectAssignedTo.invalid && (selectAssignedTo.dirty || selectAssignedTo.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n\\r\\n          <div *ngIf=\\\"selectAssignedTo.errors.required\\\">\\r\\n            Assigned to is required\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"selectEscalationUser\\\">Escalation User</label>\\r\\n        <select class=\\\"form-control\\\" id=\\\"selectEscalationUser\\\" [(ngModel)]=\\\"dto.escalationUserId\\\" name=\\\"selectEscalationUser\\\" #selectEscalationUser=\\\"ngModel\\\">\\r\\n          <option></option>\\r\\n          <option *ngFor=\\\"let opt of users\\\" [value]=\\\"opt.id\\\">{{opt.name}}</option>\\r\\n        </select>\\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"selectEscalationTeam\\\">Escalation Team</label>\\r\\n        <select class=\\\"form-control\\\" [(ngModel)]=\\\"dto.escalationTeamId\\\" name=\\\"escalationTeam\\\" id=\\\"selectEscalationTeam\\\">\\r\\n          <option></option>\\r\\n          <option value=\\\"FAA\\\">FAA</option>\\r\\n          <option value=\\\"ProjectManagement\\\">Project Management</option>\\r\\n          <option value=\\\"Admin\\\">Admin</option>\\r\\n        </select>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\" *ngIf=\\\"dto.escalationUserId || dto.escalationTeamId\\\">\\r\\n\\r\\n        <label for=\\\"selectEscalationDays\\\">Escalation Days</label>\\r\\n        <select class=\\\"form-control\\\" [(ngModel)]=\\\"dto.escalationDays\\\" name=\\\"escalationDays\\\" id=\\\"selectEscalationDays\\\" [required]=\\\"dto.escalationUserId || dto.escalationTeamId\\\"\\r\\n          #selectEscalationDays=\\\"ngModel\\\">\\r\\n          <option></option>\\r\\n          <option value=\\\"10\\\">10 Days</option>\\r\\n          <option value=\\\"20\\\">20 Days</option>\\r\\n          <option value=\\\"30\\\">30 Days</option>\\r\\n        </select>\\r\\n\\r\\n        <div *ngIf=\\\"selectEscalationDays.invalid && (selectEscalationDays.dirty || selectEscalationDays.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n\\r\\n          <div *ngIf=\\\"selectEscalationDays.errors.required\\\">\\r\\n            Escalation days is required\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </form>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"c('Close click')\\\">Cancel</button>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit(editTaskFormForm)\\\">Save</button>\\r\\n  </div>\\r\\n</ng-template>\"","export default \"<h1>Task Management</h1>\\r\\n\\r\\n  <br />\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <div>\\r\\n      <kendo-grid [resizable]=\\\"true\\\" [data]=\\\"tasks\\\" [sortable]=\\\"false\\\" [rowClass]=\\\"isDisabled\\\">\\r\\n        <kendo-grid-column field=\\\"taskType\\\" title=\\\"Type\\\" width=\\\"9.5%\\\">\\r\\n        </kendo-grid-column>\\r\\n        <kendo-grid-column field=\\\"description\\\" title=\\\"Task Title\\\" width=\\\"14.66%\\\">\\r\\n        </kendo-grid-column>\\r\\n        <kendo-grid-column field=\\\"assignedToName\\\" title=\\\"Assigned To\\\" width=\\\"12.66%\\\">\\r\\n        </kendo-grid-column>\\r\\n        <kendo-grid-column field=\\\"status\\\" title=\\\"Status\\\" width=\\\"9.5%\\\">\\r\\n        </kendo-grid-column>\\r\\n        <kendo-grid-column field=\\\"escalationDays\\\" title=\\\"Escalation Days\\\" width=\\\"10.76%\\\">\\r\\n        </kendo-grid-column>\\r\\n        <kendo-grid-column field=\\\"escalationToName\\\" title=\\\"Escalation User\\\" width=\\\"16.66%\\\">\\r\\n        </kendo-grid-column>\\r\\n        <kendo-grid-column field=\\\"Actions\\\" title=\\\"Actions\\\" width=\\\"9.5%\\\">\\r\\n          <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n            <div *ngIf=\\\"dataItem.isActive\\\">\\r\\n              <a (click)=\\\"editModal.open(dataItem,$event)\\\" href=\\\"#\\\">Edit</a>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"canBeDisabled(dataItem.type) && dataItem.isActive\\\">\\r\\n              <a (click)=\\\"toggle(dataItem.id,$event)\\\" href=\\\"#\\\">Disable</a>\\r\\n            </div>\\r\\n            <div class=\\\"enable-link-button\\\" *ngIf=\\\"!dataItem.isActive\\\">\\r\\n              <a (click)=\\\"toggle(dataItem.id, $event)\\\" href=\\\"#\\\">Enable</a>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n        </kendo-grid-column>\\r\\n\\r\\n      </kendo-grid>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<edit-task #editModel (onTaskModified)=\\\"handleTaskModified($event)\\\"></edit-task>\\r\\n\"","export default \"<h1>{{i18n.projectProfile + moduleName| dynamicTranslate }}</h1>\\r\\n\\r\\n<div  class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-6 pb-4 pt-4 actions\\\">\\r\\n    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"groupManagement()\\\">{{i18n.projectProfile + 'Group Management' | dynamicTranslate}}</button>\\r\\n    <button *ngIf=\\\"canManageTemplates\\\" class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"editForms()\\\">{{i18n.projectProfile + 'Edit Forms' | dynamicTranslate}}</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngFor=\\\"let item of forms\\\">\\r\\n  <form *ngIf=\\\"item.id === view.id\\\" (ngSubmit)=\\\"onSubmit(item.id)\\\" [formGroup]=\\\"item.form\\\" #currentForm=\\\"ngForm\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      \\r\\n      \\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div *ngFor=\\\"let field of view.evenFields | evenodd:'even'\\\">\\r\\n          <profile-dynamic-field [field]=\\\"field\\\" [form]=\\\"item.form\\\"></profile-dynamic-field>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div *ngFor=\\\"let field of view.oddFields | evenodd:'odd'\\\">\\r\\n          <profile-dynamic-field [field]=\\\"field\\\" [form]=\\\"item.form\\\"></profile-dynamic-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!item.form.valid\\\">{{ i18n.common + 'Save' | dynamicTranslate }}</button>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n\\r\\n</div>\"","export default \"<modal-form [modalTitle]=\\\"i18n.asset + modalTitle | dynamicTranslate\\\" (modalEvent)=\\\"handleModalEvent($event)\\\">\\r\\n    <form (ngSubmit)=\\\"retireAssets(assetRetirementForm)\\\" #assetRetirementForm=\\\"ngForm\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <label>{{i18n.common + 'Type' | dynamicTranslate}}</label>\\r\\n                    <select class=\\\"form-control\\\" [(ngModel)]=\\\"assetRetirement.transactionApplicability\\\" name=\\\"transactionApplicability\\\" id=\\\"transactionApplicability\\\" #replaceSourceField=\\\"ngModel\\\" required>\\r\\n                        <option value=\\\"\\\" disabled>\\r\\n                            <span>{{i18n.common + 'Select a Type' | dynamicTranslate}}</span>\\r\\n                        </option>\\r\\n                        <option [value]=\\\"applicability.Partial\\\" [disabled]=\\\"disablePartial\\\">{{i18n.asset + 'Partial' | dynamicTranslate}}</option>\\r\\n                        <option [value]=\\\"applicability.Full\\\">{{i18n.asset + 'Full' | dynamicTranslate}}</option>\\r\\n                    </select>\\r\\n                    <div *ngIf=\\\"checkForTypeUndefined(assetRetirement.transactionApplicability) && !assetRetirementForm.valid && submitted\\\" class=\\\"alert alert-danger\\\">\\r\\n                        <div>\\r\\n                             {{i18n.common + 'Please enter a type.' | dynamicTranslate}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\" *ngIf=\\\"assetRetirement.transactionApplicability != applicability.Full\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <label>{{i18n.asset + 'Cost' | dynamicTranslate}}</label>\\r\\n                    <input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"assetRetirement.costChange\\\" name=\\\"costChange\\\" #costChange=\\\"ngModel\\\" \\r\\n                        [disabled]=\\\"assetRetirement.quantityChange || assetRetirement.quantityChange === 0\\\" (change)=\\\"formHasErrors = false\\\"/>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <label>{{i18n.asset + 'Quantity' | dynamicTranslate}}</label>\\r\\n                    <input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"assetRetirement.quantityChange\\\" name=\\\"quantityChange\\\" #quantityChange=\\\"ngModel\\\" \\r\\n                        [disabled]=\\\"assetRetirement.costChange || assetRetirement.costChange === 0\\\" (change)=\\\"formHasErrors = false\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\" *ngIf=\\\"((!assetRetirement.costChange && assetRetirement.quantityChange !== 0) && (!assetRetirement.quantityChange && assetRetirement.costChange !== 0)) && submitted\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div  class=\\\"alert alert-danger\\\">\\r\\n                        <div>\\r\\n                             {{i18n.qualityControl + 'Please enter cost or quantity, one must be entered' | dynamicTranslate}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <label>{{i18n.asset + 'Disposal Code' | dynamicTranslate}}</label>\\r\\n                    <select class=\\\"form-control\\\" [(ngModel)]=\\\"assetRetirement.disposalCode\\\" name=\\\"disposalCode\\\" id=\\\"disposalCode\\\" required>\\r\\n                        <option value=\\\"\\\" disabled>\\r\\n                            <span>{{i18n.qualityControl + 'Select a Display Code' | dynamicTranslate}}</span>\\r\\n                        </option>\\r\\n                        <option [value]=\\\"disposalCodes.Scrapped\\\">{{i18n.asset + 'Scrapped' | dynamicTranslate}}</option>\\r\\n                        <option [value]=\\\"disposalCodes.Sold\\\">{{i18n.asset + 'Sold' | dynamicTranslate}}</option>\\r\\n                        <option [value]=\\\"disposalCodes.TradedIn\\\">{{i18n.asset + 'Traded In' | dynamicTranslate}}</option>\\r\\n                        <option [value]=\\\"disposalCodes.PostAudit\\\">{{i18n.asset + 'Post Audit' | dynamicTranslate}}</option>\\r\\n                    </select>\\r\\n                    <div *ngIf=\\\"!assetRetirement.disposalCode && !assetRetirementForm.valid && submitted\\\" class=\\\"alert alert-danger\\\">\\r\\n                        <div>\\r\\n                            {{i18n.qualityControl + 'Please enter a disposal code.' | dynamicTranslate}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <label>{{i18n.asset + 'Disposal Date' | dynamicTranslate}}</label>\\r\\n                    <kendo-datepicker [(value)]=\\\"assetRetirement.asOf\\\" required></kendo-datepicker>\\r\\n                    <div *ngIf=\\\"!assetRetirement.asOf && submitted\\\" class=\\\"alert alert-danger\\\">\\r\\n                        <div>\\r\\n                             {{i18n.qualityControl + 'Please enter a disposal date.' | dynamicTranslate}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\" *ngIf=\\\"equalityCheck(assetRetirement.costChange, assetsCollection[0].historicalCost)\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"alert alert-warning\\\">\\r\\n                        <div>\\r\\n                             {{i18n.qualityControl + 'Retirement cost entered equals historial cost, this will be processed as a full retirement.' | dynamicTranslate}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\" *ngIf=\\\"equalityCheck(assetRetirement.quantityChange, this.assetsCollection[0]['quantity'])\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"alert alert-warning\\\">\\r\\n                        <div>\\r\\n                             {{i18n.qualityControl + 'Retirement quantity entered equals original quantity, this will be processed as a full retirement.' | dynamicTranslate}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\" *ngIf=\\\"formHasErrors\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"alert alert-danger\\\">\\r\\n                        <div>\\r\\n                             {{i18n.qualityControl + formErrorText | dynamicTranslate}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</modal-form>\"","export default \"<modal-form [modalTitle]=\\\"i18n.asset + modalTitle | dynamicTranslate\\\" (modalEvent)=\\\"handleModalEvent($event)\\\">\\r\\n    <form (ngSubmit)=\\\"transferAssets(assetTransferForm)\\\" #assetTransferForm=\\\"ngForm\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <label>{{i18n.common + 'Type' | dynamicTranslate}}</label>\\r\\n                    <select class=\\\"form-control\\\" name=\\\"type\\\" required (change)=\\\"checkDisablePartial($event)\\\" [(ngModel)]=\\\"assetTransfer.transactionApplicability\\\" id=\\\"type\\\">\\r\\n                        <option value=\\\"\\\" disabled>\\r\\n                            <span>{{i18n.common + 'Select a Type' | dynamicTranslate}}</span>\\r\\n                        </option>\\r\\n                        <option [ngValue]=\\\"applicability.Full\\\">{{i18n.asset + 'Full' | dynamicTranslate}}</option>\\r\\n                        <option [ngValue]=\\\"applicability.Partial\\\" [disabled]=\\\"disablePartial\\\">{{i18n.asset + 'Partial' | dynamicTranslate}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div clas=\\\"form-group\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <label>{{i18n.asset + 'Member' | dynamicTranslate}}</label>\\r\\n                    <br />\\r\\n                    <cascading-combo-box [(ngModel)]=\\\"memberSiteBuilding\\\" name=\\\"memberSiteBuilding\\\"\\r\\n                    [valuesToSelect]=\\\"groupHierarchySelectValues\\\"\\r\\n                    [options]=\\\"groupHierarchy\\\"></cascading-combo-box>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\" >\\r\\n            <div class=\\\"row\\\" *ngIf=\\\"!hidePartialFields\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <label>{{i18n.asset + 'Cost' | dynamicTranslate}}</label>\\r\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"cost\\\" [(ngModel)]=\\\"assetTransfer.costChange\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <label>{{i18n.asset + 'Quantity' | dynamicTranslate}}</label>\\r\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"quantity\\\" [(ngModel)]=\\\"assetTransfer.quantityChange\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <label>{{i18n.asset + 'Floor' | dynamicTranslate}}</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"floor\\\" [(ngModel)]=\\\"floorValue\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <label>{{i18n.asset + 'Room' | dynamicTranslate}}</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"room\\\" [(ngModel)]=\\\"roomValue\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <label>{{i18n.asset + 'Department Name' | dynamicTranslate}}</label>\\r\\n                    <select class=\\\"form-control\\\" id=\\\"DepartmentSelection\\\" [(ngModel)]=\\\"selectedDepartmentId\\\" name=\\\"accountSelection\\\">\\r\\n                        <option *ngFor=\\\"let opt of departmentOptions\\\" [value]=\\\"opt.id\\\">{{opt.departmentNumber}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <label>{{i18n.asset + 'Account Description' | dynamicTranslate}}</label>\\r\\n                    <select class=\\\"form-control\\\" id=\\\"AccountSelection\\\" [(ngModel)]=\\\"selectedAccountId\\\" name=\\\"accountSelection\\\">\\r\\n                        <option *ngFor=\\\"let opt of accountOptions\\\" [value]=\\\"opt.id\\\">{{opt.accountDescription}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"hasErrors() && submitted\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"alert alert-danger\\\">\\r\\n                    <div>\\r\\n                        {{i18n.qualityControl + errorMessage | dynamicTranslate}}\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</modal-form>\"","export default \"<modal-form [modalTitle]=\\\"i18n.asset + modalTitle | dynamicTranslate\\\" (modalEvent)=\\\"handleModalEvent($event)\\\">\\r\\n    <form (ngSubmit)=\\\"costAdjustment(costAdjustmentForm)\\\" #costAdjustmentForm=\\\"ngForm\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <input type=\\\"checkbox\\\" class=\\\"k-checkbox\\\" [checked]=\\\"costAdjustmentDto.prorateValues\\\" (change)=\\\"costAdjustmentDto.prorateValues = !costAdjustmentDto.prorateValues\\\" id=\\\"prorate\\\" name=\\\"prorate\\\">\\r\\n                    <label class=\\\"k-checkbox-label\\\" for=\\\"prorate\\\">{{i18n.asset + 'Prorate Values' | dynamicTranslate}}</label>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group border p-3\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-3\\\"></div>\\r\\n                <div class=\\\"col-md-4 text-center pt-2\\\">{{i18n.asset + 'Cost' | dynamicTranslate}}</div>\\r\\n                <div class=\\\"col-md-4 text-center\\\">{{i18n.asset + 'Accumulated Depr.' | dynamicTranslate}}</div>\\r\\n            </div>\\r\\n            <div class=\\\"row pt-1\\\">\\r\\n                <div class=\\\"col-md-3 text-right\\\">{{i18n.common + 'Old' | dynamicTranslate}}</div>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedAsset.historicalCost\\\" name=\\\"currentHistorialCost\\\" readonly\\r\\n                    />\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedAsset.accumulatedDepreciation\\\" name=\\\"currentAccumulatedDepreciation\\\"\\r\\n                        readonly />\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row pt-1\\\">\\r\\n                <div class=\\\"col-md-3 text-right\\\">{{i18n.asset + 'Adjustment' | dynamicTranslate}}</div>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"costAdjustmentDto.costChange\\\" name=\\\"costChange\\\" (change)=\\\"calcHistoricalCost()\\\"\\r\\n                    />\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"costAdjustmentDto.accumChange\\\" name=\\\"accumChange\\\" name=\\\"adjustmentAccumulatedDepreciation\\\"\\r\\n                        (change)=\\\"calcNewAccumulatedDepreciation()\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row pt-1\\\">\\r\\n                <div class=\\\"col-md-3 text-right\\\">{{i18n.common + 'New' | dynamicTranslate}}</div>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newHistorialCost\\\" name=\\\"newHistorialCost\\\" (change)=\\\"calcCostChange()\\\"\\r\\n                    />\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newAccumulatedDepreciation\\\" name=\\\"newAccumulatedDepreciation\\\" (change)=\\\"calcAccumChange()\\\"\\r\\n                    />\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\" *ngIf=\\\"hasErrors() && submitted\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div  class=\\\"alert alert-danger\\\" *ngIf=\\\"missingRequiredField\\\">\\r\\n                        <div>\\r\\n                            {{i18n.qualityControl + 'Please enter a value in one of the fields for the cost adjustment to be completed' | dynamicTranslate}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!isFiscalYearEndValid\\\">\\r\\n                        <div>\\r\\n                             {{i18n.qualityControl + 'Cannot complete cost adjustment. Fiscal Year End is not set.' | dynamicTranslate}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\" *ngIf=\\\"apiErrorMessage\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"apiErrorMessage\\\">\\r\\n                        <div>\\r\\n                            {{i18n.qualityControl + '' + apiErrorMessage | dynamicTranslate}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</modal-form>\"","export default \"<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\r\\n  <form #buildingValuationForm=\\\"ngForm\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div *ngIf=\\\"!valuationRequestSubmitted\\\">\\r\\n        {{i18n.qualityControl + 'You are about to submit' | dynamicTranslate}}\\r\\n        <b> {{selectedBuildings.length}} </b> \\r\\n        {{i18n.qualityControl + 'buildings to CoreLogic for valuation. Please confirm to proceed.' | dynamicTranslate}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"valuationRequestSubmitted && !responseArrived\\\">\\r\\n          {{i18n.qualityControl + 'Processing Submission' | dynamicTranslate}}\\r\\n        <br><br>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"valuationRequestSubmitted && responseArrived && !hasValuationErrors\\\">\\r\\n          {{i18n.qualityControl + 'All records sent successfully for valuation' | dynamicTranslate}}\\r\\n          <br><br>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"valuationRequestSubmitted && responseArrived && hasValuationErrors\\\">\\r\\n        <b> {{i18n.qualityControl + 'Please resolve the following errors and resubmit' | dynamicTranslate}} </b>\\r\\n      <br>\\r\\n      <br>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"!valuationRequestSubmitted && !responseArrived\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div style=\\\"position: relative;\\\">\\r\\n            <kendo-grid [resizable]=\\\"true\\\"  [data]=\\\"selectedBuildings\\\">\\r\\n              <kendo-grid-column field=\\\"buildingName\\\" title=\\\"{{i18n.building + 'Building Name' | dynamicTranslate}}\\\" width=\\\"25%\\\">  </kendo-grid-column>\\r\\n              <kendo-grid-column field=\\\"siteName\\\" title=\\\"{{i18n.building + 'Site Name' | dynamicTranslate}}\\\" width=\\\"25%\\\"></kendo-grid-column>\\r\\n              <kendo-grid-column field=\\\"memberName\\\" title=\\\"{{i18n.building + 'Member Name' | dynamicTranslate}}\\\" width=\\\"25%\\\"></kendo-grid-column>\\r\\n            </kendo-grid>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"responseArrived && hasValuationErrors\\\" style=\\\"position: relative;padding:3rem;padding-top:0.5rem; padding-bottom:0.5rem\\\">\\r\\n          <div style=\\\"overflow-y:scroll;height:25rem;width:80%;padding-left: 20px;border: 1px solid black;\\\">\\r\\n            <table style=\\\"height: 70%; width:100%;\\\">\\r\\n              <tr *ngFor=\\\"let building of apiErrorResponse;\\\" > <b> {{building.buildingName}} </b>\\r\\n                  <table>\\r\\n                      <tr *ngFor=\\\"let buildingError of building.errorsAssociated\\\">\\r\\n                        <td></td><td>{{i18n.qualityControl + getEnumDisplayName(buildingError) | dynamicTranslate}}</td>\\r\\n                      </tr>\\r\\n                  </table>\\r\\n                  <br>\\r\\n              </tr>\\r\\n            </table>\\r\\n          </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" style=\\\"padding:2rem;padding-top:0.5rem\\\">\\r\\n      <button *ngIf=\\\"!valuationRequestSubmitted\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"cancel()\\\"> {{i18n.common + 'Cancel' | dynamicTranslate}} </button>  \\r\\n      <button *ngIf=\\\"valuationRequestSubmitted\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"cancel()\\\" > {{i18n.common + 'Close' | dynamicTranslate}} </button>                     \\r\\n      <button *ngIf=\\\"!valuationRequestSubmitted\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"confirm()\\\" >{{i18n.common + 'Confirm' | dynamicTranslate}}</button>                    \\r\\n    </div>\\r\\n  </form>\\r\\n</ng-template>\"","export default \"<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\r\\n  <form #floodplainValuationForm=\\\"ngForm\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div *ngIf=\\\"!valuationRequestSubmitted\\\">\\r\\n         {{i18n.qualityControl + 'You are about to submit' | dynamicTranslate}}\\r\\n          <b> {{selectedBuildings.length}} </b> \\r\\n         {{i18n.qualityControl + 'buildings to CoreLogic for Flood Plain valuation. Please confirm to proceed.' | dynamicTranslate}}\\r\\n        </div>\\r\\n        <div *ngIf=\\\"valuationRequestSubmitted && !responseArrived\\\">\\r\\n          {{i18n.qualityControl + 'Processing Submission' | dynamicTranslate}}\\r\\n          <br><br>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"valuationRequestSubmitted && responseArrived && !hasValuationErrors\\\">\\r\\n          {{i18n.qualityControl + 'All records sent successfully for valuation' | dynamicTranslate}}\\r\\n          <br><br>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"valuationRequestSubmitted && responseArrived && hasValuationErrors\\\">\\r\\n          <b>\\r\\n            {{i18n.qualityControl + 'Please resolve the following errors and resubmit' | dynamicTranslate}}\\r\\n          </b>\\r\\n          <br>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"!valuationRequestSubmitted && !responseArrived\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <div style=\\\"position: relative;\\\">\\r\\n                <kendo-grid [resizable]=\\\"true\\\"  [data]=\\\"selectedBuildings\\\">\\r\\n                    <kendo-grid-column field=\\\"buildingName\\\" title=\\\"{{ i18n.building + 'Building Name' | dynamicTranslate}}\\\" width=\\\"25%\\\">  </kendo-grid-column>\\r\\n                    <kendo-grid-column field=\\\"siteName\\\" title=\\\"{{ i18n.building + 'Site Name' | dynamicTranslate}}\\\" width=\\\"25%\\\"></kendo-grid-column>\\r\\n                    <kendo-grid-column field=\\\"memberName\\\" title=\\\"{{ i18n.building + 'Member Name' | dynamicTranslate}}\\\" width=\\\"25%\\\"></kendo-grid-column>\\r\\n                  </kendo-grid>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"responseArrived && hasValuationErrors\\\" style=\\\"position: relative;padding:3rem;padding-top:0.5rem; padding-bottom:0.5rem\\\">\\r\\n          <div style=\\\"overflow-y:scroll;height:25rem;width:80%;padding-left: 20px;border: 1px solid black;\\\">\\r\\n            <table style=\\\"height: 70%; width:100%;\\\">\\r\\n                <tr *ngFor=\\\"let building of apiErrorResponse\\\"> <b> {{building.buildingName}} </b>\\r\\n                    <table>\\r\\n                        <tr *ngFor=\\\"let buildingError of building.errorsAssociated\\\">\\r\\n                          <td>{{ i18n.qualityControl + getEnumDisplayName(buildingError) | dynamicTranslate }}</td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                    <br>\\r\\n                </tr>\\r\\n              </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" style=\\\"padding:2rem;padding-top:0.5rem\\\">\\r\\n        <button *ngIf=\\\"!valuationRequestSubmitted\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"cancel()\\\">{{i18n.common + 'Cancel' | dynamicTranslate}}</button>  \\r\\n        <button *ngIf=\\\"valuationRequestSubmitted\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"cancel()\\\" > {{i18n.common + 'Close' | dynamicTranslate}}</button>                     \\r\\n        <button *ngIf=\\\"!valuationRequestSubmitted\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"confirm()\\\" >{{i18n.common + 'Confirm' | dynamicTranslate}}</button>                    \\r\\n    </div>\\r\\n  </form>\\r\\n</ng-template>\"","export default \"<ol class=\\\"breadcrumb\\\">\\r\\n  <li *ngFor=\\\"let breadCrumb of breadCrumbs\\\" class=\\\"breadcrumb-item\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n    <a [class.disabled]=\\\"!!breadCrumb.isDisabled && breadCrumb.isDisabled\\\" [routerLink]=\\\"breadCrumb.routerLink\\\" [queryParams]=\\\"breadCrumb.queryParams\\\">{{i18n.qualityControl + breadCrumb.name | dynamicTranslate}}</a>\\r\\n  </li>\\r\\n</ol>\\r\\n\\r\\n<mass-update-criteria \\r\\n  *ngIf=\\\"filterMetaData\\\" \\r\\n  [defaultFilterTerm]=\\\"defaultFilterTerm\\\" \\r\\n  [filterMetaData]=\\\"filterMetaData\\\"\\r\\n  [translatedBaseKey]=\\\"i18n.building\\\"\\r\\n  [replaceMetaData]=\\\"replaceMetaData\\\"\\r\\n>\\r\\n</mass-update-criteria>\"","export default \"<!--<div class=\\\"row\\\">\\r\\n<ng-container *ngFor=\\\"let field of formControls | orderBy: 'order'; let i=index; let odd=odd; let even=even;\\\">\\r\\n\\r\\n  <ng-container *ngIf=\\\"field.type !== fieldTypes.Hidden\\\">\\r\\n      <div class=\\\"col-md-6\\\" *ngIf=\\\"even\\\">\\r\\n\\r\\n          <dynamic-field [sourceTranslationKey]=\\\"i18n.building\\\" [field]=\\\"field\\\" [form]=\\\"formGroup\\\" [key]='field.displayName'\\r\\n             [imageEntityType]=\\\"imageEntityTypes.Building\\\" [entityId]=\\\"buildingId\\\"></dynamic-field> \\r\\n       \\r\\n         </div>\\r\\n       \\r\\n         <div class=\\\"col-md-6\\\" *ngIf=\\\"odd\\\">\\r\\n\\r\\n           <dynamic-field [sourceTranslationKey]=\\\"i18n.building\\\" [field]=\\\"field\\\" [form]=\\\"formGroup\\\" [key]='field.displayName'\\r\\n           [imageEntityType]=\\\"imageEntityTypes.Building\\\" [entityId]=\\\"buildingId\\\"></dynamic-field> \\r\\n       \\r\\n         </div>\\r\\n  </ng-container>\\r\\n\\r\\n\\r\\n</ng-container>\\r\\n</div>-->\\r\\n\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-6\\\">\\r\\n\\r\\n    <div *ngFor=\\\"let field of fieldsLeft\\\">\\r\\n      <dynamic-field *ngIf=\\\"!field.fieldCategory || field.fieldCategory === 0\\\" [sourceTranslationKey]=\\\"i18n.building\\\" [field]=\\\"field\\\" [form]=\\\"formGroup\\\" [key]='field.displayName'\\r\\n        [imageEntityType]=\\\"imageEntityTypes.Building\\\" [entityId]=\\\"buildingId\\\">\\r\\n      </dynamic-field>\\r\\n      <dynamic-field *ngIf=\\\"field.fieldCategory && field.fieldCategory === 1\\\" [sourceTranslationKey]=\\\"i18n.customField\\\" [field]=\\\"field\\\" [form]=\\\"formGroup\\\" [key]='field.displayName'\\r\\n        [imageEntityType]=\\\"imageEntityTypes.Building\\\" [entityId]=\\\"buildingId\\\" (customFieldLabelChange)=\\\"handleCustomFieldLabelChange($event)\\\">\\r\\n      </dynamic-field>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"col-md-6\\\">\\r\\n\\r\\n    <div *ngFor=\\\"let field of fieldsRight\\\">\\r\\n      <dynamic-field *ngIf=\\\"!field.fieldCategory || field.fieldCategory === 0\\\" [sourceTranslationKey]=\\\"i18n.building\\\" [field]=\\\"field\\\" [form]=\\\"formGroup\\\" [key]='field.displayName'\\r\\n        [imageEntityType]=\\\"imageEntityTypes.Building\\\" [entityId]=\\\"buildingId\\\">\\r\\n      </dynamic-field>\\r\\n      <dynamic-field *ngIf=\\\"field.fieldCategory && field.fieldCategory === 1\\\" [sourceTranslationKey]=\\\"i18n.customField\\\" [field]=\\\"field\\\" [form]=\\\"formGroup\\\" [key]='field.displayName'\\r\\n        [imageEntityType]=\\\"imageEntityTypes.Building\\\" [entityId]=\\\"buildingId\\\" (customFieldLabelChange)=\\\"handleCustomFieldLabelChange($event)\\\">\\r\\n      </dynamic-field>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<ol class=\\\"breadcrumb\\\">\\r\\n  <li *ngFor=\\\"let breadCrumb of breadCrumbs\\\" class=\\\"breadcrumb-item\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\">\\r\\n    <a\\r\\n      [class.disabled]=\\\"!!breadCrumb.isDisabled && breadCrumb.isDisabled\\\"\\r\\n      [queryParams]=\\\"{ mode: '1' }\\\"\\r\\n      [routerLink]=\\\"breadCrumb.routerLink\\\"\\r\\n      >{{ i18n.qualityControl + breadCrumb.name | dynamicTranslate }}</a\\r\\n    >\\r\\n  </li>\\r\\n</ol>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-3\\\">\\r\\n    <span class=\\\"building-header-label\\\">{{ i18n.building + 'Member Number' | dynamicTranslate }}:</span> {{ buildingDto.memberNumber }}\\r\\n    <br />\\r\\n    <span class=\\\"building-header-label\\\">{{ i18n.building + 'Member Name' | dynamicTranslate }}:</span> {{ buildingDto.memberName }}\\r\\n  </div>\\r\\n  <div class=\\\"col-md-3\\\">\\r\\n    <span class=\\\"building-header-label\\\">{{ i18n.building + 'Site Number' | dynamicTranslate }}:</span> {{ buildingDto.siteNumber }} <br />\\r\\n    <span class=\\\"building-header-label\\\">{{ i18n.building + 'Site Name' | dynamicTranslate }}:</span> {{ buildingDto.siteName }}\\r\\n  </div>\\r\\n  <div class=\\\"col-md-3\\\">\\r\\n    <span class=\\\"building-header-label\\\">{{ i18n.building + 'Building Number' | dynamicTranslate }}:</span> {{ buildingDto.buildingNumber }}\\r\\n    <br />\\r\\n    <span class=\\\"building-header-label\\\">{{ i18n.building + 'Building Name' | dynamicTranslate }}:</span> {{ buildingDto.buildingName }}\\r\\n  </div>\\r\\n  <div class=\\\"col-md-3\\\"></div>\\r\\n</div>\\r\\n\\r\\n<form\\r\\n  id=\\\"building-form\\\"\\r\\n  class=\\\"fixed-menu-form\\\"\\r\\n  *ngIf=\\\"formGroup\\\"\\r\\n  [formGroup]=\\\"formGroup\\\"\\r\\n  (ngSubmit)=\\\"onSubmit(buildingForm)\\\"\\r\\n  #buildingForm=\\\"ngForm\\\"\\r\\n>\\r\\n  <div>\\r\\n    <ngb-tabset [destroyOnHide]=\\\"false\\\" type=\\\"pills\\\" #tabs>\\r\\n      <ngb-tab>\\r\\n        <ng-template ngbTabTitle>\\r\\n          <h3>{{ i18n.building + 'Primary Info' | dynamicTranslate }}</h3>\\r\\n        </ng-template>\\r\\n        <ng-template ngbTabContent>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-10\\\">\\r\\n              <h2 id=\\\"PrimaryInfo\\\" #primaryInfoHeading>{{ i18n.building + 'Primary Info' | dynamicTranslate }}</h2>\\r\\n\\r\\n              <!--<div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <dynamic-field\\r\\n                    [sourceTranslationKey]=\\\"i18n.building\\\"\\r\\n                    [field]=\\\"formModels[formModelEnum.PrimaryInfoFields][0]\\\"\\r\\n                    [form]=\\\"formGroup\\\"\\r\\n                    [key]=\\\"formModels[formModelEnum.PrimaryInfoFields][0].displayName\\\"\\r\\n                    [imageEntityType]=\\\"imageEntityTypes.Building\\\"\\r\\n                    [entityId]=\\\"buildingId\\\"\\r\\n                  ></dynamic-field>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <dynamic-field\\r\\n                    [sourceTranslationKey]=\\\"i18n.building\\\"\\r\\n                    [field]=\\\"formModels[formModelEnum.PrimaryInfoFields][1]\\\"\\r\\n                    [form]=\\\"formGroup\\\"\\r\\n                    [key]=\\\"formModels[formModelEnum.PrimaryInfoFields][1].displayName\\\"\\r\\n                    [imageEntityType]=\\\"imageEntityTypes.Building\\\"\\r\\n                    [entityId]=\\\"buildingId\\\"\\r\\n                  ></dynamic-field>\\r\\n\\r\\n                  <dynamic-field\\r\\n                    [sourceTranslationKey]=\\\"i18n.building\\\"\\r\\n                    [field]=\\\"formModels[formModelEnum.PrimaryInfoFields][2]\\\"\\r\\n                    [form]=\\\"formGroup\\\"\\r\\n                    [key]=\\\"formModels[formModelEnum.PrimaryInfoFields][2].displayName\\\"\\r\\n                    [imageEntityType]=\\\"imageEntityTypes.Building\\\"\\r\\n                    [entityId]=\\\"buildingId\\\"\\r\\n                  ></dynamic-field>\\r\\n                </div>\\r\\n              </div>-->\\r\\n\\r\\n              <building-form-group\\r\\n                [formControls]=\\\"formModels[formModelEnum.PrimaryInfoFields]\\\"\\r\\n                [formLayout]=\\\"formLayouts[formModelEnum.PrimaryInfoFields]\\\"\\r\\n                [formGroup]=\\\"formGroup\\\"\\r\\n                [buildingId]=\\\"buildingDto.id\\\"\\r\\n              ></building-form-group>\\r\\n\\r\\n              <building-form-group\\r\\n                [formControls]=\\\"formModels[formModelEnum.BuildingImages]\\\"\\r\\n                [formGroup]=\\\"formGroup\\\"\\r\\n                [buildingId]=\\\"buildingDto.id\\\"\\r\\n              ></building-form-group>\\r\\n\\r\\n              <h2 id=\\\"Location\\\">{{ i18n.building + 'Location' | dynamicTranslate }}</h2>\\r\\n              <building-form-group\\r\\n                [formControls]=\\\"formModels[formModelEnum.BuildingLocationFields]\\\"\\r\\n                [formLayout]=\\\"formLayouts[formModelEnum.BuildingLocationFields]\\\"\\r\\n\\r\\n                [formGroup]=\\\"formGroup\\\"\\r\\n                [buildingId]=\\\"buildingDto.id\\\"\\r\\n              ></building-form-group>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"Map\\\">{{ i18n.building + 'Map' | dynamicTranslate }}</label>\\r\\n\\r\\n                <div id=\\\"Map\\\" class=\\\"heading-item\\\">\\r\\n                  <div *ngIf=\\\"!buildingDto.latitude && !buildingDto.longitude\\\" class=\\\"empty-item-action\\\">\\r\\n                    <a [ngx-scroll-to-duration]=\\\"200\\\" [ngx-scroll-to]=\\\"'#Location'\\\">Set Lat/Long</a>\\r\\n                  </div>\\r\\n\\r\\n                  <bing-map\\r\\n                    *ngIf=\\\"buildingDto.latitude && buildingDto.longitude\\\"\\r\\n                    [longitude]=\\\"buildingDto.longitude\\\"\\r\\n                    [latitude]=\\\"buildingDto.latitude\\\"\\r\\n                    [buildingName]=\\\"buildingDto.buildingName\\\"\\r\\n                    [mapZoom]=\\\"15\\\"\\r\\n                  ></bing-map>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <h2 id=\\\"Valuation\\\">{{ i18n.building + 'Valuation' | dynamicTranslate }}</h2>\\r\\n              <building-form-group\\r\\n                [formControls]=\\\"formModels[formModelEnum.BuildingValuationFields]\\\"\\r\\n                [formLayout]=\\\"formLayouts[formModelEnum.BuildingValuationFields]\\\"\\r\\n                [formGroup]=\\\"formGroup\\\"\\r\\n                [buildingId]=\\\"buildingDto.id\\\"\\r\\n              ></building-form-group>\\r\\n\\r\\n              <h2 id=\\\"Superstructure\\\">{{ i18n.building + 'Superstructure' | dynamicTranslate }}</h2>\\r\\n              <building-form-group\\r\\n                [formControls]=\\\"formModels[formModelEnum.BuildingSuperstructureFields]\\\"\\r\\n                [formLayout]=\\\"formLayouts[formModelEnum.BuildingSuperstructureFields]\\\"\\r\\n                [formGroup]=\\\"formGroup\\\"\\r\\n                [buildingId]=\\\"buildingDto.id\\\"\\r\\n              ></building-form-group>\\r\\n\\r\\n              <h2 id=\\\"Substructure\\\">{{ i18n.building + 'Substructure' | dynamicTranslate }}</h2>\\r\\n              <building-form-group\\r\\n                [formControls]=\\\"formModels[formModelEnum.BuildingSubstructureFields]\\\"\\r\\n                [formLayout]=\\\"formLayouts[formModelEnum.BuildingSubstructureFields]\\\"\\r\\n                [formGroup]=\\\"formGroup\\\"\\r\\n                [buildingId]=\\\"buildingDto.id\\\"\\r\\n              ></building-form-group>\\r\\n\\r\\n              <h2 id=\\\"Occupancy\\\">{{ i18n.building + 'Occupancy' | dynamicTranslate }}</h2>\\r\\n              <occupancy-codes-grid\\r\\n                *ngIf=\\\"buildingDto && occupancyCodeOptions\\\"\\r\\n                [occupancyCodeOptions]=\\\"occupancyCodeOptions\\\"\\r\\n              ></occupancy-codes-grid>\\r\\n\\r\\n              <h2 id=\\\"Construction\\\">{{ i18n.building + 'Construction' | dynamicTranslate }}</h2>\\r\\n              <building-attributes-grid *ngIf=\\\"buildingDto\\\" [buildingAttributes]=\\\"buildingAttributes\\\"></building-attributes-grid>\\r\\n\\r\\n              <h2 id=\\\"Systems\\\">{{ i18n.building + 'Systems' | dynamicTranslate }}</h2>\\r\\n              <building-form-group\\r\\n                [formControls]=\\\"formModels[formModelEnum.BuildingSystemsFields]\\\"\\r\\n                [formLayout]=\\\"formLayouts[formModelEnum.BuildingSystemsFields]\\\"\\r\\n                [formGroup]=\\\"formGroup\\\"\\r\\n                [buildingId]=\\\"buildingDto.id\\\"\\r\\n              ></building-form-group>\\r\\n\\r\\n              <h2 id=\\\"SiteAttributes\\\">{{ i18n.building + 'Site Attributes' | dynamicTranslate }}</h2>\\r\\n              <building-form-group\\r\\n                [formControls]=\\\"formModels[formModelEnum.BuildingSiteAttributeFields]\\\"\\r\\n                [formLayout]=\\\"formLayouts[formModelEnum.BuildingSiteAttributeFields]\\\"\\r\\n\\r\\n                [formGroup]=\\\"formGroup\\\"\\r\\n                [buildingId]=\\\"buildingDto.id\\\"\\r\\n              ></building-form-group>\\r\\n\\r\\n              <h2 id=\\\"AdditionalData\\\">{{ i18n.building + 'Additional Data' | dynamicTranslate }}</h2>\\r\\n              <building-form-group\\r\\n                [formControls]=\\\"formModels[formModelEnum.AdditionalDataFields]\\\"\\r\\n                [formLayout]=\\\"formLayouts[formModelEnum.AdditionalDataFields]\\\"\\r\\n                [formGroup]=\\\"formGroup\\\"\\r\\n                [buildingId]=\\\"buildingDto.id\\\"\\r\\n                (customFieldLabelChange)=\\\"handleCustomFieldLabelChange($event)\\\"\\r\\n              ></building-form-group>\\r\\n\\r\\n              <h2 id=\\\"CoreLogic\\\">{{ i18n.building + 'CoreLogic' | dynamicTranslate }}</h2>\\r\\n              <building-form-group\\r\\n                [formControls]=\\\"formModels[formModelEnum.CoreLogicFields]\\\"\\r\\n                [formLayout]=\\\"formLayouts[formModelEnum.CoreLogicFields]\\\"\\r\\n\\r\\n                [formGroup]=\\\"formGroup\\\"\\r\\n                [buildingId]=\\\"buildingDto.id\\\"\\r\\n              ></building-form-group>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n              <div class=\\\"form-navigation\\\">\\r\\n                <ul class=\\\"nav flex-column\\\" #formNavigation>\\r\\n                  <li class=\\\"nav-item\\\">\\r\\n                    <a\\r\\n                      class=\\\"nav-link current-item\\\"\\r\\n                      [ngx-scroll-to-duration]=\\\"200\\\"\\r\\n                      href=\\\"#PrimaryInfo\\\"\\r\\n                      [ngx-scroll-to]=\\\"'#PrimaryInfo'\\\"\\r\\n                      (click)=\\\"preventDefault($event)\\\"\\r\\n                      >{{ i18n.building + 'Primary Info' | dynamicTranslate }}</a\\r\\n                    >\\r\\n                  </li>\\r\\n                  <li class=\\\"nav-item\\\">\\r\\n                    <a\\r\\n                      class=\\\"nav-link\\\"\\r\\n                      href=\\\"#Location\\\"\\r\\n                      [ngx-scroll-to-duration]=\\\"200\\\"\\r\\n                      [ngx-scroll-to]=\\\"'#Location'\\\"\\r\\n                      (click)=\\\"preventDefault($event)\\\"\\r\\n                      >{{ i18n.building + 'Location' | dynamicTranslate }}</a\\r\\n                    >\\r\\n                  </li>\\r\\n                  <li class=\\\"nav-item\\\">\\r\\n                    <a\\r\\n                      class=\\\"nav-link\\\"\\r\\n                      href=\\\"#Valuation\\\"\\r\\n                      [ngx-scroll-to-duration]=\\\"200\\\"\\r\\n                      [ngx-scroll-to]=\\\"'#Valuation'\\\"\\r\\n                      (click)=\\\"preventDefault($event)\\\"\\r\\n                      >{{ i18n.building + 'Valuation' | dynamicTranslate }}</a\\r\\n                    >\\r\\n                  </li>\\r\\n                  <li class=\\\"nav-item\\\">\\r\\n                    <a\\r\\n                      class=\\\"nav-link\\\"\\r\\n                      [ngx-scroll-to-duration]=\\\"200\\\"\\r\\n                      href=\\\"#Superstructure\\\"\\r\\n                      [ngx-scroll-to]=\\\"'#Superstructure'\\\"\\r\\n                      (click)=\\\"preventDefault($event)\\\"\\r\\n                      >{{ i18n.building + 'Superstructure' | dynamicTranslate }}</a\\r\\n                    >\\r\\n                  </li>\\r\\n                  <li class=\\\"nav-item\\\">\\r\\n                    <a\\r\\n                      class=\\\"nav-link\\\"\\r\\n                      [ngx-scroll-to-duration]=\\\"200\\\"\\r\\n                      href=\\\"#Substructure\\\"\\r\\n                      [ngx-scroll-to]=\\\"'#Substructure'\\\"\\r\\n                      (click)=\\\"preventDefault($event)\\\"\\r\\n                      >{{ i18n.building + 'Substructure' | dynamicTranslate }}\\r\\n                    </a>\\r\\n                  </li>\\r\\n                  <li class=\\\"nav-item\\\">\\r\\n                    <a\\r\\n                      class=\\\"nav-link\\\"\\r\\n                      href=\\\"#Occupancy\\\"\\r\\n                      [ngx-scroll-to-duration]=\\\"200\\\"\\r\\n                      [ngx-scroll-to]=\\\"'#Occupancy'\\\"\\r\\n                      (click)=\\\"preventDefault($event)\\\"\\r\\n                      >{{ i18n.building + 'Occupancy' | dynamicTranslate }}\\r\\n                    </a>\\r\\n                  </li>\\r\\n                  <li class=\\\"nav-item\\\">\\r\\n                    <a\\r\\n                      class=\\\"nav-link\\\"\\r\\n                      [ngx-scroll-to-duration]=\\\"200\\\"\\r\\n                      href=\\\"#Construction\\\"\\r\\n                      [ngx-scroll-to]=\\\"'#Construction'\\\"\\r\\n                      (click)=\\\"preventDefault($event)\\\"\\r\\n                      >{{ i18n.building + 'Construction' | dynamicTranslate }}\\r\\n                    </a>\\r\\n                  </li>\\r\\n                  <li class=\\\"nav-item\\\">\\r\\n                    <a\\r\\n                      class=\\\"nav-link\\\"\\r\\n                      [ngx-scroll-to-duration]=\\\"200\\\"\\r\\n                      href=\\\"#Systems\\\"\\r\\n                      [ngx-scroll-to]=\\\"'#Systems'\\\"\\r\\n                      (click)=\\\"preventDefault($event)\\\"\\r\\n                      >{{ i18n.building + 'Systems' | dynamicTranslate }}\\r\\n                    </a>\\r\\n                  </li>\\r\\n                  <li class=\\\"nav-item\\\">\\r\\n                    <a\\r\\n                      class=\\\"nav-link\\\"\\r\\n                      [ngx-scroll-to-duration]=\\\"200\\\"\\r\\n                      href=\\\"#SiteAttributes\\\"\\r\\n                      [ngx-scroll-to]=\\\"'#SiteAttributes'\\\"\\r\\n                      (click)=\\\"preventDefault($event)\\\"\\r\\n                      >{{ i18n.building + 'Site Attributes' | dynamicTranslate }}\\r\\n                    </a>\\r\\n                  </li>\\r\\n                  <li class=\\\"nav-item\\\">\\r\\n                    <a\\r\\n                      class=\\\"nav-link\\\"\\r\\n                      [ngx-scroll-to-duration]=\\\"200\\\"\\r\\n                      href=\\\"#AdditionalData\\\"\\r\\n                      [ngx-scroll-to]=\\\"'#AdditionalData'\\\"\\r\\n                      (click)=\\\"preventDefault($event)\\\"\\r\\n                      >{{ i18n.building + 'Additional Data' | dynamicTranslate }}\\r\\n                    </a>\\r\\n                  </li>\\r\\n                  <li class=\\\"nav-item\\\">\\r\\n                    <a\\r\\n                      class=\\\"nav-link\\\"\\r\\n                      [ngx-scroll-to-duration]=\\\"200\\\"\\r\\n                      href=\\\"#CoreLogic\\\"\\r\\n                      [ngx-scroll-to]=\\\"'#CoreLogic'\\\"\\r\\n                      (click)=\\\"preventDefault($event)\\\"\\r\\n                      >{{ i18n.building + 'CoreLogic' | dynamicTranslate }}\\r\\n                    </a>\\r\\n                  </li>\\r\\n                </ul>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <br />\\r\\n        </ng-template>\\r\\n      </ngb-tab>\\r\\n\\r\\n      <ngb-tab>\\r\\n        <ng-template ngbTabTitle>\\r\\n          <h3>{{ i18n.building + 'Additional Data' | dynamicTranslate }}</h3>\\r\\n        </ng-template>\\r\\n        <ng-template ngbTabContent>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"additional-data-grid  col-md-12\\\">\\r\\n              <h2 id=\\\"additionalBuildingEquipmentAndFeatures\\\">\\r\\n                {{ i18n.building + 'Additional Building Equipment and Features' | dynamicTranslate }}\\r\\n              </h2>\\r\\n\\r\\n              <additional-building-equipment-grid [buildingDto]=\\\"buildingDto\\\"></additional-building-equipment-grid>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"additional-data-grid additional-data-grid col-md-12\\\">\\r\\n              <h2 id=\\\"customAdditions\\\">{{ i18n.building + 'Custom Additions' | dynamicTranslate }}</h2>\\r\\n\\r\\n              <custom-additions-grid [buildingDto]=\\\"buildingDto\\\"></custom-additions-grid>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"additional-data-grid col-md-12\\\">\\r\\n              <h2 id=\\\"userFactors\\\">{{ i18n.building + 'User Factors' | dynamicTranslate }}</h2>\\r\\n\\r\\n              <user-factor-grid [buildingDto]=\\\"buildingDto\\\"></user-factor-grid>\\r\\n            </div>\\r\\n          </div>\\r\\n        </ng-template>\\r\\n      </ngb-tab>\\r\\n\\r\\n      <ngb-tab>\\r\\n        <ng-template ngbTabTitle>\\r\\n          <h3>{{ i18n.building + 'Secondary COPE' | dynamicTranslate }}</h3>\\r\\n        </ng-template>\\r\\n        <ng-template ngbTabContent>\\r\\n          <building-form-group *ngIf=\\\"!buildingDto\\\" [formControls]=\\\"formModels[2]\\\" [formGroup]=\\\"formGroup\\\"></building-form-group>\\r\\n\\r\\n          <!-- FormModelEnum.CopedataWindFields -->\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <h2 id=\\\"wind\\\">{{ i18n.building + 'Wind' | dynamicTranslate }}</h2>\\r\\n              <building-form-group\\r\\n                [formControls]=\\\"formModels[formModelEnum.CopedataWindFields]\\\"\\r\\n                [formLayout]=\\\"formLayouts[formModelEnum.CopedataWindFields]\\\"\\r\\n\\r\\n                [formGroup]=\\\"formGroup\\\"\\r\\n                [buildingId]=\\\"buildingDto.id\\\"\\r\\n              ></building-form-group>\\r\\n\\r\\n              <h2 id=\\\"earthquake\\\">{{ i18n.building + 'Earthquake' | dynamicTranslate }}</h2>\\r\\n              <building-form-group\\r\\n                [formControls]=\\\"formModels[formModelEnum.CopeDataEarthquakeFields]\\\"\\r\\n                [formLayout]=\\\"formLayouts[formModelEnum.CopeDataEarthquakeFields]\\\"\\r\\n\\r\\n                [formGroup]=\\\"formGroup\\\"\\r\\n                [buildingId]=\\\"buildingDto.id\\\"\\r\\n              ></building-form-group>\\r\\n            </div>\\r\\n          </div>\\r\\n        </ng-template>\\r\\n      </ngb-tab>\\r\\n\\r\\n      <ngb-tab>\\r\\n        <ng-template ngbTabTitle>\\r\\n          <h3>{{ i18n.building + 'Flood Zone' | dynamicTranslate }}</h3>\\r\\n        </ng-template>\\r\\n        <ng-template ngbTabContent>\\r\\n  \\r\\n          <building-form-group\\r\\n            *ngIf=\\\"buildingDto\\\"\\r\\n            [formControls]=\\\"formModels[formModelEnum.InitialFloodPlainFields]\\\"\\r\\n            [formLayout]=\\\"formLayouts[formModelEnum.InitialFloodPlainFields]\\\"\\r\\n\\r\\n            [formGroup]=\\\"formGroup\\\"\\r\\n            [buildingId]=\\\"buildingDto.id\\\"\\r\\n          ></building-form-group>\\r\\n\\r\\n          <building-form-group\\r\\n          *ngIf=\\\"buildingDto\\\"\\r\\n          [formControls]=\\\"formModels[formModelEnum.BuildingFloodPlainModelFields]\\\"\\r\\n          [formLayout]=\\\"formLayouts[formModelEnum.BuildingFloodPlainModelFields]\\\"\\r\\n\\r\\n          [formGroup]=\\\"formGroup\\\"\\r\\n          [buildingId]=\\\"buildingDto.id\\\"\\r\\n        ></building-form-group>\\r\\n        </ng-template>\\r\\n      </ngb-tab>\\r\\n     \\r\\n    </ngb-tabset>\\r\\n  </div>\\r\\n\\r\\n  <div id=\\\"bottom-form-action-bar\\\">\\r\\n    <ng-container *ngIf=\\\"isReadOnly === false\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn btn-default\\\" (click)=\\\"cancel()\\\">{{ i18n.common + 'Cancel' | dynamicTranslate }}</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"save(buildingForm)\\\" [ladda]=\\\"isSaving\\\">\\r\\n        {{ i18n.common + 'Save' | dynamicTranslate }}\\r\\n      </button>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"closeForm = true\\\" [ladda]=\\\"isSaving\\\">\\r\\n        {{ i18n.common + 'Save And Close' | dynamicTranslate }}\\r\\n      </button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" *ngIf=\\\"isEditBuilding\\\" (click)=\\\"valuateBuilding()\\\">\\r\\n        {{ i18n.common + 'Building Valuation' | dynamicTranslate }}\\r\\n      </button>\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\\"isReadOnly === true\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn btn-default\\\" (click)=\\\"cancel()\\\">{{ i18n.common + 'Close' | dynamicTranslate }}</button>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n</form>\\r\\n<div>\\r\\n  <building-valuation (onAction)=\\\"handleAction($event)\\\"></building-valuation>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n\\r\\n        <famis-grid [famisGrid]=\\\"additionalEquipmentGrid\\\"\\r\\n            (actionEvent)=\\\"handleActionEvent($event)\\\">\\r\\n        </famis-grid>\\r\\n\\r\\n\\r\\n        <div class=\\\"pull-left\\\">\\r\\n            <button type=\\\"button\\\" (click)=\\\"addAddition()\\\" class=\\\"btn btn-action btn-small\\\">\\r\\n                <i class=\\\"fa fa-plus\\\"></i>\\r\\n            </button> &nbsp; {{i18n.building + ' Add Additional Building Equipment and Feature' | dynamicTranslate }}\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<form (ngSubmit)=\\\"save(buildingForm)\\\" #buildingForm=\\\"ngForm\\\">\\r\\n  <div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <h2>{{ i18n.building + 'Group and Category' | dynamicTranslate }}</h2>\\r\\n            <hr />\\r\\n\\r\\n            <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedGroupId\\\" name=\\\"group\\\" id=\\\"disposalCode\\\" (change)=\\\"changeGroup()\\\" required>\\r\\n              <option [value]=\\\"undefined\\\" disabled>\\r\\n                <span>{{ i18n.building + 'Select Group' | dynamicTranslate }}</span>\\r\\n              </option>\\r\\n              <option *ngFor=\\\"let group of (groups | orderBy: 'description')\\\" [value]=\\\"group.id\\\">{{\\r\\n                i18n.building + group.description | dynamicTranslate\\r\\n              }}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <select\\r\\n              [disabled]=\\\"selectedGroupId === undefined\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              [(ngModel)]=\\\"selectedCategoryId\\\"\\r\\n              name=\\\"category\\\"\\r\\n              id=\\\"disposalCode\\\"\\r\\n              (change)=\\\"setCriteriaAndAdjustments()\\\"\\r\\n              required\\r\\n            >\\r\\n              <option [value]=\\\"undefined\\\" disabled>\\r\\n                <span>{{ i18n.building + 'Select Category' | dynamicTranslate }}</span>\\r\\n              </option>\\r\\n              <option *ngFor=\\\"let category of (categories | orderBy: 'description')\\\" [value]=\\\"category.id\\\"\\r\\n                >{{ i18n.building + category.description | dynamicTranslate }} ({{ category.code }})</option\\r\\n              >\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <div class=\\\"form-group pl-3\\\">\\r\\n                <span style=\\\"color: red;\\\">*</span> {{ i18n.building + 'Quantity' | dynamicTranslate }}\\r\\n                <kendo-numerictextbox [disabled]=\\\"selectedGroupId === undefined\\\" name=\\\"quantity\\\" [required]=\\\"true\\\" [(ngModel)]=\\\"selectedQuantity\\\"\\r\\n                  class=\\\"form-control\\\"></kendo-numerictextbox>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            \\r\\n          <ng-container *ngIf=\\\"selectedCategoryId !== undefined && selectedCriteria.length > 0\\\">\\r\\n            <h2>{{ i18n.building + 'Criteria' | dynamicTranslate }}</h2>\\r\\n            <hr />\\r\\n\\r\\n            <ng-container *ngFor=\\\"let criteria of criteriaForCategory\\\">\\r\\n              <div *ngIf=\\\"criteria.length === 1 && criteria[0].hasValueEntry\\\" class=\\\"form-group\\\">\\r\\n                <label [attr.for]=\\\"criteria[0].quantity\\\"></label>\\r\\n                  \\r\\n                \\r\\n\\r\\n                <label [attr.for]=\\\"criteria[0].description\\\">\\r\\n                  <span style=\\\"color:red;\\\">*</span> {{ i18n.building + criteria[0].description | dynamicTranslate }}</label\\r\\n                >\\r\\n\\r\\n                <kendo-numerictextbox\\r\\n                  [name]=\\\"criteria[0].index\\\"\\r\\n                  [required]=\\\"true\\\"\\r\\n                  [(ngModel)]=\\\"selectedCriteria[criteria[0].index].criterionValue\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                ></kendo-numerictextbox>\\r\\n              </div>\\r\\n\\r\\n              <div *ngIf=\\\"criteria.length > 1 && !criteria[0].hasValueEntry\\\" class=\\\"form-group\\\">\\r\\n                <span style=\\\"color:red;\\\">*</span>\\r\\n                <select\\r\\n                  [required]=\\\"true\\\"\\r\\n                  [name]=\\\"criteria[0].index\\\"\\r\\n                  [(ngModel)]=\\\"selectedCriteria[criteria[0].index].referenceBuildingAdditionCriterionId\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                >\\r\\n                  <option></option>\\r\\n                  <option *ngFor=\\\"let option of (criteria | orderBy: 'code')\\\" [value]=\\\"option.id\\\">{{\\r\\n                    i18n.building + option.description | dynamicTranslate\\r\\n                  }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </ng-container>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row p-3\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <ng-container *ngIf=\\\"adjustmentsForCategory.length > 0\\\">\\r\\n              <h2>{{ i18n.building + 'Adjustments' | dynamicTranslate }}</h2>\\r\\n              <hr />\\r\\n\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"col-md-6\\\" *ngFor=\\\"let adjustment of adjustmentsForCategory; let i = index\\\">\\r\\n                  <label [attr.for]=\\\"adjustment.description\\\">{{ i18n.building + adjustment.description | dynamicTranslate }}</label>\\r\\n                  <kendo-numerictextbox\\r\\n                    [name]=\\\"adjustment.id\\\"\\r\\n                    [(ngModel)]=\\\"selectedAdjustments[i].value\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                  ></kendo-numerictextbox>\\r\\n                </div>\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"showValidationError\\\" style=\\\"color:red; text-align: center; padding:20px;\\\">\\r\\n      Please complete all required (*) Criteria fields\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"dismiss()\\\">{{ i18n.common + 'Cancel' | dynamicTranslate }}</button>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{ i18n.common + 'Save' | dynamicTranslate }}</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\"","export default \"  <famis-grid *ngIf=\\\"!additionalEquipmentGrid.loading\\\" [famisGrid]=\\\"additionalEquipmentGrid\\\" (sortChanged)=\\\"updateGrid($event)\\\"\\r\\n    (actionEvent)=\\\"handleActionEvent($event)\\\">\\r\\n  </famis-grid>\"","export default \"<form (ngSubmit)=\\\"save(buildingForm)\\\" #buildingForm=\\\"ngForm\\\">\\r\\n\\r\\n  <div>\\r\\n    <div class=\\\"modal-body building-attribute-selector\\\">\\r\\n\\r\\n      <h2>{{i18n.building + attribute.attributeTypeName | dynamicTranslate }}</h2>\\r\\n\\r\\n\\r\\n        <table class=\\\"table\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th></th>\\r\\n              <th> {{i18n.common + 'Value' | dynamicTranslate}}\\r\\n              </th>\\r\\n              <th> {{i18n.common + 'Percent' | dynamicTranslate}} </th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let attributeValue of selectedValues; let i=index;\\\">\\r\\n              <td>\\r\\n                <span class=\\\"grid-action-item\\\">\\r\\n                  <a (click)=\\\"remove(i)\\\">\\r\\n                    {{i18n.common + 'Remove' | dynamicTranslate}}\\r\\n                  </a>\\r\\n\\r\\n                </span>\\r\\n\\r\\n              </td>\\r\\n              <td>\\r\\n\\r\\n                <select class=\\\"form-control\\\" name=\\\"{{'attribute' + i}}\\\" [(ngModel)]=\\\"selectedValues[i].buildingAttributeCodeId\\\"\\r\\n                  required=\\\"true\\\">\\r\\n                  <option value=\\\"\\\" disabled>{{i18n.building + 'Select Attribute Value' | dynamicTranslate}} </option>\\r\\n                  <option *ngFor=\\\"let attribute of attribute.attributeValueOptions | orderBy: 'description'\\\" [value]=\\\"attribute.buildingAttributeCodeId\\\">{{i18n.building\\r\\n                    + attribute.description | dynamicTranslate }}</option>\\r\\n                </select>\\r\\n\\r\\n              </td>\\r\\n              <td><input type=\\\"text\\\" class=\\\"form-control\\\" [value]=\\\"attributeValue.value\\\" name=\\\"{{'attributeValue' + i}}\\\"\\r\\n                  [(ngModel)]=\\\"selectedValues[i].value\\\" aria-describedby=\\\"percent\\\" placeholder=\\\"Enter percent\\\" required=\\\"true\\\"></td>\\r\\n            </tr>\\r\\n\\r\\n          </tbody>\\r\\n        </table>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <button type=\\\"button\\\" (click)=\\\"add()\\\" class=\\\"btn btn-action btn-small\\\">\\r\\n                <i class=\\\"fa fa-plus\\\"></i>\\r\\n              </button>\\r\\n              <strong>&nbsp;{{i18n.userFactors + 'Add' | dynamicTranslate}}</strong>\\r\\n            </div>\\r\\n          </div>\\r\\n      \\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"showValidationError\\\" style=\\\"color:red; text-align: center; padding:20px;\\\">{{i18n.common + 'Please\\r\\n      complete all required (*) fields' | dynamicTranslate}} </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"dismiss()\\\">{{i18n.common + 'Cancel' | dynamicTranslate }}</button>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{i18n.common + 'Save' | dynamicTranslate }}</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</form>\"","export default \"\\r\\n\\r\\n<form [formGroup]=\\\"form\\\">\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n          <ng-container *ngFor=\\\"let field of defaultFormFields | orderBy: 'order'; let i=index; let odd=odd; let even=even;\\\">\\r\\n            <div class=\\\"col-md-6\\\" *ngIf=\\\"even\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label [attr.for]=\\\"field.name\\\">{{i18n.customAdditions + field.displayName | dynamicTranslate}}</label>\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" disabled value=\\\"{{field.value}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-6\\\" *ngIf=\\\"odd\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label [attr.for]=\\\"field.name\\\">{{i18n.customAdditions + field.displayName | dynamicTranslate}}</label>\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" disabled value=\\\"{{field.value}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </ng-container>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn btn-default\\\" (click)=\\\"cancel()\\\">{{i18n.common + 'Cancel' | dynamicTranslate}}</button>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"remove()\\\" [ladda]=\\\"isSaving\\\">{{i18n.common + 'Remove' | dynamicTranslate}}</button>\\r\\n  </div>\\r\\n</form>\"","export default \"<form [formGroup]=\\\"form\\\">\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n          <ng-container *ngFor=\\\"let field of defaultFormFields | orderBy: 'order'; let i=index; let odd=odd; let even=even;\\\">\\r\\n            <div class=\\\"col-md-6\\\" *ngIf=\\\"even\\\">\\r\\n\\r\\n              <dynamic-field [sourceTranslationKey]=\\\"i18n.customAdditions\\\" [field]=\\\"field\\\" [key]='field.displayName' [form]=\\\"form\\\"></dynamic-field>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-6\\\" *ngIf=\\\"odd\\\">\\r\\n\\r\\n              <dynamic-field [sourceTranslationKey]=\\\"i18n.customAdditions\\\" [field]=\\\"field\\\" [form]=\\\"form\\\" [key]='field.displayName'></dynamic-field>\\r\\n\\r\\n            </div>\\r\\n\\r\\n          </ng-container>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn btn-default\\\" (click)=\\\"cancel()\\\">{{i18n.common + 'Cancel' | dynamicTranslate}}</button>\\r\\n    <button *ngIf=\\\"formAction === 0\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\" (click)=\\\"save()\\\">{{i18n.common + 'Save' | dynamicTranslate}}</button>\\r\\n    <button *ngIf=\\\"formAction === 1\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\" (click)=\\\"save()\\\">{{i18n.common + 'Edit' | dynamicTranslate}}</button>\\r\\n  </div>\\r\\n</form>\"","export default \"<famis-grid [famisGrid]=\\\"customAdditionsGrid\\\" (updateCacheEvent)=\\\"updateCache($event)\\\" (actionEvent)=\\\"handleActionEvent($event)\\\">\\r\\n</famis-grid>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <button type=\\\"button\\\" (click)=\\\"addCustomAddition()\\\" class=\\\"btn btn-action btn-small\\\">\\r\\n      <i class=\\\"fa fa-plus\\\"></i>\\r\\n    </button>\\r\\n    <strong>&nbsp;{{i18n.customAdditions + 'Add Custom Addition' | dynamicTranslate}}</strong>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","export default \"\\r\\n<famis-grid *ngIf=\\\"!additionalEquipmentGrid.loading\\\" [famisGrid]=\\\"additionalEquipmentGrid\\\"\\r\\n  (actionEvent)=\\\"handleActionEvent($event)\\\" (sortChanged)=\\\"updateGrid($event)\\\">\\r\\n</famis-grid>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"pull-left\\\">\\r\\n            <button type=\\\"button\\\" (click)=\\\"addOccupancyCode()\\\" class=\\\"btn btn-action btn-small\\\">\\r\\n                <i class=\\\"fa fa-plus\\\"></i>\\r\\n            </button> &nbsp; {{i18n.building + ' Add Occupancy Code' | dynamicTranslate }}\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<form (ngSubmit)=\\\"save(buildingForm)\\\" #buildingForm=\\\"ngForm\\\">\\r\\n\\r\\n\\r\\n\\r\\n  <div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <label>{{i18n.building + 'Occupancy Code' | dynamicTranslate}}</label>\\r\\n            <select class=\\\"form-control\\\" name=\\\"selectOccupancyCode\\\" [(ngModel)]=\\\"occupancyCode.buildingAttributeCodeId\\\"\\r\\n              required=\\\"true\\\">\\r\\n              <option value=\\\"\\\" disabled>Select Occupancy Code</option>\\r\\n              <option *ngFor=\\\"let option of options | orderBy: 'description'\\\" [value]=\\\"option.buildingAttributeCodeId\\\">{{i18n.building + option.description | dynamicTranslate }}</option>\\r\\n            </select> </div>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <label>{{i18n.building + 'Story Height' | dynamicTranslate}}</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"storyHeight\\\" [(ngModel)]=\\\"occupancyCode.storyHeight\\\"\\r\\n              aria-describedby=\\\"storyHeight\\\" placeholder=\\\"Enter story height\\\" required=\\\"true\\\"> </div>\\r\\n\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n            <label>{{i18n.building + 'Percent' | dynamicTranslate}}</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"percent\\\" [(ngModel)]=\\\"occupancyCode.percent\\\"\\r\\n              aria-describedby=\\\"percent\\\" placeholder=\\\"Enter percent\\\" required=\\\"true\\\"> </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"showValidationError\\\" style=\\\"color:red; text-align: center; padding:20px;\\\">{{i18n.common + 'Please\\r\\n        complete all required (*) fields' | dynamicTranslate}} </div>\\r\\n        \\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"dismiss()\\\">{{i18n.common + 'Cancel' | dynamicTranslate }}</button>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{i18n.common + 'Save' | dynamicTranslate }}</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</form>\"","export default \"\\r\\n\\r\\n<form [formGroup]=\\\"form\\\">\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n          <ng-container *ngFor=\\\"let field of defaultFormFields | orderBy: 'order'; let i=index; let odd=odd; let even=even;\\\">\\r\\n            <div class=\\\"col-md-6\\\" *ngIf=\\\"even\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label [attr.for]=\\\"field.name\\\">{{i18n.userFactors + field.displayName | dynamicTranslate}}</label>\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" disabled value=\\\"{{field.value}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-6\\\" *ngIf=\\\"odd\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label [attr.for]=\\\"field.name\\\">{{i18n.userFactors + field.displayName | dynamicTranslate}}</label>\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" disabled value=\\\"{{field.value}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </ng-container>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn btn-default\\\" (click)=\\\"cancel()\\\">{{i18n.common + 'Cancel' | dynamicTranslate}}</button>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"remove()\\\" [ladda]=\\\"isSaving\\\">{{i18n.common + 'Remove' |\\r\\n      translate}}</button>\\r\\n  </div>\\r\\n</form>\"","export default \"\\r\\n\\r\\n<form [formGroup]=\\\"form\\\">\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n          <ng-container *ngFor=\\\"let field of defaultFormFields | orderBy: 'order'; let i=index; let odd=odd; let even=even;\\\">\\r\\n            <div class=\\\"col-md-6\\\" *ngIf=\\\"even\\\">\\r\\n\\r\\n              <dynamic-field [sourceTranslationKey]=\\\"i18n.userFactors\\\" [field]=\\\"field\\\" [key]='field.displayName' [form]=\\\"form\\\"></dynamic-field>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-6\\\" *ngIf=\\\"odd\\\">\\r\\n\\r\\n              <dynamic-field [sourceTranslationKey]=\\\"i18n.userFactors\\\" [field]=\\\"field\\\" [form]=\\\"form\\\" [key]='field.displayName'></dynamic-field>\\r\\n\\r\\n            </div>\\r\\n\\r\\n          </ng-container>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn btn-default\\\" (click)=\\\"cancel()\\\">{{i18n.common + 'Cancel' | dynamicTranslate}}</button>\\r\\n    <button *ngIf=\\\"formAction === 0\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\" (click)=\\\"save()\\\">{{i18n.common + 'Save' | dynamicTranslate}}</button>\\r\\n    <button *ngIf=\\\"formAction === 1\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\" (click)=\\\"save()\\\">{{i18n.common + 'Edit' | dynamicTranslate}}</button>\\r\\n  </div>\\r\\n</form>\"","export default \"\\r\\n\\r\\n<div class=\\\"row\\\" *ngIf=\\\"buildingDto && buildingDto.costReproductionNewWithUserFactors\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n\\r\\n\\r\\n    <label class=\\\"pull-left\\\" for=\\\"costreproductionnew\\\">\\r\\n      Cost of Reproduction New With User Factors\\r\\n      <br>\\r\\n      <input class=\\\"form-control\\\" id=\\\"costreproductionnew\\\" name=\\\"costreproductionnew\\\" type=\\\"number\\\" disabled [value]=\\\"buildingDto.costReproductionNewWithUserFactors\\\">\\r\\n    </label>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<famis-grid [famisGrid]=\\\"userFactorsGrid\\\" (updateCacheEvent)=\\\"updateCache($event)\\\" (actionEvent)=\\\"handleActionEvent($event)\\\">\\r\\n</famis-grid>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <button type=\\\"button\\\" (click)=\\\"addUserFactor()\\\" class=\\\"btn btn-action btn-small\\\">\\r\\n      <i class=\\\"fa fa-plus\\\"></i>\\r\\n    </button>\\r\\n    <strong>&nbsp;{{i18n.userFactors + 'Add User Factor' | dynamicTranslate}}</strong>\\r\\n  </div>\\r\\n</div>\"","export default \"<famis-grid *ngIf=\\\"!!buildingGrid.loading && !!buildingGrid.selectedHeaders\\\" \\r\\n    [famisGrid]=\\\"buildingGrid\\\"\\r\\n    [InGridEditableNonNegativeColumns]=\\\"nonNegativeFields\\\"\\r\\n    (selectionChanged)=\\\"handleSelectionChanged($event)\\\"\\r\\n    (actionEvent)=\\\"handleActionEvent($event)\\\"\\r\\n    (updateCacheEvent)=\\\"updateCache($event)\\\"\\r\\n    (sortChanged)=\\\"handleSortChanged($event)\\\"\\r\\n    (cellValueChanged)=\\\"handleCellValueChanged($event)\\\"\\r\\n    [showAddCustomColumn]=\\\"true\\\">\\r\\n</famis-grid>\"","export default \"<ol class=\\\"breadcrumb\\\">\\r\\n  <li *ngFor=\\\"let breadCrumb of breadCrumbs\\\" class=\\\"breadcrumb-item\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:\\r\\n    true}\\\">\\r\\n    <a [class.disabled]=\\\"!!breadCrumb.isDisabled && breadCrumb.isDisabled\\\" [routerLink]=\\\"breadCrumb.routerLink\\\">{{i18n.qualityControl + breadCrumb.name | dynamicTranslate}}</a>\\r\\n  </li>\\r\\n</ol>\\r\\n\\r\\n<!-- TODO: Map to UI Form Field-->\\r\\n<asset-form *ngIf=\\\"fields.length > 0\\\" [imageEntityType]=\\\"imageEntityType\\\" [fieldMetaData]=\\\"fields\\\" [savingForm]=\\\"savingForm\\\" (formActionEvent)=\\\"onFormActionEvent($event)\\\"></asset-form>\"","export default \"<ol class=\\\"breadcrumb\\\">\\r\\n  <li *ngFor=\\\"let breadCrumb of breadCrumbs\\\" class=\\\"breadcrumb-item\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:\\r\\n    true}\\\">\\r\\n    <a [class.disabled]=\\\"!!breadCrumb.isDisabled && breadCrumb.isDisabled\\\" [routerLink]=\\\"breadCrumb.routerLink\\\">{{i18n.qualityControl + breadCrumb.name | dynamicTranslate}}</a>\\r\\n  </li>\\r\\n</ol>\\r\\n\\r\\n\\r\\n<asset-form *ngIf=\\\"assetDto && fields.length > 0\\\" [imageEntityType]=\\\"imageEntityType\\\" [savingForm]=\\\"savingForm\\\" [depreciationFieldMetadata]=\\\"depreciationFields\\\" [fieldMetaData]=\\\"fields\\\" [assetDto]=\\\"assetDto\\\" (formActionEvent)=\\\"onFormActionEvent($event)\\\"></asset-form>\\r\\n\\r\\n\\r\\n\"","export default \"<ol class=\\\"breadcrumb\\\">\\r\\n  <li *ngFor=\\\"let breadCrumb of breadCrumbs\\\" class=\\\"breadcrumb-item\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n    <a [class.disabled]=\\\"!!breadCrumb.isDisabled && breadCrumb.isDisabled\\\" [routerLink]=\\\"breadCrumb.routerLink\\\" [queryParams]=\\\"breadCrumb.queryParams\\\">{{i18n.qualityControl + breadCrumb.name | dynamicTranslate}}</a>\\r\\n  </li>\\r\\n</ol>\\r\\n\\r\\n<mass-update-criteria *ngIf=\\\"filterMetaData\\\"\\r\\n  [defaultFilterTerm]=\\\"defaultFilterTerm\\\"\\r\\n  [filterMetaData]=\\\"filterMetaData\\\"\\r\\n  [replaceMetaData]=\\\"replaceMetaData\\\"\\r\\n  [translatedBaseKey]=\\\"i18n.asset\\\"\\r\\n></mass-update-criteria>\"","export default \"<ol class=\\\"breadcrumb\\\">\\r\\n  <li *ngFor=\\\"let breadCrumb of breadCrumbs\\\" class=\\\"breadcrumb-item\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:\\r\\n    true}\\\">\\r\\n    <a [class.disabled]=\\\"!!breadCrumb.isDisabled && breadCrumb.isDisabled\\\" [routerLink]=\\\"breadCrumb.routerLink\\\">{{i18n.qualityControl + breadCrumb.name | dynamicTranslate}}</a>\\r\\n  </li>\\r\\n</ol>\\r\\n\\r\\n<asset-form *ngIf=\\\"assetDto && fields.length > 0\\\" [isReadOnly]=\\\"true\\\" [imageEntityType]=\\\"imageEntityType\\\" [savingForm]=\\\"savingForm\\\" [fieldMetaData]=\\\"fields\\\" [assetDto]=\\\"assetDto\\\" (formActionEvent)=\\\"onFormActionEvent($event)\\\"></asset-form>\\r\\n\\r\\n\\r\\n\"","export default \"<famis-grid *ngIf=\\\"!!dataGrid.loading && !!dataGrid.selectedHeaders\\\" \\r\\n    [famisGrid]=\\\"dataGrid\\\"\\r\\n    (updateCacheEvent)=\\\"updateCache($event)\\\"\\r\\n    (actionEvent)=\\\"handleActionEvent($event)\\\"\\r\\n    (sortChanged)=\\\"handleSortChanged($event)\\\"\\r\\n    (selectionChanged)=\\\"handleSelectionChanged($event)\\\"\\r\\n    (cellValueChanged)=\\\"handleCellValueChanged($event)\\\"\\r\\n    [showAddCustomColumn]=\\\"true\\\">\\r\\n</famis-grid>\"","export default \"<ol class=\\\"breadcrumb\\\">\\r\\n    <li *ngFor=\\\"let breadCrumb of breadCrumbs\\\" class=\\\"breadcrumb-item\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:\\r\\n          true}\\\">\\r\\n        <a [class.disabled]=\\\"!!breadCrumb.isDisabled && breadCrumb.isDisabled\\\" [routerLink]=\\\"breadCrumb.routerLink\\\">{{i18n.qualityControl + breadCrumb.name | dynamicTranslate}}</a>\\r\\n    </li>\\r\\n</ol>\\r\\n\\r\\n<form (ngSubmit)=\\\"onSubmit(duplicateCheckForm)\\\" #duplicateCheckForm=\\\"ngForm\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <label>{{i18n.common + 'Field' | dynamicTranslate}}</label>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\" id=\\\"SelectField\\\">\\r\\n            <select class=\\\"form-control col-9 d-inline\\\" [(ngModel)]=\\\"selectedField\\\" name=\\\"duplicateFieldSelect\\\" id=\\\"duplicateFieldSelect\\\"\\r\\n                #duplicateSourceField=\\\"ngModel\\\" required>\\r\\n                <option value=\\\"\\\" disabled>\\r\\n                    <span>{{i18n.common + 'Select a Field' | dynamicTranslate}}</span>\\r\\n                </option>\\r\\n                <option *ngFor=\\\"let field of inventoryMetadata\\\" [value]=\\\"field.name\\\">{{i18n.asset + field.displayName | dynamicTranslate}}</option>\\r\\n            </select>\\r\\n            \\r\\n            <button (click)=\\\"runDuplicateCheck()\\\" class=\\\"btn btn-primary btn-sm d-inline\\\" type=\\\"button\\\">{{i18n.common + 'Run' | dynamicTranslate}}</button>\\r\\n\\r\\n            <div *ngIf=\\\"duplicateSourceField.errors && duplicateCheckForm.submitted\\\" class=\\\"alert alert-danger pt-1\\\">\\r\\n                <div>\\r\\n                     {{i18n.qualityControl + 'Please select a duplicate field.' | dynamicTranslate}}\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"form-group pt-4\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <famis-grid id=\\\"DuplicatesGrid\\\" [famisGrid]=\\\"duplicateGrid\\\" (selectionChanged)=\\\"handleDuplicateSelectionChanged($event)\\\"></famis-grid>\\r\\n                <div class=\\\"alert alert-danger\\\" *ngIf=\\\"request.filterTerms.length === 0 && duplicateCheckForm.submitted\\\">\\r\\n                     {{i18n.qualityControl + 'Please select a duplicate value.' | dynamicTranslate}}\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                <famis-grid id=\\\"SummaryGrid\\\" *ngIf=\\\"!!summaryGrid.selectedHeaders\\\" [famisGrid]=\\\"summaryGrid\\\" ></famis-grid>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <replace-field [translatedBaseKey]=\\\"i18n.asset\\\" [form]=\\\"duplicateCheckForm\\\" [state]=\\\"replaceFieldState\\\"></replace-field>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group pt-4\\\">\\r\\n        <button [ladda]=\\\"isProcessing\\\" class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">{{i18n.common + 'Cancel' | dynamicTranslate}}</button>\\r\\n        <button [ladda]=\\\"isProcessing\\\" class=\\\"btn btn-primary\\\" type=\\\"button\\\" type=\\\"submit\\\">{{i18n.common + 'Apply' | dynamicTranslate}}</button>\\r\\n    </div>\\r\\n\\r\\n</form>\"","export default \"<form (ngSubmit)=\\\"onSubmit(massUpdateForm)\\\" #massUpdateForm=\\\"ngForm\\\">\\r\\n    \\r\\n    <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <h3>{{i18n.common + 'Filter Criteria' | dynamicTranslate}}</h3>\\r\\n                <div #filterCriteria></div>\\r\\n\\r\\n                <button type=\\\"button\\\" (click)=\\\"addFilter()\\\" class=\\\"btn btn-action btn-small\\\">\\r\\n                    <i class=\\\"fa fa-plus\\\"></i>\\r\\n                </button><strong>&nbsp;{{i18n.common + 'Add Filter Criteria' | dynamicTranslate}}</strong>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group pt-4\\\">\\r\\n        <replace-field [translatedBaseKey]=\\\"translatedBaseKey\\\" [form]=\\\"massUpdateForm\\\" [supportsAdvancedReplace]=\\\"true\\\" [isAdvanced]='isAdvanced'></replace-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group pt-4\\\">\\r\\n        <button [ladda]=\\\"isProcessing\\\" class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">{{i18n.common + 'Cancel' | dynamicTranslate}}</button>\\r\\n        <button [ladda]=\\\"isProcessing\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\">{{i18n.common + 'Continue' | dynamicTranslate}}</button>\\r\\n    </div>\\r\\n\\r\\n</form>\"","export default \"<ng-container *ngIf=\\\"!isLoading\\\">\\r\\n    <ol class=\\\"breadcrumb\\\">\\r\\n        <li *ngFor=\\\"let breadCrumb of breadCrumbs\\\" class=\\\"breadcrumb-item\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n        <a [class.disabled]=\\\"!!breadCrumb.isDisabled && breadCrumb.isDisabled\\\" [routerLink]=\\\"breadCrumb.routerLink\\\" >{{i18n.qualityControl + breadCrumb.name | dynamicTranslate}}</a>\\r\\n        </li>\\r\\n    </ol>\\r\\n    \\r\\n    <router-outlet></router-outlet>\\r\\n</ng-container>\"","export default \"<form (ngSubmit)=\\\"onSubmit(massUpdateFormResults)\\\" #massUpdateFormResults=\\\"ngForm\\\">\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <h3>{{recordsFoundCount}} {{i18n.qualityControl + 'Records Found' | dynamicTranslate}}</h3>\\r\\n        <famis-grid [isPersistentGrid]=\\\"false\\\" *ngIf=\\\"filterMetaData && resultsGrid.loading\\\" [famisGrid]=\\\"resultsGrid\\\" (updateCacheEvent)=\\\"updateCache($event)\\\" (actionEvent)=\\\"handleActionEvent($event)\\\" (sortChanged)=\\\"handleSortChanged($event)\\\"></famis-grid>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <replace-field [translatedBaseKey]=\\\"translatedBaseKey\\\" [form]=\\\"massUpdateFormResults\\\" [supportsAdvancedReplace]=\\\"true\\\" [isAdvanced]='isAdvanced'></replace-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group pt-4\\\">\\r\\n        <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"back()\\\">{{i18n.common + 'Back' | dynamicTranslate}}</button>\\r\\n        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">{{i18n.common + 'Commit' | dynamicTranslate}}</button>\\r\\n    </div>\\r\\n\\r\\n</form>\"","export default \"<div class=\\\"row pt-3 pb-3 actions\\\">\\r\\n  <div class=\\\"col-md-3 btn-group\\\">\\r\\n    <button\\r\\n      (click)=\\\"toggleQualityControlMode(qualityControlModes.Content)\\\"\\r\\n      type=\\\"button\\\"\\r\\n      [class.btn-default]=\\\"mode !== qualityControlModes.Content\\\"\\r\\n      [class.btn-primary]=\\\"mode === qualityControlModes.Content\\\"\\r\\n      class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n      {{ i18n.qualityControl + 'Content' | dynamicTranslate }}\\r\\n    </button>\\r\\n    <button\\r\\n      (click)=\\\"toggleQualityControlMode(qualityControlModes.Buildings)\\\"\\r\\n      type=\\\"button\\\"\\r\\n      [class.btn-default]=\\\"mode !== qualityControlModes.Buildings\\\"\\r\\n      [class.btn-primary]=\\\"mode === qualityControlModes.Buildings\\\"\\r\\n      class=\\\"btn btn-default\\\"\\r\\n    >\\r\\n      {{ i18n.qualityControl + 'Buildings' | dynamicTranslate }}\\r\\n    </button>\\r\\n    <button\\r\\n      (click)=\\\"openModal()\\\"\\r\\n      type=\\\"button\\\"\\r\\n      *ngIf=\\\"mode === qualityControlModes.Buildings && showValuationErrorsButton\\\"\\r\\n      class=\\\"btn btn-action\\\"\\r\\n    >\\r\\n      {{ i18n.qualityControl + 'Valuation Errors' | dynamicTranslate }}\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <button\\r\\n      [showIfCanAccess]=\\\"permissions.canWriteData\\\"\\r\\n      *ngIf=\\\"buildingReferenceDataLoaded()\\\"\\r\\n      type=\\\"button\\\"\\r\\n      class=\\\"btn btn-primary\\\"\\r\\n      [disabled]=\\\"!contentReferenceDataLoaded()\\\"\\r\\n      (click)=\\\"massUpdate()\\\"\\r\\n    >\\r\\n      {{ i18n.qualityControl + 'Mass Update' | dynamicTranslate }}\\r\\n    </button>\\r\\n    <button\\r\\n      [showIfCanAccess]=\\\"permissions.canWriteData\\\"\\r\\n      [disabled]=\\\"!contentReferenceDataLoaded() || mode === qualityControlModes.Buildings\\\"\\r\\n      type=\\\"button\\\"\\r\\n      class=\\\"btn btn-primary\\\"\\r\\n      (click)=\\\"duplicateCheck()\\\"\\r\\n    >\\r\\n      {{ i18n.qualityControl + 'Duplicate Check' | dynamicTranslate }}\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-2\\\"></div>\\r\\n  <div [showIfCanAccess]=\\\"permissions.canWriteData\\\" class=\\\"col-md-3 text-right\\\">\\r\\n    <button\\r\\n      *ngIf=\\\"mode === qualityControlModes.Content\\\"\\r\\n      type=\\\"button\\\"\\r\\n      class=\\\"btn btn-primary\\\"\\r\\n      (click)=\\\"duplicate()\\\"\\r\\n      [disabled]=\\\"selectedAssets.length !== 1\\\"\\r\\n    >\\r\\n      {{ i18n.common + 'Duplicate Record' | dynamicTranslate }}\\r\\n    </button>\\r\\n\\r\\n    <div ngbDropdown class=\\\"d-inline-block\\\">\\r\\n      <button\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n        *ngIf=\\\"mode === qualityControlModes.Content\\\"\\r\\n        [disabled]=\\\"!contentReferenceDataLoaded()\\\"\\r\\n        id=\\\"Action\\\"\\r\\n        ngbDropdownToggle\\r\\n      >\\r\\n        {{ i18n.qualityControl + 'Actions' | dynamicTranslate }}\\r\\n      </button>\\r\\n      <button\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n        *ngIf=\\\"mode === qualityControlModes.Buildings\\\"\\r\\n        [disabled]=\\\"!buildingReferenceDataLoaded()\\\"\\r\\n        id=\\\"Action\\\"\\r\\n        ngbDropdownToggle\\r\\n      >\\r\\n        {{ i18n.qualityControl + 'Actions' | dynamicTranslate }}\\r\\n      </button>\\r\\n\\r\\n      <div class=\\\"dropdown-menu bottom-right\\\" ngbDropdownMenu aria-labelledby=\\\"SelectAction\\\">\\r\\n        <ng-container *ngIf=\\\"mode === qualityControlModes.Content\\\">\\r\\n          <button class=\\\"dropdown-item\\\" (click)=\\\"selectAction(modalActions.RetireAsset)\\\" [disabled]=\\\"selectedAssets.length === 0\\\">\\r\\n            {{ i18n.qualityControl + 'Retire Asset(s)' | dynamicTranslate }}\\r\\n          </button>\\r\\n          <button class=\\\"dropdown-item\\\" (click)=\\\"selectAction(modalActions.TransferAsset)\\\" [disabled]=\\\"selectedAssets.length === 0\\\">\\r\\n            {{ i18n.qualityControl + 'Transfer Asset(s)' | dynamicTranslate }}\\r\\n          </button>\\r\\n          <button class=\\\"dropdown-item\\\" (click)=\\\"selectAction(modalActions.CostAdjustment)\\\" [disabled]=\\\"selectedAssets.length !== 1\\\">\\r\\n            {{ i18n.qualityControl + 'Cost Adjustment' | dynamicTranslate }}\\r\\n          </button>\\r\\n        </ng-container>\\r\\n        <ng-container *ngIf=\\\"mode === qualityControlModes.Buildings\\\">\\r\\n          <button class=\\\"dropdown-item\\\" (click)=\\\"selectAction(modalActions.BuildingValuation)\\\">\\r\\n            {{ i18n.qualityControl + 'Building Valuation' | dynamicTranslate }}\\r\\n          </button>\\r\\n          <button class=\\\"dropdown-item\\\" (click)=\\\"selectAction(modalActions.FloodPlanValuation)\\\">\\r\\n            {{ i18n.qualityControl + 'Flood Zone Request' | dynamicTranslate }}\\r\\n          </button>\\r\\n        </ng-container>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      class=\\\"btn btn-primary\\\"\\r\\n      *ngIf=\\\"mode === qualityControlModes.Buildings\\\"\\r\\n      [disabled]=\\\"!buildingReferenceDataLoaded()\\\"\\r\\n      (click)=\\\"add()\\\"\\r\\n    >\\r\\n      {{ i18n.common + 'Add' | dynamicTranslate }}\\r\\n    </button>\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      class=\\\"btn btn-primary\\\"\\r\\n      *ngIf=\\\"mode === qualityControlModes.Content\\\"\\r\\n      [disabled]=\\\"!contentReferenceDataLoaded()\\\"\\r\\n      (click)=\\\"add()\\\"\\r\\n    >\\r\\n      {{ i18n.common + 'Add' | dynamicTranslate }}\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <quality-control-content-grid\\r\\n      [isReadOnly]=\\\"!userCanWriteData()\\\"\\r\\n      (gridSelections)=\\\"selectedAssets = $event\\\"\\r\\n      *ngIf=\\\"mode === qualityControlModes.Content && contentReferenceDataLoaded()\\\"\\r\\n    ></quality-control-content-grid>\\r\\n\\r\\n    <quality-control-building-grid\\r\\n      [isReadOnly]=\\\"!userCanWriteData()\\\"\\r\\n      (gridSelections)=\\\"selectedBuildings = $event\\\"\\r\\n      *ngIf=\\\"mode === qualityControlModes.Buildings && buildingReferenceDataLoaded()\\\"\\r\\n    ></quality-control-building-grid>\\r\\n\\r\\n    <div\\r\\n      *ngIf=\\\"(mode === qualityControlModes.Content && !statusExists) || (mode === qualityControlModes.Buildings && !buildingReferenceDataLoaded())\\\"\\r\\n      class=\\\"empty-grid text-center\\\"\\r\\n    >\\r\\n      <div class=\\\"action-link \\\">\\r\\n        {{ i18n.common + 'No data loaded - ' | dynamicTranslate }}&nbsp;\\r\\n        <a href=\\\"\\\" (click)=\\\"navigateToImportData($event)\\\">{{ i18n.common + 'Import Data' | dynamicTranslate }}</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div>\\r\\n    <building-valuation (onAction)=\\\"handleAction($event)\\\"></building-valuation>\\r\\n    <floodplain-valuation (onAction)=\\\"handleAction($event)\\\"></floodplain-valuation>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div id=\\\"QualityControl\\\">\\r\\n  <h1>{{ i18n.qualityControl + 'Quality Control' | dynamicTranslate }}</h1>\\r\\n\\r\\n  <ng-container *ngIf=\\\"dataTarget === 0\\\">\\r\\n    <div class=\\\"alert alert-danger\\\">\\r\\n      {{ i18n.qualityControl + 'Unable to complete QC' | dynamicTranslate }}\\r\\n    </div>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container>\\r\\n    <router-outlet *ngIf=\\\"hasRequiredData()\\\"></router-outlet>\\r\\n  </ng-container>\\r\\n</div>\\r\\n\"","export default \"<form [formGroup]=\\\"form\\\">\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n          <ng-container *ngFor=\\\"let field of defaultFormFields | orderBy: 'order'; let i=index; let odd=odd; let even=even;\\\">\\r\\n            <div class=\\\"col-md-6\\\" *ngIf=\\\"even\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label [attr.for]=\\\"field.id\\\">{{i18n.recipients + field.displayName | dynamicTranslate}}</label>\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" disabled value=\\\"{{field.value}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            \\r\\n            <div class=\\\"col-md-6\\\" *ngIf=\\\"odd\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label [attr.for]=\\\"field.id\\\">{{i18n.recipients + field.displayName | dynamicTranslate}}</label>\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" disabled value=\\\"{{field.value}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </ng-container>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn btn-default\\\" (click)=\\\"cancel()\\\">{{i18n.common + 'Cancel' | dynamicTranslate}}</button>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"remove()\\\" [ladda]=\\\"isSaving\\\">{{i18n.common + 'Remove' | dynamicTranslate}}</button>\\r\\n  </div>\\r\\n</form>\"","export default \"<form [formGroup]=\\\"form\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n\\r\\n            <ng-container *ngFor=\\\"let field of defaultFormFields | orderBy: 'order'; let i=index; let odd=odd; let even=even;\\\">\\r\\n              <div class=\\\"col-md-6\\\" *ngIf=\\\"even\\\">\\r\\n\\r\\n                <dynamic-field [sourceTranslationKey]=\\\"i18n.recipients\\\" [field]=\\\"field\\\" [key]='field.displayName' [form]=\\\"form\\\"></dynamic-field>\\r\\n\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"col-md-6\\\" *ngIf=\\\"odd\\\">\\r\\n\\r\\n\\r\\n                <dynamic-field [sourceTranslationKey]=\\\"i18n.recipients\\\" [field]=\\\"field\\\" [form]=\\\"form\\\" [key]='field.displayName'></dynamic-field>\\r\\n\\r\\n              </div>\\r\\n              \\r\\n            </ng-container>\\r\\n            \\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn btn-default\\\" (click)=\\\"cancel()\\\">{{i18n.common + 'Cancel' | dynamicTranslate}}</button>\\r\\n    <button *ngIf=\\\"formAction === 0\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\" (click)=\\\"save()\\\" [ladda]=\\\"isSaving\\\">{{i18n.common + 'Save' | dynamicTranslate}}</button>\\r\\n    <button *ngIf=\\\"formAction === 1\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\" (click)=\\\"save()\\\" [ladda]=\\\"isSaving\\\">{{i18n.common + 'Edit' | dynamicTranslate}}</button>\\r\\n  </div>\\r\\n</form>\"","export default \"<famis-grid *ngIf=\\\"!!recipientsGrid.loading && !!recipientsGrid.selectedHeaders\\\" \\r\\n  [famisGrid]=\\\"recipientsGrid\\\" \\r\\n  (updateCacheEvent)=\\\"updateCache($event)\\\" \\r\\n  (actionEvent)=\\\"handleActionEvent($event)\\\">\\r\\n</famis-grid>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <button type=\\\"button\\\" (click)=\\\"addRecipient()\\\" class=\\\"btn btn-action btn-small\\\">\\r\\n      <i class=\\\"fa fa-plus\\\"></i>\\r\\n    </button>\\r\\n    <strong>&nbsp;{{i18n.recipients + 'Add Recipient' | dynamicTranslate}}</strong>\\r\\n  </div>\\r\\n\\r\\n</div>\"","export default \"<div id=\\\"Recipients\\\">\\r\\n  <h1>{{i18n.recipients + 'Add/Remove Recipients' | dynamicTranslate}}</h1>\\r\\n\\r\\n    <ng-container *ngIf=\\\"referenceDataLoaded()\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n    </ng-container>\\r\\n</div>\"","export default \"<div class=\\\"asset-column-select\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div>\\r\\n        <div>\\r\\n          <h3>{{i18n.reconciliation + title | dynamicTranslate }}</h3>\\r\\n          <kendo-grid [resizable]=\\\"true\\\" [data]=\\\"assetFileFields | orderBy: 'displayName'\\\" [height]=\\\"200\\\" \\r\\n            [selectable]=\\\"selectableSettings\\\" (selectionChange)=\\\"onSelectionChange($event)\\\" [kendoGridSelectBy]=\\\"'sourceColumn'\\\" [selectedKeys]=\\\"selectedItems\\\" >\\r\\n            <kendo-grid-checkbox-column width=\\\"8%\\\">\\r\\n                <ng-template kendoGridHeaderTemplate let-column let-columnIndex=\\\"columnIndex\\\">\\r\\n                    <input [id]=\\\"'k-grid-selectall-'+assetFileType\\\" class=\\\"k-checkbox header-checkbox\\\" kendoGridSelectAllCheckbox type=\\\"checkbox\\\">\\r\\n                    <label kendoGridSelectAllCheckbox  class=\\\"k-checkbox-label\\\" [for]=\\\"'k-grid-selectall-'+assetFileType\\\"></label>\\r\\n                  </ng-template>\\r\\n            </kendo-grid-checkbox-column>\\r\\n            <kendo-grid-column [width]=\\\"150\\\" field=\\\"displayName\\\" title=\\\"{{i18n.common + 'Column Name' | dynamicTranslate }} \\\">\\r\\n\\r\\n\\r\\n                <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                    <ng-container *ngIf=\\\"!dataItem.isCustom\\\">\\r\\n                    {{i18n.asset + dataItem.displayName | dynamicTranslate }}\\r\\n                    </ng-container>  \\r\\n                    <ng-container *ngIf=\\\"dataItem.isCustom\\\">\\r\\n                        {{dataItem.displayName}}\\r\\n                        </ng-container> \\r\\n                    </ng-template>\\r\\n\\r\\n            </kendo-grid-column>\\r\\n\\r\\n           \\r\\n          </kendo-grid>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"asset-selected-columns\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <h3>{{i18n.reconciliation + 'Final Output Column Order' | dynamicTranslate }}</h3>\\r\\n      <button style=\\\"margin-bottom: 10px;\\\" class=\\\"btn btn-primary btn-small\\\" (click)=\\\"autoMapFields($event)\\\"\\r\\n              [disabled]=\\\"selectedColumns.length === 0\\\">\\r\\n              {{i18n.reconciliation + 'Auto Map Fields' | dynamicTranslate }} \\r\\n      </button>\\r\\n      <div>\\r\\n        <table class=\\\"table table-striped table-bordered\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th width=\\\"150\\\">\\r\\n                  {{i18n.reconciliation + 'Source' | dynamicTranslate }}  \\r\\n              </th>\\r\\n              <th width=\\\"300\\\">\\r\\n                    {{i18n.reconciliation + 'Column' | dynamicTranslate }}  \\r\\n              </th>\\r\\n              <th scope=\\\"col\\\">\\r\\n                    {{i18n.reconciliation + 'Destination' | dynamicTranslate }}  \\r\\n              </th>\\r\\n              <th width=\\\"150\\\">\\r\\n                    {{i18n.reconciliation + 'Actions' | dynamicTranslate }}  \\r\\n              </th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <ng-container *ngFor=\\\"let column of selectedColumns\\\">\\r\\n              <tr [ngClass]=\\\"{'is-mapped':column.destinationColumnName}\\\">\\r\\n                  <td>\\r\\n                    <ng-container *ngIf=\\\"column.sourceTarget === 0\\\">\\r\\n                        {{i18n.reconciliation + 'Client File' | dynamicTranslate }}  \\r\\n                    </ng-container>\\r\\n\\r\\n                    <ng-container *ngIf=\\\"column.sourceTarget !== 0\\\">\\r\\n                        {{i18n.reconciliation + 'Actual Inventory' | dynamicTranslate }}  \\r\\n                    </ng-container>\\r\\n\\r\\n                  </td>\\r\\n                  <td>{{column.displayName}}</td>\\r\\n                  <td>\\r\\n                    <destination-column-selector [column]=\\\"column\\\" [value]=\\\"column.destinationColumnName\\\"></destination-column-selector>\\r\\n                  </td>\\r\\n                  <td><strong><a (click)=\\\"remove(column)\\\">{{i18n.common + 'Remove' | dynamicTranslate}}</a></strong></td>\\r\\n                </tr>\\r\\n            </ng-container>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"consolidation-match-code-assignment\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div>\\r\\n        <div *ngIf=\\\"!emptyMatchCodesIndicator\\\">\\r\\n          <table class=\\\"table table-striped table-bordered\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th></th>\\r\\n                <th *ngFor=\\\"let match of selectedMatchCodes\\\">{{match.matchCodeName}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let column of models; let odd=odd; let even=even;\\\" [ngClass]=\\\"{ odd: odd, even: even }\\\">\\r\\n                <td>{{column.displayName }}</td>\\r\\n\\r\\n                <td *ngFor=\\\"let match of selectedMatchCodes\\\">\\r\\n                  <dynamic-assignment-field *ngIf=\\\"column[match.matchCodeId]\\\" [columnId]=\\\"column.id\\\" [matchCodeId]=\\\"match.matchCodeId\\\" [selectedValue]=\\\"column[match.matchCodeId]\\\"></dynamic-assignment-field>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"emptyMatchCodesIndicator\\\">\\r\\n           {{ i18n.asset + 'translate No data to display.  Ensure that reconciliation is complete and you have properly defined the layout.' | dynamicTranslate }}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-6\\\">\\r\\n    <select class=\\\"form-control form-control-sm\\\" required \\r\\n            name=\\\"{{'selectedValue_' + column.sourceTarget + '_' + column.sourceColumn}}\\\" \\r\\n            [(ngModel)]=\\\"selectedValue\\\" \\r\\n            (change)=\\\"onSelectionChanged()\\\">\\r\\n      <option value=\\\"\\\"></option>\\r\\n      <option *ngFor=\\\"let item of availableColumns | orderBy: 'label'\\\" value=\\\"{{item.value}}\\\">{{i18n.asset + item.label | dynamicTranslate }}</option>\\r\\n      <option value=\\\"-1\\\">{{ i18n.common + 'Custom Field' | dynamicTranslate }}</option>\\r\\n    </select>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-6\\\">\\r\\n    <input class=\\\"form-control form-control-sm\\\" \\r\\n           *ngIf=\\\"selectedValue === '-1'\\\" \\r\\n           type=\\\"text\\\" \\r\\n           name=\\\"{{'customValue_' + column.sourceTarget + '_' + column.sourceColumn}}\\\"\\r\\n           [(ngModel)]=\\\"customValue\\\" \\r\\n           (change)=\\\"onTextChanged()\\\">\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"validationMessage.length > 0\\\" class=\\\"row justify-content-end\\\">\\r\\n  <div class=\\\"col-md-6 alert alert-danger\\\">{{validationMessage}}</div>\\r\\n</div>\\r\\n\"","export default \"<div>\\r\\n  <select [id]=\\\"formKey\\\" [(ngModel)]=\\\"selectedValue\\\" class=\\\"form-control custom-select-sm\\\" (change)=\\\"onChange()\\\">\\r\\n    <option *ngFor=\\\"let opt of selectOptions | orderBy: 'label'\\\" [value]=\\\"opt.value\\\">\\r\\n      <ng-container *ngIf=\\\"!opt.isCustom\\\">\\r\\n          {{i18n.reconciliation + opt.label | dynamicTranslate}}\\r\\n      </ng-container>\\r\\n      <ng-container *ngIf=\\\"opt.isCustom\\\">\\r\\n          {{opt.label}}\\r\\n      </ng-container>\\r\\n     </option>\\r\\n  </select>\\r\\n</div>\\r\\n\"","export default \"<button type=\\\"button\\\" (click)=\\\"open($event)\\\" class=\\\"btn btn-action\\\">Select File</button>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">{{title}}</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <form (ngSubmit)=\\\"onSubmit(createCustomColumnForm)\\\" #createCustomColumnForm=\\\"ngForm\\\">\\r\\n\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n      <kendo-grid [resizable]=\\\"true\\\" [data]=\\\"availableGroups\\\"  [selectable]=\\\"selectableSettings\\\" [kendoGridSelectBy]=\\\"'id'\\\" [selectedKeys]=\\\"selectedGroup\\\" [height]=\\\"300\\\">\\r\\n          <kendo-grid-checkbox-column [width]=\\\"50\\\"></kendo-grid-checkbox-column>\\r\\n          \\r\\n        <kendo-grid-column field=\\\"groupName\\\" title=\\\"Name\\\"></kendo-grid-column>\\r\\n        <kendo-grid-column field=\\\"inventoryAssetCount\\\" title=\\\"Inventory Asset Count\\\"></kendo-grid-column>\\r\\n\\r\\n      </kendo-grid>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"c('Close click')\\\">{{i18n.common + 'Cancel' | dynamicTranslate }} </button>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Copy to Current Group</button>\\r\\n    </div>\\r\\n\\r\\n  </form>\\r\\n</ng-template>\"","export default \"<button type=\\\"button\\\" (click)=\\\"open($event)\\\" class=\\\"btn btn-action btn-small\\\">\\r\\n  <i class=\\\"fa fa-plus\\\"></i>\\r\\n</button>\\r\\n<strong> &nbsp; {{i18n.matchCodes + 'Add Match Code' | dynamicTranslate }}</strong>\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\r\\n  <form (ngSubmit)=\\\"onSubmit(createMatchCodeForm)\\\" #createMatchCodeForm=\\\"ngForm\\\">\\r\\n\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"matchCodeInput\\\">Match Code\\r\\n          <span class=\\\"required-indicator\\\">*</span>\\r\\n        </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"matchCode.name\\\" name=\\\"matchCodeName\\\" id=\\\"matchCodeInput\\\" aria-describedby=\\\"matchCodeHelp\\\"\\r\\n          placeholder=\\\"\\\" required #matchCodeInput=\\\"ngModel\\\" (input)=\\\"onNameInputChange($event, $event.target.value)\\\">\\r\\n        <div [hidden]=\\\"!isNameTaken\\\" class=\\\"alert alert-danger\\\">\\r\\n          {{i18n.matchCodes + 'This name is already asigned to a match code. Please provide a unique name' | dynamicTranslate }}.\\r\\n        </div>\\r\\n        <div *ngIf=\\\"matchCodeInput.errors && (matchCodeInput.dirty || matchCodeInput.touched || matchCodeInput.submitted)\\\" class=\\\"alert alert-danger\\\">\\r\\n          <div [hidden]=\\\"!matchCodeInput.errors.required\\\">\\r\\n              {{i18n.matchCodes + 'Please provide a match code' | dynamicTranslate }}.\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"descriptionInput\\\">{{i18n.matchCodes + 'Description' | dynamicTranslate }}\\r\\n          <span class=\\\"required-indicator\\\">*</span>\\r\\n        </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"matchCode.description\\\" name=\\\"matchCodeDescription\\\" id=\\\"descriptionInput\\\"\\r\\n          aria-describedby=\\\"descriptionHelp\\\" placeholder=\\\"\\\" required #descriptionInput=\\\"ngModel\\\">\\r\\n\\r\\n        <div *ngIf=\\\"descriptionInput.errors && (descriptionInput.dirty || descriptionInput.touched || descriptionInput.submitted)\\\"\\r\\n          class=\\\"alert alert-danger\\\">\\r\\n          <div [hidden]=\\\"!descriptionInput.errors.required\\\">\\r\\n              {{i18n.matchCodes + 'Please provide a description' | dynamicTranslate }}.\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"matchCodeCategorySelect\\\">{{i18n.matchCodes + 'Match Category' | dynamicTranslate }}</label>\\r\\n        <select class=\\\"form-control\\\" [(ngModel)]=\\\"matchCode.categoryId\\\" name=\\\"matchCodeCategory\\\" id=\\\"matchCodeCategorySelect\\\">\\r\\n          <option *ngFor=\\\"let opt of matchCodeCategories\\\" [value]=\\\"opt.id\\\">{{ opt.name }}</option>\\r\\n        </select>\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"checkbox\\\">\\r\\n\\r\\n\\r\\n        <input type=\\\"checkbox\\\" id=\\\"matchCodeIsEnabled\\\" class=\\\"k-checkbox\\\" [(ngModel)]=\\\"matchCode.isEnabled\\\" name=\\\"matchCodeIsEnabled\\\">\\r\\n        <label class=\\\"k-checkbox-label\\\" for=\\\"matchCodeIsEnabled\\\">{{ i18n.matchCodes + 'Enable' | dynamicTranslate }}</label>\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"cancel()\\\">{{ i18n.common + 'Cancel' | dynamicTranslate }}</button>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{i18n.common + action | dynamicTranslate }}</button>\\r\\n\\r\\n    </div>\\r\\n  </form>\\r\\n</ng-template>\"","export default \"<div id=\\\"DefineLayout\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <asset-column-select title=\\\"{{i18n.reconciliation + 'Client File' | dynamicTranslate }}\\\" [file-type]=\\\"0\\\"></asset-column-select>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <asset-column-select title=\\\"{{i18n.reconciliation + 'Actual Inventory' | dynamicTranslate }}\\\" [file-type]=\\\"1\\\"></asset-column-select>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <asset-selected-columns></asset-selected-columns>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"wizard-actions\\\">\\r\\n  <button class=\\\"btn btn-default\\\" i18n=\\\"Back button text@@reconBack\\\" (click)=onBack($event)>{{i18n.common + 'Back' | dynamicTranslate }} </button>\\r\\n  <button class=\\\"btn btn-primary\\\" i18n=\\\"Continue button text@@reconContinue\\\" (click)=onContinue($event) [ladda]=\\\"isBusy\\\">{{i18n.common + 'Continue' | dynamicTranslate }}</button>\\r\\n</div>\"","export default \"<div id=\\\"FinalizeData\\\">\\r\\n\\r\\n  <div>\\r\\n    <div class=\\\"row\\\" *ngFor=\\\"let matchItem of responseData\\\">\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n\\r\\n        <h3>{{matchItem.matchCodeName}} - \\r\\n          <span *ngIf=\\\"matchItem.recordCount > 5\\\">5 {{i18n.reconciliation + 'records of' | dynamicTranslate }} {{matchItem.recordCount}}</span>\\r\\n          <span *ngIf=\\\"matchItem.recordCount <= 5\\\">{{matchItem.recordCount}} {{matchItem.recordCount > 1 ? i18n.reconciliation + 'Records' : i18n.reconciliation + 'Record' | dynamicTranslate}}</span>\\r\\n        </h3>\\r\\n\\r\\n        <kendo-grid [resizable]=\\\"true\\\" [data]=\\\"matchItem.assetRecords\\\" [rowHeight]=\\\"22.22\\\" [height]=\\\"160\\\" [scrollable]=\\\"'virtual'\\\" [reorderable]=\\\"true\\\">\\r\\n          <kendo-grid-column [width]=\\\"200\\\" field=\\\"historicalCost\\\" title=\\\"Historical Cost\\\">\\r\\n            <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n              {{ dataItem['historicalCost'] | localizedNumber }}\\r\\n            </ng-template>\\r\\n          </kendo-grid-column>\\r\\n            <ng-container *ngFor=\\\"let column of headers\\\">\\r\\n              <kendo-grid-column  *ngIf=\\\"column.fieldType === 0 || column.fieldType === 'text'\\\" [width]=\\\"200\\\" field=\\\"{{column.name}}\\\"  format=\\\"{{column.format}}\\\" title=\\\"{{i18n.asset + upperCasePropertyName(column.displayName) | dynamicTranslate}}\\\" [filter]=\\\"column.fieldType\\\">\\r\\n                <ng-template kendoGridFilterMenuTemplate let-filter let-column=\\\"column\\\" let-filterService=\\\"filterService\\\">\\r\\n                  <kendo-grid-string-filter-menu\\r\\n                    [column]=\\\"column\\\"\\r\\n                    [filter]=\\\"filter\\\"\\r\\n                    [filterService]=\\\"filterService\\\">\\r\\n                      <kendo-filter-eq-operator></kendo-filter-eq-operator>\\r\\n                      <kendo-filter-neq-operator></kendo-filter-neq-operator>\\r\\n                      <kendo-filter-startswith-operator></kendo-filter-startswith-operator>\\r\\n                      <kendo-filter-contains-operator></kendo-filter-contains-operator>\\r\\n                      <kendo-filter-not-contains-operator></kendo-filter-not-contains-operator>\\r\\n                      <kendo-filter-isnull-operator></kendo-filter-isnull-operator>\\r\\n                      <kendo-filter-isnotnull-operator></kendo-filter-isnotnull-operator>\\r\\n                  </kendo-grid-string-filter-menu>\\r\\n                </ng-template>\\r\\n                <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                  {{dataItem[column.name]}}\\r\\n                </ng-template>\\r\\n              </kendo-grid-column>\\r\\n\\r\\n              <kendo-grid-column *ngIf=\\\"column.fieldType === 1 || column.fieldType === 2 || column.fieldType === 'numeric'\\\" [width]=\\\"200\\\" field=\\\"{{column.name}}\\\"  format=\\\"{0:n}\\\" title=\\\"{{i18n.asset + upperCasePropertyName(column.displayName) | dynamicTranslate}}\\\" [filter]=\\\"column.fieldType\\\">\\r\\n                <ng-template kendoGridFilterMenuTemplate let-filter let-column=\\\"column\\\" let-filterService=\\\"filterService\\\">\\r\\n                    <kendo-grid-numeric-filter-menu\\r\\n                      [column]=\\\"column\\\"\\r\\n                      [filter]=\\\"filter\\\"\\r\\n                      [filterService]=\\\"filterService\\\">\\r\\n                      <kendo-filter-eq-operator></kendo-filter-eq-operator>\\r\\n                      <kendo-filter-gt-operator></kendo-filter-gt-operator>\\r\\n                      <kendo-filter-lt-operator></kendo-filter-lt-operator>\\r\\n                      <kendo-filter-gte-operator></kendo-filter-gte-operator>\\r\\n                      <kendo-filter-lte-operator></kendo-filter-lte-operator>\\r\\n                      <kendo-filter-neq-operator></kendo-filter-neq-operator>\\r\\n                      <kendo-filter-isnull-operator></kendo-filter-isnull-operator>\\r\\n                      <kendo-filter-isnotnull-operator></kendo-filter-isnotnull-operator>\\r\\n                    </kendo-grid-numeric-filter-menu>\\r\\n                </ng-template>\\r\\n                <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                {{ dataItem[column.name] | localizedNumber }}\\r\\n                </ng-template>\\r\\n              </kendo-grid-column>\\r\\n\\r\\n              <kendo-grid-column *ngIf=\\\"column.fieldType === 3 || column.fieldType === 'boolean'\\\" [width]=\\\"200\\\" field=\\\"{{column.name}}\\\"  format=\\\"{{column.format}}\\\" title=\\\"{{i18n.asset + upperCasePropertyName(column.displayName) | dynamicTranslate}}\\\" [filter]=\\\"column.fieldType\\\">\\r\\n                <ng-template kendoGridFilterMenuTemplate let-filter let-column=\\\"column\\\" let-filterService=\\\"filterService\\\">\\r\\n                    <kendo-grid-boolean-filter-menu\\r\\n                      [column]=\\\"column\\\"\\r\\n                      [filter]=\\\"filter\\\"\\r\\n                      [filterService]=\\\"filterService\\\">\\r\\n                        <kendo-filter-eq-operator></kendo-filter-eq-operator>\\r\\n                        <kendo-filter-isnull-operator></kendo-filter-isnull-operator>\\r\\n                        <kendo-filter-isnotnull-operator></kendo-filter-isnotnull-operator>\\r\\n                    </kendo-grid-boolean-filter-menu>\\r\\n                  </ng-template>\\r\\n                <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                  {{dataItem[column.name]}}\\r\\n                </ng-template>\\r\\n              </kendo-grid-column>\\r\\n        \\r\\n              <kendo-grid-column *ngIf=\\\"column.fieldType === 4 || column.fieldType === 'date'\\\" [width]=\\\"200\\\" field=\\\"{{column.name}}\\\"  format=\\\"{0:d}\\\" title=\\\"{{i18n.asset + upperCasePropertyName(column.displayName) | dynamicTranslate}}\\\" [filter]=\\\"column.fieldType\\\">\\r\\n                <ng-template kendoGridFilterMenuTemplate let-filter let-column=\\\"column\\\" let-filterService=\\\"filterService\\\">\\r\\n                  <kendo-grid-date-filter-menu\\r\\n                    [column]=\\\"column\\\"\\r\\n                    [filter]=\\\"filter\\\"\\r\\n                    [filterService]=\\\"filterService\\\">\\r\\n                      <kendo-filter-eq-operator></kendo-filter-eq-operator>\\r\\n                      <kendo-filter-gt-operator></kendo-filter-gt-operator>\\r\\n                      <kendo-filter-lt-operator></kendo-filter-lt-operator>\\r\\n                      <kendo-filter-gte-operator></kendo-filter-gte-operator>\\r\\n                      <kendo-filter-lte-operator></kendo-filter-lte-operator>\\r\\n                      <kendo-filter-neq-operator></kendo-filter-neq-operator>\\r\\n                      <kendo-filter-isnull-operator></kendo-filter-isnull-operator>\\r\\n                      <kendo-filter-isnotnull-operator></kendo-filter-isnotnull-operator>\\r\\n                  </kendo-grid-date-filter-menu>\\r\\n                </ng-template>\\r\\n                <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                  {{ dataItem[column.name] | localizedDate }}\\r\\n                </ng-template>\\r\\n              </kendo-grid-column>\\r\\n            </ng-container>\\r\\n\\r\\n        </kendo-grid>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n</div>\\r\\n\\r\\n<reconciliation-validation></reconciliation-validation>\\r\\n\\r\\n<div class=\\\"wizard-actions\\\">\\r\\n  <button class=\\\"btn btn-default\\\" i18n=\\\"Back button text@@reconBack\\\" (click)=\\\"onBack($event)\\\">{{i18n.common + 'Back' | dynamicTranslate }}</button>\\r\\n  <button class=\\\"btn btn-primary\\\" i18n=\\\"Save button text@@reconSave\\\" (click)=\\\"onSave($event)\\\">{{i18n.common + 'Save &amp; Quit' | dynamicTranslate}}</button>\\r\\n  <button class=\\\"btn btn-primary\\\" i18n=\\\"Commit button text@@reconCommit\\\" (click)=\\\"onContinue($event)\\\" [ladda]=\\\"isBusy\\\">{{i18n.common + 'Commit' | dynamicTranslate }}</button>\\r\\n</div>\"","export default \"<div id=\\\"MapMatchcodes\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <h3>{{ i18n.reconciliation + 'Map Match Codes' | dynamicTranslate }}</h3>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <consolidation-match-code-assignment></consolidation-match-code-assignment>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"wizard-actions\\\">\\r\\n  <button class=\\\"btn btn-default\\\" i18n=\\\"Back button text@@reconBack\\\" (click)=onBack($event)>{{ i18n.common + 'Back' | dynamicTranslate }} </button>\\r\\n  <button class=\\\"btn btn-primary\\\" i18n=\\\"Continue button text@@reconContinue\\\" (click)=onContinue($event) [ladda]=\\\"isBusy\\\">{{ i18n.common + 'Continue' | dynamicTranslate }} </button>\\r\\n</div>\"","export default \"<div class=\\\"row pb-3\\\">\\r\\n  <div class=\\\"col-md-2\\\">\\r\\n    <label>Client File Field</label>\\r\\n\\r\\n    <select class=\\\"form-control form-control\\\" id=\\\"selectMatchCode\\\" [(ngModel)]=\\\"fieldMatch.leftTerm.field\\\" [name]=\\\"formFieldNames.leftTerm\\\"\\r\\n      (change)=\\\"fieldMatchChange()\\\" required>\\r\\n      <option *ngIf=\\\"!fieldMatch.leftTerm.field\\\" [value]=\\\"fieldMatch.leftTerm.field\\\" disabled>Select Field</option>\\r\\n      <option *ngFor=\\\"let item of inventoryMetadata[dataTargetNames.client]|orderBy:'displayName'\\\" [value]=\\\"item.name\\\">{{item.displayName}}</option>\\r\\n    </select>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-1\\\">\\r\\n    <p class=\\\"text-center\\\">\\r\\n      <span class=\\\"criteria-operation\\\" style=\\\"position:relative; top:40px;\\\">Equals</span>\\r\\n    </p>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-2\\\">\\r\\n    <label>Actual Inventory Field</label>\\r\\n\\r\\n    <select class=\\\"form-control form-control\\\" id=\\\"selectMatchCode\\\" [(ngModel)]=\\\"fieldMatch.rightTerm.field\\\" [name]=\\\"formFieldNames.rightTerm\\\"\\r\\n      (change)=\\\"fieldMatchChange()\\\" required>\\r\\n      <option *ngIf=\\\"!fieldMatch.rightTerm.field\\\" [value]=\\\"fieldMatch.rightTerm.field\\\" disabled>Select Field</option>\\r\\n      <option *ngFor=\\\"let item of inventoryMetadata[dataTargetNames.inventory]|orderBy:'displayName'\\\" [value]=\\\"item.name\\\">{{item.displayName}}</option>\\r\\n    </select>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-2 align-self-center mt-3\\\">\\r\\n\\r\\n\\r\\n    <button (click)=\\\"remove()\\\" type=\\\"button\\\" class=\\\"btn btn-action btn-small\\\">\\r\\n      <i class=\\\"fa fa-minus\\\"></i>\\r\\n    </button>\\r\\n    <strong>&nbsp;Remove Filter</strong>\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"col-md-5\\\">\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-2\\\">\\r\\n    <label>Source File</label>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <input type=\\\"radio\\\" [name]=\\\"formFieldNames.sourceClientFile\\\" [checked]=\\\"filter.term.dataTarget === dataTargetNames.client\\\"\\r\\n        (change)=\\\"setSourceFile(dataTargetNames.client, $event)\\\">\\r\\n      <label class=\\\"custom-control-label\\\" for=\\\"customRadio1\\\">Client File</label><br />\\r\\n      <input type=\\\"radio\\\" [name]=\\\"formFieldNames.sourceInventoryFile\\\" [checked]=\\\"filter.term.dataTarget === dataTargetNames.inventory\\\"\\r\\n        (change)=\\\"setSourceFile(dataTargetNames.inventory, $event)\\\">\\r\\n      <label class=\\\"custom-control-label\\\" for=\\\"customRadio2\\\">Actual Inventory</label>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-2\\\">\\r\\n    <label>Field</label>\\r\\n\\r\\n    <select class=\\\"form-control form-control\\\" id=\\\"selectMatchCode\\\" [(ngModel)]=\\\"selectedField\\\" (change)=\\\"initOperationAndValue()\\\"\\r\\n      [name]=\\\"formFieldNames.selectedField\\\" #selectMatchCode=\\\"ngModel\\\" required>\\r\\n      <option *ngIf=\\\"!selectedField\\\" [ngValue]=\\\"selectedField\\\" disabled>Select Field</option>\\r\\n      <option *ngFor=\\\"let item of sourceMetadata|orderBy:'displayName'\\\" [ngValue]=\\\"item\\\">{{item.displayName}}</option>\\r\\n    </select>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-2\\\">\\r\\n    <label>Filter Type</label>\\r\\n    <select  class=\\\"form-control\\\" *ngIf=\\\"!selectedField\\\" disabled></select>\\r\\n\\r\\n    <select *ngIf=\\\"selectedField\\\" [(ngModel)]=\\\"filter.operation\\\" [name]=\\\"formFieldNames.selectedFilterType\\\" (change)=\\\"criteriaChange()\\\"\\r\\n      class=\\\"form-control\\\">\\r\\n      <option *ngIf=\\\"!filter.operation\\\" [ngValue]=\\\"filter.operation\\\" disabled>Select Filter</option>\\r\\n      <option *ngFor=\\\"let item of operationsForSelectedTerm\\\" [value]=\\\"item.name\\\">{{item.displayName}}</option>\\r\\n    </select>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"col-md-2\\\" *ngIf=\\\"filter.operation !== 'in' && filter.operation !== 'nin'\\\">\\r\\n\\r\\n\\r\\n    <label>Value</label>\\r\\n\\r\\n    <input *ngIf=\\\"!selectedField\\\" type=\\\"text\\\" disabled=\\\"true\\\" [name]=\\\"formFieldNames.value\\\" class=\\\"form-control\\\">\\r\\n\\r\\n    <input type=\\\"text\\\" *ngIf=\\\"selectedField && selectedField.fieldType===fieldTypes.String\\\" [(ngModel)]=\\\"filter.term.value\\\" [name]=\\\"formFieldNames.value\\\"\\r\\n      class=\\\"form-control\\\" (change)=\\\"criteriaChange()\\\">\\r\\n\\r\\n    <kendo-datepicker class=\\\"form-control\\\" *ngIf=\\\"selectedField && selectedField.fieldType===fieldTypes.DateTime\\\" [(ngModel)]=\\\"filter.term.value\\\"\\r\\n      [name]=\\\"formFieldNames.value\\\" (change)=\\\"criteriaChange()\\\"></kendo-datepicker>\\r\\n\\r\\n\\r\\n    <!-- TODO Hide stepper -->\\r\\n    <input type=\\\"number\\\" *ngIf=\\\"selectedField && (selectedField.fieldType===fieldTypes.Integer || selectedField.fieldType===fieldTypes.Double)\\\"\\r\\n      [(ngModel)]=\\\"filter.term.value\\\" [name]=\\\"formFieldNames.value\\\" class=\\\"form-control\\\" (change)=\\\"criteriaChange()\\\">\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"col-md-2 mt-4\\\">\\r\\n\\r\\n\\r\\n    <button (click)=\\\"remove()\\\" type=\\\"button\\\" class=\\\"btn btn-action btn-small\\\">\\r\\n      <i class=\\\"fa fa-minus\\\"></i>\\r\\n    </button>\\r\\n    <strong>Remove Filter</strong>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-6\\\">\\r\\n    <b>{{matchesCount}} {{i18n.reconciliation + 'Matches' | dynamicTranslate }}</b>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-6\\\" style=\\\"text-align: right;\\\">\\r\\n    <p> Match Code: {{selectedmatchCode}}</p>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  \\r\\n  <div class=\\\"col-md-12 \\\">\\r\\n\\r\\n    <kendo-grid \\r\\n    [resizable]=\\\"true\\\" \\r\\n    [data]=\\\"manyMatchRecords\\\"\\r\\n    [loading]=\\\"loading\\\"\\r\\n    [selectable]=\\\"true\\\" \\r\\n    [kendoGridSelectBy]=\\\"'id'\\\" \\r\\n    [reorderable]=\\\"true\\\"\\r\\n    [navigable]=\\\"true\\\"\\r\\n    [height]=\\\"330\\\" \\r\\n    [sortable]=\\\"true\\\"\\r\\n    [sort]=\\\"state.sort\\\"\\r\\n    [navigable]=\\\"true\\\"\\r\\n    #grid\\r\\n    >\\r\\n<!-- #clientFileMatchesGrid [rowClass]=\\\"isUnmatched\\\"  //(detailExpand)=\\\"detailExpanded($event)\\\" (dataStateChange)=\\\"dataStateChange($event)\\\"  [dataItem]=\\\"dataItem\\\"  \\r\\n-->\\r\\n\\r\\n      <ng-container *ngFor=\\\"let column of selectedInventoryHeaders\\\">\\r\\n\\r\\n        <kendo-grid-column [reorderable]=\\\"true\\\"  *ngIf=\\\"column.fieldType !== 'date'\\\" [width]=\\\"200\\\" field=\\\"{{column.name}}\\\" format=\\\"{{column.format}}\\\" title=\\\"CF - {{column.displayName}}\\\"\\r\\n          [filter]=\\\"column.fieldType\\\">\\r\\n          <ng-template kendoGridCellTemplate let-dataItem >\\r\\n            {{dataItem.inventoryRecords[0][column.name]}}\\r\\n          </ng-template>\\r\\n        </kendo-grid-column>\\r\\n\\r\\n        <kendo-grid-column [reorderable]=\\\"true\\\" *ngIf=\\\"column.fieldType === 'date'\\\" [width]=\\\"200\\\" field=\\\"{{column.name}}\\\" format=\\\"{{column.format}}\\\" title=\\\"CF -{{column.displayName}}\\\"\\r\\n          [filter]=\\\"column.fieldType\\\">\\r\\n          <ng-template kendoGridCellTemplate let-dataItem >\\r\\n            {{ dataItem.inventoryRecords[0][column.name] | localizedDate }}\\r\\n          </ng-template>\\r\\n        </kendo-grid-column>\\r\\n      </ng-container>\\r\\n      <kendo-grid-column field=\\\"detailRecordCount\\\"  title=\\\"Potenital Matches\\\" width=\\\"100\\\"></kendo-grid-column>\\r\\n      <div *kendoGridDetailTemplate=\\\"let dataItem\\\">\\r\\n      \\r\\n          <kendo-grid \\r\\n          [resizable]=\\\"true\\\" \\r\\n      \\r\\n          [data]=\\\"dataItem.clientFileRecords\\\" \\r\\n          [loading]=\\\"loading\\\"\\r\\n          [selectable]=\\\"true\\\" \\r\\n          [kendoGridSelectBy]=\\\"'id'\\\" \\r\\n          [reorderable]=\\\"true\\\"\\r\\n          [navigable]=\\\"true\\\"\\r\\n          [sortable]=\\\"true\\\"\\r\\n          [sort]=\\\"state.sort\\\"\\r\\n          [navigable]=\\\"true\\\"\\r\\n          >\\r\\n          <kendo-grid-column [reorderable]=\\\"false\\\" field=\\\"Actions\\\" title=\\\"Actions\\\" width=\\\"100\\\">\\r\\n            <ng-template kendoGridCellTemplate let-rowIndex=\\\"rowIndex\\\">\\r\\n              <a (click)=\\\"onMatch(dataItem,rowIndex)\\\">{{i18n.reconciliation + 'Match' | dynamicTranslate}} </a>\\r\\n            </ng-template>\\r\\n          </kendo-grid-column>\\r\\n            <ng-container *ngFor=\\\"let column of selectedClientHeaders \\\">\\r\\n\\r\\n              <kendo-grid-column [reorderable]=\\\"true\\\"  *ngIf=\\\"column.fieldType !== 'date'\\\" [width]=\\\"200\\\" field=\\\"{{column.name}}\\\" format=\\\"{{column.format}}\\\" title=\\\"AI-{{column.displayName}}\\\"\\r\\n                [filter]=\\\"column.fieldType\\\">\\r\\n                <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                  {{dataItem[column.name]}}\\r\\n                </ng-template>\\r\\n              </kendo-grid-column>\\r\\n\\r\\n              <kendo-grid-column [reorderable]=\\\"true\\\" *ngIf=\\\"column.fieldType === 'date'\\\" [width]=\\\"200\\\" field=\\\"{{column.name}}\\\" format=\\\"{{column.format}}\\\" title=\\\"AI-{{column.displayName}}\\\"\\r\\n                [filter]=\\\"column.fieldType\\\">\\r\\n                <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                  {{ dataItem[column.name] | localizedDate }}\\r\\n                </ng-template>\\r\\n              </kendo-grid-column>\\r\\n            </ng-container>\\r\\n          </kendo-grid>\\r\\n        <!-- ---- details grid ---- end -->\\r\\n        </div>\\r\\n    </kendo-grid>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<ngb-alert type=\\\"danger\\\" [dismissible]=\\\"false\\\" *ngIf=\\\"showInvalidFieldMatchesAlert\\\">\\r\\n  <b>Field Match Selection is Invalid</b>\\r\\n  <br> Please select one field match from the Client File and Actual Inventory</ngb-alert>\\r\\n\\r\\n<form (ngSubmit)=\\\"onSubmit(massMatchSearchForm)\\\" #massMatchSearchForm=\\\"ngForm\\\">\\r\\n\\r\\n\\r\\n\\r\\n<div>\\r\\n  <div class=\\\"filter-builder mb-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <h2>Field Matches</h2>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\"></div>\\r\\n    </div>\\r\\n     <!-- Container for dynamic FieldMatchesComponent -->\\r\\n     <div #fieldMatch></div>\\r\\n    <div required class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-8 px-3 pb-3 align-self-center\\\">\\r\\n        <button type=\\\"button\\\" (click)=\\\"addFieldMatch()\\\" class=\\\"btn btn-action btn-small\\\">\\r\\n          <i class=\\\"fa fa-plus\\\"></i>\\r\\n        </button><strong>&nbsp;Add Field Match</strong></div>\\r\\n      <div class=\\\"col-md-4\\\"></div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"filter-builder mb-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <h2>Filter Criteria</h2>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\"></div>\\r\\n    </div>\\r\\n    <!-- Container for dynamic FilterCriteriaBuilderComponent -->\\r\\n    <div #filterCriteria></div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-8 pb-3\\\">\\r\\n        <button type=\\\"button\\\" (click)=\\\"addFilter()\\\" class=\\\"btn btn-action btn-small\\\">\\r\\n          <i class=\\\"fa fa-plus\\\"></i>\\r\\n        </button><strong>&nbsp;Add Filter Criteria</strong></div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\"></div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"filter-builder mb-3\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      <h2>Match Code</h2>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\"></div>\\r\\n  </div>\\r\\n  <div class=\\\"row pb-3\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"selectMatchCode\\\">Match Code</label>\\r\\n        <select class=\\\"form-control\\\" id=\\\"selectMatchCode\\\" [(ngModel)]=\\\"selectedMatchCodeId\\\" name=\\\"selectedMatchCodeId\\\"\\r\\n          #selectMatchCode=\\\"ngModel\\\" required>\\r\\n          <option value=\\\"\\\" disabled>Select Match Code</option>\\r\\n          <option *ngFor=\\\"let item of matchCodes\\\" [value]=\\\"item.matchCodeId\\\">{{item.matchCodeName}}</option>\\r\\n          <option *ngFor=\\\"let disabledItem of disabledMatchCodes\\\" [value]=\\\"disabledItem.matchCodeId\\\" disabled>{{disabledItem.matchCodeName}}</option>\\r\\n        </select>\\r\\n\\r\\n        <div *ngIf=\\\"selectMatchCode.errors && massMatchSearchForm.submitted\\\"\\r\\n          class=\\\"alert alert-danger\\\">\\r\\n          <div [hidden]=\\\"!selectMatchCode.errors.required \\\">\\r\\n            Please select a match code.\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-md-8\\\"></div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-8 p-3\\\">\\r\\n      <!-- Changed style -->\\r\\n      <button class=\\\"btn btn-default\\\" (click)=\\\"cancel($event)\\\">Cancel</button>\\r\\n\\r\\n      <button [ladda]=\\\"isLoading\\\" class=\\\"btn btn-primary\\\">Continue</button>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\"></div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n</form>\\r\\n\"","export default \"<!-- [selectedKeys]=\\\"selectedClientFileRows\\\" \\r\\n   (selectionChange)=\\\"clientFileSelectionChange($event)\\\"\\r\\n   (sortChange)=\\\"sortChangeClient($event)\\\" \\r\\n   [data]=\\\"OneToManyRecords\\\" \\r\\n  -->\\r\\n  <form (ngSubmit)=\\\"onSubmit(OneTomanyMatchForm)\\\" #OneTomanyMatchForm=\\\"ngForm\\\">\\r\\n\\r\\n <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <b>{{matchesCount}} {{i18n.reconciliation + 'Matches' | dynamicTranslate }}</b>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\" style=\\\"text-align: right;\\\">\\r\\n      <p> Match Code: {{selectedmatchCode}}</p>\\r\\n    </div>\\r\\n </div>\\r\\n    <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12 \\\">\\r\\n  \\r\\n      <kendo-grid \\r\\n      [resizable]=\\\"true\\\" \\r\\n      [data]=\\\"manyMatchRecords\\\"\\r\\n      [loading]=\\\"loading\\\"\\r\\n      [selectable]=\\\"true\\\" \\r\\n      [kendoGridSelectBy]=\\\"'id'\\\" \\r\\n      [reorderable]=\\\"true\\\"\\r\\n      [navigable]=\\\"true\\\"\\r\\n      [height]=\\\"330\\\" \\r\\n      [sortable]=\\\"true\\\"\\r\\n      [sort]=\\\"state.sort\\\"\\r\\n      (sortChange)=\\\"sortChangeClient($event)\\\"\\r\\n      [navigable]=\\\"true\\\"\\r\\n      #grid\\r\\n      >\\r\\n  <!-- #clientFileMatchesGrid [rowClass]=\\\"isUnmatched\\\"  //(detailExpand)=\\\"detailExpanded($event)\\\" (dataStateChange)=\\\"dataStateChange($event)\\\"  [dataItem]=\\\"dataItem\\\"  \\r\\n  -->\\r\\n\\r\\n  <!-- <kendo-grid-column field=\\\"primaryAssetRecordId\\\" width=\\\"100\\\"></kendo-grid-column> -->\\r\\n\\r\\n        <ng-container *ngFor=\\\"let column of selectedClientHeaders\\\">\\r\\n\\r\\n          <kendo-grid-column [reorderable]=\\\"true\\\"  *ngIf=\\\"column.fieldType !== 'date'\\\" [width]=\\\"200\\\" field=\\\"{{column.name}}\\\" format=\\\"{{column.format}}\\\" title=\\\"CF - {{column.displayName}}\\\"\\r\\n            [filter]=\\\"column.fieldType\\\">\\r\\n            <ng-template kendoGridCellTemplate let-dataItem >\\r\\n              {{dataItem.clientFileRecords[0][column.name]}}\\r\\n            </ng-template>\\r\\n          </kendo-grid-column>\\r\\n\\r\\n          <kendo-grid-column [reorderable]=\\\"true\\\" *ngIf=\\\"column.fieldType === 'date'\\\" [width]=\\\"200\\\" field=\\\"{{column.name}}\\\" format=\\\"{{column.format}}\\\" title=\\\"CF -{{column.displayName}}\\\"\\r\\n            [filter]=\\\"column.fieldType\\\">\\r\\n            <ng-template kendoGridCellTemplate let-dataItem >\\r\\n              {{ dataItem.clientFileRecords[0][column.name] | localizedDate }}\\r\\n            </ng-template>\\r\\n          </kendo-grid-column>\\r\\n        </ng-container>\\r\\n        <kendo-grid-column field=\\\"detailRecordCount\\\"  title=\\\"Potenital Matches\\\" width=\\\"100\\\"></kendo-grid-column>\\r\\n        <!-- <ng-template kendoGridCellTemplate let-dataItem >\\r\\n         \\r\\n        </ng-template> -->\\r\\n        \\r\\n        \\r\\n        <ng-template kendoGridDetailTemplate let-dataItem>\\r\\n        \\r\\n            <kendo-grid \\r\\n            [resizable]=\\\"true\\\" \\r\\n        \\r\\n            [data]=\\\"dataItem.inventoryRecords\\\" \\r\\n            [loading]=\\\"loading\\\"\\r\\n            [selectable]=\\\"true\\\" \\r\\n            [kendoGridSelectBy]=\\\"'id'\\\" \\r\\n            [reorderable]=\\\"true\\\"\\r\\n            [navigable]=\\\"true\\\"\\r\\n            [sortable]=\\\"true\\\"\\r\\n            [sort]=\\\"state.sort\\\"\\r\\n            [navigable]=\\\"true\\\"\\r\\n         \\r\\n            >\\r\\n            <kendo-grid-column [reorderable]=\\\"false\\\" field=\\\"Actions\\\" title=\\\"Actions\\\" width=\\\"100\\\">\\r\\n              <ng-template kendoGridCellTemplate let-rowIndex=\\\"rowIndex\\\">\\r\\n                <a (click)=\\\"onMatch(dataItem,rowIndex)\\\">{{i18n.reconciliation + 'Match' | dynamicTranslate}} </a>\\r\\n              </ng-template>\\r\\n            </kendo-grid-column>\\r\\n           \\r\\n            <!--  -->\\r\\n              <ng-container *ngFor=\\\"let column of selectedInventoryHeaders\\\">\\r\\n\\r\\n                <kendo-grid-column [reorderable]=\\\"true\\\"  *ngIf=\\\"column.fieldType !== 'date'\\\" [width]=\\\"200\\\" field=\\\"{{column.name}}\\\" format=\\\"{{column.format}}\\\" title=\\\"AI-{{column.displayName}}\\\"\\r\\n                  [filter]=\\\"column.fieldType\\\">\\r\\n                  <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                   {{dataItem[column.name]}}\\r\\n                  </ng-template>\\r\\n                </kendo-grid-column>\\r\\n\\r\\n                <kendo-grid-column [reorderable]=\\\"true\\\" *ngIf=\\\"column.fieldType === 'date'\\\" [width]=\\\"200\\\" field=\\\"{{column.name}}\\\" format=\\\"{{column.format}}\\\" title=\\\"AI-{{column.displayName}}\\\"\\r\\n                  [filter]=\\\"column.fieldType\\\">\\r\\n                  <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                    {{ dataItem[column.name] | localizedDate }}\\r\\n                  </ng-template>\\r\\n                </kendo-grid-column>\\r\\n              </ng-container>\\r\\n             \\r\\n            </kendo-grid>\\r\\n          <!-- ---- details grid ---- end -->\\r\\n          </ng-template>\\r\\n      </kendo-grid>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  </form>\"","export default \"\\r\\n<div class=\\\"row\\\">\\r\\n  <kendo-tabstrip>\\r\\n    <kendo-tabstrip-tab [title]=\\\"'1:1 Match '\\\" [selected]=\\\"true\\\" >\\r\\n      <ng-template kendoTabContent>\\r\\n        <form (ngSubmit)=\\\"onSubmit()\\\" #massMatchSearchForm=\\\"ngForm\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <b>{{matchesCount}} {{i18n.reconciliation + 'Matches' | dynamicTranslate }}</b>\\r\\n              <!-- <b *ngIf=\\\"searchResponse.manyToManyMatches > 0\\\" class=\\\"text-danger\\\"> ({{searchResponse.manyToManyMatches}} {{i18n.reconciliation + 'recordswithmanytomanymatchesexists' | dynamicTranslate}})</b>       -->\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\" style=\\\"padding-right: 0;\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-3\\\">{{i18n.reconciliation + 'Client File' | dynamicTranslate}}</div>\\r\\n                <div class=\\\"col-md-9\\\">\\r\\n                  <grid-column-selector-modal style=\\\"visibility: hidden\\\" [sourceTranslationKey]=\\\"i18n.asset\\\" [selectedColumns]=\\\"selectedClientHeaderNames\\\" [headersAvailable]=\\\"allClientHeaders\\\" (columnSelectionEvent)=\\\"onColumnSelection($event)\\\"></grid-column-selector-modal>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12 hide-grid-scroll\\\">\\r\\n                  <kendo-grid \\r\\n                  [resizable]=\\\"true\\\" \\r\\n                  [data]=\\\"clientFileRecords\\\" \\r\\n                  [loading]=\\\"loading\\\"\\r\\n                  [selectable]=\\\"true\\\" \\r\\n                  [kendoGridSelectBy]=\\\"'id'\\\" \\r\\n                  [selectedKeys]=\\\"selectedClientFileRows\\\" \\r\\n                  [reorderable]=\\\"true\\\"\\r\\n                  (selectionChange)=\\\"clientFileSelectionChange($event)\\\" \\r\\n                  [height]=\\\"330\\\" \\r\\n                  [rowClass]=\\\"isUnmatched\\\" \\r\\n                  [sortable]=\\\"true\\\"\\r\\n                  [sort]=\\\"state.sort\\\"\\r\\n                  (sortChange)=\\\"sortChangeClient($event)\\\"\\r\\n                  #clientFileMatchesGrid>\\r\\n        \\r\\n                    <kendo-grid-column [reorderable]=\\\"false\\\" field=\\\"Actions\\\" title=\\\"Actions\\\" width=\\\"100\\\">\\r\\n                      <ng-template kendoGridCellTemplate let-dataItem>\\r\\n                        <a (click)=\\\"unmatch(dataItem.id)\\\">{{i18n.reconciliation + 'Unmatch' | dynamicTranslate}} </a>\\r\\n                      </ng-template>\\r\\n                    </kendo-grid-column>\\r\\n        \\r\\n                    <ng-container *ngFor=\\\"let column of selectedClientHeaders\\\">\\r\\n        \\r\\n                      <kendo-grid-column [reorderable]=\\\"true\\\"  *ngIf=\\\"column.fieldType !== 'date'\\\" [width]=\\\"200\\\" field=\\\"{{column.name}}\\\" format=\\\"{{column.format}}\\\" title=\\\"{{column.displayName}}\\\"\\r\\n                        [filter]=\\\"column.fieldType\\\">\\r\\n                        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                          {{dataItem[column.name]}}\\r\\n                        </ng-template>\\r\\n                      </kendo-grid-column>\\r\\n        \\r\\n                      <kendo-grid-column [reorderable]=\\\"true\\\" *ngIf=\\\"column.fieldType === 'date'\\\" [width]=\\\"200\\\" field=\\\"{{column.name}}\\\" format=\\\"{{column.format}}\\\" title=\\\"{{column.displayName}}\\\"\\r\\n                        [filter]=\\\"column.fieldType\\\">\\r\\n                        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                          {{ dataItem[column.name] | localizedDate }}\\r\\n                        </ng-template>\\r\\n                      </kendo-grid-column>\\r\\n        \\r\\n        \\r\\n                    </ng-container>\\r\\n        \\r\\n        \\r\\n                  </kendo-grid>\\r\\n        \\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\" style=\\\"padding-left: 0;\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-3\\\">{{i18n.reconciliation + 'Actual Inventory' | dynamicTranslate}}</div>\\r\\n                <div class=\\\"col-md-9\\\">\\r\\n                  <grid-column-selector-modal [sourceTranslationKey]=\\\"i18n.asset\\\" [selectedColumns]=\\\"selectedInventoryHeaderNames\\\" [headersAvailable]=\\\"allInventoryHeaders\\\" (columnSelectionEvent)=\\\"onColumnSelection($event)\\\"></grid-column-selector-modal>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n        \\r\\n                  <kendo-grid \\r\\n                  [resizable]=\\\"true\\\" \\r\\n                  [data]=\\\"inventoryRecords\\\"\\r\\n                  (scrollBottom)=\\\"refreshGridData()\\\"          \\r\\n                  [loading]=\\\"loading\\\"\\r\\n                  [selectable]=\\\"true\\\" \\r\\n                  [kendoGridSelectBy]=\\\"'id'\\\" \\r\\n                  [selectedKeys]=\\\"selectedInventoryFileRows\\\"\\r\\n                  (selectionChange)=\\\"inventoryFileSelectionChange($event)\\\" \\r\\n                  [reorderable]=\\\"true\\\"\\r\\n                  [height]=\\\"330\\\" \\r\\n                  [rowClass]=\\\"isUnmatched\\\" \\r\\n                  [sortable]=\\\"true\\\"\\r\\n                  [sort]=\\\"stateInventory.sort\\\"\\r\\n                  (sortChange)=\\\"sortChangeInventroyRecords($event)\\\"\\r\\n                  #inventoryMatchesGrid>\\r\\n        \\r\\n                    <ng-container *ngFor=\\\"let column of selectedInventoryHeaders\\\">\\r\\n        \\r\\n                  \\r\\n                      <kendo-grid-column *ngIf=\\\"column.fieldType !== 'date'\\\" [width]=\\\"200\\\" field=\\\"{{column.name}}\\\" format=\\\"{{column.format}}\\\" title=\\\"{{column.displayName}}\\\"\\r\\n                        [filter]=\\\"column.fieldType\\\">\\r\\n                        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                          {{dataItem[column.name]}}\\r\\n                        </ng-template>\\r\\n                      </kendo-grid-column>\\r\\n        \\r\\n                      <kendo-grid-column *ngIf=\\\"column.fieldType === 'date'\\\" [width]=\\\"200\\\" field=\\\"{{column.name}}\\\" format=\\\"{{column.format}}\\\" title=\\\"{{column.displayName}}\\\"\\r\\n                        [filter]=\\\"column.fieldType\\\">\\r\\n                        <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                          {{ dataItem[column.name] | localizedDate }}\\r\\n                        </ng-template>\\r\\n                      </kendo-grid-column>\\r\\n        \\r\\n        \\r\\n                    </ng-container>\\r\\n        \\r\\n        \\r\\n        \\r\\n                  </kendo-grid>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-8 p-3\\\">\\r\\n            \\r\\n              \\r\\n              <button [ladda]=\\\"saveIsLoading\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n              <button [ladda]=\\\"saveAndNewIsLoading\\\" (click)=\\\"saveAndNew($event)\\\" class=\\\"btn btn-primary\\\">{{i18n.common + 'Save &amp; New' | dynamicTranslate}}</button>\\r\\n        \\r\\n        \\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\"></div>\\r\\n          </div>\\r\\n      </form>\\r\\n      </ng-template>\\r\\n    </kendo-tabstrip-tab>\\r\\n    <kendo-tabstrip-tab [title]=\\\"'1:M Matches'\\\">\\r\\n      <ng-template kendoTabContent>\\r\\n        <one-to-many-match [selectedInventoryHeaders]=\\\"selectedInventoryHeaders\\\" [selectedClientHeaders]=\\\"selectedClientHeaders\\\" ></one-to-many-match>\\r\\n      </ng-template>\\r\\n    </kendo-tabstrip-tab>\\r\\n    <kendo-tabstrip-tab [title]=\\\"'M:1 Matches'\\\">\\r\\n      <ng-template kendoTabContent>\\r\\n        <many-to-one-match [selectedInventoryHeaders]=\\\"selectedInventoryHeaders\\\" [selectedClientHeaders]=\\\"selectedClientHeaders\\\" ></many-to-one-match>\\r\\n     \\r\\n      </ng-template>\\r\\n    </kendo-tabstrip-tab>\\r\\n  </kendo-tabstrip>\\r\\n</div>\\r\\n<div>\\r\\n  <button (click)=\\\"back($event)\\\" class=\\\"btn btn-default\\\">{{i18n.common + 'Back' | dynamicTranslate}}</button>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <div>\\r\\n      <div id=\\\"high-density\\\">\\r\\n        <kendo-grid [resizable]=\\\"true\\\" [data]=\\\"gridData\\\" [pageSize]=\\\"pageSize\\\" [sort]=\\\"state.sort\\\" [sortable]=\\\"true\\\" [height]=\\\"500\\\" [selectable]=\\\"selectableSettings\\\"\\r\\n          [filter]=\\\"state.filter\\\" [filterable]=\\\"true\\\" [reorderable]=\\\"true\\\" [kendoGridSelectBy]=\\\"'id'\\\" [selectedKeys]=\\\"selectedMatchCodeIds\\\"\\r\\n          (selectionChange)=\\\"onSelectionChanged($event)\\\" (pageChange)=\\\"pageChange($event)\\\" [reorderable]=\\\"true\\\" (dataStateChange)=\\\"dataStateChange($event)\\\"\\r\\n          [rowClass]=\\\"isDisabled\\\">\\r\\n          <kendo-grid-checkbox-column [reorderable]=\\\"false\\\" width=\\\"8%\\\">\\r\\n            <ng-template kendoGridHeaderTemplate let-dataItem>\\r\\n              <div style=\\\"width: 100%; cursor: pointer;\\\" (click)=\\\"sortSelected()\\\">\\r\\n                <a class=\\\"clickable-link\\\">{{Selected}}</a>\\r\\n                <span *ngIf=\\\"sortSelectedAsc\\\">\\r\\n                  <i class=\\\"k-icon k-i-sort-asc-sm\\\"></i>\\r\\n                </span>\\r\\n                <span *ngIf=\\\"sortSelectedDesc\\\">\\r\\n                  <i class=\\\"k-icon k-i-sort-desc-sm\\\"></i>\\r\\n                </span>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n          </kendo-grid-checkbox-column>\\r\\n          <kendo-grid-column [reorderable]=\\\"true\\\" field=\\\"name\\\" [title]=\\\"'match-code_Match Code' | dynamicTranslate\\\" width=\\\"15%\\\">\\r\\n          </kendo-grid-column>\\r\\n          <kendo-grid-column [reorderable]=\\\"true\\\" field=\\\"description\\\" [title]=\\\"'match-code_Description' | dynamicTranslate\\\" width=\\\"50%\\\">\\r\\n          </kendo-grid-column>\\r\\n          <kendo-grid-column [reorderable]=\\\"true\\\" field=\\\"categoryName\\\" [title]=\\\"'match-code_Category' | dynamicTranslate\\\" width=\\\"15%\\\">\\r\\n          </kendo-grid-column>\\r\\n          <kendo-grid-column [reorderable]=\\\"true\\\" field=\\\"isEnabled\\\" [title]=\\\"'match-code_Enabled' | dynamicTranslate\\\" width=\\\"6%\\\"\\r\\n            [filterable]=\\\"false\\\">\\r\\n          </kendo-grid-column>\\r\\n          <kendo-grid-column [reorderable]=\\\"true\\\" field=\\\"Actions\\\" [title]=\\\"'common_Actions' | dynamicTranslate\\\" width=\\\"8%\\\" [filterable]=\\\"false\\\">\\r\\n            <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n              <a class=\\\"clickable-link\\\" (click)=\\\"editMatchCode(dataItem.id,$event)\\\">{{'common_Edit' | dynamicTranslate}}</a>\\r\\n            </ng-template>\\r\\n          </kendo-grid-column>\\r\\n\\r\\n        </kendo-grid>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<create-match-code (onAddorUpdateMatchCode)=\\\"handleCreatedorModifiedMatchCode($event)\\\"></create-match-code>\"","export default \"<div class=\\\"circle-div\\\" (click)=\\\"open()\\\">\\r\\n  <span class=\\\"fa fa-ellipsis-h\\\"></span>\\r\\n</div>\\r\\n\\r\\n\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n<div>\\r\\n  <input type=\\\"checkbox\\\" class=\\\"k-checkbox\\\" [checked]=\\\"showAllColumns\\\" (change)=\\\"DisplayAllColumnsToggle($event)\\\" id=\\\"showAll\\\" name=\\\"showAll\\\">\\r\\n  <label class=\\\"k-checkbox-label\\\" for=\\\"showAll\\\">{{i18n.asset + 'show All Columns' | dynamicTranslate}}</label>\\r\\n\\r\\n</div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <grid-column-selector [sourceTranslationKey]=\\\"i18n.asset\\\" [selectedColumns]=\\\"selectedHeaders\\\" [headersAvailable]=\\\"headersAvailable\\\"></grid-column-selector>\\r\\n    <div *ngFor=\\\"let customColumn of pendingCustomColumns\\\" class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">{{i18n.common + 'Custom Field' | dynamicTranslate }} - {{customColumn.columnName}}</div>\\r\\n      <div class=\\\"col-md-4\\\"><b><a (click)=\\\"removePendingColumn(customColumn)\\\">{{i18n.common + 'Remove' | dynamicTranslate}}</a></b></div>\\r\\n    </div>\\r\\n    <div class=\\\"row mt-2\\\">\\r\\n      <div class=\\\"col-md-10\\\">\\r\\n        <add-asset-column-component (onColumnAdded)=\\\"onColumnAdded($event)\\\" [knownColumnNames]=\\\"columnNames\\\"></add-asset-column-component>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  \\r\\n  <div class=\\\"modal-footer\\\">\\r\\n   \\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"cancle()\\\">{{i18n.common + 'Cancel' | dynamicTranslate }}</button>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">{{i18n.common + 'Save Changes' | dynamicTranslate }}</button>\\r\\n  </div>\\r\\n  <br />\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\"","export default \"\\r\\n\\r\\n<kendo-grid [resizable]=\\\"true\\\" height=\\\"60\\\" [data]=\\\"children\\\" [scrollable]=\\\"true\\\" [resizable]=\\\"true\\\">\\r\\n    <kendo-grid-column [width]=\\\"200\\\" field=\\\"matchCodeName\\\" title=\\\"{{ i18n.reconciliation + 'Match Code' | dynamicTranslate}}\\\"></kendo-grid-column>\\r\\n    <kendo-grid-column [width]=\\\"200\\\" field=\\\"serialNumber\\\" title=\\\"{{ i18n.reconciliation + 'Serial Number' | dynamicTranslate}}\\\"></kendo-grid-column>\\r\\n    <kendo-grid-column [width]=\\\"200\\\" field=\\\"assetTagNumber\\\" title=\\\"{{ i18n.reconciliation + 'Asset Tag Number' | dynamicTranslate}}\\\"></kendo-grid-column>\\r\\n    <kendo-grid-column [width]=\\\"200\\\" field=\\\"description\\\" title=\\\"{{ i18n.reconciliation + 'Description'| dynamicTranslate }}\\\"></kendo-grid-column>\\r\\n    <kendo-grid-column [width]=\\\"200\\\" field=\\\"modelNumber\\\" title=\\\"{{ i18n.reconciliation + 'Model Number' | dynamicTranslate }}\\\"></kendo-grid-column>\\r\\n    <kendo-grid-column [width]=\\\"200\\\" field=\\\"manufacturer\\\" title=\\\"{{ i18n.reconciliation + 'Manufacturer' | dynamicTranslate }}\\\"></kendo-grid-column>\\r\\n    <kendo-grid-column [width]=\\\"200\\\" field=\\\"buildingName\\\" title=\\\"{{ i18n.reconciliation + 'Building Name' | dynamicTranslate }}\\\"></kendo-grid-column>\\r\\n    <kendo-grid-column [width]=\\\"200\\\" field=\\\"floor\\\" title=\\\"{{ i18n.reconciliation + 'Floor' | dynamicTranslate }}\\\"></kendo-grid-column>\\r\\n    <kendo-grid-column [width]=\\\"200\\\" field=\\\"quantity\\\" title=\\\"{{ i18n.reconciliation + 'Quantity' | dynamicTranslate }}\\\"></kendo-grid-column>\\r\\n    <kendo-grid-column [width]=\\\"200\\\" field=\\\"historicalCost\\\" title=\\\"{{ i18n.reconciliation + 'Historical Cost'| dynamicTranslate }}\\\"></kendo-grid-column>\\r\\n    <ng-container *ngFor=\\\"let column of headers\\\">\\r\\n        <kendo-grid-column [width]=\\\"200\\\" field=\\\"{{column.key}}\\\" title=\\\"{{column.key}}\\\" *ngIf=\\\"!showColumn(column.key)\\\"></kendo-grid-column>\\r\\n    </ng-container>\\r\\n</kendo-grid>\"","export default \"<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n  <div *ngIf=\\\"isConfirmOpen\\\">\\r\\n      <confirm \\r\\n      (isConfirmed)=\\\"onConfirmed($event)\\\" \\r\\n      [confirmationMessage]=\\\"confirmMessage\\\" \\r\\n      [confirmHeading]=\\\"confirmHeader\\\">\\r\\n    </confirm>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"!isConfirmOpen\\\">\\r\\n\\r\\n        <form (ngSubmit)=\\\"onSubmit(parentChildMatch)\\\" #createMatchCodeForm=\\\"ngForm\\\">\\r\\n      \\r\\n          <div class=\\\"modal-body\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <ngb-alert type=\\\"danger\\\" [dismissible]=\\\"false\\\" *ngIf=\\\"showSelectParentAlert\\\"> {{ i18n.reconciliation + 'You must select a parent' | dynamicTranslate}}.</ngb-alert>\\r\\n              <ngb-alert type=\\\"danger\\\" [dismissible]=\\\"false\\\" *ngIf=\\\"showMatchedChildAssigned\\\">{{ i18n.reconciliation + 'parentchildmatched' | dynamicTranslate }}</ngb-alert>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div>{{i18n.reconciliation + 'Select parent item' | dynamicTranslate }}:\\r\\n                <br> </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <kendo-grid [resizable]=\\\"true\\\" [data]=\\\"assetsGridData\\\" *ngIf=\\\"assetsGridData.length > 0\\\" [height]=\\\"240\\\" [selectable]=\\\"true\\\" [kendoGridSelectBy]=\\\"'assetId'\\\"\\r\\n                [filter]=\\\"filter\\\" #grid>\\r\\n                <kendo-grid-column field=\\\"assetId\\\" title=\\\"Asset\\\" width=\\\"50\\\" [hidden]=\\\"true\\\">\\r\\n                </kendo-grid-column>\\r\\n                <kendo-grid-column field=\\\"isParent\\\" title=\\\"Parent\\\" width=\\\"40\\\" class=\\\"parent-child-action-cell\\\">\\r\\n                  <ng-template kendoGridCellTemplate let-dataItem let-idx=\\\"rowIndex\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"selectedParent\\\" [checked]=\\\"dataItem.isParent || parentAssetId === dataItem.assetId\\\" (change)=\\\"selectParent(idx)\\\" />\\r\\n                  </ng-template>\\r\\n                </kendo-grid-column>\\r\\n                <kendo-grid-column field=\\\"assetTagNumber\\\" title=\\\"{{i18n.reconciliation + 'Asset' | dynamicTranslate }}\\\" width=\\\"75\\\">\\r\\n                </kendo-grid-column>\\r\\n                <kendo-grid-column field=\\\"description\\\" title=\\\"{{i18n.reconciliation + 'Description' | dynamicTranslate }}\\\" width=\\\"200\\\">\\r\\n                </kendo-grid-column>\\r\\n                <kendo-grid-column field=\\\"oldTagNumber\\\" title=\\\"{{i18n.reconciliation + 'Tag' | dynamicTranslate }}\\\" width=\\\"75\\\">\\r\\n                </kendo-grid-column>\\r\\n                <kendo-grid-column field=\\\"historicalCost\\\" title=\\\"{{i18n.reconciliation + 'Cost' | dynamicTranslate }}\\\" width=\\\"75\\\">\\r\\n                </kendo-grid-column>\\r\\n                <kendo-grid-column width=\\\"100\\\" class=\\\"parent-child-action-cell\\\">\\r\\n                  <ng-template kendoGridCellTemplate let-idx=\\\"rowIndex\\\">\\r\\n                    <a class=\\\"nav-link\\\" href=\\\"#\\\" (click)=\\\"onUnrelateRow(idx, $event, grid)\\\">{{ i18n.reconciliation + 'Unrelate' | dynamicTranslate}} </a>\\r\\n                  </ng-template>\\r\\n                </kendo-grid-column>\\r\\n              </kendo-grid>\\r\\n            </div>\\r\\n      \\r\\n            <div class=\\\"form-group\\\" *ngIf=\\\"isEdit\\\">\\r\\n              <a class=\\\"nav-link\\\" style=\\\"text-align: center;\\\" href=\\\"#\\\" (click)=\\\"onUnrelateAllItems($event)\\\">{{ i18n.reconciliation + 'Unrelate All Items' | dynamicTranslate}} </a>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"cancel()\\\">{{ i18n.reconciliation + 'Cancel' | dynamicTranslate}} </button>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{ i18n.reconciliation + saveText | dynamicTranslate}}</button>\\r\\n          </div>\\r\\n        </form>\\r\\n  </div>\\r\\n</ng-template>\"","export default \"<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n  <div *ngIf=\\\"isConfirmOpen\\\">\\r\\n    <confirm \\r\\n      (isConfirmed)=\\\"onConfirmed($event)\\\" \\r\\n      [confirmationMessage]=\\\"confirmMessage\\\" \\r\\n      [confirmHeading]=\\\"confirmHeader\\\">\\r\\n    </confirm>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"!isConfirmOpen\\\">\\r\\n    \\r\\n        <form (ngSubmit)=\\\"onSubmit(createAllocationForm)\\\" #createAllocationForm=\\\"ngForm\\\">\\r\\n      \\r\\n          <div class=\\\"modal-body\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <ngb-alert type=\\\"danger\\\" [dismissible]=\\\"false\\\" *ngIf=\\\"!vm.isValidAllocation\\\">\\r\\n                {{i18n.reconciliation + 'Allocations cannot contain negative dollar amounts and the total allocation amount must not exceed the client record value\\r\\n                of' | dynamicTranslate }} {{allocationCost}}.\\r\\n              </ngb-alert>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"row justify-content-left\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                  <h4>{{i18n.common + 'Client File' | dynamicTranslate }}</h4>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"allocation-form-group\\\">\\r\\n              <table class=\\\"table\\\">\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th>{{i18n.common + 'Asset Tag Number' | dynamicTranslate }}</th>\\r\\n                    <th>{{i18n.common + 'Old Tag Number' | dynamicTranslate }}</th>\\r\\n                    <th>{{i18n.common + 'Description' | dynamicTranslate }}</th>\\r\\n                    <th>{{i18n.common + 'Manufacturer' | dynamicTranslate }}</th>\\r\\n                    <th>{{i18n.common + 'Cost' | dynamicTranslate }}</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr>\\r\\n                    <td>{{vm.allocationClientAsset.assetTagNumber}}</td>\\r\\n                    <td>{{vm.allocationClientAsset.oldTagNumber}}</td>\\r\\n                    <td>{{vm.allocationClientAsset.description}}</td>\\r\\n                    <td>{{vm.allocationClientAsset.manufacturer}}</td>\\r\\n                    <th>{{allocationCost}}</th>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                  <div class=\\\"text-right\\\">\\r\\n                    <a class=\\\"nav-link text-underline\\\" href=\\\"#\\\" (click)=\\\"allocateEvenly($event)\\\">{{i18n.common + 'Allocate Evenly' | dynamicTranslate }} </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n      \\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"row justify-content-left\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                  <h4>{{i18n.common + 'Actual Inventory Allocation' | dynamicTranslate }}</h4>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"allocation-form-group\\\">\\r\\n              <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th>{{i18n.common + 'Quantity' | dynamicTranslate }}</th>\\r\\n                    <th>{{i18n.common + 'Description' | dynamicTranslate }}</th>\\r\\n                    <th>{{i18n.common + 'Manufacturer' | dynamicTranslate }}</th>\\r\\n                    <th>{{i18n.common + 'Model Number' | dynamicTranslate }}</th>\\r\\n                    <th>{{i18n.common + 'Allocation' | dynamicTranslate }}</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <!-- Inventory Asset Data -->\\r\\n                  <tr *ngFor=\\\"let record of vm.allocationInventoryAssets;\\\">\\r\\n                    <td>{{record.quantity}}</td>\\r\\n                    <td>{{record.description}}</td>\\r\\n                    <td>{{record.manufacturer}}</td>\\r\\n                    <td>{{record.modelNumber}}</td>\\r\\n                    <td><input currencyMask [options]=\\\"{prefix:''}\\\" class=\\\"form-control\\\" [name]=\\\"record.assetId\\\" [id]=\\\"record.assetId\\\" [(ngModel)]=\\\"record.allocatedValue\\\" (ngModelChange)=\\\"updateTotal()\\\" /></td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-8\\\"></div>\\r\\n              <div class=\\\"col-md-2 text-right\\\">\\r\\n                <h4>\\r\\n                 <b>{{i18n.common + 'Total $' | translate}}</b>\\r\\n                </h4>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-2 text-right\\\" style=\\\"padding-right: 2.5rem;\\\">\\r\\n                <h4>\\r\\n                  <b>{{vm.allocationTotal.toFixed(2)}}</b>\\r\\n                </h4>\\r\\n              </div>\\r\\n            </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\"></div>\\r\\n              <div class=\\\"col-md-4 text-right\\\">\\r\\n                <h4>\\r\\n                  <b>{{i18n.common + 'Remaining Balance $' | dynamicTranslate }}</b>\\r\\n                </h4>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-2 text-right\\\" style=\\\"padding-right: 2.5rem;\\\">\\r\\n                <h4>\\r\\n                  <b>{{remainingBalance.toFixed(2)}}</b>\\r\\n                </h4>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <br />\\r\\n            <div class=\\\"row justify-content-center\\\">\\r\\n              <a class=\\\"text-underline clickable-link\\\" href=\\\"#\\\" (click)=\\\"unmatchAll($event)\\\">{{i18n.common + 'Unmatch All' | dynamicTranslate}}</a>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"cancel()\\\">{{i18n.common + 'Cancel' | dynamicTranslate}} </button>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{i18n.common + 'Apply' | dynamicTranslate}} </button>\\r\\n          </div>\\r\\n          <br />\\r\\n        </form>\\r\\n      \\r\\n  </div>\\r\\n  \\r\\n</ng-template>\\r\\n\"","export default \"<upsert-asset-record-component\\r\\n  [fileType]=\\\"dataSource\\\"\\r\\n  [assetFileSummary]=\\\"assetFileSummary\\\"\\r\\n  [groupSiteInfo]=\\\"groupSiteInfo\\\"\\r\\n  [groupAccounts]=\\\"groupAccounts\\\"\\r\\n  [groupDepartments]=\\\"groupDepartments\\\"\\r\\n  (AssetUpsertComplete)=\\\"onAssetModified($event)\\\"\\r\\n>\\r\\n</upsert-asset-record-component>\\r\\n\\r\\n<div>\\r\\n  <div class=\\\"row py-1\\\">\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      <h3 class=\\\"d-inline\\\">{{ i18n.reconciliation + fileName | dynamicTranslate }}</h3>\\r\\n      <button *ngIf=\\\"dataSource === dataTargetName.inventory\\\" class=\\\"ml-2 btn btn-primary add-record-button d-inline\\\" (click)=\\\"openAddRecord()\\\">\\r\\n        {{ i18n.reconciliation + \\\"Add Record\\\" | dynamicTranslate }}\\r\\n      </button>\\r\\n\\r\\n      <button class=\\\"ml-2 btn btn-primary add-record-button d-inline\\\" *ngIf=\\\"dataSource === dataTargetName.inventory\\\" [disabled]=\\\"selectedRows.length !== 1\\\" (click)=\\\"duplicateRecord()\\\">\\r\\n        {{ i18n.common + \\\"Duplicate Record\\\" | dynamicTranslate }}\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <order-asset-columns-component\\r\\n        class=\\\"d-inline float-right\\\"\\r\\n        [dataSource]=\\\"dataSource\\\"\\r\\n        [assetFileId]=\\\"assetFileSummary.id\\\"\\r\\n        (columnAdded)=\\\"onAssetFileColumnsAdded($event)\\\"\\r\\n        [mappedColumns]=\\\"mappedColumns\\\"\\r\\n      ></order-asset-columns-component>\\r\\n\\r\\n      <button *ngIf=\\\"dataSource === 1\\\" type=\\\"button\\\" class=\\\"btn btn-sm btn-primary mb-2 pull-right save-in-grid-button\\\" (click)=\\\"inGridSave()\\\" [ladda]=\\\"isSaving\\\" [disabled]=\\\"!editedRecords\\\">\\r\\n        {{ i18n.common + \\\"Save Edits\\\" | dynamicTranslate }}\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"famis-grid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div>\\r\\n          <div *ngIf=\\\"dataSource === 0 && noFile\\\" class=\\\"empty-grid text-center\\\">\\r\\n            <div class=\\\"action-link \\\">\\r\\n              {{ i18n.reconciliation + \\\"Import Client file via\\\" | dynamicTranslate }}&nbsp;\\r\\n              <a href=\\\"\\\" (click)=\\\"navigateToImportData($event)\\\">{{ i18n.reconciliation + \\\"Import Data\\\" | dynamicTranslate }}</a>\\r\\n            </div>\\r\\n          </div>\\r\\n      \\r\\n          <div *ngIf=\\\"dataSource === 1 && noFile\\\" class=\\\"empty-grid text-center\\\">\\r\\n            <copy-inventory (onInventoryCopied)=\\\"handleInventoryCopied($event)\\\"></copy-inventory>\\r\\n          </div>\\r\\n      \\r\\n          <div *ngIf=\\\"allMatched && !noFile\\\" class=\\\"empty-grid text-center\\\">\\r\\n            <div class=\\\"action-link\\\">\\r\\n              {{ i18n.reconciliation + \\\"All Records Matched\\\" | dynamicTranslate }}\\r\\n            </div>\\r\\n          </div>\\r\\n      \\r\\n          <kendo-grid\\r\\n            \\r\\n            *ngIf=\\\"!!dataLoaded && gridSettingsLoaded !== undefined\\\"\\r\\n            [data]=\\\"view\\\"\\r\\n            [height]=\\\"300\\\"\\r\\n            [selectable]=\\\"selectableSettings\\\"\\r\\n            [kendoGridSelectBy]=\\\"'assetId'\\\"\\r\\n            [selectedKeys]=\\\"selectedRows\\\"\\r\\n            (selectionChange)=\\\"gridSelectionChange($event)\\\"\\r\\n            (selectedKeysChange)=\\\"onSelectedKeysChange($event)\\\"\\r\\n            [rowClass]=\\\"rowCallback\\\"\\r\\n            [skip]=\\\"state.skip\\\"\\r\\n            [reorderable]=\\\"true\\\"\\r\\n            (columnReorder)=\\\"onColumnReorder($event)\\\"\\r\\n            [pageSize]=\\\"100\\\"\\r\\n            [scrollable]=\\\"'virtual'\\\"\\r\\n            [rowHeight]=\\\"24\\\"\\r\\n            [detailRowHeight]=\\\"24\\\"\\r\\n            (pageChange)=\\\"callGridScrollDebouncer($event)\\\"\\r\\n            [sortable]=\\\"{\\r\\n              allowUnsort: true,\\r\\n              mode: 'single'\\r\\n            }\\\"\\r\\n            [sort]=\\\"sort\\\"\\r\\n            [filter]=\\\"state.filter\\\"\\r\\n            [resizable]=\\\"true\\\"\\r\\n            filterable=\\\"menu\\\"\\r\\n            (filterChange)=\\\"filterChange($event)\\\"\\r\\n            (sortChange)=\\\"sortChange($event)\\\"\\r\\n            (cellClick)=\\\"editClick($event)\\\"\\r\\n            (cellClose)=\\\"cellCloseHandler($event)\\\"\\r\\n            [loading]=\\\"loading\\\"\\r\\n            #grid\\r\\n          >\\r\\n            <kendo-grid-checkbox-column [reorderable]=\\\"false\\\" [width]=\\\"75\\\">\\r\\n              <ng-template kendoGridHeaderTemplate>\\r\\n                <input class=\\\"k-checkbox\\\" id=\\\"selectAllCheckboxId{{dataSource}}\\\" kendoGridSelectAllCheckbox [state]=\\\"selectAllState\\\" (selectAllChange)=\\\"onSelectAllChange($event)\\\" />\\r\\n                <label class=\\\"k-checkbox-label\\\" for=\\\"selectAllCheckboxId{{dataSource}}\\\"></label>\\r\\n              </ng-template>\\r\\n            </kendo-grid-checkbox-column>\\r\\n      \\r\\n            <kendo-grid-column [reorderable]=\\\"false\\\" [width]=\\\"75\\\" title=\\\"\\\" class=\\\"grid-actions\\\">\\r\\n              <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                <span class=\\\"grid-action-item\\\">\\r\\n                  <a *ngIf=\\\"dataItem.isMatched\\\" (click)=\\\"showMatchForAsset(dataItem, rowIndex)\\\">\\r\\n                    <i class=\\\"fa fa-link\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </a>\\r\\n      \\r\\n                  <a *ngIf=\\\"dataItem.isParent\\\" (click)=\\\"toggleParentChildMatch(dataItem, rowIndex)\\\" [class.isExpanded]=\\\"expandedMatchIndex === rowIndex\\\">\\r\\n                    <i class=\\\"fa\\\" [class.fa-plus-circle]=\\\"expandedMatchIndex != rowIndex\\\" [class.fa-minus-circle]=\\\"expandedMatchIndex === rowIndex\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </a>\\r\\n                </span>\\r\\n              </ng-template>\\r\\n            </kendo-grid-column>\\r\\n    \\r\\n            <kendo-grid-column [reorderable]=\\\"false\\\" [width]=\\\"200\\\" title=\\\"\\\" class=\\\"grid-actions\\\">\\r\\n              <ng-template kendoGridCellTemplate let-dataItem *ngIf=\\\"showEditRecord\\\">\\r\\n                <span class=\\\"grid-action-item\\\" *ngIf=\\\"hasCustomColumns || dataSource === dataTargetName.inventory\\\">\\r\\n                  <a (click)=\\\"openEditRecordForm(dataItem)\\\">\\r\\n                    <i class=\\\"fa fa-edit\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </a>\\r\\n                </span>\\r\\n      \\r\\n                <span class=\\\"grid-action-item\\\">\\r\\n                  <a *ngIf=\\\"dataItem.imageCollection && dataItem.imageCollection.length > 0\\\">\\r\\n                    <view-image [imageCollection]=\\\"dataItem.imageCollection\\\"></view-image>\\r\\n                  </a>\\r\\n                </span>\\r\\n              </ng-template>\\r\\n            </kendo-grid-column>\\r\\n      \\r\\n            <kendo-grid-column [reorderable]=\\\"false\\\" [filterable]=\\\"true\\\" [sortable]=\\\"true\\\" [width]=\\\"200\\\" field=\\\"matchCodeName\\\" title=\\\"{{ i18n.asset + 'Match Code' | dynamicTranslate }}\\\">\\r\\n              <ng-template kendoGridFilterMenuTemplate let-filter let-filterService=\\\"filterService\\\">\\r\\n                <grid-filter [fieldType]=\\\"fieldTypes.String\\\" [filter]=\\\"filter\\\" [textField]=\\\"'matchCodeName'\\\" [valueField]=\\\"'matchCodeName'\\\" [filterService]=\\\"filterService\\\"> </grid-filter>\\r\\n              </ng-template>\\r\\n            </kendo-grid-column>\\r\\n      \\r\\n            <ng-container *ngFor=\\\"let column of headers | orderBy: 'order'; index as i;\\\">\\r\\n              <kendo-grid-column\\r\\n                [editor]=\\\"column.fieldType\\\"\\r\\n                [reorderable]=\\\"true\\\"\\r\\n                field=\\\"{{ column.name }}\\\"\\r\\n                [width]=\\\"headers[i] ? 200 : 0\\\"\\r\\n                format=\\\"{{ column.format }}\\\"\\r\\n                title=\\\"{{ getColumnTitle(column) }}\\\"\\r\\n                editable=\\\"{{ column.isEditable }}\\\"\\r\\n              >\\r\\n                <ng-template kendoGridFilterMenuTemplate let-filter let-filterService=\\\"filterService\\\">\\r\\n                  <grid-filter [fieldType]=\\\"column.fieldType\\\" [filter]=\\\"filter\\\" [textField]=\\\"column.name\\\" [valueField]=\\\"column.name\\\" [filterService]=\\\"filterService\\\"> </grid-filter>\\r\\n                </ng-template>\\r\\n      \\r\\n                <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                  <ng-container *ngIf=\\\"column.fieldType === fieldTypes.String  || column.fieldType === fieldTypes.DropDown\\\"> {{ dataItem[column.name] }} </ng-container>\\r\\n                  <ng-container *ngIf=\\\"column.fieldType === fieldTypes.Integer || column.fieldType === fieldTypes.Double\\\">\\r\\n                    {{ dataItem[column.name] | localizedNumber }}\\r\\n                  </ng-container>\\r\\n                  <ng-container *ngIf=\\\"column.fieldType === fieldTypes.Date\\\"> {{ dataItem[column.name] | localizedDate }} </ng-container>\\r\\n                  <ng-container *ngIf=\\\"column.fieldType === fieldTypes.DateTime\\\"> {{ dataItem[column.name] | localTime }} </ng-container>\\r\\n                   </ng-template>\\r\\n              </kendo-grid-column>\\r\\n            </ng-container>\\r\\n           </kendo-grid>\\r\\n       <div *kendoGridDetailTemplate=\\\"let dataItem\\\" class=\\\"parent-child-detail-grid\\\">\\r\\n        <parent-child-match-detail *ngIf=\\\"dataItem.isParent\\\" #parentChildMatchDetail></parent-child-match-detail>\\r\\n      </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div id=\\\"DataGrids\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n      <div class=\\\"reconciliation-actions col-md-6 float-left\\\">\\r\\n\\r\\n        <!-- Todo: Revisit CSS styles for reconciliation-actions-->\\r\\n        <button id=\\\"showMatchesLabel\\\" class=\\\"btn-primary\\\" (click)=\\\"navigateToMassMatch($event)\\\" ngbButtonLabel\\r\\n          [disabled]='!canMassMatch'>\\r\\n          {{ i18n.reconciliation + 'Mass Match' | dynamicTranslate }}\\r\\n        </button>\\r\\n\\r\\n        <label id=\\\"showMatchesLabel\\\" class=\\\"btn-primary\\\" ngbButtonLabel>\\r\\n          <input type=\\\"checkbox\\\" ngbButton (click)=\\\"toggleShowMatchedRecords($event.target.checked)\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"not-checked\\\">          {{ i18n.reconciliation + 'Show Matches' | dynamicTranslate }}\\r\\n              </div>\\r\\n          <div class=\\\"checked\\\">{{ i18n.reconciliation + 'Hide Matches' | dynamicTranslate }} </div>\\r\\n        </label>\\r\\n        <label id=\\\"clearSelectionLabel\\\" class=\\\"btn-primary\\\" ngbButtonLabel>\\r\\n          <input type=\\\"checkbox\\\" ngbButton (click)=\\\"clearAssetRecordSelection()\\\">\\r\\n          <div>{{ i18n.reconciliation + 'Clear Selections' | dynamicTranslate }}</div>\\r\\n        </label>\\r\\n\\r\\n        <label *ngIf=\\\"showValidationErrors\\\" id=\\\"validateLabel\\\" class=\\\"btn-danger\\\" ngbButtonLabel>\\r\\n          <input type=\\\"checkbox\\\" ngbButton (click)=\\\"onValidateReconciliation()\\\" [disabled]=\\\"isBusy\\\">\\r\\n          <div>{{ i18n.reconciliation + 'Validation Errors' | dynamicTranslate }}</div>\\r\\n        </label>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"reconciliation-actions col-md-6 float-right\\\">\\r\\n      \\r\\n        <div class=\\\"row\\\">\\r\\n      \\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <form (ngSubmit)=\\\"onSubmit(acceptMatchForm)\\\" #acceptMatchForm=\\\"ngForm\\\">\\r\\n                <div style=\\\"max-width: 25rem; min-width: 17rem; display: inline-block;\\\">\\r\\n                  <select class=\\\"form-control form-control-sm\\\" id=\\\"selectMatchCode\\\" [(ngModel)]=\\\"selectedMatchCodeId\\\"\\r\\n                    name=\\\"selectedMatchCodeId\\\" #selectMatchCode=\\\"ngModel\\\" required>\\r\\n                    <option value=\\\"\\\" disabled>{{ i18n.reconciliation + 'Select Match Code' | dynamicTranslate }}</option>\\r\\n                    <option *ngFor=\\\"let item of matchCodes\\\" [value]=\\\"item.matchCodeId\\\">{{item.matchCodeName}}</option>\\r\\n                    <option *ngFor=\\\"let disabledItem of disabledMatchCodes\\\" [value]=\\\"disabledItem.matchCodeId\\\" disabled>\\r\\n                      {{disabledItem.matchCodeName}}</option>\\r\\n                  </select>\\r\\n                \\r\\n                  <div\\r\\n                    *ngIf=\\\"selectMatchCode.errors && acceptMatchForm.submitted && selectedMatchType!=matchTypes.parentChildMatch && this.hasSelectedItems\\\"\\r\\n                    class=\\\"alert alert-danger\\\">\\r\\n                    <div [hidden]=\\\"!selectMatchCode.errors.required \\\">\\r\\n                      {{ i18n.reconciliation + ' Please select a match code' | dynamicTranslate }}.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                \\r\\n              <button *ngIf=\\\"selectedMatchType==null || selectedMatchType === matchTypes.allocationMatch\\\"\\r\\n                id=\\\"allocationMatchLabel\\\" class=\\\"btn-primary\\\" ngbButtonLabel (click)=\\\"onEditAllocationMatchClick($event)\\\">\\r\\n                {{ i18n.reconciliation + 'Allocation' | dynamicTranslate }}\\r\\n                <reconcile-data-allocations (allocation)=\\\"onAllocation($event)\\\" (allocationUnmatchAll)=\\\"unmatchRecords(true)\\\">\\r\\n                </reconcile-data-allocations>\\r\\n              </button>\\r\\n      \\r\\n              <button *ngIf=\\\"selectedMatchType==null || selectedMatchType === matchTypes.parentChildMatch\\\"\\r\\n                id=\\\"parentChildMatchLabel\\\" class=\\\"btn-primary\\\" ngbButtonLabel\\r\\n                (click)=\\\"onParentChildMatchClick($event)\\\">{{ i18n.reconciliation + 'Parent / Child' | dynamicTranslate }}\\r\\n                <parent-child-match (parentChildMatch)=\\\"onParentChildMatch($event)\\\"\\r\\n                  (parentChildRemoved)=\\\"onParentChildMatchRemoved($event)\\\"></parent-child-match>\\r\\n              </button>\\r\\n      \\r\\n              <button *ngIf=\\\"selectedMatchType != matchTypes.parentChildMatch\\\" class=\\\"btn-primary\\\" ngbButtonLabel\\r\\n                (click)=\\\"unmatchRecords(false)\\\">{{ i18n.reconciliation + 'Unmatch' | dynamicTranslate }}\\r\\n              </button>\\r\\n              <div style=\\\"display: inline-block;\\\">\\r\\n                <!-- Create match -->\\r\\n                <button class=\\\"btn btn-action\\\" *ngIf=\\\"selectedMatchType==null\\\"\\r\\n                  [disabled]=\\\"((selectedClientFileItems.length > 0 || selectedInventoryItems.length > 0)) ? false : true\\\">\\r\\n                  {{ i18n.reconciliation + 'Accept Match' | dynamicTranslate }}</button>\\r\\n      \\r\\n                <!-- Disable accept button for Single Match -->\\r\\n                <button class=\\\"btn btn-action\\\"\\r\\n                  *ngIf=\\\"selectedMatchType===matchTypes.singleMatch && !(selectedClientFileItems.length === 1 || selectedInventoryItems.length === 1)\\\"\\r\\n                  [disabled]=\\\"true\\\">{{ i18n.reconciliation + 'Accept Match' | dynamicTranslate }} </button>\\r\\n      \\r\\n                <button class=\\\"btn btn-action\\\"\\r\\n                  *ngIf=\\\"selectedMatchType===matchTypes.singleMatch && (selectedClientFileItems.length === 1 || selectedInventoryItems.length === 1)\\\">{{ i18n.reconciliation + 'Save Changes' | dynamicTranslate }}\\r\\n                </button>\\r\\n                <!-- Edit One to One Match -->\\r\\n                <button class=\\\"btn btn-action\\\"\\r\\n                  *ngIf=\\\"selectedMatchType===matchTypes.oneToOneMatch\\\">{{ i18n.reconciliation + 'Save Changes' | dynamicTranslate }}\\r\\n                </button>\\r\\n      \\r\\n                <!-- Edit Allocation Match -->\\r\\n                <button class=\\\"btn btn-action \\\" *ngIf=\\\"selectedMatchType===matchTypes.allocationMatch\\\"\\r\\n                  (click)=\\\"onEditAllocationMatchClick($event)\\\">{{ i18n.reconciliation + 'Edit Match' | dynamicTranslate }}\\r\\n                </button>\\r\\n      \\r\\n                <!-- Edit Parent / Child Match -->\\r\\n                <button class=\\\"btn btn-action \\\" *ngIf=\\\" selectedMatchType===matchTypes.parentChildMatch\\\"\\r\\n                  (click)=\\\"onParentChildMatchClick($event)\\\">{{ i18n.reconciliation + 'Edit Match' | dynamicTranslate }}</button>\\r\\n      \\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      \\r\\n      </div>\\r\\n      </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-3 match-form-expanded shadow p-3 mb-5 bg-white rounded\\\" >\\r\\n      <div class=\\\"pl-3 pr-3 pt-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-5\\\">\\r\\n            <span><strong>{{selectedClientFileItems.length}}: {{i18n.reconciliation + 'Client' | dynamicTranslate}}</strong></span>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-5\\\">\\r\\n            <span><strong>{{selectedInventoryItems.length}}: {{i18n.reconciliation + 'Inventory' | dynamicTranslate}}</strong></span>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-2\\\">\\r\\n            <button class=\\\"match-form-collapse\\\" (click)=\\\"isMatchSummaryExpanded = !isMatchSummaryExpanded;\\\">\\r\\n              <span *ngIf=\\\"isMatchSummaryExpanded\\\" class=\\\"fa fa-angle-up\\\"></span>\\r\\n              <span *ngIf=\\\"!isMatchSummaryExpanded\\\"  class=\\\"fa fa-angle-down\\\"></span>\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n\\r\\n        <div class=\\\"form-group pl-3 pr-3 pt-3\\\" *ngIf=\\\"isMatchSummaryExpanded\\\" [@fadeInOutAnimation]>\\r\\n          <label for=\\\"exampleFormControlInput1\\\">{{ i18n.reconciliation + 'Match' | dynamicTranslate }} </label>\\r\\n          <div >\\r\\n            <div class=\\\"selected-matches d-block\\\">\\r\\n          \\r\\n                <div class=\\\"match-summary\\\">\\r\\n                    {{ i18n.reconciliation + 'Total client records selected' | dynamicTranslate }}: {{selectedClientFileItems.length}}\\r\\n                </div>\\r\\n\\r\\n              <div *ngIf=\\\"selectedClientFileItems.length < 20\\\">\\r\\n                  <div class=\\\"match-col\\\" *ngFor=\\\"let match of selectedClientFileItems\\\">\\r\\n                      <span class=\\\"match-col-item\\\">{{match.assetTagNumber}}</span>\\r\\n                      <span class=\\\"match-col-item\\\">{{match.oldTagNumber}}</span>\\r\\n                      <span class=\\\"match-col-item\\\">{{match.description}}</span>\\r\\n                    </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"selected-matches bottom d-block\\\">\\r\\n\\r\\n                <div class=\\\"match-summary\\\">\\r\\n                    {{ i18n.reconciliation + 'Total inventory records selected' | dynamicTranslate }}: {{selectedInventoryItems.length}}\\r\\n                </div>\\r\\n              <div *ngIf=\\\"selectedInventoryItems.length < 20\\\">\\r\\n                  <div class=\\\"match-col d-block\\\" *ngFor=\\\"let match of selectedInventoryItems\\\">\\r\\n                      <span class=\\\"match-col-item\\\">{{match.assetTagNumber}}</span>\\r\\n                      <span class=\\\"match-col-item\\\">{{match.oldTagNumber}}</span>\\r\\n                      <span class=\\\"match-col-item\\\">{{match.description}}</span>\\r\\n                    </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        \\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n\\r\\n      <reconcile-data-grid [fileName]=\\\"'Client File'\\\" [dataSource]=\\\"dataTargetName.client\\\" [selectedRows]=\\\"selectedClientFileIds\\\" \\r\\n        (selectionChanged)=\\\"onSelectionChanged($event, true)\\\" (matchSelected)=\\\"onMatchSelected($event)\\\" (parentChildSelected)=\\\"onParentChildSelected($event)\\\"\\r\\n        #clientFileGrid></reconcile-data-grid>\\r\\n\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n\\r\\n      <reconcile-data-grid [fileName]=\\\"'Actual Inventory'\\\" [dataSource]=\\\"dataTargetName.inventory\\\" [selectedRows]=\\\"selectedInventoryIds\\\"\\r\\n        (selectionChanged)=\\\"onSelectionChanged($event, false)\\\" (clearSelection)=\\\"onClearSelection($event)\\\" (matchSelected)=\\\"onMatchSelected($event)\\\" (parentChildSelected)=\\\"onParentChildSelected($event)\\\"\\r\\n        #inventoryGrid></reconcile-data-grid>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"wizard-actions\\\">\\r\\n        <button class=\\\"btn btn-default\\\" i18n=\\\"Back button text@@reconBack\\\" (click)=onBack($event)>{{ i18n.common + 'Back' | dynamicTranslate }}</button>\\r\\n        <button class=\\\"btn btn-primary\\\" i18n=\\\"Continue button text@@reconContinue\\\" (click)=onContinue($event) [ladda]=\\\"isBusy\\\">{{ i18n.common + 'Continue' | dynamicTranslate }}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<reconciliation-validation></reconciliation-validation>\"","export default \"<div id=\\\"Reconciliation-Module\\\">\\r\\n<h1>{{i18n.common + moduleName | dynamicTranslate}}</h1>\\r\\n\\r\\n\\r\\n      <div class=\\\"module-heading\\\">\\r\\n \\r\\n      <ol class=\\\"breadcrumb\\\">\\r\\n        <li *ngFor=\\\"let breadCrumb of activeBreadcrumbs\\\" class=\\\"breadcrumb-item\\\" routerLinkActive=\\\"active\\\">\\r\\n          <a [class.disabled]=\\\"!!breadCrumb.isDisabled && breadCrumb.isDisabled\\\" [routerLink]=\\\"breadCrumb.routerLink\\\" >{{i18n.common + breadCrumb.name | dynamicTranslate }}</a>\\r\\n        </li>\\r\\n      </ol>\\r\\n    </div>\\r\\n\\r\\n  \\r\\n    <router-outlet></router-outlet>\\r\\n    \\r\\n  \\r\\n    </div>\"","export default \"<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">{{i18n.reconciliation + title | dynamicTranslate}}</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"showMissingMatch\\\">\\r\\n      <div class=\\\"col-sm-11\\\">\\r\\n        <h3>{{i18n.reconciliation + 'Missing Matches' | dynamicTranslate }}</h3>\\r\\n        <h5>{{missingMatchIds.length}} {{i18n.reconciliation + 'records have not been reconciled' | dynamicTranslate }}.</h5>\\r\\n        <br />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"showAllocations\\\">\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n        <h3>{{i18n.reconciliation + 'Unbalanced Allocations' | dynamicTranslate }} </h3>\\r\\n        <h5>{{i18n.reconciliation + 'The following allocations are unbalanceds' | dynamicTranslate }} :</h5>\\r\\n\\r\\n        <kendo-grid [resizable]=\\\"true\\\" [data]=\\\"assetFileRecords\\\" [height]=\\\"200\\\">\\r\\n          <kendo-grid-column field=\\\"assetTagNumber\\\" title=\\\"{{i18n.reconciliation + 'Asset Tag Number' | dynamicTranslate }}\\\"></kendo-grid-column>\\r\\n          <kendo-grid-column field=\\\"oldTagNumber\\\" title=\\\"{{i18n.reconciliation + 'Old Tag Number' | dynamicTranslate }}\\\"></kendo-grid-column>\\r\\n          <kendo-grid-column field=\\\"serialNumber\\\" title=\\\"{{i18n.reconciliation + 'Serial Number' | dynamicTranslate }}\\\"></kendo-grid-column>\\r\\n          <kendo-grid-column field=\\\"description\\\" title=\\\"{{ i18n.reconciliation + 'Item Description' | dynamicTranslate }}\\\"></kendo-grid-column>\\r\\n        </kendo-grid>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"resolveErrorsToCommit\\\">\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n        <div class=\\\"alert alert-danger\\\">\\r\\n            {{i18n.reconciliation + 'Please resolve validation errors before committing consolidated file.' | dynamicTranslate }}.\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  \\r\\n\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"c('Close click')\\\">{{i18n.common + 'Close' | dynamicTranslate }} </button>\\r\\n    <button *ngIf=\\\"showContinue\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"continueAnyway()\\\">{{i18n.common + 'Continue Anyway' | dynamicTranslate }} </button>\\r\\n  </div>\\r\\n  <br />\\r\\n\\r\\n</ng-template>\\r\\n\"","export default \"<form (ngSubmit)=\\\"onSubmit(dataImportForm)\\\" #dataImportForm=\\\"ngForm\\\">\\r\\n\\r\\n  <h4 i18n=\\\"Reconciliation heading: select match codes@@reconSelectAllocationField\\\">{{i18n.reconciliation + 'Set Allocation Field' | dynamicTranslate }}</h4>\\r\\n\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <select [disabled]=\\\"!!selectedCostField === false\\\" class=\\\"form-control col-md-6\\\" [(ngModel)]=\\\"selectedCostField\\\" name=\\\"costFieldSelect\\\" id=\\\"costFieldSelect\\\">\\r\\n      <option disabled>\\r\\n        <span i18n=\\\"Reconciliation select hint: select match codes@@hintSelectAnAllocationField\\\">{{i18n.reconciliation + 'Select an Allocation Field' | dynamicTranslate }}</span>\\r\\n      </option>\\r\\n      <option *ngFor=\\\"let field of costFields | orderBy: 'name' \\\" [value]=\\\"field.value\\\">{{i18n.reconciliation + field.name | dynamicTranslate}}</option>\\r\\n    </select>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <h4>{{i18n.reconciliation + 'Select Match Codes from Existing Project' | dynamicTranslate}}</h4>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <group-search [includeContractSearch]=\\\"true\\\"  (selectGroup)=\\\"onGroupSelected($event)\\\"></group-search>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <h4 i18n=\\\"Reconciliation heading: select match codes@@reconSelectMatchCodes2\\\">{{ i18n.reconciliation + 'Match Codes' | dynamicTranslate }}</h4>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <match-codes [selectedMatchCodeIds]=\\\"selectedMatchCodeIds\\\" (onMatchCodeSelection)=\\\"handleMatchCodes($event)\\\" (onMatchCodesLoaded)=\\\"handleMatchCodesLoaded($event)\\\"></match-codes>\\r\\n\\r\\n  <div class=\\\"wizard-actions\\\">\\r\\n    <button class=\\\"btn btn-primary\\\" i18n=\\\"Continue button text@@reconContinue\\\" [ladda]=\\\"isBusy\\\">{{ i18n.common + 'Continue' | dynamicTranslate }}</button>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</form>\\r\\n\"","export default \"<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n\\r\\n\\r\\n  <div class=\\\"modal-body upsert-asset-record\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <asset-form [imageEntityType]=\\\"imageEntityType\\\" [fieldMetaData]=\\\"getFormFields()\\\" [isModal]=\\\"true\\\" [assetDto]=\\\"asset\\\" (formActionEvent)=\\\"onFormActionEvent($event)\\\" #assetFormComponent></asset-form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\"","export default \"<form (ngSubmit)=\\\"runReport()\\\" #reportNameForm=\\\"ngForm\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <div *ngIf=\\\"metadataList?.length > 0\\\">\\r\\n                <h4 >{{i18n.reports + 'Select Report Filters' | dynamicTranslate}}</h4>\\r\\n                <div id=\\\"high-density\\\" >\\r\\n                  <kendo-grid  [data]=\\\"gridData\\\"  [sortable]=\\\"true\\\" [height]=\\\"200\\\"  [selectable]=\\\"selectableSettings\\\"\\r\\n                     [reorderable]=\\\"false\\\" [kendoGridSelectBy]=\\\"'id'\\\" \\r\\n                    (selectionChange)=\\\"onSelectionChanged($event)\\\"  (dataStateChange)=\\\"dataStateChange($event)\\\"\\r\\n                    >\\r\\n                    <kendo-grid-checkbox-column [reorderable]=\\\"false\\\" width=\\\"5%\\\">\\r\\n                      <ng-template kendoGridHeaderTemplate let-dataItem>\\r\\n                        <div style=\\\"width: 50%; cursor: pointer;\\\" >\\r\\n                          <a class=\\\"clickable-link\\\">{{Selected}}</a>\\r\\n                         </div>\\r\\n                      </ng-template>\\r\\n                    </kendo-grid-checkbox-column>\\r\\n                    <kendo-grid-column [reorderable]=\\\"false\\\" field=\\\"tagName\\\" [title]=\\\"'common_Category' | dynamicTranslate\\\" width=\\\"95%\\\">\\r\\n                    </kendo-grid-column>\\r\\n                  </kendo-grid>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <h4>{{i18n.reports + 'Select Report Type' | dynamicTranslate}}</h4>\\r\\n            <select class=\\\"form-control\\\" [(ngModel)]=\\\"ssrsReportId\\\" name=\\\"reportSelect\\\" id=\\\"reportselect\\\" (change)=\\\"updateExtension(ssrsReportId); canSubmit();\\\">\\r\\n                <option disabled>\\r\\n                <span>{{i18n.reports + 'Select Report Type' | dynamicTranslate}}</span>\\r\\n                </option>\\r\\n                <option *ngFor=\\\"let rpt of availableReports | orderBy: 'name';\\\" [value]=\\\"rpt.id\\\">{{rpt.name}}</option>\\r\\n            </select>\\r\\n        </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                <label>{{i18n.reports + 'File Name' | dynamicTranslate}}</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"fileName\\\" [(ngModel)]=\\\"requestedReport.fileName\\\" #fileName=\\\"ngModel\\\" (change)=\\\"validateName(requestedReport.fileName); canSubmit();\\\"/>\\r\\n                <div *ngIf=\\\"!validName\\\" class=\\\"alert alert-danger\\\">\\r\\n                    {{ i18n.reports + 'invalidName' | dynamicTranslate }}\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <label>{{i18n.reports + 'File Type' | dynamicTranslate}}</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"extension\\\" [(ngModel)]=\\\"fileExtension\\\" readonly=\\\"true\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n                <h3 *ngIf=\\\"\\\">{{i18n.kendo + 'loading' | dynamicTranslate }}</h3>\\r\\n            <div *ngIf=\\\"ssrsReportId && isFilterEnabled\\\" class=\\\"col-md-12\\\">\\r\\n                <h3>{{i18n.common + 'Filter Criteria' | dynamicTranslate}}</h3>\\r\\n                <div *ngFor=\\\"let fv of reportFilters; index as i;\\\">\\r\\n                    <div class=\\\"row pb-3\\\">\\r\\n                        <div class=\\\"col-md-3\\\">\\r\\n                            <label>{{i18n.common + 'Field' | dynamicTranslate }}</label>\\r\\n                            <select class=\\\"form-control form-control\\\" [name]=\\\"i + '_filter'\\\" [(ngModel)]=\\\"fv.filterColumnId\\\" (change)=\\\"canSubmit()\\\" required>\\r\\n                                <option *ngIf=\\\"!fv.filterColumnId\\\" [ngValue]=\\\"fv.filterColumnId\\\" disabled>\\r\\n                                    {{i18n.common + 'Select Field' | dynamicTranslate }} </option>\\r\\n                                <option *ngFor=\\\"let item of filterMetaData|orderBy:'name'\\\" [ngValue]=\\\"item.id\\\">\\r\\n                                    {{i18n.reports + item.columnName | dynamicTranslate }}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3\\\">\\r\\n                            <label>{{i18n.common + 'Filter Type' | dynamicTranslate }} </label>\\r\\n                            <select class=\\\"form-control\\\" *ngIf=\\\"!fv.filterColumnId\\\" disabled></select>\\r\\n        \\r\\n                            <select *ngIf=\\\"fv.filterColumnId\\\" [name]=\\\"i + '_operation'\\\" [(ngModel)]=\\\"fv.filterOperationId\\\" (change)=\\\"canSubmit()\\\" class=\\\"form-control\\\">\\r\\n                                <option *ngIf=\\\"!fv.filterOperationId\\\" [ngValue]=\\\"fv.filterOperationId\\\" disabled>\\r\\n                                    {{i18n.common + 'Select Filter' | dynamicTranslate }} </option>\\r\\n                                <option *ngFor=\\\"let item of filterOperations\\\" [value]=\\\"item.id\\\">\\r\\n                                    {{i18n.reports + item.operationName | dynamicTranslate }}</option>\\r\\n                            </select>\\r\\n        \\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <label>{{i18n.common + 'Value' | dynamicTranslate }} </label>\\r\\n                            <input [disabled]=\\\"!fv.filterColumnId\\\" type=\\\"text\\\" class=\\\"form-control\\\" [name]=\\\"i + '_value'\\\" [(ngModel)]=\\\"fv.filterValue\\\" (change)=\\\"canSubmit()\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-2 mt-4\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-3 pl-0 pr-0 pt-2\\\">\\r\\n                                    <button (click)=\\\"remove()\\\" type=\\\"button\\\" class=\\\"btn btn-action btn-small\\\">\\r\\n                                        <i class=\\\"fa fa-minus\\\"></i>\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-9\\\">\\r\\n                                    <strong>{{i18n.common + 'Remove Filter' | dynamicTranslate }} </strong>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        \\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"row mt-3\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                    <button *ngIf=\\\"canAddFilter\\\" [disabled]=\\\"!ssrsReportId || !isFilterEnabled\\\" type=\\\"button\\\" (click)=\\\"addFilter()\\\"\\r\\n                    class=\\\"btn btn-action btn-small\\\">\\r\\n                    <i class=\\\"fa fa-plus\\\"></i>\\r\\n                </button><strong  *ngIf=\\\"canAddFilter\\\">&nbsp;{{i18n.common + 'Add Filter Criteria' | dynamicTranslate}}</strong>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn btn-default\\\" (click)=\\\"dismiss()\\\">{{i18n.common + 'Cancel' | dynamicTranslate}}</button>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!isValid\\\">{{i18n.common + 'save' | translate}}</button>\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n\"","export default \"<div class=\\\"form-group row\\\">\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <h2>{{i18n.reports + 'Static Reports' | dynamicTranslate}}</h2>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-8 actions text-right\\\">\\r\\n    <button [ladda]=\\\"isProcessing\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"openNameModal()\\\">{{i18n.reports +\\r\\n      'Create New' | dynamicTranslate}}</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<famis-grid *ngIf=\\\"!!deliverablesGrid.loading && !!deliverablesGrid.selectedHeaders\\\" [famisGrid]=\\\"deliverablesGrid\\\"\\r\\n  (actionEvent)=\\\"handleActionEvent($event)\\\">\\r\\n</famis-grid>\"","export default \"<div class=\\\"form-group row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n        <h2>{{i18n.reports + 'Interactive Reports' | dynamicTranslate}}</h2>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<br />\\r\\n<div class=\\\"form-group row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n        <h4>{{i18n.reports + 'Select Interactive Report' | dynamicTranslate}}</h4>\\r\\n        <select class=\\\"form-control\\\" [(ngModel)]=\\\"reportId\\\" name=\\\"biReportSelect\\\" id=\\\"biReportSelect\\\">\\r\\n            <option disabled>\\r\\n                <span>{{i18n.reports + 'Select Interactive Report' | dynamicTranslate}}</span>\\r\\n            </option>\\r\\n            <option *ngFor=\\\"let rpt of availableReports | orderBy: 'name';\\\" [value]=\\\"rpt.id\\\">{{rpt.name}}</option>\\r\\n        </select>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n        <button [ladda]=\\\"isProcessing\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" [(disabled)]=\\\"!reportId\\\" (click)=\\\"runReport()\\\">{{i18n.reports\\r\\n            + 'Run' | dynamicTranslate}}</button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<br />\\r\\n\\r\\n<app-power-bi [report]=\\\"report\\\" [isDefaultDashboard]=\\\"false\\\" [filterPaneEnabled]=\\\"false\\\"></app-power-bi>\"","export default \"<div id=\\\"Reports\\\">\\r\\n    <h1>{{i18n.reports + 'Reports' | dynamicTranslate}}</h1>\\r\\n    <div class=\\\"row pt-3 pb-3 actions\\\">\\r\\n        <div class=\\\"col-md-3 btn-group\\\">\\r\\n            <button (click)=\\\"toggleReportMode(reportModes.Interactive)\\\" type=\\\"button\\\" [class.btn-default]=\\\"mode!==reportModes.Interactive\\\"\\r\\n                [class.btn-primary]=\\\"mode===reportModes.Interactive\\\" class=\\\"btn btn-primary\\\">{{i18n.reports +\\r\\n                'Interactive' | dynamicTranslate}}</button>\\r\\n            <button (click)=\\\"toggleReportMode(reportModes.Static)\\\" type=\\\"button\\\" [class.btn-default]=\\\"mode!==reportModes.Static\\\"\\r\\n                [class.btn-primary]=\\\"mode===reportModes.Static\\\" class=\\\"btn btn-default\\\">{{i18n.reports + 'Static' |\\r\\n                dynamicTranslate}}</button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <br />\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <reports-power-bi [isReadOnly]=\\\"!userCanWriteData()\\\" (gridSelections)=\\\"selectedAssets = $event\\\" *ngIf=\\\"mode === reportModes.Interactive\\\"></reports-power-bi>\\r\\n\\r\\n            <reports-deliverables [isReadOnly]=\\\"!userCanWriteData()\\\" (gridSelections)=\\\"selectedBuildings = $event\\\"\\r\\n                *ngIf=\\\"mode === reportModes.Static\\\"></reports-deliverables>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"\\r\\n<div id=\\\"support\\\" class=\\\"form-group\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n          <h1>{{i18n.common + 'Support' | dynamicTranslate}}</h1>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n          <!-- <portal-image [groupId]=\\\"groupId\\\"></portal-image> -->\\r\\n      </div>\\r\\n  </div>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n        \\r\\n      <label>{{i18n.support + 'Send us a note along with your information and we will get back to you' | dynamicTranslate}} </label>\\r\\n      \\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <label>{{i18n.support + 'Name' | dynamicTranslate}}</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contactName\\\" (ngModelChange)=\\\"updateEmail()\\\" />\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-6\\\">\\r\\n    <label>{{i18n.support + 'Email Address' | dynamicTranslate}}</label>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contactEmail\\\" (ngModelChange)=\\\"updateEmail()\\\" />\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-6\\\">\\r\\n    <label>{{i18n.support + 'Subject' | dynamicTranslate}}</label>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contactSubject\\\" (ngModelChange)=\\\"updateEmail()\\\" />\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-8\\\">\\r\\n    <label>{{i18n.support + 'Message' | dynamicTranslate}}</label>\\r\\n    <textarea [(ngModel)]=\\\"contactMessage\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"updateEmail()\\\"></textarea>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n<br>\\r\\n                  <a [href]=\\\"emailHref\\\" *ngIf=\\\"contactSubject\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">{{i18n.support + 'Send' | dynamicTranslate}}</button>\\r\\n                  </a>\\r\\n                  <a *ngIf=\\\"contactSubject==null || contactSubject==''\\\" >\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-default\\\">{{i18n.support + 'Send' | dynamicTranslate}}</button>\\r\\n                  </a>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n</div>\"","export default \"<h1>{{i18n.transactions + 'Transactions' | dynamicTranslate}}</h1>\\r\\n\\r\\n<ol class=\\\"breadcrumb\\\">\\r\\n  <li *ngFor=\\\"let breadCrumb of breadCrumbs\\\" class=\\\"breadcrumb-item\\\" routerLinkActive=\\\"active\\\">\\r\\n    <a [class.disabled]=\\\"breadCrumb.isDisabled\\\" [routerLink]=\\\"breadCrumb.routerLink\\\">{{i18n.common + breadCrumb.name | dynamicTranslate}}</a>\\r\\n  </li>\\r\\n</ol>\\r\\n  <famis-grid *ngIf=\\\"!!transactionsGrid.loading && !!transactionsGrid.selectedHeaders\\\"\\r\\n    [famisGrid]=\\\"transactionsGrid\\\" \\r\\n    (updateCacheEvent)=\\\"updateCache($event)\\\"\\r\\n    (actionEvent)=\\\"handleActionEvent($event)\\\"\\r\\n    (selectionChanged)=\\\"handleSelectionChanged($event)\\\">\\r\\n  </famis-grid>\\r\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n"],"sourceRoot":"webpack:///"}